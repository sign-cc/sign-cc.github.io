<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>FridaHook</title>
    <link href="/posts/a9c3d13e/"/>
    <url>/posts/a9c3d13e/</url>
    
    <content type="html"><![CDATA[<h1 id="FridaHook指令集"><a href="#FridaHook指令集" class="headerlink" title="FridaHook指令集"></a>FridaHook指令集</h1><h2 id="1-HookArt"><a href="#1-HookArt" class="headerlink" title="1. HookArt"></a>1. <a href="https://github.com/lasting-yang/frida_hook_libart">HookArt</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">frida -U --no-pause -f package_name -l hook_art.js -o out.log<br></code></pre></td></tr></table></figure><p>HookArtSourceCode:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">STD_STRING_SIZE</span> = <span class="hljs-number">3</span> * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">StdString</span> &#123;<br>    <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">handle</span> = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">alloc</span>(<span class="hljs-variable constant_">STD_STRING_SIZE</span>);<br>    &#125;<br><br>    <span class="hljs-title function_">dispose</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> [data, isTiny] = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_getData</span>();<br>        <span class="hljs-keyword">if</span> (!isTiny) &#123;<br>            <span class="hljs-title class_">Java</span>.<span class="hljs-property">api</span>.$delete(data);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-title function_">disposeToString</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> result = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">toString</span>();<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">dispose</span>();<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-title function_">toString</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> [data] = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_getData</span>();<br>        <span class="hljs-keyword">return</span> data.<span class="hljs-title function_">readUtf8String</span>();<br>    &#125;<br><br>    <span class="hljs-title function_">_getData</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> str = <span class="hljs-variable language_">this</span>.<span class="hljs-property">handle</span>;<br>        <span class="hljs-keyword">const</span> isTiny = (str.<span class="hljs-title function_">readU8</span>() &amp; <span class="hljs-number">1</span>) === <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">const</span> data = isTiny ? str.<span class="hljs-title function_">add</span>(<span class="hljs-number">1</span>) : str.<span class="hljs-title function_">add</span>(<span class="hljs-number">2</span> * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>).<span class="hljs-title function_">readPointer</span>();<br>        <span class="hljs-keyword">return</span> [data, isTiny];<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">prettyMethod</span>(<span class="hljs-params">method_id, withSignature</span>) &#123;<br>    <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">new</span> <span class="hljs-title class_">StdString</span>();<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-property">api</span>[<span class="hljs-string">&#x27;art::ArtMethod::PrettyMethod&#x27;</span>](result, method_id, withSignature ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">return</span> result.<span class="hljs-title function_">disposeToString</span>();<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">GetFieldID is at  0xe39b87c5 _ZN3art3JNI10GetFieldIDEP7_JNIEnvP7_jclassPKcS6_</span><br><span class="hljs-comment">GetMethodID is at  0xe39a1a19 _ZN3art3JNI11GetMethodIDEP7_JNIEnvP7_jclassPKcS6_</span><br><span class="hljs-comment">NewStringUTF is at  0xe39cff25 _ZN3art3JNI12NewStringUTFEP7_JNIEnvPKc</span><br><span class="hljs-comment">RegisterNatives is at  0xe39e08fd _ZN3art3JNI15RegisterNativesEP7_JNIEnvP7_jclassPK15JNINativeMethodi</span><br><span class="hljs-comment">GetStaticFieldID is at  0xe39c9635 _ZN3art3JNI16GetStaticFieldIDEP7_JNIEnvP7_jclassPKcS6_</span><br><span class="hljs-comment">GetStaticMethodID is at  0xe39be0ed _ZN3art3JNI17GetStaticMethodIDEP7_JNIEnvP7_jclassPKcS6_</span><br><span class="hljs-comment">GetStringUTFChars is at  0xe39d06e5 _ZN3art3JNI17GetStringUTFCharsEP7_JNIEnvP8_jstringPh</span><br><span class="hljs-comment">FindClass is at  0xe399ae5d _ZN3art3JNI9FindClassEP7_JNIEnvPKc</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook_libart</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> symbols = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">enumerateSymbolsSync</span>(<span class="hljs-string">&quot;libart.so&quot;</span>);<br>    <span class="hljs-keyword">var</span> addrGetStringUTFChars = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrNewStringUTF = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrFindClass = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrGetMethodID = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrGetStaticMethodID = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrGetFieldID = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrGetStaticFieldID = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrRegisterNatives = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> so_name = <span class="hljs-string">&quot;libsmsdk&quot;</span>;      <span class="hljs-comment">//TODO 这里写需要过滤的so</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;symbols length:&quot;</span>, symbols.<span class="hljs-property">length</span>)<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; symbols.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">var</span> symbol = symbols[i];<br>        <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;art&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp;<br>            symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;JNI&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp;<br>            symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;CheckJNI&quot;</span>) &lt; <span class="hljs-number">0</span> &amp;&amp;<br>            <span class="hljs-comment">// symbol.name.indexOf(&quot;_ZN3art3JNIILb0&quot;) &gt;= 0</span><br>            symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;_ZN3art3JNI&quot;</span>) &gt;= <span class="hljs-number">0</span><br>        ) &#123;<br>            <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;GetStringUTFChars&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrGetStringUTFChars = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;GetStringUTFChars is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;NewStringUTF&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrNewStringUTF = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;NewStringUTF is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;FindClass&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrFindClass = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;FindClass is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;GetMethodID&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrGetMethodID = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;GetMethodID is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;GetStaticMethodID&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrGetStaticMethodID = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;GetStaticMethodID is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;GetFieldID&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrGetFieldID = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;GetFieldID is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;GetStaticFieldID&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrGetStaticFieldID = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;GetStaticFieldID is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;RegisterNatives&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrRegisterNatives = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;RegisterNatives is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;CallStatic&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;CallStatic is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>                <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(symbol.<span class="hljs-property">address</span>, &#123;<br>                    <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                        <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                            <span class="hljs-keyword">var</span> java_class = args[<span class="hljs-number">1</span>];<br>                            <span class="hljs-keyword">var</span> mid = args[<span class="hljs-number">2</span>];<br>                            <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(java_class);<br>                            <span class="hljs-keyword">if</span> (class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;java.&quot;</span>) == -<span class="hljs-number">1</span> &amp;&amp; class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;android.&quot;</span>) == -<span class="hljs-number">1</span>) &#123;<br>                                <span class="hljs-keyword">var</span> method_name = <span class="hljs-title function_">prettyMethod</span>(mid, <span class="hljs-number">1</span>);<br>                                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&lt;&gt;CallStatic:&quot;</span>, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>), class_name, method_name);<br>                            &#125;<br>                        &#125;<br>                    &#125;,<br>                    <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                    &#125;<br>                &#125;);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;CallNonvirtual&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;CallNonvirtual is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>                <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(symbol.<span class="hljs-property">address</span>, &#123;<br>                    <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                        <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                            <span class="hljs-keyword">var</span> jobject = args[<span class="hljs-number">1</span>];<br>                            <span class="hljs-keyword">var</span> jclass = args[<span class="hljs-number">2</span>];<br>                            <span class="hljs-keyword">var</span> jmethodID = args[<span class="hljs-number">3</span>];<br>                            <span class="hljs-keyword">var</span> obj_class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getObjectClassName</span>(jobject);<br>                            <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(jclass);<br>                            <span class="hljs-keyword">if</span> (class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;java.&quot;</span>) == -<span class="hljs-number">1</span> &amp;&amp; class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;android.&quot;</span>) == -<span class="hljs-number">1</span>) &#123;<br>                                <span class="hljs-keyword">var</span> method_name = <span class="hljs-title function_">prettyMethod</span>(jmethodID, <span class="hljs-number">1</span>);<br>                                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&lt;&gt;CallNonvirtual:&quot;</span>, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>), class_name, obj_class_name, method_name);<br>                            &#125;<br>                        &#125;<br>                    &#125;,<br>                    <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                    &#125;<br>                &#125;);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;Call&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp; symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;Method&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Call&lt;&gt;Method is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>                <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(symbol.<span class="hljs-property">address</span>, &#123;<br>                    <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                        <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                            <span class="hljs-keyword">var</span> java_class = args[<span class="hljs-number">1</span>];<br>                            <span class="hljs-keyword">var</span> mid = args[<span class="hljs-number">2</span>];<br>                            <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getObjectClassName</span>(java_class);<br>                            <span class="hljs-keyword">if</span> (class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;java.&quot;</span>) == -<span class="hljs-number">1</span> &amp;&amp; class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;android.&quot;</span>) == -<span class="hljs-number">1</span>) &#123;<br>                                <span class="hljs-keyword">var</span> method_name = <span class="hljs-title function_">prettyMethod</span>(mid, <span class="hljs-number">1</span>);<br>                                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&lt;&gt;Call&lt;&gt;Method:&quot;</span>, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>), class_name, method_name);<br>                            &#125;<br>                        &#125;<br>                    &#125;,<br>                    <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                    &#125;<br>                &#125;);<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (addrGetStringUTFChars != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrGetStringUTFChars, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                <span class="hljs-keyword">if</span> (retval != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> bytes = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(retval);<br>                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetStringUTFChars] result:&quot;</span> + bytes, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (addrNewStringUTF != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrNewStringUTF, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">1</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> string = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">1</span>]);<br>                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[NewStringUTF] bytes:&quot;</span> + string, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (addrFindClass != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrFindClass, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">1</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">1</span>]);<br>                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[FindClass] name:&quot;</span> + name, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (addrGetMethodID != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrGetMethodID, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">2</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> clazz = args[<span class="hljs-number">1</span>];<br>                    <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(clazz);<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">2</span>]);<br>                        <span class="hljs-keyword">if</span> (args[<span class="hljs-number">3</span>] != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">3</span>]);<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetMethodID] class_name:&quot;</span> + class_name + <span class="hljs-string">&quot; name:&quot;</span> + name + <span class="hljs-string">&quot;, sig:&quot;</span> + sig, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetMethodID] class_name:&quot;</span> + class_name + <span class="hljs-string">&quot; name:&quot;</span> + name, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (addrGetStaticMethodID != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrGetStaticMethodID, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">2</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> clazz = args[<span class="hljs-number">1</span>];<br>                    <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(clazz);<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">2</span>]);<br>                        <span class="hljs-keyword">if</span> (args[<span class="hljs-number">3</span>] != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">3</span>]);<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetStaticMethodID] class_name:&quot;</span> + class_name + <span class="hljs-string">&quot; name:&quot;</span> + name + <span class="hljs-string">&quot;, sig:&quot;</span> + sig, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetStaticMethodID] class_name:&quot;</span> + class_name + <span class="hljs-string">&quot; name:&quot;</span> + name, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (addrGetFieldID != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrGetFieldID, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">2</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">2</span>]);<br>                        <span class="hljs-keyword">if</span> (args[<span class="hljs-number">3</span>] != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">3</span>]);<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetFieldID] name:&quot;</span> + name + <span class="hljs-string">&quot;, sig:&quot;</span> + sig, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetFieldID] name:&quot;</span> + name, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (addrGetStaticFieldID != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrGetStaticFieldID, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">2</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">2</span>]);<br>                        <span class="hljs-keyword">if</span> (args[<span class="hljs-number">3</span>] != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">3</span>]);<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetStaticFieldID] name:&quot;</span> + name + <span class="hljs-string">&quot;, sig:&quot;</span> + sig, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetStaticFieldID] name:&quot;</span> + name, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (addrRegisterNatives != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrRegisterNatives, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[RegisterNatives] method_count:&quot;</span>, args[<span class="hljs-number">3</span>], <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                <span class="hljs-keyword">var</span> env = args[<span class="hljs-number">0</span>];<br>                <span class="hljs-keyword">var</span> java_class = args[<span class="hljs-number">1</span>];<br>                <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(java_class);<br>                <span class="hljs-keyword">var</span> methods_ptr = <span class="hljs-title function_">ptr</span>(args[<span class="hljs-number">2</span>]);<br>                <span class="hljs-keyword">var</span> method_count = <span class="hljs-built_in">parseInt</span>(args[<span class="hljs-number">3</span>]);<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; method_count; i++) &#123;<br>                    <span class="hljs-keyword">var</span> name_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span>));<br>                    <span class="hljs-keyword">var</span> sig_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span> + <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>));<br>                    <span class="hljs-keyword">var</span> fnPtr_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span> + <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">2</span>));<br><br>                    <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(name_ptr);<br>                    <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(sig_ptr);<br>                    <span class="hljs-keyword">var</span> find_module = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(fnPtr_ptr);<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[RegisterNatives] java_class:&quot;</span>, class_name, <span class="hljs-string">&quot;name:&quot;</span>, name, <span class="hljs-string">&quot;sig:&quot;</span>, sig, <span class="hljs-string">&quot;fnPtr:&quot;</span>, fnPtr_ptr, <span class="hljs-string">&quot;module_name:&quot;</span>, find_module.<span class="hljs-property">name</span>, <span class="hljs-string">&quot;module_base:&quot;</span>, find_module.<span class="hljs-property">base</span>, <span class="hljs-string">&quot;offset:&quot;</span>, <span class="hljs-title function_">ptr</span>(fnPtr_ptr).<span class="hljs-title function_">sub</span>(find_module.<span class="hljs-property">base</span>));<br><br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br>&#125;<br><br><span class="hljs-title function_">setImmediate</span>(hook_libart);<br></code></pre></td></tr></table></figure><h2 id="2-HookArtMethod"><a href="#2-HookArtMethod" class="headerlink" title="2. HookArtMethod"></a>2. <a href="https://github.com/lasting-yang/frida_hook_libart">HookArtMethod</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">frida -U --no-pause -f package_name -l hook_artmethod.js -o out.log<br></code></pre></td></tr></table></figure><p>HookArtMethodSourceCode:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">STD_STRING_SIZE</span> = <span class="hljs-number">3</span> * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">StdString</span> &#123;<br>    <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">handle</span> = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">alloc</span>(<span class="hljs-variable constant_">STD_STRING_SIZE</span>);<br>    &#125;<br><br>    <span class="hljs-title function_">dispose</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> [data, isTiny] = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_getData</span>();<br>        <span class="hljs-keyword">if</span> (!isTiny) &#123;<br>            <span class="hljs-title class_">Java</span>.<span class="hljs-property">api</span>.$delete(data);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-title function_">disposeToString</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> result = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">toString</span>();<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">dispose</span>();<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-title function_">toString</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> [data] = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_getData</span>();<br>        <span class="hljs-keyword">return</span> data.<span class="hljs-title function_">readUtf8String</span>();<br>    &#125;<br><br>    <span class="hljs-title function_">_getData</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> str = <span class="hljs-variable language_">this</span>.<span class="hljs-property">handle</span>;<br>        <span class="hljs-keyword">const</span> isTiny = (str.<span class="hljs-title function_">readU8</span>() &amp; <span class="hljs-number">1</span>) === <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">const</span> data = isTiny ? str.<span class="hljs-title function_">add</span>(<span class="hljs-number">1</span>) : str.<span class="hljs-title function_">add</span>(<span class="hljs-number">2</span> * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>).<span class="hljs-title function_">readPointer</span>();<br>        <span class="hljs-keyword">return</span> [data, isTiny];<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">prettyMethod</span>(<span class="hljs-params">method_id, withSignature</span>) &#123;<br>    <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">new</span> <span class="hljs-title class_">StdString</span>();<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-property">api</span>[<span class="hljs-string">&#x27;art::ArtMethod::PrettyMethod&#x27;</span>](result, method_id, withSignature ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">return</span> result.<span class="hljs-title function_">disposeToString</span>();<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook_dlopen</span>(<span class="hljs-params">module_name, fun</span>) &#123;<br>    <span class="hljs-keyword">var</span> android_dlopen_ext = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&quot;android_dlopen_ext&quot;</span>);<br><br>    <span class="hljs-keyword">if</span> (android_dlopen_ext) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(android_dlopen_ext, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">var</span> pathptr = args[<span class="hljs-number">0</span>];<br>                <span class="hljs-keyword">if</span> (pathptr) &#123;<br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span> = (pathptr).<span class="hljs-title function_">readCString</span>();<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span>.<span class="hljs-title function_">indexOf</span>(module_name) &gt;= <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-variable language_">this</span>.<span class="hljs-property">canhook</span> = <span class="hljs-literal">true</span>;<br>                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;android_dlopen_ext:&quot;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span>);<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">canhook</span>) &#123;<br>                    <span class="hljs-title function_">fun</span>();<br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">var</span> dlopen = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&quot;dlopen&quot;</span>);<br>    <span class="hljs-keyword">if</span> (dlopen) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(dlopen, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">var</span> pathptr = args[<span class="hljs-number">0</span>];<br>                <span class="hljs-keyword">if</span> (pathptr) &#123;<br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span> = (pathptr).<span class="hljs-title function_">readCString</span>();<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span>.<span class="hljs-title function_">indexOf</span>(module_name) &gt;= <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-variable language_">this</span>.<span class="hljs-property">canhook</span> = <span class="hljs-literal">true</span>;<br>                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;dlopen:&quot;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span>);<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">canhook</span>) &#123;<br>                    <span class="hljs-title function_">fun</span>();<br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;android_dlopen_ext:&quot;</span>, android_dlopen_ext, <span class="hljs-string">&quot;dlopen:&quot;</span>, dlopen);<br>&#125;<br><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook_native</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> module_libart = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByName</span>(<span class="hljs-string">&quot;libart.so&quot;</span>);<br>    <span class="hljs-keyword">var</span> symbols = module_libart.<span class="hljs-title function_">enumerateSymbols</span>();<br>    <span class="hljs-keyword">var</span> <span class="hljs-title class_">ArtMethod</span>_Invoke = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; symbols.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">var</span> symbol = symbols[i];<br>        <span class="hljs-keyword">var</span> address = symbol.<span class="hljs-property">address</span>;<br>        <span class="hljs-keyword">var</span> name = symbol.<span class="hljs-property">name</span>;<br>        <span class="hljs-keyword">var</span> indexArtMethod = name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;ArtMethod&quot;</span>);<br>        <span class="hljs-keyword">var</span> indexInvoke = name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;Invoke&quot;</span>);<br>        <span class="hljs-keyword">var</span> indexThread = name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;Thread&quot;</span>);<br>        <span class="hljs-keyword">if</span> (indexArtMethod &gt;= <span class="hljs-number">0</span><br>            &amp;&amp; indexInvoke &gt;= <span class="hljs-number">0</span><br>            &amp;&amp; indexThread &gt;= <span class="hljs-number">0</span><br>            &amp;&amp; indexArtMethod &lt; indexInvoke<br>            &amp;&amp; indexInvoke &lt; indexThread) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(name);<br>            <span class="hljs-title class_">ArtMethod</span>_Invoke = address;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title class_">ArtMethod</span>_Invoke) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(<span class="hljs-title class_">ArtMethod</span>_Invoke, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">var</span> method_name = <span class="hljs-title function_">prettyMethod</span>(args[<span class="hljs-number">0</span>], <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">if</span> (!(method_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;java.&quot;</span>) == <span class="hljs-number">0</span> || method_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;android.&quot;</span>) == <span class="hljs-number">0</span>)) &#123;<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;ArtMethod Invoke:&quot;</span> + method_name + <span class="hljs-string">&#x27;  called from:\n&#x27;</span> +<br>                        <span class="hljs-title class_">Thread</span>.<span class="hljs-title function_">backtrace</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">context</span>, <span class="hljs-title class_">Backtracer</span>.<span class="hljs-property">ACCURATE</span>)<br>                            .<span class="hljs-title function_">map</span>(<span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-property">fromAddress</span>).<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;\n&#x27;</span>) + <span class="hljs-string">&#x27;\n&#x27;</span>);<br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title function_">hook_dlopen</span>(<span class="hljs-string">&quot;libart.so&quot;</span>, hook_native);<br>    <span class="hljs-title function_">hook_native</span>();<br>&#125;<br><br><span class="hljs-title function_">setImmediate</span>(main);<br></code></pre></td></tr></table></figure><h2 id="3-HookRegisterNatives"><a href="#3-HookRegisterNatives" class="headerlink" title="3. HookRegisterNatives"></a>3. <a href="https://github.com/lasting-yang/frida_hook_libart">HookRegisterNatives</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">frida -U --no-pause -f package_name -l hook_RegisterNatives.js<br></code></pre></td></tr></table></figure><p>HookRegisterNativesSourceCode</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">find_RegisterNatives</span>(<span class="hljs-params">params</span>) &#123;<br>    <span class="hljs-keyword">var</span> symbols = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">enumerateSymbolsSync</span>(<span class="hljs-string">&quot;libart.so&quot;</span>);<br>    <span class="hljs-keyword">var</span> addrRegisterNatives = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; symbols.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">var</span> symbol = symbols[i];<br><br>        <span class="hljs-comment">//_ZN3art3JNI15RegisterNativesEP7_JNIEnvP7_jclassPK15JNINativeMethodi</span><br>        <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;art&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp;<br>                symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;JNI&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp;<br>                symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;RegisterNatives&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp;<br>                symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;CheckJNI&quot;</span>) &lt; <span class="hljs-number">0</span>) &#123;<br>            addrRegisterNatives = symbol.<span class="hljs-property">address</span>;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;RegisterNatives is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            <span class="hljs-title function_">hook_RegisterNatives</span>(addrRegisterNatives)<br>        &#125;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook_RegisterNatives</span>(<span class="hljs-params">addrRegisterNatives</span>) &#123;<br><br>    <span class="hljs-keyword">if</span> (addrRegisterNatives != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrRegisterNatives, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[RegisterNatives] method_count:&quot;</span>, args[<span class="hljs-number">3</span>]);<br>                <span class="hljs-keyword">var</span> env = args[<span class="hljs-number">0</span>];<br>                <span class="hljs-keyword">var</span> java_class = args[<span class="hljs-number">1</span>];<br>                <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(java_class);<br>                <span class="hljs-comment">//console.log(class_name);</span><br><br>                <span class="hljs-keyword">var</span> methods_ptr = <span class="hljs-title function_">ptr</span>(args[<span class="hljs-number">2</span>]);<br><br>                <span class="hljs-keyword">var</span> method_count = <span class="hljs-built_in">parseInt</span>(args[<span class="hljs-number">3</span>]);<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; method_count; i++) &#123;<br>                    <span class="hljs-keyword">var</span> name_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span>));<br>                    <span class="hljs-keyword">var</span> sig_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span> + <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>));<br>                    <span class="hljs-keyword">var</span> fnPtr_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span> + <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">2</span>));<br><br>                    <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(name_ptr);<br>                    <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(sig_ptr);<br>                    <span class="hljs-keyword">var</span> find_module = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(fnPtr_ptr);<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[RegisterNatives] java_class:&quot;</span>, class_name, <span class="hljs-string">&quot;name:&quot;</span>, name, <span class="hljs-string">&quot;sig:&quot;</span>, sig, <span class="hljs-string">&quot;fnPtr:&quot;</span>, fnPtr_ptr,  <span class="hljs-string">&quot; fnOffset:&quot;</span>, <span class="hljs-title function_">ptr</span>(fnPtr_ptr).<span class="hljs-title function_">sub</span>(find_module.<span class="hljs-property">base</span>), <span class="hljs-string">&quot; callee:&quot;</span>, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br><br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br>&#125;<br><br><span class="hljs-title function_">setImmediate</span>(find_RegisterNatives);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Frida</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Frida基本命令</title>
    <link href="/posts/96901429/"/>
    <url>/posts/96901429/</url>
    
    <content type="html"><![CDATA[<h1 id="Frida基本命令"><a href="#Frida基本命令" class="headerlink" title="Frida基本命令"></a>Frida基本命令</h1><h2 id="1-本地安装"><a href="#1-本地安装" class="headerlink" title="1. 本地安装"></a>1. 本地安装</h2> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs commandline">pip install frida<br>pip install frida-tools<br>npm install frida<br></code></pre></td></tr></table></figure><p>   (注意，新版本的frida需要安装frida-tools)</p><h2 id="2-手机安装frida-安装版本和本地版本一致"><a href="#2-手机安装frida-安装版本和本地版本一致" class="headerlink" title="2. 手机安装frida(安装版本和本地版本一致)"></a>2. 手机安装frida(安装版本和本地版本一致)</h2><p>   下载对应版本<a href="https://github.com/frida/frida/releases">frida-server</a>, 类似<strong>frida-server-15.1.27-android-arm.xz</strong>, 注意手机CPU架构, 上传手机/data/local/tmp 目录, 启动服务<br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell getprop ro.product.cpu.abi // 查看手机CPU架构<br>adb push ./frida-server-15.1.27-android-arm /data/local/tmp // 上传frida-server<br></code></pre></td></tr></table></figure></p><h2 id="3-启动服务"><a href="#3-启动服务" class="headerlink" title="3. 启动服务"></a>3. 启动服务</h2> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell <br>su <br>cd /data/local/tmp<br>chmod 777 frida-server-15.1.27-android-arm<br>./frida-server-15.1.27-android-arm<br></code></pre></td></tr></table></figure><h2 id="4-端口转发"><a href="#4-端口转发" class="headerlink" title="4. 端口转发"></a>4. 端口转发</h2> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb forward tcp:27042 tcp:27042 // 默认端口<br></code></pre></td></tr></table></figure><h2 id="5-查看进程列表"><a href="#5-查看进程列表" class="headerlink" title="5. 查看进程列表"></a>5. 查看进程列表</h2> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">frida-ps -U<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Frida</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>创建虚拟环境pip无法升级</title>
    <link href="/posts/c6eca636/"/>
    <url>/posts/c6eca636/</url>
    
    <content type="html"><![CDATA[<h1 id="创建虚拟环境pip无法升级"><a href="#创建虚拟环境pip无法升级" class="headerlink" title="创建虚拟环境pip无法升级"></a>创建虚拟环境pip无法升级</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">python -m pip install -U --force-reinstall pip<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>虚拟环境</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>hexo操作</title>
    <link href="/posts/7ab4e26f/"/>
    <url>/posts/7ab4e26f/</url>
    
    <content type="html"><![CDATA[<h2 id="Hexo-命令"><a href="#Hexo-命令" class="headerlink" title="Hexo 命令"></a>Hexo 命令</h2><ol><li><p>基本命令</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ hexo clean <span class="hljs-regexp">//</span> 清除缓存<br>$ hexo g <span class="hljs-regexp">//</span> 生成静态文件<br>$ hexo s <span class="hljs-regexp">//</span> 启动服务<br>$ hexo d <span class="hljs-regexp">//</span> 部署<br></code></pre></td></tr></table></figure></li><li><p>创建文章</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss">$ hexo <span class="hljs-keyword">new</span> &lt;<span class="hljs-built_in">title</span>&gt;<br></code></pre></td></tr></table></figure></li><li><p>创建指定布局 layout</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xl">$ hexo new [layout] &lt;<span class="hljs-built_in">title</span>&gt;<br><span class="hljs-function"><span class="hljs-title">layout</span> -&gt;</span> post(文章), draft（草稿）、<span class="hljs-built_in">page</span>（页面）<br></code></pre></td></tr></table></figure></li><li><p>添加文章分类和标签</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs subunit">categories:<br>   1. 单分类<br>     - 个人博客（第一层级）<br>     - Hexo博客（第二层级）<br>   2.多分类: <br>     - [日常, 生活]<br>     - [日常, 随想]<br>     - [日记]<br><span class="hljs-keyword">tags:</span><br>  - Hexo<br>  - 博客<br></code></pre></td></tr></table></figure></li><li><p>多命令(win11 暂不支持)</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$ </span>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s<br><span class="hljs-variable">$ </span>hexo d<br></code></pre></td></tr></table></figure></li><li><p>文章加密</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">password</span>: &lt;<span class="hljs-keyword">password</span>&gt;<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>test_my_site</title>
    <link href="/posts/63153/"/>
    <url>/posts/63153/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>aaa</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
