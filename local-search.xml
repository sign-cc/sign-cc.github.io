<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>某书Shield算法V6960</title>
    <link href="/posts/a85cbf02/"/>
    <url>/posts/a85cbf02/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="a9c6d264d7a42e37589ec8847cb53cf9e063099ab991e15a227aca9e528f2684"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>Android逆向</category>
      
      <category>某红书APP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>private</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>某博PC登录</title>
    <link href="/posts/20f15d3d/"/>
    <url>/posts/20f15d3d/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="2916a1be2470e829263ea55dcba99819128de4d7c6ef1e3ffce4334006b4d07d"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>各类平台加密算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>private</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>某易PC评论</title>
    <link href="/posts/97e1d02a/"/>
    <url>/posts/97e1d02a/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="24d4e7d3355891ced0498dea4fe8ea95b32410735a08ca41ae0187e98ce81650"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>各类平台加密算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>private</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>某宝滑块221</title>
    <link href="/posts/c11be28f/"/>
    <url>/posts/c11be28f/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="20ea85ea79a2144763b591f1b0844492fd079d0cfbf1f3abe0ba550e6d151fe6"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>各类平台加密算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>private</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>tornado接口模板</title>
    <link href="/posts/49b5159e/"/>
    <url>/posts/49b5159e/</url>
    
    <content type="html"><![CDATA[<h2 id="tornado接口模板"><a href="#tornado接口模板" class="headerlink" title="tornado接口模板"></a>tornado接口模板</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> datetime<br><span class="hljs-keyword">import</span> os<br>dir_path = os.path.dirname(os.path.abspath(__file__))<br><span class="hljs-keyword">from</span> tornado.ioloop <span class="hljs-keyword">import</span> IOLoop<br><span class="hljs-keyword">from</span> tornado.httpserver <span class="hljs-keyword">import</span> HTTPServer<br><span class="hljs-keyword">from</span> tornado.web <span class="hljs-keyword">import</span> Application<br><span class="hljs-keyword">from</span> tornado.options <span class="hljs-keyword">import</span> options<br><span class="hljs-keyword">from</span> tornado.web <span class="hljs-keyword">import</span> RequestHandler<br><span class="hljs-keyword">import</span> tornado.gen<br><span class="hljs-keyword">from</span> concurrent.futures <span class="hljs-keyword">import</span> ThreadPoolExecutor<br><span class="hljs-keyword">from</span> tornado.concurrent <span class="hljs-keyword">import</span> run_on_executor<br><span class="hljs-keyword">import</span> json<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>(<span class="hljs-params">args1: <span class="hljs-built_in">str</span>, args2: <span class="hljs-built_in">dict</span></span>) -&gt; <span class="hljs-built_in">dict</span>:<br>    result_msg = &#123;<br>        <span class="hljs-string">&quot;code&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;msg&quot;</span>: <span class="hljs-string">&quot;&quot;</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> result_msg<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">operator_fun</span>(<span class="hljs-params">request_body</span>):<br>    request_body_dict = json.loads(request_body)<br>    <span class="hljs-comment"># 提起内容</span><br>    url = request_body_dict.get(<span class="hljs-string">&#x27;params1&#x27;</span>)<br>    cookies = request_body_dict.get(<span class="hljs-string">&quot;params2&quot;</span>)<br>    data = run(args1=url, args2=cookies)<br>    <span class="hljs-keyword">return</span> data<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">TestObject</span>(<span class="hljs-title class_ inherited__">RequestHandler</span>):<br>    executor = ThreadPoolExecutor(<span class="hljs-number">999</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get</span>(<span class="hljs-params">self</span>):<br>        write_info = &#123;<br>            <span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;not get method, please use post&quot;</span><br>        &#125;<br>        self.write(write_info)<br><br><span class="hljs-meta">    @tornado.gen.coroutine</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">post</span>(<span class="hljs-params">self</span>):<br>        result = <span class="hljs-keyword">yield</span> self.post_run_function()<br>        self.write(result)<br><br><span class="hljs-meta">    @run_on_executor</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">post_run_function</span>(<span class="hljs-params">self</span>):<br>        data = operator_fun(self.request.body)<br>        <span class="hljs-comment"># return json.dumps(data, ensure_ascii=False)</span><br>        <span class="hljs-keyword">return</span> data<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    options.parse_command_line()<br>    <span class="hljs-comment"># 创建一个项目应用，接入web服务器</span><br>    <span class="hljs-comment"># 需要保证在fork子进程之前IOLoop是未被初始化的。</span><br>    app = Application(<br>        [<br>            (<span class="hljs-string">r&quot;/test&quot;</span>, TestObject),<br>        ],<br>    )<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;tornado 服务启动--&gt;<span class="hljs-subst">&#123;datetime.datetime.now().strftime(<span class="hljs-string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)&#125;</span>&quot;</span>)<br>    <span class="hljs-comment"># 开始监听端口，提供服务</span><br>    http_server = HTTPServer(app)<br>    <span class="hljs-comment"># 指定端口port</span><br>    http_server.bind(<span class="hljs-number">10010</span>)<br>    http_server.start()  <span class="hljs-comment"># 默认参数1 启动一个进程</span><br>    <span class="hljs-comment"># start(num) num&lt;=0 按照当前os cpu核心数量 进行 进程启动 fork</span><br>    <span class="hljs-comment"># num&gt;1 表示通过fork 启动多个子进程</span><br>    <span class="hljs-comment"># 在启动IOLoop之前通过start函数设置进程数量，如果设置为0表示每个CPU都启动一个进程。</span><br>    IOLoop.current().start()<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Tornado</category>
      
    </categories>
    
    
    <tags>
      
      <tag>tornado</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>滑块类破解思路</title>
    <link href="/posts/56fff324/"/>
    <url>/posts/56fff324/</url>
    
    <content type="html"><![CDATA[<h2 id="缺口类滑块破解思路"><a href="#缺口类滑块破解思路" class="headerlink" title="缺口类滑块破解思路"></a>缺口类滑块破解思路</h2><ul><li>加密参数破解</li><li>图片保存本地(是否压缩大小, 需要跟HTML页面上大小一致)</li><li>识别缺口距离</li><li>轨迹生成(需要与平台轨迹加密格式一致)</li><li>校验</li></ul><h2 id="无感验证类破解思路"><a href="#无感验证类破解思路" class="headerlink" title="无感验证类破解思路"></a>无感验证类破解思路</h2><h3 id="google-reCAPTCHA-V2-v3-TikTok-…"><a href="#google-reCAPTCHA-V2-v3-TikTok-…" class="headerlink" title="google reCAPTCHA V2/v3 , TikTok …"></a>google reCAPTCHA V2/v3 , TikTok …</h3><p><a href="https://2captcha.com/2captcha-api#rates">点我</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>加密算法</title>
    <link href="/posts/8f91ec68/"/>
    <url>/posts/8f91ec68/</url>
    
    <content type="html"><![CDATA[<h2 id="Python实现各类加密算法"><a href="#Python实现各类加密算法" class="headerlink" title="Python实现各类加密算法"></a>Python实现各类加密算法</h2><h3 id="散列算法"><a href="#散列算法" class="headerlink" title="散列算法"></a>散列算法</h3><p>对不同长度的输入产生固定长度的输出.</p><h4 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt_md5</span>(<span class="hljs-params">strs</span>):<br>    m = hashlib.md5()<br>    m.update(strs.encode(<span class="hljs-string">&quot;utf-8&quot;</span>))<br>    <span class="hljs-keyword">return</span> m.hexdigest()<br><br></code></pre></td></tr></table></figure><h4 id="SHA"><a href="#SHA" class="headerlink" title="SHA"></a>SHA</h4><h4 id="HMAC"><a href="#HMAC" class="headerlink" title="HMAC"></a>HMAC</h4><h5 id="HMAC-SHA1"><a href="#HMAC-SHA1" class="headerlink" title="HMAC-SHA1"></a>HMAC-SHA1</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hmac<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> sha1<br><span class="hljs-keyword">import</span> base64<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hmac_sha1</span>(<span class="hljs-params">data, hmac_key</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    :param data: 需要加密的数据</span><br><span class="hljs-string">    :param hmac_key: hmac秘钥</span><br><span class="hljs-string">    :return: 加密后的密文</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-comment"># 对加密数据进行base64编码</span><br>    data = base64.b64encode(data.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)).decode(<span class="hljs-string">&quot;utf-8&quot;</span>)<br>    <span class="hljs-comment"># 对编码后的数据进行hmacSha1</span><br>    hmac_code = hmac.new(hmac_key.encode(), data.encode(), sha1).hexdigest()<br>    <span class="hljs-comment"># 对hmacSha1后的数据进行md5</span><br>    sign = hashlib.md5(hmac_code.encode()).hexdigest()<br>    <span class="hljs-keyword">return</span> sign<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    hmac_sha1(<span class="hljs-string">&quot;text=智能内容审核&quot;</span>, <span class="hljs-string">&quot;潜在&quot;</span>)<br><br></code></pre></td></tr></table></figure><h3 id="对称加密"><a href="#对称加密" class="headerlink" title="对称加密"></a>对称加密</h3><h4 id="AES"><a href="#AES" class="headerlink" title="AES"></a>AES</h4><h4 id="DES"><a href="#DES" class="headerlink" title="DES"></a>DES</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> DES<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">DESECBEncrypt</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, key</span>):<br>        self.key = key  <span class="hljs-comment"># 初始化密钥</span><br>        self.length = DES.block_size  <span class="hljs-comment"># 初始化数据块大小</span><br>        self.aes = DES.new(self.key, DES.MODE_ECB)  <span class="hljs-comment"># 初始化AES,ECB模式的实例</span><br>        <span class="hljs-comment"># 截断函数，去除填充的字符</span><br>        self.unpad = <span class="hljs-keyword">lambda</span> date: date[<span class="hljs-number">0</span>:-<span class="hljs-built_in">ord</span>(date[-<span class="hljs-number">1</span>])]<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">pad</span>(<span class="hljs-params">self, text</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        #填充函数，使被加密数据的字节码长度是block_size的整数倍</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        count = <span class="hljs-built_in">len</span>(text.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>        add = self.length - (count % self.length)<br>        entext = text + (<span class="hljs-built_in">chr</span>(add) * add)<br>        <span class="hljs-keyword">return</span> entext<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt</span>(<span class="hljs-params">self, encrData, <span class="hljs-built_in">hex</span>=<span class="hljs-literal">False</span></span>):  <span class="hljs-comment"># 加密函数</span><br>        res = self.aes.encrypt(self.pad(encrData).encode(<span class="hljs-string">&quot;utf8&quot;</span>))<br>        msg = <span class="hljs-built_in">str</span>(base64.b64encode(res), encoding=<span class="hljs-string">&quot;utf-8&quot;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">hex</span>:<br>            msg = res.<span class="hljs-built_in">hex</span>()<br>        <span class="hljs-keyword">return</span> msg<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt</span>(<span class="hljs-params">self, decrData</span>):  <span class="hljs-comment"># 解密函数</span><br>        res = base64.decodebytes(decrData.encode(<span class="hljs-string">&quot;utf8&quot;</span>))<br>        <span class="hljs-comment"># res = bytes.fromhex(decrData)</span><br>        msg = self.aes.decrypt(res).decode(<span class="hljs-string">&quot;utf-8&quot;</span>)<br>        <span class="hljs-keyword">return</span> self.unpad(msg)<br></code></pre></td></tr></table></figure><h4 id="3DES"><a href="#3DES" class="headerlink" title="3DES"></a>3DES</h4><h3 id="非对称加密"><a href="#非对称加密" class="headerlink" title="非对称加密"></a>非对称加密</h3><h4 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h4><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>某书PC加密算法</title>
    <link href="/posts/e10359bf/"/>
    <url>/posts/e10359bf/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="9ad589297966c2b9af971403f7ab8d9e4fd3af70558fe855fa14fe9ff6e330c4"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>各类平台加密算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>private</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>爬虫-TLS对抗</title>
    <link href="/posts/695ca51d/"/>
    <url>/posts/695ca51d/</url>
    
    <content type="html"><![CDATA[<h2 id="针对TLS的对抗"><a href="#针对TLS的对抗" class="headerlink" title="针对TLS的对抗"></a>针对TLS的对抗</h2><p>方法一：<br>1.<a href="https://github.com/synodriver/pycurl/blob/master/special.markdown">https://github.com/synodriver/pycurl/blob/master/special.markdown</a></p><p>2.git clone <a href="https://github.com/ycq0125/pycurl.git">https://github.com/ycq0125/pycurl.git</a></p><p>3.cd pycurl搞定。可以把./pycurl/requests_curl 整个移动到site-package目录下，就可以全局使用了</p><p>方法二：<br><a href="https://pypi.org/project/requests-curl-antitls/">https://pypi.org/project/requests-curl-antitls/</a> 内有详细步骤</p><p>方法三：<br>镜像有点大，不过有完整的编译环境<br>docker pull geekbyte1/pyantitls:v1.0<br>docker run -it -d geekbyte1/pyantitls:v1.0</p><p>方法四：<br>Q佬的Dockerfile版<br><a href="https://mp.weixin.qq.com/s/UZlLuzlQZrI7w82HI7zGuw">https://mp.weixin.qq.com/s/UZlLuzlQZrI7w82HI7zGuw</a></p><p>方法五：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> random<br><br><span class="hljs-keyword">from</span> requests.adapters <span class="hljs-keyword">import</span> HTTPAdapter<br><span class="hljs-keyword">from</span> requests.packages.urllib3.util.ssl_ <span class="hljs-keyword">import</span> create_urllib3_context<br><br>ORIGIN_CIPHERS = (<span class="hljs-string">&#x27;ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+HIGH:&#x27;</span><br>                  <span class="hljs-string">&#x27;DH+HIGH:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+HIGH:RSA+3DES&#x27;</span>)<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">DESAdapter</span>(<span class="hljs-title class_ inherited__">HTTPAdapter</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, *args, **kwargs</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        A TransportAdapter that re-enables 3DES support in Requests.</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        CIPHERS = ORIGIN_CIPHERS.split(<span class="hljs-string">&#x27;:&#x27;</span>)<br>        random.shuffle(CIPHERS)<br>        CIPHERS = <span class="hljs-string">&#x27;:&#x27;</span>.join(CIPHERS)<br>        self.CIPHERS = CIPHERS + <span class="hljs-string">&#x27;:!aNULL:!eNULL:!MD5&#x27;</span><br>        <span class="hljs-built_in">super</span>().__init__(*args, **kwargs)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">init_poolmanager</span>(<span class="hljs-params">self, *args, **kwargs</span>):<br>        context = create_urllib3_context(ciphers=self.CIPHERS)<br>        kwargs[<span class="hljs-string">&#x27;ssl_context&#x27;</span>] = context<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">super</span>(DESAdapter, self).init_poolmanager(*args, **kwargs)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">proxy_manager_for</span>(<span class="hljs-params">self, *args, **kwargs</span>):<br>        context = create_urllib3_context(ciphers=self.CIPHERS)<br>        kwargs[<span class="hljs-string">&#x27;ssl_context&#x27;</span>] = context<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">super</span>(DESAdapter, self).proxy_manager_for(*args, **kwargs)<br><br><br><span class="hljs-keyword">import</span> requests<br><br>headers = &#123;<br>    <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36&#x27;</span>&#125;<br>s = requests.Session()<br>s.headers.update(headers)<br><br><span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):<br>    s.mount(<span class="hljs-string">&#x27;https://ja3er.com&#x27;</span>, DESAdapter())<br>    resp = s.get(<span class="hljs-string">&#x27;https://ja3er.com/json&#x27;</span>).json()<br>    <span class="hljs-built_in">print</span>(resp)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ja3_test</span>(<span class="hljs-params">session</span>):<br>    resp = session.get(<span class="hljs-string">&#x27;https://ja3er.com/json&#x27;</span>).json()<br>    <span class="hljs-keyword">return</span> resp<br><br><br></code></pre></td></tr></table></figure><p>另外下面这个是vmwear的镜像，已经编译好的环境，可以自己拿来玩玩<br>链接：<a href="https://pan.baidu.com/s/1_R02JKqvmA8Km4QNAKYfYg">https://pan.baidu.com/s/1_R02JKqvmA8Km4QNAKYfYg</a><br>提取码：curl</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>爬虫-基础</title>
    <link href="/posts/6b0f3821/"/>
    <url>/posts/6b0f3821/</url>
    
    <content type="html"><![CDATA[<h3 id="1-Python基础"><a href="#1-Python基础" class="headerlink" title="1. Python基础"></a>1. <a href="https://www.liaoxuefeng.com/wiki/1016959663602400">Python基础</a></h3><h3 id="2-requests库使用"><a href="#2-requests库使用" class="headerlink" title="2. requests库使用"></a>2. <a href="https://www.liaoxuefeng.com/wiki/1016959663602400/1183249464292448">requests库使用</a></h3><h3 id="3-Chrome抓包详解"><a href="#3-Chrome抓包详解" class="headerlink" title="3. Chrome抓包详解"></a>3. <a href="https://zhuanlan.zhihu.com/p/32825491">Chrome抓包详解</a></h3><h3 id="4-Fiddler抓包详解"><a href="#4-Fiddler抓包详解" class="headerlink" title="4. Fiddler抓包详解"></a>4. <a href="https://juejin.cn/post/6844904042422861831">Fiddler抓包详解</a></h3><h3 id="5-一键复制chrome包-转为Python代码-curlconverter"><a href="#5-一键复制chrome包-转为Python代码-curlconverter" class="headerlink" title="5. 一键复制chrome包,转为Python代码 curlconverter"></a>5. 一键复制chrome包,转为Python代码 <a href="https://curlconverter.com/">curlconverter</a></h3><p><img src="img_1.png" alt="复制curl-bash"><br><img src="img.png" alt="粘贴至curlconverter"></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>基础</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>某音PC加密算法</title>
    <link href="/posts/8c44cadd/"/>
    <url>/posts/8c44cadd/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="48dfcbd64e822b6ad63eab4d19ed38d933abfa7f90cb0987734e8902616a7ff2"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>各类平台加密算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>private</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>图片大小压缩</title>
    <link href="/posts/33abc40/"/>
    <url>/posts/33abc40/</url>
    
    <content type="html"><![CDATA[<h2 id="图片大小根据比例压缩"><a href="#图片大小根据比例压缩" class="headerlink" title="图片大小根据比例压缩"></a>图片大小根据比例压缩</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> os<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">reduceImage</span>(<span class="hljs-params">img_path: <span class="hljs-built_in">str</span>, reduce_radio: <span class="hljs-built_in">tuple</span></span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    :param img_path: 图片绝对路径</span><br><span class="hljs-string">    :param reduce_radio: 压缩比例 元组(width 0.3, height 0.5)</span><br><span class="hljs-string">    :return 压缩完成图片绝对路径</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-comment"># 将图片同比例压缩</span><br>    img = cv2.imread(img_path)<br>    height, width = img.shape[:<span class="hljs-number">2</span>]<br>    size = (<span class="hljs-built_in">int</span>(width * reduce_radio[<span class="hljs-number">0</span>]), <span class="hljs-built_in">int</span>(height * reduce_radio[<span class="hljs-number">1</span>]))<br>    re_img = cv2.resize(src=img, dsize=size, interpolation=cv2.INTER_AREA)<br>    <span class="hljs-comment"># 图片新路径</span><br>    od_path, od_name = os.path.split(img_path)<br>    reduce_path = os.path.join(od_path, <span class="hljs-string">f&quot;reduce_<span class="hljs-subst">&#123;od_name&#125;</span>&quot;</span>)<br>    cv2.imwrite(reduce_path, re_img)<br>    <span class="hljs-keyword">return</span> reduce_path<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>图片处理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cv2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>滑块缺口图片距离识别</title>
    <link href="/posts/fcc217f6/"/>
    <url>/posts/fcc217f6/</url>
    
    <content type="html"><![CDATA[<h2 id="缺口滑块识别距离"><a href="#缺口滑块识别距离" class="headerlink" title="缺口滑块识别距离"></a>缺口滑块识别距离</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">identify_gap</span>(<span class="hljs-params">bg: <span class="hljs-built_in">str</span>, tp: <span class="hljs-built_in">str</span>, out: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">tuple</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    :param bg: 背景图片 全路径</span><br><span class="hljs-string">    :param tp: 缺口图片 全路径</span><br><span class="hljs-string">    :param out:输出图片 全路径</span><br><span class="hljs-string">    :return x,y 坐标元组</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-comment"># 读取背景图片和缺口图片</span><br>    bg_img = cv2.imread(bg, <span class="hljs-number">0</span>)  <span class="hljs-comment"># 背景图片</span><br>    tp_img = cv2.imread(tp, <span class="hljs-number">0</span>)  <span class="hljs-comment"># 缺口图片</span><br>    <span class="hljs-comment"># 识别图片边缘</span><br>    bg_edge = cv2.Canny(bg_img, <span class="hljs-number">500</span>, <span class="hljs-number">800</span>)<br>    tp_edge = cv2.Canny(tp_img, <span class="hljs-number">500</span>, <span class="hljs-number">800</span>)<br>    <span class="hljs-comment"># 转换图片格式 RGB</span><br>    bg_pic = cv2.cvtColor(bg_edge, cv2.COLOR_GRAY2RGB)<br>    tp_pic = cv2.cvtColor(tp_edge, cv2.COLOR_GRAY2RGB)<br>    <span class="hljs-comment"># 缺口匹配</span><br>    res = cv2.matchTemplate(bg_pic, tp_pic, cv2.TM_CCOEFF_NORMED)<br>    min_val, max_val, min_loc, max_loc = cv2.minMaxLoc(res)  <span class="hljs-comment"># 寻找最优匹配</span><br>    <span class="hljs-comment"># max_loc = (max_loc[0] + 1, max_loc[1])</span><br>    <span class="hljs-comment"># 绘制方框</span><br>    th, tw = tp_pic.shape[:<span class="hljs-number">2</span>]<br>    tl = max_loc  <span class="hljs-comment"># 左上角点的坐标</span><br>    br = (tl[<span class="hljs-number">0</span>] + tw, tl[<span class="hljs-number">1</span>] + th)  <span class="hljs-comment"># 右下角点的坐标</span><br>    cv2.rectangle(bg_img, tl, br, (<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">255</span>), <span class="hljs-number">1</span>)  <span class="hljs-comment"># 绘制矩形</span><br>    cv2.imwrite(out, bg_img)  <span class="hljs-comment"># 保存在本地</span><br>    <span class="hljs-comment"># 返回缺口的X坐标,y坐标</span><br>    <span class="hljs-keyword">return</span> tl<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>图片处理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cv2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>鼠标轨迹生成</title>
    <link href="/posts/79e14e4c/"/>
    <url>/posts/79e14e4c/</url>
    
    <content type="html"><![CDATA[<h2 id="生成各类鼠标轨迹"><a href="#生成各类鼠标轨迹" class="headerlink" title="生成各类鼠标轨迹"></a>生成各类鼠标轨迹</h2><h3 id="1-极验鼠标轨迹"><a href="#1-极验鼠标轨迹" class="headerlink" title="1. 极验鼠标轨迹"></a>1. 极验鼠标轨迹</h3><p>适用平台:</p><pre><code class="hljs">- 某验- 某书PC</code></pre><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">GTrace</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        self.__pos_x = []<br>        self.__pos_y = []<br>        self.__pos_z = []<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__set_pt_time</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        设置各节点的时间</span><br><span class="hljs-string">        分析不同时间间隔中X坐标数量的占比</span><br><span class="hljs-string">        统计结果: 1. 80%~90%的X坐标在15~20毫秒之间</span><br><span class="hljs-string">                2. 10%~15%在20~200及以上，其中 [-a, 0, x, ...] 这里x只有一个，取值在110~200之间</span><br><span class="hljs-string">                    坐标集最后3~5个坐标取值再50~400之间，最后一个坐标数值最大</span><br><span class="hljs-string"></span><br><span class="hljs-string">        滑动总时间的取值规则: 图片宽度260，去掉滑块的宽度剩下200;</span><br><span class="hljs-string">                        如果距离小于100，则耗时1300~1900之间</span><br><span class="hljs-string">                        如果距离大于100，则耗时1700~2100之间</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        __end_pt_time = []<br>        __move_pt_time = []<br>        self.__pos_z = []<br><br>        total_move_time = self.__need_time * random.uniform(<span class="hljs-number">0.8</span>, <span class="hljs-number">0.9</span>)<br>        start_point_time = random.uniform(<span class="hljs-number">110</span>, <span class="hljs-number">200</span>)<br>        __start_pt_time = [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-built_in">int</span>(start_point_time)]<br><br>        sum_move_time = <span class="hljs-number">0</span><br><br>        _tmp_total_move_time = total_move_time<br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            delta_time = random.uniform(<span class="hljs-number">15</span>, <span class="hljs-number">20</span>)<br>            <span class="hljs-keyword">if</span> _tmp_total_move_time &lt; delta_time:<br>                <span class="hljs-keyword">break</span><br><br>            sum_move_time += delta_time<br>            _tmp_total_move_time -= delta_time<br>            __move_pt_time.append(<span class="hljs-built_in">int</span>(start_point_time+sum_move_time))<br><br>        last_pt_time = __move_pt_time[-<span class="hljs-number">1</span>]<br>        __move_pt_time.append(last_pt_time+_tmp_total_move_time)<br><br>        sum_end_time = start_point_time + total_move_time<br>        other_point_time = self.__need_time - sum_end_time<br>        end_first_ptime = other_point_time / <span class="hljs-number">2</span><br><br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            delta_time = random.uniform(<span class="hljs-number">110</span>, <span class="hljs-number">200</span>)<br>            <span class="hljs-keyword">if</span> end_first_ptime - delta_time &lt;= <span class="hljs-number">0</span>:<br>                <span class="hljs-keyword">break</span><br><br>            end_first_ptime -= delta_time<br>            sum_end_time += delta_time<br>            __end_pt_time.append(<span class="hljs-built_in">int</span>(sum_end_time))<br><br>        __end_pt_time.append(<span class="hljs-built_in">int</span>(sum_end_time + (other_point_time/<span class="hljs-number">2</span> + end_first_ptime)))<br>        self.__pos_z.extend(__start_pt_time)<br>        self.__pos_z.extend(__move_pt_time)<br>        self.__pos_z.extend(__end_pt_time)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__set_distance</span>(<span class="hljs-params">self, _dist</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        设置要生成的轨迹长度</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        self.__distance = _dist<br><br>        <span class="hljs-keyword">if</span> _dist &lt; <span class="hljs-number">100</span>:<br>            self.__need_time = <span class="hljs-built_in">int</span>(random.uniform(<span class="hljs-number">500</span>, <span class="hljs-number">1500</span>))<br>        <span class="hljs-keyword">else</span>:<br>            self.__need_time = <span class="hljs-built_in">int</span>(random.uniform(<span class="hljs-number">1000</span>, <span class="hljs-number">2000</span>))<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__get_pos_z</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> self.__pos_z<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__get_pos_y</span>(<span class="hljs-params">self</span>):<br>        _pos_y = [random.uniform(-<span class="hljs-number">40</span>, -<span class="hljs-number">18</span>), <span class="hljs-number">0</span>]<br>        point_count = <span class="hljs-built_in">len</span>(self.__pos_z)<br>        x = np.linspace(-<span class="hljs-number">10</span>, <span class="hljs-number">15</span>, point_count - <span class="hljs-built_in">len</span>(_pos_y))<br>        arct_y = np.arctan(x)<br><br>        <span class="hljs-keyword">for</span> _, val <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(arct_y):<br>            _pos_y.append(val)<br><br>        <span class="hljs-keyword">return</span> _pos_y<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__get_pos_x</span>(<span class="hljs-params">self, _distance</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        绘制标准的数学函数图像: 以 tanh 开始 以 arctan 结尾</span><br><span class="hljs-string">        根据此模型用等比时间差生成X坐标</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        <span class="hljs-comment"># first_val = random.uniform(-40, -18)</span><br>        <span class="hljs-comment"># _distance += first_val</span><br>        _pos_x = [random.uniform(-<span class="hljs-number">40</span>, -<span class="hljs-number">18</span>), <span class="hljs-number">0</span>]<br>        self.__set_distance(_distance)<br>        self.__set_pt_time()<br><br>        point_count = <span class="hljs-built_in">len</span>(self.__pos_z)<br>        x = np.linspace(-<span class="hljs-number">1</span>, <span class="hljs-number">19</span>, point_count-<span class="hljs-built_in">len</span>(_pos_x))<br>        ss = np.arctan(x)<br>        th = np.tanh(x)<br><br>        <span class="hljs-keyword">for</span> idx <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(th)):<br>            <span class="hljs-keyword">if</span> th[idx] &lt; ss[idx]:<br>                th[idx] = ss[idx]<br><br>        th += <span class="hljs-number">1</span><br>        th *= (_distance / <span class="hljs-number">2.5</span>)<br><br>        i = <span class="hljs-number">0</span><br>        start_idx = <span class="hljs-built_in">int</span>(point_count/<span class="hljs-number">10</span>)<br>        end_idx = <span class="hljs-built_in">int</span>(point_count/<span class="hljs-number">50</span>)<br>        delta_pt = <span class="hljs-built_in">abs</span>(np.random.normal(scale=<span class="hljs-number">1.1</span>, size=point_count-start_idx-end_idx))<br>        <span class="hljs-keyword">for</span> idx <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(start_idx, point_count):<br>            <span class="hljs-keyword">if</span> idx*<span class="hljs-number">1.3</span> &gt; <span class="hljs-built_in">len</span>(delta_pt):<br>                <span class="hljs-keyword">break</span><br><br>            th[idx] += delta_pt[i]<br>            i+=<span class="hljs-number">1</span><br><br>        _pos_x.extend(th)<br>        <span class="hljs-keyword">return</span> _pos_x[-<span class="hljs-number">1</span>], _pos_x<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_mouse_pos_path</span>(<span class="hljs-params">self, distance</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        获取滑动滑块鼠标的滑动轨迹坐标集合</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        result = []<br>        _distance, x = self.__get_pos_x(distance)<br>        y = self.__get_pos_y()<br>        z = self.__get_pos_z()<br><br>        <span class="hljs-keyword">for</span> idx <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(x)):<br>            result.append([<span class="hljs-built_in">int</span>(x[idx]), <span class="hljs-built_in">int</span>(y[idx]), <span class="hljs-built_in">int</span>(z[idx])])<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">int</span>(_distance), result<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    GTrace().get_mouse_pos_path(<span class="hljs-number">130</span>)<br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><p><strong><a href="https://www.52pojie.cn/thread-1162979-1-1.html">参考链接</a></strong></p><h3 id="2-贝塞尔曲线轨迹生成"><a href="#2-贝塞尔曲线轨迹生成" class="headerlink" title="2. 贝塞尔曲线轨迹生成"></a>2. 贝塞尔曲线轨迹生成</h3><p>适用平台:</p><pre><code class="hljs">- 某宝</code></pre><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> math<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">BSRSlide</span>:<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_bztsg</span>(<span class="hljs-params">self, dataTrajectory</span>):<br>        lengthOfdata = <span class="hljs-built_in">len</span>(dataTrajectory)<br><br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">staer</span>(<span class="hljs-params">x</span>):<br>            t = ((x - dataTrajectory[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]) / (dataTrajectory[-<span class="hljs-number">1</span>][<span class="hljs-number">0</span>] - dataTrajectory[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]))<br>            y = np.array([<span class="hljs-number">0</span>, <span class="hljs-number">0</span>], dtype=np.float64)<br>            <span class="hljs-keyword">for</span> s <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(dataTrajectory)):<br>                y += dataTrajectory[s] * ((math.factorial(lengthOfdata - <span class="hljs-number">1</span>) / (<br>                        math.factorial(s) * math.factorial(lengthOfdata - <span class="hljs-number">1</span> - s))) * math.<span class="hljs-built_in">pow</span>(t, s) * math.<span class="hljs-built_in">pow</span>(<br>                    (<span class="hljs-number">1</span> - t), lengthOfdata - <span class="hljs-number">1</span> - s))<br>            <span class="hljs-keyword">return</span> y[<span class="hljs-number">1</span>]<br><br>        <span class="hljs-keyword">return</span> staer<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_type</span>(<span class="hljs-params">self, <span class="hljs-built_in">type</span>, x, numberList</span>):<br>        numberListre = []<br>        pin = (x[<span class="hljs-number">1</span>] - x[<span class="hljs-number">0</span>]) / numberList<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">type</span> == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(numberList):<br>                numberListre.append(i * pin)<br>            <span class="hljs-keyword">if</span> pin &gt;= <span class="hljs-number">0</span>:<br>                numberListre = numberListre[::-<span class="hljs-number">1</span>]<br>        <span class="hljs-keyword">elif</span> <span class="hljs-built_in">type</span> == <span class="hljs-number">1</span>:<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(numberList):<br>                numberListre.append(<span class="hljs-number">1</span> * ((i * pin) ** <span class="hljs-number">2</span>))<br>            numberListre = numberListre[::-<span class="hljs-number">1</span>]<br>        <span class="hljs-keyword">elif</span> <span class="hljs-built_in">type</span> == <span class="hljs-number">2</span>:<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(numberList):<br>                numberListre.append(<span class="hljs-number">1</span> * ((i * pin - x[<span class="hljs-number">1</span>]) ** <span class="hljs-number">2</span>))<br><br>        <span class="hljs-keyword">elif</span> <span class="hljs-built_in">type</span> == <span class="hljs-number">3</span>:<br>            dataTrajectory = [np.array([<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]), np.array([(x[<span class="hljs-number">1</span>] - x[<span class="hljs-number">0</span>]) * <span class="hljs-number">0.8</span>, (x[<span class="hljs-number">1</span>] - x[<span class="hljs-number">0</span>]) * <span class="hljs-number">0.6</span>]),<br>                              np.array([x[<span class="hljs-number">1</span>] - x[<span class="hljs-number">0</span>], <span class="hljs-number">0</span>])]<br>            fun = self._bztsg(dataTrajectory)<br>            numberListre = [<span class="hljs-number">0</span>]<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, numberList):<br>                numberListre.append(fun(i * pin) + numberListre[-<span class="hljs-number">1</span>])<br>            <span class="hljs-keyword">if</span> pin &gt;= <span class="hljs-number">0</span>:<br>                numberListre = numberListre[::-<span class="hljs-number">1</span>]<br>        numberListre = np.<span class="hljs-built_in">abs</span>(np.array(numberListre) - <span class="hljs-built_in">max</span>(numberListre))<br>        biaoNumberList = ((numberListre - numberListre[numberListre.argmin()]) / (<br>                numberListre[numberListre.argmax()] - numberListre[numberListre.argmin()])) * (x[<span class="hljs-number">1</span>] - x[<span class="hljs-number">0</span>]) + x[<span class="hljs-number">0</span>]<br>        biaoNumberList[<span class="hljs-number">0</span>] = x[<span class="hljs-number">0</span>]<br>        biaoNumberList[-<span class="hljs-number">1</span>] = x[<span class="hljs-number">1</span>]<br>        <span class="hljs-keyword">return</span> biaoNumberList<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">getFun</span>(<span class="hljs-params">self, s</span>):<br>        <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">        :param s: 传入P点</span><br><span class="hljs-string">        :return: 返回公式</span><br><span class="hljs-string">        &#x27;&#x27;&#x27;</span><br>        dataTrajectory = []<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> s:<br>            dataTrajectory.append(np.array(i))<br>        <span class="hljs-keyword">return</span> self._bztsg(dataTrajectory)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">simulation</span>(<span class="hljs-params">self, start, end, le=<span class="hljs-number">1</span>, deviation=<span class="hljs-number">0</span>, bias=<span class="hljs-number">0.5</span></span>):<br>        <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">        :param start:开始点的坐标 如 start = [0, 0]</span><br><span class="hljs-string">        :param end:结束点的坐标 如 end = [100, 100]</span><br><span class="hljs-string">        :param le:几阶贝塞尔曲线，越大越复杂 如 le = 4</span><br><span class="hljs-string">        :param deviation:轨迹上下波动的范围 如 deviation = 10</span><br><span class="hljs-string">        :param bias:波动范围的分布位置 如 bias = 0.5</span><br><span class="hljs-string">        :return:返回一个字典equation对应该曲线的方程，P对应贝塞尔曲线的影响点</span><br><span class="hljs-string">        &#x27;&#x27;&#x27;</span><br>        start = np.array(start)<br>        end = np.array(end)<br>        cbb = []<br>        <span class="hljs-keyword">if</span> le != <span class="hljs-number">1</span>:<br>            e = (<span class="hljs-number">1</span> - bias) / (le - <span class="hljs-number">1</span>)<br>            cbb = [[bias + e * i, bias + e * (i + <span class="hljs-number">1</span>)] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(le - <span class="hljs-number">1</span>)]<br><br>        dataTrajectoryList = [start]<br><br>        t = random.choice([-<span class="hljs-number">1</span>, <span class="hljs-number">1</span>])<br>        w = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> cbb:<br>            px1 = start[<span class="hljs-number">0</span>] + (end[<span class="hljs-number">0</span>] - start[<span class="hljs-number">0</span>]) * (random.random() * (i[<span class="hljs-number">1</span>] - i[<span class="hljs-number">0</span>]) + (i[<span class="hljs-number">0</span>]))<br>            p = np.array([px1, self._bztsg([start, end])(px1) + t * deviation])<br>            dataTrajectoryList.append(p)<br>            w += <span class="hljs-number">1</span><br>            <span class="hljs-keyword">if</span> w &gt;= <span class="hljs-number">2</span>:<br>                w = <span class="hljs-number">0</span><br>                t = -<span class="hljs-number">1</span> * t<br><br>        dataTrajectoryList.append(end)<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;equation&quot;</span>: self._bztsg(dataTrajectoryList), <span class="hljs-string">&quot;P&quot;</span>: np.array(dataTrajectoryList)&#125;<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">trackArray</span>(<span class="hljs-params">self, start, end, numberList, le=<span class="hljs-number">2</span>, deviation=<span class="hljs-number">0</span>, bias=<span class="hljs-number">0.5</span>, <span class="hljs-built_in">type</span>=<span class="hljs-number">0</span>, cbb=<span class="hljs-number">0</span>, yhh=<span class="hljs-number">10</span></span>):<br>        <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">        :param start:开始点的坐标 如 start = [0, 0]</span><br><span class="hljs-string">        :param end:结束点的坐标 如 end = [100, 100]</span><br><span class="hljs-string">        :param numberList:返回的数组的轨迹点的数量 numberList = 150</span><br><span class="hljs-string">        :param le:几阶贝塞尔曲线，越大越复杂 如 le = 4</span><br><span class="hljs-string">        :param deviation:轨迹上下波动的范围 如 deviation = 10</span><br><span class="hljs-string">        :param bias:波动范围的分布位置 如 bias = 0.5</span><br><span class="hljs-string">        :param type:0表示均速滑动，1表示先慢后快，2表示先快后慢，3表示先慢中间快后慢 如 type = 1</span><br><span class="hljs-string">        :param cbb:在终点来回摆动的次数</span><br><span class="hljs-string">        :param yhh:在终点来回摆动的范围</span><br><span class="hljs-string">        :return:返回一个字典trackArray对应轨迹数组，P对应贝塞尔曲线的影响点</span><br><span class="hljs-string">        &#x27;&#x27;&#x27;</span><br>        s = []<br>        fun = self.simulation(start, end, le, deviation, bias)<br>        w = fun[<span class="hljs-string">&#x27;P&#x27;</span>]<br>        fun = fun[<span class="hljs-string">&quot;equation&quot;</span>]<br>        <span class="hljs-keyword">if</span> cbb != <span class="hljs-number">0</span>:<br>            numberListOfcbb = <span class="hljs-built_in">round</span>(numberList * <span class="hljs-number">0.2</span> / (cbb + <span class="hljs-number">1</span>))<br>            numberList -= (numberListOfcbb * (cbb + <span class="hljs-number">1</span>))<br><br>            xTrackArray = self._<span class="hljs-built_in">type</span>(<span class="hljs-built_in">type</span>, [start[<span class="hljs-number">0</span>], end[<span class="hljs-number">0</span>]], numberList)<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> xTrackArray:<br>                s.append([i, fun(i)])<br>            dq = yhh / cbb<br>            kg = <span class="hljs-number">0</span><br>            ends = np.copy(end)<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(cbb):<br>                <span class="hljs-keyword">if</span> kg == <span class="hljs-number">0</span>:<br>                    d = np.array([end[<span class="hljs-number">0</span>] + (yhh - dq * i),<br>                                  ((end[<span class="hljs-number">1</span>] - start[<span class="hljs-number">1</span>]) / (end[<span class="hljs-number">0</span>] - start[<span class="hljs-number">0</span>])) * (end[<span class="hljs-number">0</span>] + (yhh - dq * i)) + (<br>                                          end[<span class="hljs-number">1</span>] - ((end[<span class="hljs-number">1</span>] - start[<span class="hljs-number">1</span>]) / (end[<span class="hljs-number">0</span>] - start[<span class="hljs-number">0</span>])) * end[<span class="hljs-number">0</span>])])<br>                    kg = <span class="hljs-number">1</span><br>                <span class="hljs-keyword">else</span>:<br>                    d = np.array([end[<span class="hljs-number">0</span>] - (yhh - dq * i),<br>                                  ((end[<span class="hljs-number">1</span>] - start[<span class="hljs-number">1</span>]) / (end[<span class="hljs-number">0</span>] - start[<span class="hljs-number">0</span>])) * (end[<span class="hljs-number">0</span>] - (yhh - dq * i)) + (<br>                                          end[<span class="hljs-number">1</span>] - ((end[<span class="hljs-number">1</span>] - start[<span class="hljs-number">1</span>]) / (end[<span class="hljs-number">0</span>] - start[<span class="hljs-number">0</span>])) * end[<span class="hljs-number">0</span>])])<br>                    kg = <span class="hljs-number">0</span><br>                <span class="hljs-built_in">print</span>(d)<br>                y = self.trackArray(ends, d, numberListOfcbb, le=<span class="hljs-number">2</span>, deviation=<span class="hljs-number">0</span>, bias=<span class="hljs-number">0.5</span>, <span class="hljs-built_in">type</span>=<span class="hljs-number">0</span>, cbb=<span class="hljs-number">0</span>, yhh=<span class="hljs-number">10</span>)<br>                s += <span class="hljs-built_in">list</span>(y[<span class="hljs-string">&#x27;trackArray&#x27;</span>])<br>                ends = d<br>            y = self.trackArray(ends, end, numberListOfcbb, le=<span class="hljs-number">2</span>, deviation=<span class="hljs-number">0</span>, bias=<span class="hljs-number">0.5</span>, <span class="hljs-built_in">type</span>=<span class="hljs-number">0</span>, cbb=<span class="hljs-number">0</span>, yhh=<span class="hljs-number">10</span>)<br>            s += <span class="hljs-built_in">list</span>(y[<span class="hljs-string">&#x27;trackArray&#x27;</span>])<br><br>        <span class="hljs-keyword">else</span>:<br>            xTrackArray = self._<span class="hljs-built_in">type</span>(<span class="hljs-built_in">type</span>, [start[<span class="hljs-number">0</span>], end[<span class="hljs-number">0</span>]], numberList)<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> xTrackArray:<br>                s.append([i, fun(i)])<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;trackArray&quot;</span>: np.array(s), <span class="hljs-string">&quot;P&quot;</span>: w&#125;<br><br></code></pre></td></tr></table></figure><p><a href="https://github.com/2833844911/gurs">参考链接</a><br>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><h3 id="3-随机生成"><a href="#3-随机生成" class="headerlink" title="3. 随机生成"></a>3. 随机生成</h3><p>适用平台:</p><pre><code class="hljs">-某音PC-某书PC</code></pre><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">test_random_sliding_track</span>(<span class="hljs-params">distance, tip_y</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    随机生成滑动轨迹二维数组</span><br><span class="hljs-string">    :param distance: 距离</span><br><span class="hljs-string">    :param tip_y: 接口中 y参数</span><br><span class="hljs-string">    :return:</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    all_array = []<br>    time_random = <span class="hljs-built_in">int</span>(random.uniform(<span class="hljs-number">8</span>, <span class="hljs-number">15</span>))<br>    x_random = <span class="hljs-built_in">int</span>(random.uniform(<span class="hljs-number">1</span>, <span class="hljs-number">3</span>))<br>    start_time = <span class="hljs-built_in">int</span>(random.uniform(<span class="hljs-number">10</span>, <span class="hljs-number">15</span>))<br>    start_x = <span class="hljs-number">1</span><br>    start_array = [start_x, tip_y, start_time]<br>    <span class="hljs-comment"># 生成的长度</span><br>    <span class="hljs-comment"># arr_length = math.ceil(distance / 4) - 1</span><br>    all_array.append(start_array)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(distance):<br>        sec_x = start_x + x_random<br>        sec_time = start_time + time_random<br>        <span class="hljs-keyword">if</span> sec_x &gt; distance:<br>            <span class="hljs-keyword">break</span><br>        all_array.append([sec_x, tip_y, sec_time])<br>        start_x = sec_x<br>        start_time = sec_time<br>    <span class="hljs-comment"># 检查最后一位是否等于distance</span><br>    last_array = all_array[-<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">if</span> last_array[<span class="hljs-number">0</span>] != distance:<br>        all_array.append(<br>            [distance, tip_y, last_array[<span class="hljs-number">2</span>] + time_random]<br>        )<br>    <span class="hljs-comment"># 暂停成功率高</span><br>    <span class="hljs-comment"># time.sleep(last_array[-1] / 1000)</span><br>    <span class="hljs-keyword">return</span> all_array<br><br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>轨迹生成</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>去除控制流平坦化</title>
    <link href="/posts/110c381a/"/>
    <url>/posts/110c381a/</url>
    
    <content type="html"><![CDATA[<h2 id="AST去除控制流平坦化"><a href="#AST去除控制流平坦化" class="headerlink" title="AST去除控制流平坦化"></a>AST去除控制流平坦化</h2><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">const</span> parser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/parser&quot;</span>);<br><span class="hljs-keyword">const</span> traverse = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/traverse&quot;</span>).<span class="hljs-property">default</span>;<br><span class="hljs-keyword">const</span> t = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/types&quot;</span>);<br><span class="hljs-keyword">const</span> generator = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/generator&quot;</span>).<span class="hljs-property">default</span>;<br><br><br>encodeFile = <span class="hljs-string">&quot;./sourceCode.js&quot;</span>;<br>decodeFile = <span class="hljs-string">&quot;./result.js&quot;</span>;<br><br><span class="hljs-keyword">let</span> sourceCode = fs.<span class="hljs-title function_">readFileSync</span>(encodeFile, &#123;<span class="hljs-attr">encoding</span>: <span class="hljs-string">&quot;utf-8&quot;</span>&#125;);<br><br><span class="hljs-keyword">const</span> ast = parser.<span class="hljs-title function_">parse</span>(sourceCode);<br><br><span class="hljs-keyword">const</span> compactSwitch = &#123;<br><br>    <span class="hljs-title class_">ForStatement</span>(path) &#123;<br>        <span class="hljs-keyword">let</span> &#123;init, test, update, body&#125; = path.<span class="hljs-property">node</span>;<br>        <span class="hljs-keyword">if</span> (!t.<span class="hljs-title function_">isVariableDeclaration</span>(init) ||<br>            !t.<span class="hljs-title function_">isBinaryExpression</span>(test) ||<br>            update != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (!body.<span class="hljs-property">body</span> || body.<span class="hljs-property">body</span>.<span class="hljs-property">length</span> != <span class="hljs-number">2</span>) <span class="hljs-keyword">return</span>;<br><br>        <span class="hljs-keyword">if</span> (!t.<span class="hljs-title function_">isVariableDeclaration</span>(body.<span class="hljs-property">body</span>[<span class="hljs-number">0</span>]) ||<br>            !t.<span class="hljs-title function_">isSwitchStatement</span>(body.<span class="hljs-property">body</span>[<span class="hljs-number">1</span>])) &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">let</span> switchNode = [];<br><br>        <span class="hljs-keyword">let</span> switchId = init.<span class="hljs-property">declarations</span>[<span class="hljs-number">0</span>].<span class="hljs-property">id</span>;<br>        <span class="hljs-keyword">let</span> shiftValue = <span class="hljs-number">5</span>;<br>        <span class="hljs-keyword">let</span> cr = <span class="hljs-number">0</span>, kr = <span class="hljs-number">0</span>, or = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">let</span> cases = body.<span class="hljs-property">body</span>[<span class="hljs-number">1</span>].<span class="hljs-property">cases</span>;<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> <span class="hljs-title class_">SwitchCase</span> <span class="hljs-keyword">of</span> cases) &#123;<br>            <span class="hljs-keyword">let</span> &#123;test, consequent&#125; = <span class="hljs-title class_">SwitchCase</span>;<br>            cr = test.<span class="hljs-property">value</span>;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;cr&quot;</span>, cr)<br>            <span class="hljs-keyword">if</span> (consequent.<span class="hljs-property">length</span> == <span class="hljs-number">2</span> &amp;&amp; t.<span class="hljs-title function_">isSwitchStatement</span>(consequent[<span class="hljs-number">0</span>])) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> <span class="hljs-title class_">SwitchCase</span> <span class="hljs-keyword">of</span> consequent[<span class="hljs-number">0</span>].<span class="hljs-property">cases</span>) &#123;<br>                    <span class="hljs-keyword">let</span> &#123;test, consequent&#125; = <span class="hljs-title class_">SwitchCase</span>;<br>                    kr = test.<span class="hljs-property">value</span>;<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;kr&quot;</span>, kr)<br>                    <span class="hljs-keyword">let</span> value = cr + (kr &lt;&lt; shiftValue);<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;value&quot;</span>, value)<br>                    <span class="hljs-keyword">let</span> newNode = t.<span class="hljs-title class_">SwitchCase</span>(t.<span class="hljs-title function_">valueToNode</span>(value), consequent);<br>                    switchNode.<span class="hljs-title function_">push</span>(newNode);<br>                &#125;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">let</span> value = cr;<br>                <span class="hljs-keyword">let</span> newNode = t.<span class="hljs-title class_">SwitchCase</span>(t.<span class="hljs-title function_">valueToNode</span>(value), consequent);<br>                switchNode.<span class="hljs-title function_">push</span>(newNode);<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (switchNode.<span class="hljs-property">length</span> &gt; <span class="hljs-number">0</span>) &#123;<br>            switchNode = t.<span class="hljs-title class_">SwitchStatement</span>(switchId, switchNode);<br>            body.<span class="hljs-property">body</span> = [switchNode];<br>        &#125;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-title function_">traverse</span>(ast, compactSwitch);<br><br><br><span class="hljs-keyword">let</span> &#123;code&#125; = <span class="hljs-title function_">generator</span>(ast, opts = &#123;<span class="hljs-attr">jsescOption</span>: &#123;<span class="hljs-string">&quot;minimal&quot;</span>: <span class="hljs-literal">true</span>&#125;&#125;);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(code)<br>fs.<span class="hljs-title function_">writeFile</span>(decodeFile, code, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>&#125;);<br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>AST还原</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AST</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>去除逗号表达式</title>
    <link href="/posts/61524743/"/>
    <url>/posts/61524743/</url>
    
    <content type="html"><![CDATA[<h2 id="AST去除逗号表达式"><a href="#AST去除逗号表达式" class="headerlink" title="AST去除逗号表达式"></a>AST去除逗号表达式</h2><p><strong>exp</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">a=<span class="hljs-number">1</span>,<br>b=<span class="hljs-number">2</span>,<br>c=<span class="hljs-number">3</span>;<br><span class="hljs-comment">// 还原后</span><br>a=<span class="hljs-number">1</span>;<br>b=<span class="hljs-number">2</span>;<br>c=<span class="hljs-number">3</span>;<br></code></pre></td></tr></table></figure><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> parser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/parser&quot;</span>);<br><span class="hljs-keyword">const</span> traverse = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/traverse&quot;</span>).<span class="hljs-property">default</span>;<br><span class="hljs-keyword">const</span> t = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/types&quot;</span>);<br><span class="hljs-keyword">const</span> generator = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/generator&quot;</span>).<span class="hljs-property">default</span>;<br><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-comment">//将源代码解析为AST</span><br>encodeFile = <span class="hljs-string">&quot;./sourcrCode.js&quot;</span>;<br>decodeFile = <span class="hljs-string">&quot;./result.js&quot;</span>;<br><span class="hljs-keyword">let</span> sourceCode = fs.<span class="hljs-title function_">readFileSync</span>(encodeFile, &#123;<span class="hljs-attr">encoding</span>: <span class="hljs-string">&quot;utf-8&quot;</span>&#125;);<br><span class="hljs-keyword">const</span> ast = parser.<span class="hljs-title function_">parse</span>(sourceCode);<br><span class="hljs-title function_">traverse</span>(ast, &#123;<br>    <span class="hljs-title class_">ExpressionStatement</span>(path) &#123;<br>        <span class="hljs-keyword">let</span> &#123;expression&#125; = path.<span class="hljs-property">node</span>;<br>        <span class="hljs-keyword">if</span> (!t.<span class="hljs-title function_">isSequenceExpression</span>(expression)) <span class="hljs-keyword">return</span>;<br>        <span class="hljs-keyword">let</span> body = [];<br>        expression.<span class="hljs-property">expressions</span>.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">express</span> =&gt;</span> &#123;<br>            body.<span class="hljs-title function_">push</span>(t.<span class="hljs-title function_">expressionStatement</span>(express))<br>        &#125;)<br>        path.<span class="hljs-title function_">replaceInline</span>(body)<br>    &#125;<br>&#125;)<br><br><span class="hljs-keyword">let</span> &#123;code&#125; = <span class="hljs-title function_">generator</span>(ast, opts = &#123;<span class="hljs-string">&quot;compact&quot;</span>: <span class="hljs-literal">false</span>&#125;);<br><br>fs.<span class="hljs-title function_">writeFile</span>(decodeFile, code, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>&#125;);<br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>AST还原</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AST</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>三目运算符还原</title>
    <link href="/posts/79820d1b/"/>
    <url>/posts/79820d1b/</url>
    
    <content type="html"><![CDATA[<h2 id="AST三目运算符还原"><a href="#AST三目运算符还原" class="headerlink" title="AST三目运算符还原"></a>AST三目运算符还原</h2><p><strong>exp</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> a = m ? <span class="hljs-number">11</span>:<span class="hljs-number">12</span>;<br><span class="hljs-comment">// 还原后</span><br><span class="hljs-keyword">if</span> (m)&#123;<br>    a = <span class="hljs-number">11</span><br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    a = <span class="hljs-number">12</span><br>&#125;<br><br></code></pre></td></tr></table></figure><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">const</span> parser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/parser&quot;</span>);<br><span class="hljs-keyword">const</span> traverse = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/traverse&quot;</span>).<span class="hljs-property">default</span>;<br><span class="hljs-keyword">const</span> t = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/types&quot;</span>);<br><span class="hljs-keyword">const</span> generator = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/generator&quot;</span>).<span class="hljs-property">default</span>;<br><span class="hljs-comment">//将源代码解析为AST</span><br>encodeFile = <span class="hljs-string">&quot;./sourcrCode.js&quot;</span>;<br>decodeFile = <span class="hljs-string">&quot;./result.js&quot;</span>;<br><br><span class="hljs-keyword">let</span> sourceCode = fs.<span class="hljs-title function_">readFileSync</span>(encodeFile, &#123;<span class="hljs-attr">encoding</span>: <span class="hljs-string">&quot;utf-8&quot;</span>&#125;);<br><span class="hljs-keyword">let</span> ast = parser.<span class="hljs-title function_">parse</span>(sourceCode);<br><span class="hljs-keyword">let</span> visitor = &#123;<br>    <span class="hljs-title class_">ConditionalExpression</span>(path) &#123;<br>        <span class="hljs-keyword">let</span> parentPath = path.<span class="hljs-property">parentPath</span>;<br>        <span class="hljs-keyword">if</span> (parentPath.<span class="hljs-title function_">isConditionalExpression</span>()) &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-comment">// a = m?12:11</span><br>        <span class="hljs-keyword">let</span> &#123;test, consequent, alternate&#125; = path.<span class="hljs-property">node</span>;<br><br>        <span class="hljs-keyword">if</span> (parentPath.<span class="hljs-title function_">isAssignmentExpression</span>()) &#123;<br>            <span class="hljs-comment">// let &#123;operator, left&#125; = parentPath.node;</span><br>            <span class="hljs-comment">// if (operator === &quot;=&quot;) &#123;</span><br>            <span class="hljs-comment">//     consequent = t.assignmentExpression(&quot;=&quot;, left, consequent);</span><br>            <span class="hljs-comment">//     alternate = t.assignmentExpression(&quot;=&quot;, left, alternate);</span><br>            <span class="hljs-comment">//     parentPath.replaceInline(t.conditionalExpression(test, consequent, alternate))</span><br>            <span class="hljs-comment">// &#125;</span><br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (!t.<span class="hljs-title function_">isExpressionStatement</span>(consequent)) &#123;<br>            consequent = t.<span class="hljs-title function_">expressionStatement</span>(consequent);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (!t.<span class="hljs-title function_">isExpressionStatement</span>(alternate)) &#123;<br>            alternate = t.<span class="hljs-title function_">expressionStatement</span>(alternate);<br>        &#125;<br>        <span class="hljs-keyword">const</span> ifStatement = t.<span class="hljs-title function_">ifStatement</span>(test, t.<span class="hljs-title function_">blockStatement</span>([consequent]), t.<span class="hljs-title function_">blockStatement</span>([alternate]))<br>        <span class="hljs-comment">// console.log(ifStatement)</span><br>        parentPath.<span class="hljs-title function_">replaceInline</span>(ifStatement);<br>    &#125;,<br>    <span class="hljs-title class_">StringLiteral</span>(path)&#123;<br>        <span class="hljs-keyword">let</span> extra = path.<span class="hljs-property">node</span>.<span class="hljs-property">extra</span><br>        <span class="hljs-keyword">if</span> (!extra)&#123;<br>            <span class="hljs-keyword">return</span><br>        &#125;<br>        <span class="hljs-keyword">let</span> value = extra.<span class="hljs-property">rawValue</span><br>        path.<span class="hljs-title function_">replaceInline</span>(t.<span class="hljs-title function_">stringLiteral</span>(value))<br>        <span class="hljs-comment">// path.replaceInline(t.stringLiteral(value.replace(/\&quot;/g, &quot;&quot;).replace(&quot;\\b&quot;, &quot;\b&quot;)</span><br>        <span class="hljs-comment">//     .replace(&quot;\\t&quot;, &quot;\t&quot;).replace(&quot;\\n&quot;, &quot;\n&quot;)</span><br>        <span class="hljs-comment">//     .replace(&quot;\\v&quot;, &quot;\v&quot;).replace(&quot;\\f&quot;, &quot;\f&quot;)</span><br>        <span class="hljs-comment">//     .replace(&quot;\\r&quot;, &quot;\r&quot;)))</span><br><br>    &#125;<br><br>&#125;<br><span class="hljs-title function_">traverse</span>(ast, visitor)<br><span class="hljs-keyword">let</span> &#123;code&#125; = <span class="hljs-title function_">generator</span>(ast, &#123; <span class="hljs-attr">jsescOption</span>: &#123; <span class="hljs-attr">sourceMaps</span>: <span class="hljs-literal">true</span> &#125; &#125;);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(code)<br>fs.<span class="hljs-title function_">writeFile</span>(decodeFile, code, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>&#125;);<br><br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>AST还原</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AST</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一键复制浏览器对象属性</title>
    <link href="/posts/88344df4/"/>
    <url>/posts/88344df4/</url>
    
    <content type="html"><![CDATA[<h2 id="一键复制浏览器对象属性"><a href="#一键复制浏览器对象属性" class="headerlink" title="一键复制浏览器对象属性"></a>一键复制浏览器对象属性</h2><p><code>**use: console运行如下代码**</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> getObjectValue = <span class="hljs-keyword">function</span> (<span class="hljs-params">obj</span>) &#123;<br>    <span class="hljs-keyword">let</span> newObj = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> key <span class="hljs-keyword">in</span> obj) &#123;<br>        <span class="hljs-keyword">if</span> (obj[key] == <span class="hljs-literal">null</span>) &#123;<br>            newObj[key] = <span class="hljs-literal">null</span>;<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> obj[key] == <span class="hljs-string">&quot;string&quot;</span> || <span class="hljs-keyword">typeof</span> obj[key] == <span class="hljs-string">&quot;number&quot;</span> || <span class="hljs-keyword">typeof</span> obj[key] == <span class="hljs-string">&quot;boolean&quot;</span>) &#123;<br>            newObj[key] = obj[key];<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> obj[key] == <span class="hljs-string">&quot;function&quot;</span>) &#123;<br>            newObj[key] = <span class="hljs-string">&quot;function&quot;</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(obj[key])) &#123;<br>            newObj[key] = obj[key];<br>        &#125;<br><br>    &#125;<br>    <span class="hljs-keyword">return</span> newObj;<br>&#125;<br><br><span class="hljs-comment">// obj -&gt; 指定浏览器对象 window/document/navigator</span><br><span class="hljs-keyword">let</span> newObj = <span class="hljs-title function_">getObjectValue</span>(navigator);<br><span class="hljs-title function_">copy</span>(newObj)<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>浏览器属性操作</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>浏览器环境补录</title>
    <link href="/posts/debddada/"/>
    <url>/posts/debddada/</url>
    
    <content type="html"><![CDATA[<h2 id="浏览器环境补录"><a href="#浏览器环境补录" class="headerlink" title="浏览器环境补录"></a>浏览器环境补录</h2><h3 id="1-JSDOM-模块"><a href="#1-JSDOM-模块" class="headerlink" title="1. JSDOM 模块"></a>1. JSDOM 模块</h3><p>安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">npm install jsdom -g<br></code></pre></td></tr></table></figure><p><strong>导入模块</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> jsdom = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;jsdom&quot;</span>);<br><span class="hljs-keyword">const</span> &#123;<span class="hljs-variable constant_">JSDOM</span>&#125; = jsdom;<br></code></pre></td></tr></table></figure><p><strong>基本用法</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> &#123;<span class="hljs-variable constant_">JSDOM</span>&#125; = jsdom;<br><span class="hljs-keyword">const</span> dom = <span class="hljs-keyword">new</span> <span class="hljs-title function_">JSDOM</span>(<span class="hljs-string">`&lt;!DOCTYPE html&gt;&lt;p&gt;Hello world&lt;/p&gt;&lt;script&gt;&lt;/script&gt;`</span>, &#123;<br>    <span class="hljs-attr">pretendToBeVisual</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-comment">// 隐藏</span><br>    <span class="hljs-attr">hidden</span>: <span class="hljs-literal">false</span>,<br>&#125;);<br><span class="hljs-keyword">var</span> dom_window = dom.<span class="hljs-property">window</span>;<br><span class="hljs-keyword">var</span> dom_document = dom_window.<span class="hljs-property">document</span>;<br><span class="hljs-keyword">var</span> dom_navigator = dom_window.<span class="hljs-property">navigator</span>;<br></code></pre></td></tr></table></figure><p><strong>自定义属性</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 设置document属性 自定义添加</span><br>dom_document[<span class="hljs-string">&quot;wasDiscarded&quot;</span>] = <span class="hljs-literal">false</span><br><span class="hljs-comment">// 构件JSDOM对象时自定义属性</span><br><span class="hljs-keyword">const</span> dom = <span class="hljs-keyword">new</span> <span class="hljs-title function_">JSDOM</span>(<span class="hljs-string">``</span>, &#123;<br>    <span class="hljs-attr">url</span>: <span class="hljs-string">&quot;https://example.org/&quot;</span>,<br>    <span class="hljs-attr">referrer</span>: <span class="hljs-string">&quot;https://example.com/&quot;</span>,<br>    <span class="hljs-attr">contentType</span>: <span class="hljs-string">&quot;text/html&quot;</span>,<br>    <span class="hljs-attr">includeNodeLocations</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">storageQuota</span>: <span class="hljs-number">10000000</span><br>&#125;);<br><span class="hljs-comment">//备注:</span><br><span class="hljs-comment">//url设置由window.location、document.URL和返回的值document.documentURI，并影响文档中相对 URL 的解析以及获取子资源时使用的同源限制和引用等内容。它默认为&quot;about:blank&quot;.</span><br><span class="hljs-comment">//referrer只影响从 读取的值document.referrer。它默认为没有引用者（反映为空字符串）。</span><br><span class="hljs-comment">//contentType影响从 读取的值document.contentType，以及文档的解析方式：作为 HTML 或作为 XML。不是HTML mime 类型或XML mime 类型的值将抛出。它默认为&quot;text/html&quot;. 如果存在charset参数，它会影响二进制数据处理。</span><br><span class="hljs-comment">//includeNodeLocations保留由 HTML 解析器生成的位置信息，允许您使用nodeLocation()方法（如下所述）检索它。它还确保在&lt;script&gt;元素内部运行的代码的异常堆栈跟踪中报告的行号是正确的。它默认false提供最佳性能，并且不能与 XML 内容类型一起使用，因为我们的 XML 解析器不支持位置信息。</span><br><span class="hljs-comment">//storageQuota是localStorage和使用的单独存储区域的最大代码单元大小sessionStorage。尝试存储大于此限制的数据将导致DOMException抛出 a。默认情况下，受 HTML 规范的启发，它设置为每个来源 5,000,000 个代码单元。</span><br></code></pre></td></tr></table></figure><h3 id="2-Proxy浏览器属性"><a href="#2-Proxy浏览器属性" class="headerlink" title="2. Proxy浏览器属性"></a>2. Proxy浏览器属性</h3><p>浏览器属性代理, 类似hook某个浏览器对象使用了哪个属性, 可将属性打印进行补录环境<br><code>备注: navigator, localStorage, location... 既可在浏览器中单独调用, 也可用window/document. ** 进行调用, 同样也需要加Proxy </code><br><strong>window</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">window</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(<span class="hljs-variable language_">window</span>, &#123;<br>    <span class="hljs-attr">get</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, receiver</span>) &#123;<br>        <span class="hljs-comment">// console.log(&quot;&#123;window&#125;Get&quot;, target, key, receiver)</span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;window&#125;Get&quot;</span>, <span class="hljs-string">&quot;key: &quot;</span>, key);<br>        <span class="hljs-keyword">if</span> (key === <span class="hljs-string">&quot;&quot;</span>) &#123;<br>            <span class="hljs-keyword">debugger</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> target[key];<br>    &#125;,<br>    <span class="hljs-attr">set</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, value, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;window&#125;Set&quot;</span>, <span class="hljs-string">&quot;key: &quot;</span>, key, <span class="hljs-string">&quot;value: &quot;</span>, value, <span class="hljs-string">&quot;receiver: &quot;</span>, receiver);<br>        <span class="hljs-comment">// debugger;</span><br>        target[key] = value;<br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p><strong>navigator</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">window</span>.<span class="hljs-property">navigator</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(<span class="hljs-variable language_">window</span>.<span class="hljs-property">navigator</span>, &#123;<br>    <span class="hljs-attr">get</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;navigator&#125;Get key: &quot;</span>, key)<br>        <span class="hljs-keyword">if</span> (key === <span class="hljs-string">&quot;hasOwnProperty&quot;</span>) &#123;<br>            <span class="hljs-keyword">debugger</span>;<br>        &#125;<br>        <span class="hljs-comment">// debugger;</span><br>        <span class="hljs-keyword">return</span> target[key];<br>    &#125;,<br>    <span class="hljs-attr">set</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, value, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;navigator&#125;Set key: &quot;</span>, key, target, value, receiver)<br>        <span class="hljs-comment">// debugger;</span><br>        target[key] = value;<br>    &#125;<br>&#125;);<br>navigator = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(navigator, &#123;<br>    <span class="hljs-attr">get</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;navigator&#125;Get key: &quot;</span>, key)<br>        <span class="hljs-keyword">if</span> (key === <span class="hljs-string">&quot;&quot;</span>) &#123;<br>            <span class="hljs-keyword">debugger</span>;<br>        &#125;<br>        <span class="hljs-comment">// debugger;</span><br>        <span class="hljs-keyword">return</span> target[key];<br>    &#125;,<br>    <span class="hljs-attr">set</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, value, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;navigator&#125;Set key: &quot;</span>, key, target, value, receiver)<br>        <span class="hljs-comment">// debugger;</span><br>        target[key] = value;<br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p><strong>document</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">document</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(<span class="hljs-variable language_">document</span>, &#123;<br>    <span class="hljs-attr">get</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;document&#125;Get key: &quot;</span>, key)<br>        <span class="hljs-keyword">if</span> (key === <span class="hljs-string">&quot;hasOwnProperty&quot;</span>) &#123;<br>            <span class="hljs-keyword">debugger</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> target[key];<br>    &#125;,<br>    <span class="hljs-attr">set</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, value, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;document&#125;Set key: &quot;</span>, key)<br>        <span class="hljs-comment">// debugger;</span><br>        target[key] = value;<br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p><strong>location</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(<span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>, &#123;<br>    <span class="hljs-attr">get</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;Location&#125;Get key: &quot;</span>, key)<br>        <span class="hljs-keyword">debugger</span>;<br>        <span class="hljs-keyword">return</span> target[key];<br>    &#125;,<br>    <span class="hljs-attr">set</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, value, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;Location&#125;Set key: &quot;</span>, key)<br>        <span class="hljs-comment">// debugger;</span><br>        target[key] = value;<br>    &#125;<br>&#125;);<br>location = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(location, &#123;<br>    <span class="hljs-attr">get</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;Location&#125;Get key: &quot;</span>, key)<br>        <span class="hljs-keyword">debugger</span>;<br>        <span class="hljs-keyword">return</span> target[key];<br>    &#125;,<br>    <span class="hljs-attr">set</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, value, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;Location&#125;Set key: &quot;</span>, key)<br>        <span class="hljs-comment">// debugger;</span><br>        target[key] = value;<br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p><strong>localStorage</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">window</span>.<span class="hljs-property">localStorage</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(<span class="hljs-variable language_">window</span>.<span class="hljs-property">localStorage</span>, &#123;<br>    <span class="hljs-attr">get</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;Location&#125;Get key: &quot;</span>, key)<br>        <span class="hljs-comment">// debugger;</span><br>        <span class="hljs-keyword">return</span> target[key];<br>    &#125;,<br>    <span class="hljs-attr">set</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, value, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;Location&#125;Set key: &quot;</span>, key)<br>        <span class="hljs-comment">// debugger;</span><br>        target[key] = value;<br>    &#125;<br>&#125;);<br><span class="hljs-variable language_">localStorage</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(<span class="hljs-variable language_">localStorage</span>, &#123;<br>    <span class="hljs-attr">get</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;Location&#125;Get key: &quot;</span>, key)<br>        <span class="hljs-comment">// debugger;</span><br>        <span class="hljs-keyword">return</span> target[key];<br>    &#125;,<br>    <span class="hljs-attr">set</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, value, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;Location&#125;Set key: &quot;</span>, key)<br>        <span class="hljs-comment">// debugger;</span><br>        target[key] = value;<br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p><strong>Object</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">window</span>.<span class="hljs-property">Object</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(<span class="hljs-variable language_">window</span>.<span class="hljs-property">Object</span>, &#123;<br>    <span class="hljs-attr">get</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;window.Object&#125;Get key: &quot;</span>, key)<br>        <span class="hljs-comment">// debugger;</span><br>        <span class="hljs-keyword">return</span> target[key];<br>    &#125;,<br>    <span class="hljs-attr">set</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, value, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;window.Object&#125;Set key: &quot;</span>, key)<br>        <span class="hljs-comment">// debugger;</span><br>        target[key] = value;<br>    &#125;<br>&#125;);<br><span class="hljs-title class_">Object</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(<span class="hljs-title class_">Object</span>, &#123;<br>    <span class="hljs-attr">get</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;Object&#125;Get key: &quot;</span>, key)<br>        <span class="hljs-comment">// debugger;</span><br>        <span class="hljs-keyword">return</span> target[key];<br>    &#125;,<br>    <span class="hljs-attr">set</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, value, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;Object&#125;Set key: &quot;</span>, key)<br>        <span class="hljs-comment">// debugger;</span><br>        target[key] = value;<br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>浏览器属性操作</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux基本命令</title>
    <link href="/posts/4b6ea061/"/>
    <url>/posts/4b6ea061/</url>
    
    <content type="html"><![CDATA[<h2 id="Linux-基本命令"><a href="#Linux-基本命令" class="headerlink" title="Linux 基本命令"></a>Linux 基本命令</h2><h3 id="1-关键词查询"><a href="#1-关键词查询" class="headerlink" title="1. 关键词查询"></a>1. 关键词查询</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">grep &quot;关键词&quot; 文件名称 |wc -l<br></code></pre></td></tr></table></figure><h3 id="2-查看进程"><a href="#2-查看进程" class="headerlink" title="2. 查看进程"></a>2. 查看进程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">ps -aux | grep `python3`<br></code></pre></td></tr></table></figure><h3 id="2-后台挂起启动python命令"><a href="#2-后台挂起启动python命令" class="headerlink" title="2. 后台挂起启动python命令"></a>2. 后台挂起启动python命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">nohup python3 text.py &gt; /dev/null 2&gt;&amp;1 &amp;<br></code></pre></td></tr></table></figure><h3 id="3-解压-压缩"><a href="#3-解压-压缩" class="headerlink" title="3. 解压 / 压缩"></a>3. 解压 / 压缩</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs commandline">zip:<br>    zip –r test.zip test // 将test压缩为test.zip<br>    unzip test.zip // 解压<br>tar:<br>    tar -czvf test.tar.gz test //将test压缩为test.tar.gz<br>    tar -xzvf test.tar.gz // 解压<br></code></pre></td></tr></table></figure><h3 id="4-文件操作"><a href="#4-文件操作" class="headerlink" title="4. 文件操作"></a>4. 文件操作</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs commandline">pwd //显示工作路径<br>ls -a //显示隐藏文件<br>mkdir 文件夹 // 创建文件夹<br>rm -rf 文件名 //删除文件<br>cp /dir1/ /dir2/  //复制文件到指定目录<br>touch newfile // 创建一个新空文件<br>cat|less|more // 查看文件<br>find  // 查找<br>    find . -name *.log 在当前目录查找以.log结尾的文件<br>    find / -name log 在根目录查找log命名的目录<br></code></pre></td></tr></table></figure><h3 id="5-查看日志"><a href="#5-查看日志" class="headerlink" title="5. 查看日志"></a>5. 查看日志</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs commandline">tail -f /data/.../***.log<br>```          <br><br>### 6. 查看网络状况<br>```commandline<br>netstat -apn // 查看所有端口<br>an //按一定顺序排列输出<br>p //表示显示哪个进程在调用<br></code></pre></td></tr></table></figure><h3 id="7-上传-下载"><a href="#7-上传-下载" class="headerlink" title="7. 上传 下载"></a>7. 上传 下载</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs commandline">rz // 上传<br>sz // 下载<br></code></pre></td></tr></table></figure><h2 id="8-防火墙"><a href="#8-防火墙" class="headerlink" title="8. 防火墙"></a>8. 防火墙</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs commandline">service iptables start // 开启防火墙<br>service iptables stop // 关闭防火墙<br><br>chkconfig iptables on // 永久开启<br>chkconfig iptables off // 永久关闭<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sha512</title>
    <link href="/posts/3a86036f/"/>
    <url>/posts/3a86036f/</url>
    
    <content type="html"><![CDATA[<h2 id="sha512加密源码"><a href="#sha512加密源码" class="headerlink" title="sha512加密源码"></a>sha512加密源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">a, m</span>) &#123;<br>    <span class="hljs-keyword">var</span> r = &#123;&#125;, f = r.<span class="hljs-property">lib</span> = &#123;&#125;, g = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, l = f.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                g.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-keyword">new</span> g;<br>                a &amp;&amp; b.<span class="hljs-title function_">mixIn</span>(a);<br>                b.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (b.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    b.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                b.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = b;<br>                b.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> b<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                a.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(a, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b <span class="hljs-keyword">in</span> a) a.<span class="hljs-title function_">hasOwnProperty</span>(b) &amp;&amp; (<span class="hljs-variable language_">this</span>[b] = a[b]);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = a.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        p = f.<span class="hljs-property">WordArray</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>                a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = a || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = b != m ? b : <span class="hljs-number">4</span> * a.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> (a || q).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, d = a.<span class="hljs-property">words</span>, c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (c % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; a; j++) b[c + j &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (d[j &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((c + j) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; d.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; a; j += <span class="hljs-number">4</span>) b[c + j &gt;&gt;&gt; <span class="hljs-number">2</span>] = d[j &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> b.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(b, d);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += a;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> n = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                n[b &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (b % <span class="hljs-number">4</span>);<br>                n.<span class="hljs-property">length</span> = a.<span class="hljs-title function_">ceil</span>(b / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = l.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">n</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], d = <span class="hljs-number">0</span>; d &lt; n; d += <span class="hljs-number">4</span>) b.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * a.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(b, n)<br>            &#125;<br>        &#125;), y = r.<span class="hljs-property">enc</span> = &#123;&#125;, q = y.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = [], c = <span class="hljs-number">0</span>; c &lt; a; c++) &#123;<br>                    <span class="hljs-keyword">var</span> j = b[c &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (c % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    d.<span class="hljs-title function_">push</span>((j &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    d.<span class="hljs-title function_">push</span>((j &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> d.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = a.<span class="hljs-property">length</span>, d = [], c = <span class="hljs-number">0</span>; c &lt; b; c += <span class="hljs-number">2</span>) d[c &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(a.<span class="hljs-title function_">substr</span>(c,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (c % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(d, b / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, G = y.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = [], c = <span class="hljs-number">0</span>; c &lt; a; c++) d.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(b[c &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (c % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> d.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = a.<span class="hljs-property">length</span>, d = [], c = <span class="hljs-number">0</span>; c &lt; b; c++) d[c &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a.<span class="hljs-title function_">charCodeAt</span>(c) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (c % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(d, b)<br>            &#125;<br>        &#125;, fa = y.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(G.<span class="hljs-title function_">stringify</span>(a)))<br>                &#125; <span class="hljs-keyword">catch</span> (b) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> G.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(a)))<br>            &#125;<br>        &#125;,<br>        h = f.<span class="hljs-property">BufferedBlockAlgorithm</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> p.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = fa.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">n</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, d = b.<span class="hljs-property">words</span>, c = b.<span class="hljs-property">sigBytes</span>, j = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, l = c / (<span class="hljs-number">4</span> * j),<br>                    l = n ? a.<span class="hljs-title function_">ceil</span>(l) : a.<span class="hljs-title function_">max</span>((l | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                n = l * j;<br>                c = a.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * n, c);<br>                <span class="hljs-keyword">if</span> (n) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> h = <span class="hljs-number">0</span>; h &lt; n; h += j) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(d, h);<br>                    h = d.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, n);<br>                    b.<span class="hljs-property">sigBytes</span> -= c<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(h, c)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = l.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    f.<span class="hljs-property">Hasher</span> = h.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: l.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            h.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, d</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(d)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, d</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> ga.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    d)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> ga = r.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> r<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> m = <span class="hljs-title class_">CryptoJS</span>, r = m.<span class="hljs-property">lib</span>, f = r.<span class="hljs-property">Base</span>, g = r.<span class="hljs-property">WordArray</span>, m = m.<span class="hljs-property">x64</span> = &#123;&#125;;<br>    m.<span class="hljs-property">Word</span> = f.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, p</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">high</span> = a;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">low</span> = p<br>        &#125;<br>    &#125;);<br>    m.<span class="hljs-property">WordArray</span> = f.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">l, p</span>) &#123;<br>            l = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = l || [];<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = p != a ? p : <span class="hljs-number">8</span> * l.<span class="hljs-property">length</span><br>        &#125;, <span class="hljs-attr">toX32</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, p = a.<span class="hljs-property">length</span>, f = [], q = <span class="hljs-number">0</span>; q &lt; p; q++) &#123;<br>                <span class="hljs-keyword">var</span> G = a[q];<br>                f.<span class="hljs-title function_">push</span>(G.<span class="hljs-property">high</span>);<br>                f.<span class="hljs-title function_">push</span>(G.<span class="hljs-property">low</span>)<br>            &#125;<br>            <span class="hljs-keyword">return</span> g.<span class="hljs-title function_">create</span>(f, <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>)<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = f.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>), p = a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>), g = p.<span class="hljs-property">length</span>, q = <span class="hljs-number">0</span>; q &lt; g; q++) p[q] = p[q].<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> a<br>        &#125;<br>    &#125;)<br>&#125;)();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">a</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">return</span> g.<span class="hljs-property">create</span>.<span class="hljs-title function_">apply</span>(g, <span class="hljs-variable language_">arguments</span>)<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> m = <span class="hljs-title class_">CryptoJS</span>, r = m.<span class="hljs-property">lib</span>.<span class="hljs-property">Hasher</span>, f = m.<span class="hljs-property">x64</span>, g = f.<span class="hljs-property">Word</span>, l = f.<span class="hljs-property">WordArray</span>, f = m.<span class="hljs-property">algo</span>, p = [<span class="hljs-title function_">a</span>(<span class="hljs-number">1116352408</span>, <span class="hljs-number">3609767458</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1899447441</span>, <span class="hljs-number">602891725</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3049323471</span>, <span class="hljs-number">3964484399</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3921009573</span>, <span class="hljs-number">2173295548</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">961987163</span>, <span class="hljs-number">4081628472</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1508970993</span>, <span class="hljs-number">3053834265</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2453635748</span>, <span class="hljs-number">2937671579</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2870763221</span>, <span class="hljs-number">3664609560</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3624381080</span>, <span class="hljs-number">2734883394</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">310598401</span>, <span class="hljs-number">1164996542</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">607225278</span>, <span class="hljs-number">1323610764</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1426881987</span>, <span class="hljs-number">3590304994</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1925078388</span>, <span class="hljs-number">4068182383</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2162078206</span>, <span class="hljs-number">991336113</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2614888103</span>, <span class="hljs-number">633803317</span>),<br>        <span class="hljs-title function_">a</span>(<span class="hljs-number">3248222580</span>, <span class="hljs-number">3479774868</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3835390401</span>, <span class="hljs-number">2666613458</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">4022224774</span>, <span class="hljs-number">944711139</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">264347078</span>, <span class="hljs-number">2341262773</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">604807628</span>, <span class="hljs-number">2007800933</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">770255983</span>, <span class="hljs-number">1495990901</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1249150122</span>, <span class="hljs-number">1856431235</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1555081692</span>, <span class="hljs-number">3175218132</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1996064986</span>, <span class="hljs-number">2198950837</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2554220882</span>, <span class="hljs-number">3999719339</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2821834349</span>, <span class="hljs-number">766784016</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2952996808</span>, <span class="hljs-number">2566594879</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3210313671</span>, <span class="hljs-number">3203337956</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3336571891</span>, <span class="hljs-number">1034457026</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3584528711</span>, <span class="hljs-number">2466948901</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">113926993</span>, <span class="hljs-number">3758326383</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">338241895</span>, <span class="hljs-number">168717936</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">666307205</span>, <span class="hljs-number">1188179964</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">773529912</span>, <span class="hljs-number">1546045734</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1294757372</span>, <span class="hljs-number">1522805485</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1396182291</span>,<br>            <span class="hljs-number">2643833823</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1695183700</span>, <span class="hljs-number">2343527390</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1986661051</span>, <span class="hljs-number">1014477480</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2177026350</span>, <span class="hljs-number">1206759142</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2456956037</span>, <span class="hljs-number">344077627</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2730485921</span>, <span class="hljs-number">1290863460</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2820302411</span>, <span class="hljs-number">3158454273</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3259730800</span>, <span class="hljs-number">3505952657</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3345764771</span>, <span class="hljs-number">106217008</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3516065817</span>, <span class="hljs-number">3606008344</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3600352804</span>, <span class="hljs-number">1432725776</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">4094571909</span>, <span class="hljs-number">1467031594</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">275423344</span>, <span class="hljs-number">851169720</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">430227734</span>, <span class="hljs-number">3100823752</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">506948616</span>, <span class="hljs-number">1363258195</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">659060556</span>, <span class="hljs-number">3750685593</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">883997877</span>, <span class="hljs-number">3785050280</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">958139571</span>, <span class="hljs-number">3318307427</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1322822218</span>, <span class="hljs-number">3812723403</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1537002063</span>, <span class="hljs-number">2003034995</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1747873779</span>, <span class="hljs-number">3602036899</span>),<br>        <span class="hljs-title function_">a</span>(<span class="hljs-number">1955562222</span>, <span class="hljs-number">1575990012</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2024104815</span>, <span class="hljs-number">1125592928</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2227730452</span>, <span class="hljs-number">2716904306</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2361852424</span>, <span class="hljs-number">442776044</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2428436474</span>, <span class="hljs-number">593698344</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2756734187</span>, <span class="hljs-number">3733110249</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3204031479</span>, <span class="hljs-number">2999351573</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3329325298</span>, <span class="hljs-number">3815920427</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3391569614</span>, <span class="hljs-number">3928383900</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3515267271</span>, <span class="hljs-number">566280711</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3940187606</span>, <span class="hljs-number">3454069534</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">4118630271</span>, <span class="hljs-number">4000239992</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">116418474</span>, <span class="hljs-number">1914138554</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">174292421</span>, <span class="hljs-number">2731055270</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">289380356</span>, <span class="hljs-number">3203993006</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">460393269</span>, <span class="hljs-number">320620315</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">685471733</span>, <span class="hljs-number">587496836</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">852142971</span>, <span class="hljs-number">1086792851</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1017036298</span>, <span class="hljs-number">365543100</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1126000580</span>, <span class="hljs-number">2618297676</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1288033470</span>,<br>            <span class="hljs-number">3409855158</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1501505948</span>, <span class="hljs-number">4234509866</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1607167915</span>, <span class="hljs-number">987167468</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1816402316</span>, <span class="hljs-number">1246189591</span>)], y = [], q = <span class="hljs-number">0</span>; <span class="hljs-number">80</span> &gt; q; q++) y[q] = <span class="hljs-title function_">a</span>();<br>    f = f.<span class="hljs-property">SHA512</span> = r.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> l.<span class="hljs-title function_">init</span>([<span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">1779033703</span>, <span class="hljs-number">4089235720</span>), <span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">3144134277</span>, <span class="hljs-number">2227873595</span>), <span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">1013904242</span>, <span class="hljs-number">4271175723</span>), <span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">2773480762</span>, <span class="hljs-number">1595750129</span>), <span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">1359893119</span>, <span class="hljs-number">2917565137</span>), <span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">2600822924</span>, <span class="hljs-number">725511199</span>), <span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">528734635</span>, <span class="hljs-number">4215389547</span>), <span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">1541459225</span>, <span class="hljs-number">327033209</span>)])<br>        &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> h = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>,<br>                     g = h[<span class="hljs-number">0</span>], n = h[<span class="hljs-number">1</span>], b = h[<span class="hljs-number">2</span>], d = h[<span class="hljs-number">3</span>], c = h[<span class="hljs-number">4</span>], j = h[<span class="hljs-number">5</span>], l = h[<span class="hljs-number">6</span>], h = h[<span class="hljs-number">7</span>], q = g.<span class="hljs-property">high</span>, m = g.<span class="hljs-property">low</span>, r = n.<span class="hljs-property">high</span>, N = n.<span class="hljs-property">low</span>, Z = b.<span class="hljs-property">high</span>, O = b.<span class="hljs-property">low</span>, $ = d.<span class="hljs-property">high</span>, P = d.<span class="hljs-property">low</span>, aa = c.<span class="hljs-property">high</span>, Q = c.<span class="hljs-property">low</span>, ba = j.<span class="hljs-property">high</span>, R = j.<span class="hljs-property">low</span>, ca = l.<span class="hljs-property">high</span>, S = l.<span class="hljs-property">low</span>, da = h.<span class="hljs-property">high</span>, T = h.<span class="hljs-property">low</span>, v = q, s = m, H = r, E = N, I = Z, F = O, W = $, J = P, w = aa, t = Q, U = ba, K = R, V = ca, L = S, X = da, M = T, x = <span class="hljs-number">0</span>; <span class="hljs-number">80</span> &gt; x; x++) &#123;<br>                <span class="hljs-keyword">var</span> B = y[x];<br>                <span class="hljs-keyword">if</span> (<span class="hljs-number">16</span> &gt; x) <span class="hljs-keyword">var</span> u = B.<span class="hljs-property">high</span> = a[f + <span class="hljs-number">2</span> * x] | <span class="hljs-number">0</span>, e = B.<span class="hljs-property">low</span> = a[f + <span class="hljs-number">2</span> * x + <span class="hljs-number">1</span>] | <span class="hljs-number">0</span>; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">var</span> u = y[x - <span class="hljs-number">15</span>], e = u.<span class="hljs-property">high</span>, z = u.<span class="hljs-property">low</span>, u = (e &gt;&gt;&gt; <span class="hljs-number">1</span> | z &lt;&lt; <span class="hljs-number">31</span>) ^ (e &gt;&gt;&gt; <span class="hljs-number">8</span> | z &lt;&lt; <span class="hljs-number">24</span>) ^ e &gt;&gt;&gt; <span class="hljs-number">7</span>,<br>                        z = (z &gt;&gt;&gt; <span class="hljs-number">1</span> | e &lt;&lt; <span class="hljs-number">31</span>) ^ (z &gt;&gt;&gt; <span class="hljs-number">8</span> | e &lt;&lt; <span class="hljs-number">24</span>) ^ (z &gt;&gt;&gt; <span class="hljs-number">7</span> | e &lt;&lt; <span class="hljs-number">25</span>), D = y[x - <span class="hljs-number">2</span>], e = D.<span class="hljs-property">high</span>,<br>                        k = D.<span class="hljs-property">low</span>, D = (e &gt;&gt;&gt; <span class="hljs-number">19</span> | k &lt;&lt; <span class="hljs-number">13</span>) ^<br>                        (e &lt;&lt; <span class="hljs-number">3</span> | k &gt;&gt;&gt; <span class="hljs-number">29</span>) ^ e &gt;&gt;&gt; <span class="hljs-number">6</span>,<br>                        k = (k &gt;&gt;&gt; <span class="hljs-number">19</span> | e &lt;&lt; <span class="hljs-number">13</span>) ^ (k &lt;&lt; <span class="hljs-number">3</span> | e &gt;&gt;&gt; <span class="hljs-number">29</span>) ^ (k &gt;&gt;&gt; <span class="hljs-number">6</span> | e &lt;&lt; <span class="hljs-number">26</span>), e = y[x - <span class="hljs-number">7</span>], Y = e.<span class="hljs-property">high</span>,<br>                        C = y[x - <span class="hljs-number">16</span>], A = C.<span class="hljs-property">high</span>, C = C.<span class="hljs-property">low</span>, e = z + e.<span class="hljs-property">low</span>, u = u + Y + (e &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; z &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>),<br>                        e = e + k, u = u + D + (e &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; k &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), e = e + C,<br>                        u = u + A + (e &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; C &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>                    B.<span class="hljs-property">high</span> = u;<br>                    B.<span class="hljs-property">low</span> = e<br>                &#125;<br>                <span class="hljs-keyword">var</span> Y = w &amp; U ^ ~w &amp; V, C = t &amp; K ^ ~t &amp; L, B = v &amp; H ^ v &amp; I ^ H &amp; I, ha = s &amp; E ^ s &amp; F ^ E &amp; F,<br>                    z = (v &gt;&gt;&gt; <span class="hljs-number">28</span> | s &lt;&lt; <span class="hljs-number">4</span>) ^ (v &lt;&lt; <span class="hljs-number">30</span> | s &gt;&gt;&gt; <span class="hljs-number">2</span>) ^ (v &lt;&lt; <span class="hljs-number">25</span> | s &gt;&gt;&gt; <span class="hljs-number">7</span>),<br>                    D = (s &gt;&gt;&gt; <span class="hljs-number">28</span> | v &lt;&lt; <span class="hljs-number">4</span>) ^ (s &lt;&lt; <span class="hljs-number">30</span> | v &gt;&gt;&gt; <span class="hljs-number">2</span>) ^ (s &lt;&lt; <span class="hljs-number">25</span> | v &gt;&gt;&gt; <span class="hljs-number">7</span>), k = p[x], ia = k.<span class="hljs-property">high</span>,<br>                    ea = k.<span class="hljs-property">low</span>, k = M + ((t &gt;&gt;&gt; <span class="hljs-number">14</span> | w &lt;&lt; <span class="hljs-number">18</span>) ^ (t &gt;&gt;&gt; <span class="hljs-number">18</span> | w &lt;&lt; <span class="hljs-number">14</span>) ^ (t &lt;&lt; <span class="hljs-number">23</span> | w &gt;&gt;&gt; <span class="hljs-number">9</span>)),<br>                    A = X + ((w &gt;&gt;&gt; <span class="hljs-number">14</span> | t &lt;&lt; <span class="hljs-number">18</span>) ^ (w &gt;&gt;&gt; <span class="hljs-number">18</span> | t &lt;&lt; <span class="hljs-number">14</span>) ^ (w &lt;&lt; <span class="hljs-number">23</span> | t &gt;&gt;&gt; <span class="hljs-number">9</span>)) + (k &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; M &gt;&gt;&gt;<br>                    <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), k = k + C, A = A + Y + (k &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; C &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), k = k + ea,<br>                    A = A + ia + (k &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; ea &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), k = k + e, A = A + u + (k &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; e &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>),<br>                    e = D + ha, B = z + B + (e &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; D &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), X = V, M = L, V = U, L = K, U = w, K = t,<br>                    t = J + k | <span class="hljs-number">0</span>, w = W + A + (t &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; J &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>) | <span class="hljs-number">0</span>, W = I, J = F, I = H, F = E, H = v,<br>                    E = s, s = k + e | <span class="hljs-number">0</span>, v = A + B + (s &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; k &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>) | <span class="hljs-number">0</span><br>            &#125;<br>            m = g.<span class="hljs-property">low</span> = m + s;<br>            g.<span class="hljs-property">high</span> = q + v + (m &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; s &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            N = n.<span class="hljs-property">low</span> = N + E;<br>            n.<span class="hljs-property">high</span> = r + H + (N &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; E &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            O = b.<span class="hljs-property">low</span> = O + F;<br>            b.<span class="hljs-property">high</span> = Z + I + (O &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; F &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            P = d.<span class="hljs-property">low</span> = P + J;<br>            d.<span class="hljs-property">high</span> = $ + W + (P &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; J &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            Q = c.<span class="hljs-property">low</span> = Q + t;<br>            c.<span class="hljs-property">high</span> = aa + w + (Q &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; t &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            R = j.<span class="hljs-property">low</span> = R + K;<br>            j.<span class="hljs-property">high</span> = ba + U + (R &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; K &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            S = l.<span class="hljs-property">low</span> =<br>                S + L;<br>            l.<span class="hljs-property">high</span> = ca + V + (S &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; L &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            T = h.<span class="hljs-property">low</span> = T + M;<br>            h.<span class="hljs-property">high</span> = da + X + (T &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; M &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>)<br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, f = a.<span class="hljs-property">words</span>, h = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, g = <span class="hljs-number">8</span> * a.<span class="hljs-property">sigBytes</span>;<br>            f[g &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - g % <span class="hljs-number">32</span>;<br>            f[(g + <span class="hljs-number">128</span> &gt;&gt;&gt; <span class="hljs-number">10</span> &lt;&lt; <span class="hljs-number">5</span>) + <span class="hljs-number">30</span>] = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(h / <span class="hljs-number">4294967296</span>);<br>            f[(g + <span class="hljs-number">128</span> &gt;&gt;&gt; <span class="hljs-number">10</span> &lt;&lt; <span class="hljs-number">5</span>) + <span class="hljs-number">31</span>] = h;<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * f.<span class="hljs-property">length</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">toX32</span>()<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = r.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            a.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> a<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">32</span><br>    &#125;);<br>    m.<span class="hljs-property">SHA512</span> = r.<span class="hljs-title function_">_createHelper</span>(f);<br>    m.<span class="hljs-property">HmacSHA512</span> = r.<span class="hljs-title function_">_createHmacHelper</span>(f)<br>&#125;)();<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sha384</title>
    <link href="/posts/6aa61a1/"/>
    <url>/posts/6aa61a1/</url>
    
    <content type="html"><![CDATA[<h2 id="sha384加密源码"><a href="#sha384加密源码" class="headerlink" title="sha384加密源码"></a>sha384加密源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">a, c</span>) &#123;<br>    <span class="hljs-keyword">var</span> d = &#123;&#125;, j = d.<span class="hljs-property">lib</span> = &#123;&#125;, f = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, m = j.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                f.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-keyword">new</span> f;<br>                a &amp;&amp; b.<span class="hljs-title function_">mixIn</span>(a);<br>                b.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (b.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    b.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                b.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = b;<br>                b.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> b<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                a.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(a, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b <span class="hljs-keyword">in</span> a) a.<span class="hljs-title function_">hasOwnProperty</span>(b) &amp;&amp; (<span class="hljs-variable language_">this</span>[b] = a[b]);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = a.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        B = j.<span class="hljs-property">WordArray</span> = m.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>                a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = a || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = b != c ? b : <span class="hljs-number">4</span> * a.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> (a || y).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, g = a.<span class="hljs-property">words</span>, e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (e % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> k = <span class="hljs-number">0</span>; k &lt; a; k++) b[e + k &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (g[k &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (k % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((e + k) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; g.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (k = <span class="hljs-number">0</span>; k &lt; a; k += <span class="hljs-number">4</span>) b[e + k &gt;&gt;&gt; <span class="hljs-number">2</span>] = g[k &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> b.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(b, g);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += a;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> n = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                n[b &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (b % <span class="hljs-number">4</span>);<br>                n.<span class="hljs-property">length</span> = a.<span class="hljs-title function_">ceil</span>(b / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = m.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">n</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], g = <span class="hljs-number">0</span>; g &lt; n; g += <span class="hljs-number">4</span>) b.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * a.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> B.<span class="hljs-title function_">init</span>(b, n)<br>            &#125;<br>        &#125;), v = d.<span class="hljs-property">enc</span> = &#123;&#125;, y = v.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> g = [], e = <span class="hljs-number">0</span>; e &lt; a; e++) &#123;<br>                    <span class="hljs-keyword">var</span> k = b[e &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (e % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    g.<span class="hljs-title function_">push</span>((k &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    g.<span class="hljs-title function_">push</span>((k &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> g.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = a.<span class="hljs-property">length</span>, g = [], e = <span class="hljs-number">0</span>; e &lt; b; e += <span class="hljs-number">2</span>) g[e &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(a.<span class="hljs-title function_">substr</span>(e,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (e % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> B.<span class="hljs-title function_">init</span>(g, b / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, F = v.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> g = [], e = <span class="hljs-number">0</span>; e &lt; a; e++) g.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(b[e &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (e % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> g.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = a.<span class="hljs-property">length</span>, g = [], e = <span class="hljs-number">0</span>; e &lt; b; e++) g[e &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a.<span class="hljs-title function_">charCodeAt</span>(e) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (e % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> B.<span class="hljs-title function_">init</span>(g, b)<br>            &#125;<br>        &#125;, ha = v.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(F.<span class="hljs-title function_">stringify</span>(a)))<br>                &#125; <span class="hljs-keyword">catch</span> (b) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> F.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(a)))<br>            &#125;<br>        &#125;,<br>        Z = j.<span class="hljs-property">BufferedBlockAlgorithm</span> = m.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> B.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = ha.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">n</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, g = b.<span class="hljs-property">words</span>, e = b.<span class="hljs-property">sigBytes</span>, k = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, m = e / (<span class="hljs-number">4</span> * k),<br>                    m = n ? a.<span class="hljs-title function_">ceil</span>(m) : a.<span class="hljs-title function_">max</span>((m | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                n = m * k;<br>                e = a.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * n, e);<br>                <span class="hljs-keyword">if</span> (n) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = <span class="hljs-number">0</span>; c &lt; n; c += k) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(g, c);<br>                    c = g.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, n);<br>                    b.<span class="hljs-property">sigBytes</span> -= e<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> B.<span class="hljs-title function_">init</span>(c, e)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = m.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    j.<span class="hljs-property">Hasher</span> = Z.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: m.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            Z.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, g</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(g)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, g</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> ia.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    g)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> ia = d.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> d<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> c = <span class="hljs-title class_">CryptoJS</span>, d = c.<span class="hljs-property">lib</span>, j = d.<span class="hljs-property">Base</span>, f = d.<span class="hljs-property">WordArray</span>, c = c.<span class="hljs-property">x64</span> = &#123;&#125;;<br>    c.<span class="hljs-property">Word</span> = j.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, c</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">high</span> = a;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">low</span> = c<br>        &#125;<br>    &#125;);<br>    c.<span class="hljs-property">WordArray</span> = j.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c, d</span>) &#123;<br>            c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = c || [];<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = d != a ? d : <span class="hljs-number">8</span> * c.<span class="hljs-property">length</span><br>        &#125;, <span class="hljs-attr">toX32</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, c = a.<span class="hljs-property">length</span>, d = [], j = <span class="hljs-number">0</span>; j &lt; c; j++) &#123;<br>                <span class="hljs-keyword">var</span> F = a[j];<br>                d.<span class="hljs-title function_">push</span>(F.<span class="hljs-property">high</span>);<br>                d.<span class="hljs-title function_">push</span>(F.<span class="hljs-property">low</span>)<br>            &#125;<br>            <span class="hljs-keyword">return</span> f.<span class="hljs-title function_">create</span>(d, <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>)<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = j.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>), c = a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>), d = c.<span class="hljs-property">length</span>, f = <span class="hljs-number">0</span>; f &lt; d; f++) c[f] = c[f].<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> a<br>        &#125;<br>    &#125;)<br>&#125;)();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">a</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">return</span> f.<span class="hljs-property">create</span>.<span class="hljs-title function_">apply</span>(f, <span class="hljs-variable language_">arguments</span>)<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = <span class="hljs-title class_">CryptoJS</span>, d = c.<span class="hljs-property">lib</span>.<span class="hljs-property">Hasher</span>, j = c.<span class="hljs-property">x64</span>, f = j.<span class="hljs-property">Word</span>, m = j.<span class="hljs-property">WordArray</span>, j = c.<span class="hljs-property">algo</span>, B = [<span class="hljs-title function_">a</span>(<span class="hljs-number">1116352408</span>, <span class="hljs-number">3609767458</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1899447441</span>, <span class="hljs-number">602891725</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3049323471</span>, <span class="hljs-number">3964484399</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3921009573</span>, <span class="hljs-number">2173295548</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">961987163</span>, <span class="hljs-number">4081628472</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1508970993</span>, <span class="hljs-number">3053834265</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2453635748</span>, <span class="hljs-number">2937671579</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2870763221</span>, <span class="hljs-number">3664609560</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3624381080</span>, <span class="hljs-number">2734883394</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">310598401</span>, <span class="hljs-number">1164996542</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">607225278</span>, <span class="hljs-number">1323610764</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1426881987</span>, <span class="hljs-number">3590304994</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1925078388</span>, <span class="hljs-number">4068182383</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2162078206</span>, <span class="hljs-number">991336113</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2614888103</span>, <span class="hljs-number">633803317</span>),<br>        <span class="hljs-title function_">a</span>(<span class="hljs-number">3248222580</span>, <span class="hljs-number">3479774868</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3835390401</span>, <span class="hljs-number">2666613458</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">4022224774</span>, <span class="hljs-number">944711139</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">264347078</span>, <span class="hljs-number">2341262773</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">604807628</span>, <span class="hljs-number">2007800933</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">770255983</span>, <span class="hljs-number">1495990901</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1249150122</span>, <span class="hljs-number">1856431235</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1555081692</span>, <span class="hljs-number">3175218132</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1996064986</span>, <span class="hljs-number">2198950837</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2554220882</span>, <span class="hljs-number">3999719339</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2821834349</span>, <span class="hljs-number">766784016</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2952996808</span>, <span class="hljs-number">2566594879</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3210313671</span>, <span class="hljs-number">3203337956</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3336571891</span>, <span class="hljs-number">1034457026</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3584528711</span>, <span class="hljs-number">2466948901</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">113926993</span>, <span class="hljs-number">3758326383</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">338241895</span>, <span class="hljs-number">168717936</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">666307205</span>, <span class="hljs-number">1188179964</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">773529912</span>, <span class="hljs-number">1546045734</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1294757372</span>, <span class="hljs-number">1522805485</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1396182291</span>,<br>            <span class="hljs-number">2643833823</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1695183700</span>, <span class="hljs-number">2343527390</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1986661051</span>, <span class="hljs-number">1014477480</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2177026350</span>, <span class="hljs-number">1206759142</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2456956037</span>, <span class="hljs-number">344077627</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2730485921</span>, <span class="hljs-number">1290863460</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2820302411</span>, <span class="hljs-number">3158454273</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3259730800</span>, <span class="hljs-number">3505952657</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3345764771</span>, <span class="hljs-number">106217008</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3516065817</span>, <span class="hljs-number">3606008344</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3600352804</span>, <span class="hljs-number">1432725776</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">4094571909</span>, <span class="hljs-number">1467031594</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">275423344</span>, <span class="hljs-number">851169720</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">430227734</span>, <span class="hljs-number">3100823752</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">506948616</span>, <span class="hljs-number">1363258195</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">659060556</span>, <span class="hljs-number">3750685593</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">883997877</span>, <span class="hljs-number">3785050280</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">958139571</span>, <span class="hljs-number">3318307427</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1322822218</span>, <span class="hljs-number">3812723403</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1537002063</span>, <span class="hljs-number">2003034995</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1747873779</span>, <span class="hljs-number">3602036899</span>),<br>        <span class="hljs-title function_">a</span>(<span class="hljs-number">1955562222</span>, <span class="hljs-number">1575990012</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2024104815</span>, <span class="hljs-number">1125592928</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2227730452</span>, <span class="hljs-number">2716904306</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2361852424</span>, <span class="hljs-number">442776044</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2428436474</span>, <span class="hljs-number">593698344</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2756734187</span>, <span class="hljs-number">3733110249</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3204031479</span>, <span class="hljs-number">2999351573</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3329325298</span>, <span class="hljs-number">3815920427</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3391569614</span>, <span class="hljs-number">3928383900</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3515267271</span>, <span class="hljs-number">566280711</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3940187606</span>, <span class="hljs-number">3454069534</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">4118630271</span>, <span class="hljs-number">4000239992</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">116418474</span>, <span class="hljs-number">1914138554</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">174292421</span>, <span class="hljs-number">2731055270</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">289380356</span>, <span class="hljs-number">3203993006</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">460393269</span>, <span class="hljs-number">320620315</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">685471733</span>, <span class="hljs-number">587496836</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">852142971</span>, <span class="hljs-number">1086792851</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1017036298</span>, <span class="hljs-number">365543100</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1126000580</span>, <span class="hljs-number">2618297676</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1288033470</span>,<br>            <span class="hljs-number">3409855158</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1501505948</span>, <span class="hljs-number">4234509866</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1607167915</span>, <span class="hljs-number">987167468</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1816402316</span>, <span class="hljs-number">1246189591</span>)], v = [], y = <span class="hljs-number">0</span>; <span class="hljs-number">80</span> &gt; y; y++) v[y] = <span class="hljs-title function_">a</span>();<br>    j = j.<span class="hljs-property">SHA512</span> = d.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> m.<span class="hljs-title function_">init</span>([<span class="hljs-keyword">new</span> f.<span class="hljs-title function_">init</span>(<span class="hljs-number">1779033703</span>, <span class="hljs-number">4089235720</span>), <span class="hljs-keyword">new</span> f.<span class="hljs-title function_">init</span>(<span class="hljs-number">3144134277</span>, <span class="hljs-number">2227873595</span>), <span class="hljs-keyword">new</span> f.<span class="hljs-title function_">init</span>(<span class="hljs-number">1013904242</span>, <span class="hljs-number">4271175723</span>), <span class="hljs-keyword">new</span> f.<span class="hljs-title function_">init</span>(<span class="hljs-number">2773480762</span>, <span class="hljs-number">1595750129</span>), <span class="hljs-keyword">new</span> f.<span class="hljs-title function_">init</span>(<span class="hljs-number">1359893119</span>, <span class="hljs-number">2917565137</span>), <span class="hljs-keyword">new</span> f.<span class="hljs-title function_">init</span>(<span class="hljs-number">2600822924</span>, <span class="hljs-number">725511199</span>), <span class="hljs-keyword">new</span> f.<span class="hljs-title function_">init</span>(<span class="hljs-number">528734635</span>, <span class="hljs-number">4215389547</span>), <span class="hljs-keyword">new</span> f.<span class="hljs-title function_">init</span>(<span class="hljs-number">1541459225</span>, <span class="hljs-number">327033209</span>)])<br>        &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, c</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>,<br>                     f = d[<span class="hljs-number">0</span>], j = d[<span class="hljs-number">1</span>], b = d[<span class="hljs-number">2</span>], g = d[<span class="hljs-number">3</span>], e = d[<span class="hljs-number">4</span>], k = d[<span class="hljs-number">5</span>], m = d[<span class="hljs-number">6</span>], d = d[<span class="hljs-number">7</span>], y = f.<span class="hljs-property">high</span>, M = f.<span class="hljs-property">low</span>, $ = j.<span class="hljs-property">high</span>, N = j.<span class="hljs-property">low</span>, aa = b.<span class="hljs-property">high</span>, O = b.<span class="hljs-property">low</span>, ba = g.<span class="hljs-property">high</span>, P = g.<span class="hljs-property">low</span>, ca = e.<span class="hljs-property">high</span>, Q = e.<span class="hljs-property">low</span>, da = k.<span class="hljs-property">high</span>, R = k.<span class="hljs-property">low</span>, ea = m.<span class="hljs-property">high</span>, S = m.<span class="hljs-property">low</span>, fa = d.<span class="hljs-property">high</span>, T = d.<span class="hljs-property">low</span>, s = y, p = M, G = $, D = N, H = aa, E = O, W = ba, I = P, t = ca, q = Q, U = da, J = R, V = ea, K = S, X = fa, L = T, u = <span class="hljs-number">0</span>; <span class="hljs-number">80</span> &gt; u; u++) &#123;<br>                <span class="hljs-keyword">var</span> z = v[u];<br>                <span class="hljs-keyword">if</span> (<span class="hljs-number">16</span> &gt; u) <span class="hljs-keyword">var</span> r = z.<span class="hljs-property">high</span> = a[c + <span class="hljs-number">2</span> * u] | <span class="hljs-number">0</span>, h = z.<span class="hljs-property">low</span> = a[c + <span class="hljs-number">2</span> * u + <span class="hljs-number">1</span>] | <span class="hljs-number">0</span>; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">var</span> r = v[u - <span class="hljs-number">15</span>], h = r.<span class="hljs-property">high</span>, w = r.<span class="hljs-property">low</span>, r = (h &gt;&gt;&gt; <span class="hljs-number">1</span> | w &lt;&lt; <span class="hljs-number">31</span>) ^ (h &gt;&gt;&gt; <span class="hljs-number">8</span> | w &lt;&lt; <span class="hljs-number">24</span>) ^ h &gt;&gt;&gt; <span class="hljs-number">7</span>,<br>                        w = (w &gt;&gt;&gt; <span class="hljs-number">1</span> | h &lt;&lt; <span class="hljs-number">31</span>) ^ (w &gt;&gt;&gt; <span class="hljs-number">8</span> | h &lt;&lt; <span class="hljs-number">24</span>) ^ (w &gt;&gt;&gt; <span class="hljs-number">7</span> | h &lt;&lt; <span class="hljs-number">25</span>), C = v[u - <span class="hljs-number">2</span>], h = C.<span class="hljs-property">high</span>,<br>                        l = C.<span class="hljs-property">low</span>, C = (h &gt;&gt;&gt; <span class="hljs-number">19</span> | l &lt;&lt;<br>                            <span class="hljs-number">13</span>) ^ (h &lt;&lt; <span class="hljs-number">3</span> | l &gt;&gt;&gt; <span class="hljs-number">29</span>) ^ h &gt;&gt;&gt; <span class="hljs-number">6</span>,<br>                        l = (l &gt;&gt;&gt; <span class="hljs-number">19</span> | h &lt;&lt; <span class="hljs-number">13</span>) ^ (l &lt;&lt; <span class="hljs-number">3</span> | h &gt;&gt;&gt; <span class="hljs-number">29</span>) ^ (l &gt;&gt;&gt; <span class="hljs-number">6</span> | h &lt;&lt; <span class="hljs-number">26</span>), h = v[u - <span class="hljs-number">7</span>], Y = h.<span class="hljs-property">high</span>,<br>                        A = v[u - <span class="hljs-number">16</span>], x = A.<span class="hljs-property">high</span>, A = A.<span class="hljs-property">low</span>, h = w + h.<span class="hljs-property">low</span>, r = r + Y + (h &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; w &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>),<br>                        h = h + l, r = r + C + (h &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; l &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), h = h + A,<br>                        r = r + x + (h &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; A &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>                    z.<span class="hljs-property">high</span> = r;<br>                    z.<span class="hljs-property">low</span> = h<br>                &#125;<br>                <span class="hljs-keyword">var</span> Y = t &amp; U ^ ~t &amp; V, A = q &amp; J ^ ~q &amp; K, z = s &amp; G ^ s &amp; H ^ G &amp; H, ja = p &amp; D ^ p &amp; E ^ D &amp; E,<br>                    w = (s &gt;&gt;&gt; <span class="hljs-number">28</span> | p &lt;&lt; <span class="hljs-number">4</span>) ^ (s &lt;&lt; <span class="hljs-number">30</span> | p &gt;&gt;&gt; <span class="hljs-number">2</span>) ^ (s &lt;&lt; <span class="hljs-number">25</span> | p &gt;&gt;&gt; <span class="hljs-number">7</span>),<br>                    C = (p &gt;&gt;&gt; <span class="hljs-number">28</span> | s &lt;&lt; <span class="hljs-number">4</span>) ^ (p &lt;&lt; <span class="hljs-number">30</span> | s &gt;&gt;&gt; <span class="hljs-number">2</span>) ^ (p &lt;&lt; <span class="hljs-number">25</span> | s &gt;&gt;&gt; <span class="hljs-number">7</span>), l = B[u], ka = l.<span class="hljs-property">high</span>,<br>                    ga = l.<span class="hljs-property">low</span>, l = L + ((q &gt;&gt;&gt; <span class="hljs-number">14</span> | t &lt;&lt; <span class="hljs-number">18</span>) ^ (q &gt;&gt;&gt; <span class="hljs-number">18</span> | t &lt;&lt; <span class="hljs-number">14</span>) ^ (q &lt;&lt; <span class="hljs-number">23</span> | t &gt;&gt;&gt; <span class="hljs-number">9</span>)),<br>                    x = X + ((t &gt;&gt;&gt; <span class="hljs-number">14</span> | q &lt;&lt; <span class="hljs-number">18</span>) ^ (t &gt;&gt;&gt; <span class="hljs-number">18</span> | q &lt;&lt; <span class="hljs-number">14</span>) ^ (t &lt;&lt; <span class="hljs-number">23</span> | q &gt;&gt;&gt; <span class="hljs-number">9</span>)) + (l &gt;&gt;&gt; <span class="hljs-number">0</span> &lt;<br>                    L &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), l = l + A, x = x + Y + (l &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; A &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), l = l + ga,<br>                    x = x + ka + (l &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; ga &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), l = l + h, x = x + r + (l &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; h &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>),<br>                    h = C + ja, z = w + z + (h &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; C &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), X = V, L = K, V = U, K = J, U = t, J = q,<br>                    q = I + l | <span class="hljs-number">0</span>, t = W + x + (q &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; I &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>) | <span class="hljs-number">0</span>, W = H, I = E, H = G, E = D, G = s,<br>                    D = p, p = l + h | <span class="hljs-number">0</span>, s = x + z + (p &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; l &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>) | <span class="hljs-number">0</span><br>            &#125;<br>            M = f.<span class="hljs-property">low</span> = M + p;<br>            f.<span class="hljs-property">high</span> = y + s + (M &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; p &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            N = j.<span class="hljs-property">low</span> = N + D;<br>            j.<span class="hljs-property">high</span> = $ + G + (N &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; D &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            O = b.<span class="hljs-property">low</span> = O + E;<br>            b.<span class="hljs-property">high</span> = aa + H + (O &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; E &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            P = g.<span class="hljs-property">low</span> = P + I;<br>            g.<span class="hljs-property">high</span> = ba + W + (P &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; I &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            Q = e.<span class="hljs-property">low</span> = Q + q;<br>            e.<span class="hljs-property">high</span> = ca + t + (Q &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; q &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            R = k.<span class="hljs-property">low</span> = R + J;<br>            k.<span class="hljs-property">high</span> = da + U + (R &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; J &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            S = m.<span class="hljs-property">low</span> = S + K;<br>            m.<span class="hljs-property">high</span> = ea + V + (S &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; K &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            T = d.<span class="hljs-property">low</span> = T + L;<br>            d.<span class="hljs-property">high</span> = fa + X + (T &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; L &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>)<br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, c = a.<span class="hljs-property">words</span>, d = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, f = <span class="hljs-number">8</span> * a.<span class="hljs-property">sigBytes</span>;<br>            c[f &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - f % <span class="hljs-number">32</span>;<br>            c[(f + <span class="hljs-number">128</span> &gt;&gt;&gt; <span class="hljs-number">10</span> &lt;&lt; <span class="hljs-number">5</span>) + <span class="hljs-number">30</span>] = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(d / <span class="hljs-number">4294967296</span>);<br>            c[(f + <span class="hljs-number">128</span> &gt;&gt;&gt; <span class="hljs-number">10</span> &lt;&lt; <span class="hljs-number">5</span>) + <span class="hljs-number">31</span>] = d;<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * c.<span class="hljs-property">length</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">toX32</span>()<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = d.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            a.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> a<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">32</span><br>    &#125;);<br>    c.<span class="hljs-property">SHA512</span> = d.<span class="hljs-title function_">_createHelper</span>(j);<br>    c.<span class="hljs-property">HmacSHA512</span> = d.<span class="hljs-title function_">_createHmacHelper</span>(j)<br>&#125;)();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> a = <span class="hljs-title class_">CryptoJS</span>, c = a.<span class="hljs-property">x64</span>, d = c.<span class="hljs-property">Word</span>, j = c.<span class="hljs-property">WordArray</span>, c = a.<span class="hljs-property">algo</span>, f = c.<span class="hljs-property">SHA512</span>, c = c.<span class="hljs-property">SHA384</span> = f.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> j.<span class="hljs-title function_">init</span>([<span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(<span class="hljs-number">3418070365</span>, <span class="hljs-number">3238371032</span>), <span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(<span class="hljs-number">1654270250</span>, <span class="hljs-number">914150663</span>), <span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(<span class="hljs-number">2438529370</span>, <span class="hljs-number">812702999</span>), <span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(<span class="hljs-number">355462360</span>, <span class="hljs-number">4144912697</span>), <span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(<span class="hljs-number">1731405415</span>, <span class="hljs-number">4290775857</span>), <span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(<span class="hljs-number">2394180231</span>, <span class="hljs-number">1750603025</span>), <span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(<span class="hljs-number">3675008525</span>, <span class="hljs-number">1694076839</span>), <span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(<span class="hljs-number">1203062813</span>, <span class="hljs-number">3204075428</span>)])<br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = f.<span class="hljs-property">_doFinalize</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            a.<span class="hljs-property">sigBytes</span> -= <span class="hljs-number">16</span>;<br>            <span class="hljs-keyword">return</span> a<br>        &#125;<br>    &#125;);<br>    a.<span class="hljs-property">SHA384</span> =<br>        f.<span class="hljs-title function_">_createHelper</span>(c);<br>    a.<span class="hljs-property">HmacSHA384</span> = f.<span class="hljs-title function_">_createHmacHelper</span>(c)<br>&#125;)();<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sha256</title>
    <link href="/posts/5cc814f7/"/>
    <url>/posts/5cc814f7/</url>
    
    <content type="html"><![CDATA[<h2 id="sha256加密源码"><a href="#sha256加密源码" class="headerlink" title="sha256加密源码"></a>sha256加密源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">h, s</span>) &#123;<br>    <span class="hljs-keyword">var</span> f = &#123;&#125;, t = f.<span class="hljs-property">lib</span> = &#123;&#125;, g = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, j = t.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                g.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-keyword">new</span> g;<br>                a &amp;&amp; c.<span class="hljs-title function_">mixIn</span>(a);<br>                c.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (c.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    c.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                c.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = c;<br>                c.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> c<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                a.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(a, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c <span class="hljs-keyword">in</span> a) a.<span class="hljs-title function_">hasOwnProperty</span>(c) &amp;&amp; (<span class="hljs-variable language_">this</span>[c] = a[c]);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = a.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        q = t.<span class="hljs-property">WordArray</span> = j.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, c</span>) &#123;<br>                a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = a || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = c != s ? c : <span class="hljs-number">4</span> * a.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> (a || u).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, d = a.<span class="hljs-property">words</span>, b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (b % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = <span class="hljs-number">0</span>; e &lt; a; e++) c[b + e &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (d[e &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (e % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((b + e) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; d.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (e = <span class="hljs-number">0</span>; e &lt; a; e += <span class="hljs-number">4</span>) c[b + e &gt;&gt;&gt; <span class="hljs-number">2</span>] = d[e &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> c.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(c, d);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += a;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a[c &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (c % <span class="hljs-number">4</span>);<br>                a.<span class="hljs-property">length</span> = h.<span class="hljs-title function_">ceil</span>(c / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = j.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = [], d = <span class="hljs-number">0</span>; d &lt; a; d += <span class="hljs-number">4</span>) c.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * h.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> q.<span class="hljs-title function_">init</span>(c, a)<br>            &#125;<br>        &#125;), v = f.<span class="hljs-property">enc</span> = &#123;&#125;, u = v.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = [], b = <span class="hljs-number">0</span>; b &lt; a; b++) &#123;<br>                    <span class="hljs-keyword">var</span> e = c[b &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (b % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    d.<span class="hljs-title function_">push</span>((e &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    d.<span class="hljs-title function_">push</span>((e &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> d.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">length</span>, d = [], b = <span class="hljs-number">0</span>; b &lt; c; b += <span class="hljs-number">2</span>) d[b &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(a.<span class="hljs-title function_">substr</span>(b,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (b % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> q.<span class="hljs-title function_">init</span>(d, c / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, k = v.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = [], b = <span class="hljs-number">0</span>; b &lt; a; b++) d.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(c[b &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (b % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> d.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">length</span>, d = [], b = <span class="hljs-number">0</span>; b &lt; c; b++) d[b &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a.<span class="hljs-title function_">charCodeAt</span>(b) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (b % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> q.<span class="hljs-title function_">init</span>(d, c)<br>            &#125;<br>        &#125;, l = v.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(k.<span class="hljs-title function_">stringify</span>(a)))<br>                &#125; <span class="hljs-keyword">catch</span> (c) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> k.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(a)))<br>            &#125;<br>        &#125;,<br>        x = t.<span class="hljs-property">BufferedBlockAlgorithm</span> = j.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> q.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = l.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, d = c.<span class="hljs-property">words</span>, b = c.<span class="hljs-property">sigBytes</span>, e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, f = b / (<span class="hljs-number">4</span> * e),<br>                    f = a ? h.<span class="hljs-title function_">ceil</span>(f) : h.<span class="hljs-title function_">max</span>((f | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                a = f * e;<br>                b = h.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * a, b);<br>                <span class="hljs-keyword">if</span> (a) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> m = <span class="hljs-number">0</span>; m &lt; a; m += e) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(d, m);<br>                    m = d.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, a);<br>                    c.<span class="hljs-property">sigBytes</span> -= b<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> q.<span class="hljs-title function_">init</span>(m, b)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = j.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    t.<span class="hljs-property">Hasher</span> = x.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: j.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            x.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">c, d</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(d)).<span class="hljs-title function_">finalize</span>(c)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">c, d</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> w.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    d)).<span class="hljs-title function_">finalize</span>(c)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> w = f.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> f<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">h</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> s = <span class="hljs-title class_">CryptoJS</span>, f = s.<span class="hljs-property">lib</span>, t = f.<span class="hljs-property">WordArray</span>, g = f.<span class="hljs-property">Hasher</span>, f = s.<span class="hljs-property">algo</span>, j = [], q = [], v = <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">4294967296</span> * (a - (a | <span class="hljs-number">0</span>)) | <span class="hljs-number">0</span><br>    &#125;, u = <span class="hljs-number">2</span>, k = <span class="hljs-number">0</span>; <span class="hljs-number">64</span> &gt; k;) &#123;<br>        <span class="hljs-keyword">var</span> l;<br>        <span class="hljs-attr">a</span>:&#123;<br>            l = u;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> x = h.<span class="hljs-title function_">sqrt</span>(l), w = <span class="hljs-number">2</span>; w &lt;= x; w++) <span class="hljs-keyword">if</span> (!(l % w)) &#123;<br>                l = !<span class="hljs-number">1</span>;<br>                <span class="hljs-keyword">break</span> a<br>            &#125;<br>            l = !<span class="hljs-number">0</span><br>        &#125;<br>        l &amp;&amp; (<span class="hljs-number">8</span> &gt; k &amp;&amp; (j[k] = <span class="hljs-title function_">v</span>(h.<span class="hljs-title function_">pow</span>(u, <span class="hljs-number">0.5</span>))), q[k] = <span class="hljs-title function_">v</span>(h.<span class="hljs-title function_">pow</span>(u, <span class="hljs-number">1</span> / <span class="hljs-number">3</span>)), k++);<br>        u++<br>    &#125;<br>    <span class="hljs-keyword">var</span> a = [], f = f.<span class="hljs-property">SHA256</span> = g.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> t.<span class="hljs-title function_">init</span>(j.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>))<br>        &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c, d</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>, e = b[<span class="hljs-number">0</span>], f = b[<span class="hljs-number">1</span>], m = b[<span class="hljs-number">2</span>], h = b[<span class="hljs-number">3</span>], p = b[<span class="hljs-number">4</span>], j = b[<span class="hljs-number">5</span>], k = b[<span class="hljs-number">6</span>], l = b[<span class="hljs-number">7</span>], n = <span class="hljs-number">0</span>; <span class="hljs-number">64</span> &gt; n; n++) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-number">16</span> &gt; n) a[n] =<br>                    c[d + n] | <span class="hljs-number">0</span>; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">var</span> r = a[n - <span class="hljs-number">15</span>], g = a[n - <span class="hljs-number">2</span>];<br>                    a[n] = ((r &lt;&lt; <span class="hljs-number">25</span> | r &gt;&gt;&gt; <span class="hljs-number">7</span>) ^ (r &lt;&lt; <span class="hljs-number">14</span> | r &gt;&gt;&gt; <span class="hljs-number">18</span>) ^ r &gt;&gt;&gt; <span class="hljs-number">3</span>) + a[n - <span class="hljs-number">7</span>] + ((g &lt;&lt; <span class="hljs-number">15</span> | g &gt;&gt;&gt; <span class="hljs-number">17</span>) ^ (g &lt;&lt; <span class="hljs-number">13</span> | g &gt;&gt;&gt; <span class="hljs-number">19</span>) ^ g &gt;&gt;&gt; <span class="hljs-number">10</span>) + a[n - <span class="hljs-number">16</span>]<br>                &#125;<br>                r = l + ((p &lt;&lt; <span class="hljs-number">26</span> | p &gt;&gt;&gt; <span class="hljs-number">6</span>) ^ (p &lt;&lt; <span class="hljs-number">21</span> | p &gt;&gt;&gt; <span class="hljs-number">11</span>) ^ (p &lt;&lt; <span class="hljs-number">7</span> | p &gt;&gt;&gt; <span class="hljs-number">25</span>)) + (p &amp; j ^ ~p &amp; k) + q[n] + a[n];<br>                g = ((e &lt;&lt; <span class="hljs-number">30</span> | e &gt;&gt;&gt; <span class="hljs-number">2</span>) ^ (e &lt;&lt; <span class="hljs-number">19</span> | e &gt;&gt;&gt; <span class="hljs-number">13</span>) ^ (e &lt;&lt; <span class="hljs-number">10</span> | e &gt;&gt;&gt; <span class="hljs-number">22</span>)) + (e &amp; f ^ e &amp; m ^ f &amp; m);<br>                l = k;<br>                k = j;<br>                j = p;<br>                p = h + r | <span class="hljs-number">0</span>;<br>                h = m;<br>                m = f;<br>                f = e;<br>                e = r + g | <span class="hljs-number">0</span><br>            &#125;<br>            b[<span class="hljs-number">0</span>] = b[<span class="hljs-number">0</span>] + e | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">1</span>] = b[<span class="hljs-number">1</span>] + f | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">2</span>] = b[<span class="hljs-number">2</span>] + m | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">3</span>] = b[<span class="hljs-number">3</span>] + h | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">4</span>] = b[<span class="hljs-number">4</span>] + p | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">5</span>] = b[<span class="hljs-number">5</span>] + j | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">6</span>] = b[<span class="hljs-number">6</span>] + k | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">7</span>] = b[<span class="hljs-number">7</span>] + l | <span class="hljs-number">0</span><br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, d = a.<span class="hljs-property">words</span>, b = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, e = <span class="hljs-number">8</span> * a.<span class="hljs-property">sigBytes</span>;<br>            d[e &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - e % <span class="hljs-number">32</span>;<br>            d[(e + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">14</span>] = h.<span class="hljs-title function_">floor</span>(b / <span class="hljs-number">4294967296</span>);<br>            d[(e + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">15</span>] = b;<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * d.<span class="hljs-property">length</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span><br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = g.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            a.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> a<br>        &#125;<br>    &#125;);<br>    s.<span class="hljs-property">SHA256</span> = g.<span class="hljs-title function_">_createHelper</span>(f);<br>    s.<span class="hljs-property">HmacSHA256</span> = g.<span class="hljs-title function_">_createHmacHelper</span>(f)<br>&#125;)(<span class="hljs-title class_">Math</span>);<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Sha3</title>
    <link href="/posts/7d0ede38/"/>
    <url>/posts/7d0ede38/</url>
    
    <content type="html"><![CDATA[<h2 id="Sha3加密源码"><a href="#Sha3加密源码" class="headerlink" title="Sha3加密源码"></a>Sha3加密源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">v, p</span>) &#123;<br>    <span class="hljs-keyword">var</span> d = &#123;&#125;, u = d.<span class="hljs-property">lib</span> = &#123;&#125;, r = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, f = u.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                r.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-keyword">new</span> r;<br>                a &amp;&amp; b.<span class="hljs-title function_">mixIn</span>(a);<br>                b.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (b.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    b.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                b.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = b;<br>                b.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> b<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                a.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(a, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b <span class="hljs-keyword">in</span> a) a.<span class="hljs-title function_">hasOwnProperty</span>(b) &amp;&amp; (<span class="hljs-variable language_">this</span>[b] = a[b]);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = a.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        s = u.<span class="hljs-property">WordArray</span> = f.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>                a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = a || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = b != p ? b : <span class="hljs-number">4</span> * a.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> (a || y).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, c = a.<span class="hljs-property">words</span>, j = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (j % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> n = <span class="hljs-number">0</span>; n &lt; a; n++) b[j + n &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (c[n &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (n % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((j + n) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; c.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (n = <span class="hljs-number">0</span>; n &lt; a; n += <span class="hljs-number">4</span>) b[j + n &gt;&gt;&gt; <span class="hljs-number">2</span>] = c[n &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> b.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(b, c);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += a;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a[b &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (b % <span class="hljs-number">4</span>);<br>                a.<span class="hljs-property">length</span> = v.<span class="hljs-title function_">ceil</span>(b / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = f.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], c = <span class="hljs-number">0</span>; c &lt; a; c += <span class="hljs-number">4</span>) b.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * v.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> s.<span class="hljs-title function_">init</span>(b, a)<br>            &#125;<br>        &#125;), x = d.<span class="hljs-property">enc</span> = &#123;&#125;, y = x.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = [], j = <span class="hljs-number">0</span>; j &lt; a; j++) &#123;<br>                    <span class="hljs-keyword">var</span> n = b[j &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    c.<span class="hljs-title function_">push</span>((n &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    c.<span class="hljs-title function_">push</span>((n &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> c.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = a.<span class="hljs-property">length</span>, c = [], j = <span class="hljs-number">0</span>; j &lt; b; j += <span class="hljs-number">2</span>) c[j &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(a.<span class="hljs-title function_">substr</span>(j,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (j % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> s.<span class="hljs-title function_">init</span>(c, b / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, e = x.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = [], j = <span class="hljs-number">0</span>; j &lt; a; j++) c.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(b[j &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> c.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = a.<span class="hljs-property">length</span>, c = [], j = <span class="hljs-number">0</span>; j &lt; b; j++) c[j &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a.<span class="hljs-title function_">charCodeAt</span>(j) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> s.<span class="hljs-title function_">init</span>(c, b)<br>            &#125;<br>        &#125;, q = x.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(e.<span class="hljs-title function_">stringify</span>(a)))<br>                &#125; <span class="hljs-keyword">catch</span> (b) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> e.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(a)))<br>            &#125;<br>        &#125;,<br>        t = u.<span class="hljs-property">BufferedBlockAlgorithm</span> = f.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> s.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = q.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, c = b.<span class="hljs-property">words</span>, j = b.<span class="hljs-property">sigBytes</span>, n = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, e = j / (<span class="hljs-number">4</span> * n),<br>                    e = a ? v.<span class="hljs-title function_">ceil</span>(e) : v.<span class="hljs-title function_">max</span>((e | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                a = e * n;<br>                j = v.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * a, j);<br>                <span class="hljs-keyword">if</span> (a) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> f = <span class="hljs-number">0</span>; f &lt; a; f += n) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(c, f);<br>                    f = c.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, a);<br>                    b.<span class="hljs-property">sigBytes</span> -= j<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> s.<span class="hljs-title function_">init</span>(f, j)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = f.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    u.<span class="hljs-property">Hasher</span> = t.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: f.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            t.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, c</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(c)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, c</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> w.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    c)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> w = d.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> d<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">v</span>) &#123;<br>    <span class="hljs-keyword">var</span> p = <span class="hljs-title class_">CryptoJS</span>, d = p.<span class="hljs-property">lib</span>, u = d.<span class="hljs-property">Base</span>, r = d.<span class="hljs-property">WordArray</span>, p = p.<span class="hljs-property">x64</span> = &#123;&#125;;<br>    p.<span class="hljs-property">Word</span> = u.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">f, s</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">high</span> = f;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">low</span> = s<br>        &#125;<br>    &#125;);<br>    p.<span class="hljs-property">WordArray</span> = u.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">f, s</span>) &#123;<br>            f = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = f || [];<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = s != v ? s : <span class="hljs-number">8</span> * f.<span class="hljs-property">length</span><br>        &#125;, <span class="hljs-attr">toX32</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> f = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, s = f.<span class="hljs-property">length</span>, d = [], p = <span class="hljs-number">0</span>; p &lt; s; p++) &#123;<br>                <span class="hljs-keyword">var</span> e = f[p];<br>                d.<span class="hljs-title function_">push</span>(e.<span class="hljs-property">high</span>);<br>                d.<span class="hljs-title function_">push</span>(e.<span class="hljs-property">low</span>)<br>            &#125;<br>            <span class="hljs-keyword">return</span> r.<span class="hljs-title function_">create</span>(d, <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>)<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> f = u.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>), d = f.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>), p = d.<span class="hljs-property">length</span>, r = <span class="hljs-number">0</span>; r &lt; p; r++) d[r] = d[r].<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> f<br>        &#125;<br>    &#125;)<br>&#125;)();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">v</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> p = <span class="hljs-title class_">CryptoJS</span>, d = p.<span class="hljs-property">lib</span>, u = d.<span class="hljs-property">WordArray</span>, r = d.<span class="hljs-property">Hasher</span>, f = p.<span class="hljs-property">x64</span>.<span class="hljs-property">Word</span>, d = p.<span class="hljs-property">algo</span>, s = [], x = [], y = [], e = <span class="hljs-number">1</span>, q = <span class="hljs-number">0</span>, t = <span class="hljs-number">0</span>; <span class="hljs-number">24</span> &gt; t; t++) &#123;<br>        s[e + <span class="hljs-number">5</span> * q] = (t + <span class="hljs-number">1</span>) * (t + <span class="hljs-number">2</span>) / <span class="hljs-number">2</span> % <span class="hljs-number">64</span>;<br>        <span class="hljs-keyword">var</span> w = (<span class="hljs-number">2</span> * e + <span class="hljs-number">3</span> * q) % <span class="hljs-number">5</span>, e = q % <span class="hljs-number">5</span>, q = w<br>    &#125;<br>    <span class="hljs-keyword">for</span> (e = <span class="hljs-number">0</span>; <span class="hljs-number">5</span> &gt; e; e++) <span class="hljs-keyword">for</span> (q = <span class="hljs-number">0</span>; <span class="hljs-number">5</span> &gt; q; q++) x[e + <span class="hljs-number">5</span> * q] = q + <span class="hljs-number">5</span> * ((<span class="hljs-number">2</span> * e + <span class="hljs-number">3</span> * q) % <span class="hljs-number">5</span>);<br>    e = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span> (q = <span class="hljs-number">0</span>; <span class="hljs-number">24</span> &gt; q; q++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = w = t = <span class="hljs-number">0</span>; <span class="hljs-number">7</span> &gt; a; a++) &#123;<br>            <span class="hljs-keyword">if</span> (e &amp; <span class="hljs-number">1</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = (<span class="hljs-number">1</span> &lt;&lt; a) - <span class="hljs-number">1</span>;<br>                <span class="hljs-number">32</span> &gt; b ? w ^= <span class="hljs-number">1</span> &lt;&lt; b : t ^= <span class="hljs-number">1</span> &lt;&lt; b - <span class="hljs-number">32</span><br>            &#125;<br>            e = e &amp; <span class="hljs-number">128</span> ? e &lt;&lt; <span class="hljs-number">1</span> ^ <span class="hljs-number">113</span> : e &lt;&lt; <span class="hljs-number">1</span><br>        &#125;<br>        y[q] = f.<span class="hljs-title function_">create</span>(t, w)<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = [], e = <span class="hljs-number">0</span>; <span class="hljs-number">25</span> &gt; e; e++) c[e] = f.<span class="hljs-title function_">create</span>();<br>    d = d.<span class="hljs-property">SHA3</span> = r.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: r.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">outputLength</span>: <span class="hljs-number">512</span>&#125;), <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_state</span> =<br>                [], b = <span class="hljs-number">0</span>; <span class="hljs-number">25</span> &gt; b; b++) a[b] = <span class="hljs-keyword">new</span> f.<span class="hljs-property">init</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span> = (<span class="hljs-number">1600</span> - <span class="hljs-number">2</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-property">outputLength</span>) / <span class="hljs-number">32</span><br>        &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_state</span>, f = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span> / <span class="hljs-number">2</span>, h = <span class="hljs-number">0</span>; h &lt; f; h++) &#123;<br>                <span class="hljs-keyword">var</span> l = a[b + <span class="hljs-number">2</span> * h], m = a[b + <span class="hljs-number">2</span> * h + <span class="hljs-number">1</span>],<br>                    l = (l &lt;&lt; <span class="hljs-number">8</span> | l &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (l &lt;&lt; <span class="hljs-number">24</span> | l &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>,<br>                    m = (m &lt;&lt; <span class="hljs-number">8</span> | m &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (m &lt;&lt; <span class="hljs-number">24</span> | m &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>, g = e[h];<br>                g.<span class="hljs-property">high</span> ^= m;<br>                g.<span class="hljs-property">low</span> ^= l<br>            &#125;<br>            <span class="hljs-keyword">for</span> (f = <span class="hljs-number">0</span>; <span class="hljs-number">24</span> &gt; f; f++) &#123;<br>                <span class="hljs-keyword">for</span> (h = <span class="hljs-number">0</span>; <span class="hljs-number">5</span> &gt; h; h++) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = l = <span class="hljs-number">0</span>, k = <span class="hljs-number">0</span>; <span class="hljs-number">5</span> &gt; k; k++) g = e[h + <span class="hljs-number">5</span> * k], l ^= g.<span class="hljs-property">high</span>, d ^= g.<span class="hljs-property">low</span>;<br>                    g = c[h];<br>                    g.<span class="hljs-property">high</span> = l;<br>                    g.<span class="hljs-property">low</span> = d<br>                &#125;<br>                <span class="hljs-keyword">for</span> (h = <span class="hljs-number">0</span>; <span class="hljs-number">5</span> &gt; h; h++) &#123;<br>                    g = c[(h + <span class="hljs-number">4</span>) % <span class="hljs-number">5</span>];<br>                    l = c[(h + <span class="hljs-number">1</span>) % <span class="hljs-number">5</span>];<br>                    m = l.<span class="hljs-property">high</span>;<br>                    k = l.<span class="hljs-property">low</span>;<br>                    l = g.<span class="hljs-property">high</span> ^<br>                        (m &lt;&lt; <span class="hljs-number">1</span> | k &gt;&gt;&gt; <span class="hljs-number">31</span>);<br>                    d = g.<span class="hljs-property">low</span> ^ (k &lt;&lt; <span class="hljs-number">1</span> | m &gt;&gt;&gt; <span class="hljs-number">31</span>);<br>                    <span class="hljs-keyword">for</span> (k = <span class="hljs-number">0</span>; <span class="hljs-number">5</span> &gt; k; k++) g = e[h + <span class="hljs-number">5</span> * k], g.<span class="hljs-property">high</span> ^= l, g.<span class="hljs-property">low</span> ^= d<br>                &#125;<br>                <span class="hljs-keyword">for</span> (m = <span class="hljs-number">1</span>; <span class="hljs-number">25</span> &gt; m; m++) g = e[m], h = g.<span class="hljs-property">high</span>, g = g.<span class="hljs-property">low</span>, k = s[m], <span class="hljs-number">32</span> &gt; k ? (l = h &lt;&lt; k | g &gt;&gt;&gt; <span class="hljs-number">32</span> - k, d = g &lt;&lt; k | h &gt;&gt;&gt; <span class="hljs-number">32</span> - k) : (l = g &lt;&lt; k - <span class="hljs-number">32</span> | h &gt;&gt;&gt; <span class="hljs-number">64</span> - k, d = h &lt;&lt; k - <span class="hljs-number">32</span> | g &gt;&gt;&gt; <span class="hljs-number">64</span> - k), g = c[x[m]], g.<span class="hljs-property">high</span> = l, g.<span class="hljs-property">low</span> = d;<br>                g = c[<span class="hljs-number">0</span>];<br>                h = e[<span class="hljs-number">0</span>];<br>                g.<span class="hljs-property">high</span> = h.<span class="hljs-property">high</span>;<br>                g.<span class="hljs-property">low</span> = h.<span class="hljs-property">low</span>;<br>                <span class="hljs-keyword">for</span> (h = <span class="hljs-number">0</span>; <span class="hljs-number">5</span> &gt; h; h++) <span class="hljs-keyword">for</span> (k = <span class="hljs-number">0</span>; <span class="hljs-number">5</span> &gt; k; k++) m = h + <span class="hljs-number">5</span> * k, g = e[m], l = c[m], m = c[(h + <span class="hljs-number">1</span>) % <span class="hljs-number">5</span> + <span class="hljs-number">5</span> * k], d = c[(h + <span class="hljs-number">2</span>) % <span class="hljs-number">5</span> + <span class="hljs-number">5</span> * k], g.<span class="hljs-property">high</span> = l.<span class="hljs-property">high</span> ^ ~m.<span class="hljs-property">high</span> &amp; d.<span class="hljs-property">high</span>, g.<span class="hljs-property">low</span> = l.<span class="hljs-property">low</span> ^ ~m.<span class="hljs-property">low</span> &amp; d.<span class="hljs-property">low</span>;<br>                g = e[<span class="hljs-number">0</span>];<br>                h = y[f];<br>                g.<span class="hljs-property">high</span> ^= h.<span class="hljs-property">high</span>;<br>                g.<span class="hljs-property">low</span> ^= h.<span class="hljs-property">low</span><br>            &#125;<br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>,<br>                b = a.<span class="hljs-property">words</span>, c = <span class="hljs-number">8</span> * a.<span class="hljs-property">sigBytes</span>, e = <span class="hljs-number">32</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>;<br>            b[c &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">24</span> - c % <span class="hljs-number">32</span>;<br>            b[(v.<span class="hljs-title function_">ceil</span>((c + <span class="hljs-number">1</span>) / e) * e &gt;&gt;&gt; <span class="hljs-number">5</span>) - <span class="hljs-number">1</span>] |= <span class="hljs-number">128</span>;<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * b.<span class="hljs-property">length</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_state</span>, b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-property">outputLength</span> / <span class="hljs-number">8</span>, c = b / <span class="hljs-number">8</span>, e = [], h = <span class="hljs-number">0</span>; h &lt; c; h++) &#123;<br>                <span class="hljs-keyword">var</span> d = a[h], f = d.<span class="hljs-property">high</span>, d = d.<span class="hljs-property">low</span>,<br>                    f = (f &lt;&lt; <span class="hljs-number">8</span> | f &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (f &lt;&lt; <span class="hljs-number">24</span> | f &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>,<br>                    d = (d &lt;&lt; <span class="hljs-number">8</span> | d &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (d &lt;&lt; <span class="hljs-number">24</span> | d &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>                e.<span class="hljs-title function_">push</span>(d);<br>                e.<span class="hljs-title function_">push</span>(f)<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> u.<span class="hljs-title function_">init</span>(e, b)<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = r.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>), b = a.<span class="hljs-property">_state</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_state</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>), c = <span class="hljs-number">0</span>; <span class="hljs-number">25</span> &gt; c; c++) b[c] = b[c].<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> a<br>        &#125;<br>    &#125;);<br>    p.<span class="hljs-property">SHA3</span> = r.<span class="hljs-title function_">_createHelper</span>(d);<br>    p.<span class="hljs-property">HmacSHA3</span> = r.<span class="hljs-title function_">_createHmacHelper</span>(d)<br>&#125;)(<span class="hljs-title class_">Math</span>);<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Sha1</title>
    <link href="/posts/9300bf14/"/>
    <url>/posts/9300bf14/</url>
    
    <content type="html"><![CDATA[<h2 id="Sha1加密源码"><a href="#Sha1加密源码" class="headerlink" title="Sha1加密源码"></a>Sha1加密源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">e, m</span>) &#123;<br>    <span class="hljs-keyword">var</span> p = &#123;&#125;, j = p.<span class="hljs-property">lib</span> = &#123;&#125;, l = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, f = j.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                l.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-keyword">new</span> l;<br>                a &amp;&amp; c.<span class="hljs-title function_">mixIn</span>(a);<br>                c.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (c.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    c.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                c.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = c;<br>                c.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> c<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                a.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(a, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c <span class="hljs-keyword">in</span> a) a.<span class="hljs-title function_">hasOwnProperty</span>(c) &amp;&amp; (<span class="hljs-variable language_">this</span>[c] = a[c]);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = a.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        n = j.<span class="hljs-property">WordArray</span> = f.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, c</span>) &#123;<br>                a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = a || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = c != m ? c : <span class="hljs-number">4</span> * a.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> (a || h).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, q = a.<span class="hljs-property">words</span>, d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (d % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">0</span>; b &lt; a; b++) c[d + b &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (q[b &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (b % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((d + b) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; q.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (b = <span class="hljs-number">0</span>; b &lt; a; b += <span class="hljs-number">4</span>) c[d + b &gt;&gt;&gt; <span class="hljs-number">2</span>] = q[b &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> c.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(c, q);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += a;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a[c &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (c % <span class="hljs-number">4</span>);<br>                a.<span class="hljs-property">length</span> = e.<span class="hljs-title function_">ceil</span>(c / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = f.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = [], b = <span class="hljs-number">0</span>; b &lt; a; b += <span class="hljs-number">4</span>) c.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * e.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> n.<span class="hljs-title function_">init</span>(c, a)<br>            &#125;<br>        &#125;), b = p.<span class="hljs-property">enc</span> = &#123;&#125;, h = b.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], d = <span class="hljs-number">0</span>; d &lt; a; d++) &#123;<br>                    <span class="hljs-keyword">var</span> f = c[d &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (d % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    b.<span class="hljs-title function_">push</span>((f &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    b.<span class="hljs-title function_">push</span>((f &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> b.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">length</span>, b = [], d = <span class="hljs-number">0</span>; d &lt; c; d += <span class="hljs-number">2</span>) b[d &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(a.<span class="hljs-title function_">substr</span>(d,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (d % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> n.<span class="hljs-title function_">init</span>(b, c / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, g = b.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], d = <span class="hljs-number">0</span>; d &lt; a; d++) b.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(c[d &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (d % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> b.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">length</span>, b = [], d = <span class="hljs-number">0</span>; d &lt; c; d++) b[d &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a.<span class="hljs-title function_">charCodeAt</span>(d) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (d % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> n.<span class="hljs-title function_">init</span>(b, c)<br>            &#125;<br>        &#125;, r = b.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(g.<span class="hljs-title function_">stringify</span>(a)))<br>                &#125; <span class="hljs-keyword">catch</span> (c) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> g.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(a)))<br>            &#125;<br>        &#125;,<br>        k = j.<span class="hljs-property">BufferedBlockAlgorithm</span> = f.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> n.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = r.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, b = c.<span class="hljs-property">words</span>, d = c.<span class="hljs-property">sigBytes</span>, f = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, h = d / (<span class="hljs-number">4</span> * f),<br>                    h = a ? e.<span class="hljs-title function_">ceil</span>(h) : e.<span class="hljs-title function_">max</span>((h | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                a = h * f;<br>                d = e.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * a, d);<br>                <span class="hljs-keyword">if</span> (a) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> g = <span class="hljs-number">0</span>; g &lt; a; g += f) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(b, g);<br>                    g = b.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, a);<br>                    c.<span class="hljs-property">sigBytes</span> -= d<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> n.<span class="hljs-title function_">init</span>(g, d)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = f.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    j.<span class="hljs-property">Hasher</span> = k.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: f.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            k.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">c, b</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(b)).<span class="hljs-title function_">finalize</span>(c)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, f</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> s.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    f)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> s = p.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> p<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> e = <span class="hljs-title class_">CryptoJS</span>, m = e.<span class="hljs-property">lib</span>, p = m.<span class="hljs-property">WordArray</span>, j = m.<span class="hljs-property">Hasher</span>, l = [], m = e.<span class="hljs-property">algo</span>.<span class="hljs-property">SHA1</span> = j.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>([<span class="hljs-number">1732584193</span>, <span class="hljs-number">4023233417</span>, <span class="hljs-number">2562383102</span>, <span class="hljs-number">271733878</span>, <span class="hljs-number">3285377520</span>])<br>        &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">f, n</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>, h = b[<span class="hljs-number">0</span>], g = b[<span class="hljs-number">1</span>], e = b[<span class="hljs-number">2</span>], k = b[<span class="hljs-number">3</span>], j = b[<span class="hljs-number">4</span>], a = <span class="hljs-number">0</span>; <span class="hljs-number">80</span> &gt; a; a++) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-number">16</span> &gt; a) l[a] = f[n + a] | <span class="hljs-number">0</span>; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">var</span> c = l[a - <span class="hljs-number">3</span>] ^ l[a - <span class="hljs-number">8</span>] ^ l[a - <span class="hljs-number">14</span>] ^ l[a - <span class="hljs-number">16</span>];<br>                    l[a] = c &lt;&lt; <span class="hljs-number">1</span> | c &gt;&gt;&gt; <span class="hljs-number">31</span><br>                &#125;<br>                c = (h &lt;&lt; <span class="hljs-number">5</span> | h &gt;&gt;&gt; <span class="hljs-number">27</span>) + j + l[a];<br>                c = <span class="hljs-number">20</span> &gt; a ? c + ((g &amp; e | ~g &amp; k) + <span class="hljs-number">1518500249</span>) : <span class="hljs-number">40</span> &gt; a ? c + ((g ^ e ^ k) + <span class="hljs-number">1859775393</span>) : <span class="hljs-number">60</span> &gt; a ? c + ((g &amp; e | g &amp; k | e &amp; k) - <span class="hljs-number">1894007588</span>) : c + ((g ^ e ^<br>                    k) - <span class="hljs-number">899497514</span>);<br>                j = k;<br>                k = e;<br>                e = g &lt;&lt; <span class="hljs-number">30</span> | g &gt;&gt;&gt; <span class="hljs-number">2</span>;<br>                g = h;<br>                h = c<br>            &#125;<br>            b[<span class="hljs-number">0</span>] = b[<span class="hljs-number">0</span>] + h | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">1</span>] = b[<span class="hljs-number">1</span>] + g | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">2</span>] = b[<span class="hljs-number">2</span>] + e | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">3</span>] = b[<span class="hljs-number">3</span>] + k | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">4</span>] = b[<span class="hljs-number">4</span>] + j | <span class="hljs-number">0</span><br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> f = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, e = f.<span class="hljs-property">words</span>, b = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, h = <span class="hljs-number">8</span> * f.<span class="hljs-property">sigBytes</span>;<br>            e[h &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - h % <span class="hljs-number">32</span>;<br>            e[(h + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">14</span>] = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(b / <span class="hljs-number">4294967296</span>);<br>            e[(h + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">15</span>] = b;<br>            f.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * e.<span class="hljs-property">length</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span><br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> e = j.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            e.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> e<br>        &#125;<br>    &#125;);<br>    e.<span class="hljs-property">SHA1</span> = j.<span class="hljs-title function_">_createHelper</span>(m);<br>    e.<span class="hljs-property">HmacSHA1</span> = j.<span class="hljs-title function_">_createHmacHelper</span>(m)<br>&#125;)();<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Rc4</title>
    <link href="/posts/ff1def1d/"/>
    <url>/posts/ff1def1d/</url>
    
    <content type="html"><![CDATA[<h2 id="Rc4加密源码"><a href="#Rc4加密源码" class="headerlink" title="Rc4加密源码"></a>Rc4加密源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">s, l</span>) &#123;<br>    <span class="hljs-keyword">var</span> e = &#123;&#125;, n = e.<span class="hljs-property">lib</span> = &#123;&#125;, p = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, b = n.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>                p.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-keyword">new</span> p;<br>                c &amp;&amp; a.<span class="hljs-title function_">mixIn</span>(c);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (a.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    a.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                a.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = a;<br>                a.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                c.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(c, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> c<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a <span class="hljs-keyword">in</span> c) c.<span class="hljs-title function_">hasOwnProperty</span>(a) &amp;&amp; (<span class="hljs-variable language_">this</span>[a] = c[a]);<br>                c.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = c.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        d = n.<span class="hljs-property">WordArray</span> = b.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c, a</span>) &#123;<br>                c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = c || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = a != l ? a : <span class="hljs-number">4</span> * c.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>                <span class="hljs-keyword">return</span> (c || q).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, m = c.<span class="hljs-property">words</span>, f = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                c = c.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (f % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> r = <span class="hljs-number">0</span>; r &lt; c; r++) a[f + r &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (m[r &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (r % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((f + r) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; m.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (r = <span class="hljs-number">0</span>; r &lt; c; r += <span class="hljs-number">4</span>) a[f + r &gt;&gt;&gt; <span class="hljs-number">2</span>] = m[r &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> a.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(a, m);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += c;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                c[a &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (a % <span class="hljs-number">4</span>);<br>                c.<span class="hljs-property">length</span> = s.<span class="hljs-title function_">ceil</span>(a / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> c = b.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                c.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> c<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = [], m = <span class="hljs-number">0</span>; m &lt; c; m += <span class="hljs-number">4</span>) a.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * s.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(a, c)<br>            &#125;<br>        &#125;), t = e.<span class="hljs-property">enc</span> = &#123;&#125;, q = t.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>                <span class="hljs-keyword">var</span> a = c.<span class="hljs-property">words</span>;<br>                c = c.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> m = [], f = <span class="hljs-number">0</span>; f &lt; c; f++) &#123;<br>                    <span class="hljs-keyword">var</span> r = a[f &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    m.<span class="hljs-title function_">push</span>((r &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    m.<span class="hljs-title function_">push</span>((r &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> m.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = c.<span class="hljs-property">length</span>, m = [], f = <span class="hljs-number">0</span>; f &lt; a; f += <span class="hljs-number">2</span>) m[f &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(c.<span class="hljs-title function_">substr</span>(f,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (f % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(m, a / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, a = t.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>                <span class="hljs-keyword">var</span> a = c.<span class="hljs-property">words</span>;<br>                c = c.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> m = [], f = <span class="hljs-number">0</span>; f &lt; c; f++) m.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(a[f &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> m.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = c.<span class="hljs-property">length</span>, m = [], f = <span class="hljs-number">0</span>; f &lt; a; f++) m[f &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (c.<span class="hljs-title function_">charCodeAt</span>(f) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(m, a)<br>            &#125;<br>        &#125;, v = t.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(a.<span class="hljs-title function_">stringify</span>(c)))<br>                &#125; <span class="hljs-keyword">catch</span> (u) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>                <span class="hljs-keyword">return</span> a.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(c)))<br>            &#125;<br>        &#125;,<br>        u = n.<span class="hljs-property">BufferedBlockAlgorithm</span> = b.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> d.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = v.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> u = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, m = u.<span class="hljs-property">words</span>, f = u.<span class="hljs-property">sigBytes</span>, r = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, e = f / (<span class="hljs-number">4</span> * r),<br>                    e = a ? s.<span class="hljs-title function_">ceil</span>(e) : s.<span class="hljs-title function_">max</span>((e | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                a = e * r;<br>                f = s.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * a, f);<br>                <span class="hljs-keyword">if</span> (a) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">0</span>; b &lt; a; b += r) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(m, b);<br>                    b = m.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, a);<br>                    u.<span class="hljs-property">sigBytes</span> -= f<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(b, f)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = b.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    n.<span class="hljs-property">Hasher</span> = u.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: b.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            u.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">u, m</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(m)).<span class="hljs-title function_">finalize</span>(u)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">u, m</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> w.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    m)).<span class="hljs-title function_">finalize</span>(u)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> w = e.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> e<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> s = <span class="hljs-title class_">CryptoJS</span>, l = s.<span class="hljs-property">lib</span>.<span class="hljs-property">WordArray</span>;<br>    s.<span class="hljs-property">enc</span>.<span class="hljs-property">Base64</span> = &#123;<br>        <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>            <span class="hljs-keyword">var</span> n = e.<span class="hljs-property">words</span>, l = e.<span class="hljs-property">sigBytes</span>, b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_map</span>;<br>            e.<span class="hljs-title function_">clamp</span>();<br>            e = [];<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = <span class="hljs-number">0</span>; d &lt; l; d += <span class="hljs-number">3</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = (n[d &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (d % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">16</span> | (n[d + <span class="hljs-number">1</span> &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((d + <span class="hljs-number">1</span>) % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">8</span> | n[d + <span class="hljs-number">2</span> &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((d + <span class="hljs-number">2</span>) % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>, q = <span class="hljs-number">0</span>; <span class="hljs-number">4</span> &gt; q &amp;&amp; d + <span class="hljs-number">0.75</span> * q &lt; l; q++) e.<span class="hljs-title function_">push</span>(b.<span class="hljs-title function_">charAt</span>(t &gt;&gt;&gt; <span class="hljs-number">6</span> * (<span class="hljs-number">3</span> - q) &amp; <span class="hljs-number">63</span>));<br>            <span class="hljs-keyword">if</span> (n = b.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">64</span>)) <span class="hljs-keyword">for</span> (; e.<span class="hljs-property">length</span> % <span class="hljs-number">4</span>;) e.<span class="hljs-title function_">push</span>(n);<br>            <span class="hljs-keyword">return</span> e.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>        &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>            <span class="hljs-keyword">var</span> n = e.<span class="hljs-property">length</span>, p = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_map</span>, b = p.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">64</span>);<br>            b &amp;&amp; (b = e.<span class="hljs-title function_">indexOf</span>(b), -<span class="hljs-number">1</span> != b &amp;&amp; (n = b));<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], d = <span class="hljs-number">0</span>, t = <span class="hljs-number">0</span>; t &lt;<br>            n; t++) <span class="hljs-keyword">if</span> (t % <span class="hljs-number">4</span>) &#123;<br>                <span class="hljs-keyword">var</span> q = p.<span class="hljs-title function_">indexOf</span>(e.<span class="hljs-title function_">charAt</span>(t - <span class="hljs-number">1</span>)) &lt;&lt; <span class="hljs-number">2</span> * (t % <span class="hljs-number">4</span>), a = p.<span class="hljs-title function_">indexOf</span>(e.<span class="hljs-title function_">charAt</span>(t)) &gt;&gt;&gt; <span class="hljs-number">6</span> - <span class="hljs-number">2</span> * (t % <span class="hljs-number">4</span>);<br>                b[d &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (q | a) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (d % <span class="hljs-number">4</span>);<br>                d++<br>            &#125;<br>            <span class="hljs-keyword">return</span> l.<span class="hljs-title function_">create</span>(b, d)<br>        &#125;, <span class="hljs-attr">_map</span>: <span class="hljs-string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span><br>    &#125;<br>&#125;)();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">s</span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">l</span>(<span class="hljs-params">a, b, c, e, m, f, r</span>) &#123;<br>        a = a + (b &amp; c | ~b &amp; e) + m + r;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; f | a &gt;&gt;&gt; <span class="hljs-number">32</span> - f) + b<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">e</span>(<span class="hljs-params">a, b, c, e, m, f, r</span>) &#123;<br>        a = a + (b &amp; e | c &amp; ~e) + m + r;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; f | a &gt;&gt;&gt; <span class="hljs-number">32</span> - f) + b<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">n</span>(<span class="hljs-params">a, b, c, e, m, f, r</span>) &#123;<br>        a = a + (b ^ c ^ e) + m + r;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; f | a &gt;&gt;&gt; <span class="hljs-number">32</span> - f) + b<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">p</span>(<span class="hljs-params">a, b, c, e, m, f, r</span>) &#123;<br>        a = a + (c ^ (b | ~e)) + m + r;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; f | a &gt;&gt;&gt; <span class="hljs-number">32</span> - f) + b<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-title class_">CryptoJS</span>, d = b.<span class="hljs-property">lib</span>, t = d.<span class="hljs-property">WordArray</span>, q = d.<span class="hljs-property">Hasher</span>, d = b.<span class="hljs-property">algo</span>, a = [], v = <span class="hljs-number">0</span>; <span class="hljs-number">64</span> &gt; v; v++) a[v] = <span class="hljs-number">4294967296</span> * s.<span class="hljs-title function_">abs</span>(s.<span class="hljs-title function_">sin</span>(v + <span class="hljs-number">1</span>)) | <span class="hljs-number">0</span>;<br>    d = d.<span class="hljs-property">MD5</span> = q.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> t.<span class="hljs-title function_">init</span>([<span class="hljs-number">1732584193</span>, <span class="hljs-number">4023233417</span>, <span class="hljs-number">2562383102</span>, <span class="hljs-number">271733878</span>])<br>        &#125;,<br>        <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, d</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = <span class="hljs-number">0</span>; <span class="hljs-number">16</span> &gt; c; c++) &#123;<br>                <span class="hljs-keyword">var</span> q = d + c, m = b[q];<br>                b[q] = (m &lt;&lt; <span class="hljs-number">8</span> | m &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (m &lt;&lt; <span class="hljs-number">24</span> | m &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span><br>            &#125;<br>            <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>, q = b[d + <span class="hljs-number">0</span>], m = b[d + <span class="hljs-number">1</span>], f = b[d + <span class="hljs-number">2</span>], r = b[d + <span class="hljs-number">3</span>], x = b[d + <span class="hljs-number">4</span>],<br>                t = b[d + <span class="hljs-number">5</span>], s = b[d + <span class="hljs-number">6</span>], v = b[d + <span class="hljs-number">7</span>], y = b[d + <span class="hljs-number">8</span>], z = b[d + <span class="hljs-number">9</span>], A = b[d + <span class="hljs-number">10</span>], B = b[d + <span class="hljs-number">11</span>],<br>                C = b[d + <span class="hljs-number">12</span>], D = b[d + <span class="hljs-number">13</span>], E = b[d + <span class="hljs-number">14</span>], F = b[d + <span class="hljs-number">15</span>], g = c[<span class="hljs-number">0</span>], h = c[<span class="hljs-number">1</span>], j = c[<span class="hljs-number">2</span>], k = c[<span class="hljs-number">3</span>],<br>                g = <span class="hljs-title function_">l</span>(g, h, j, k, q, <span class="hljs-number">7</span>, a[<span class="hljs-number">0</span>]), k = <span class="hljs-title function_">l</span>(k, g, h, j, m, <span class="hljs-number">12</span>, a[<span class="hljs-number">1</span>]), j = <span class="hljs-title function_">l</span>(j, k, g, h, f, <span class="hljs-number">17</span>, a[<span class="hljs-number">2</span>]),<br>                h = <span class="hljs-title function_">l</span>(h, j, k, g, r, <span class="hljs-number">22</span>, a[<span class="hljs-number">3</span>]), g = <span class="hljs-title function_">l</span>(g, h, j, k, x, <span class="hljs-number">7</span>, a[<span class="hljs-number">4</span>]), k = <span class="hljs-title function_">l</span>(k, g, h, j, t, <span class="hljs-number">12</span>, a[<span class="hljs-number">5</span>]),<br>                j = <span class="hljs-title function_">l</span>(j, k, g, h, s, <span class="hljs-number">17</span>, a[<span class="hljs-number">6</span>]), h = <span class="hljs-title function_">l</span>(h, j, k, g, v, <span class="hljs-number">22</span>, a[<span class="hljs-number">7</span>]),<br>                g = <span class="hljs-title function_">l</span>(g, h, j, k, y, <span class="hljs-number">7</span>, a[<span class="hljs-number">8</span>]), k = <span class="hljs-title function_">l</span>(k, g, h, j, z, <span class="hljs-number">12</span>, a[<span class="hljs-number">9</span>]), j = <span class="hljs-title function_">l</span>(j, k, g, h, A, <span class="hljs-number">17</span>, a[<span class="hljs-number">10</span>]),<br>                h = <span class="hljs-title function_">l</span>(h, j, k, g, B, <span class="hljs-number">22</span>, a[<span class="hljs-number">11</span>]), g = <span class="hljs-title function_">l</span>(g, h, j, k, C, <span class="hljs-number">7</span>, a[<span class="hljs-number">12</span>]), k = <span class="hljs-title function_">l</span>(k, g, h, j, D, <span class="hljs-number">12</span>, a[<span class="hljs-number">13</span>]),<br>                j = <span class="hljs-title function_">l</span>(j, k, g, h, E, <span class="hljs-number">17</span>, a[<span class="hljs-number">14</span>]), h = <span class="hljs-title function_">l</span>(h, j, k, g, F, <span class="hljs-number">22</span>, a[<span class="hljs-number">15</span>]), g = <span class="hljs-title function_">e</span>(g, h, j, k, m, <span class="hljs-number">5</span>, a[<span class="hljs-number">16</span>]),<br>                k = <span class="hljs-title function_">e</span>(k, g, h, j, s, <span class="hljs-number">9</span>, a[<span class="hljs-number">17</span>]), j = <span class="hljs-title function_">e</span>(j, k, g, h, B, <span class="hljs-number">14</span>, a[<span class="hljs-number">18</span>]), h = <span class="hljs-title function_">e</span>(h, j, k, g, q, <span class="hljs-number">20</span>, a[<span class="hljs-number">19</span>]),<br>                g = <span class="hljs-title function_">e</span>(g, h, j, k, t, <span class="hljs-number">5</span>, a[<span class="hljs-number">20</span>]), k = <span class="hljs-title function_">e</span>(k, g, h, j, A, <span class="hljs-number">9</span>, a[<span class="hljs-number">21</span>]), j = <span class="hljs-title function_">e</span>(j, k, g, h, F, <span class="hljs-number">14</span>, a[<span class="hljs-number">22</span>]),<br>                h = <span class="hljs-title function_">e</span>(h, j, k, g, x, <span class="hljs-number">20</span>, a[<span class="hljs-number">23</span>]), g = <span class="hljs-title function_">e</span>(g, h, j, k, z, <span class="hljs-number">5</span>, a[<span class="hljs-number">24</span>]), k = <span class="hljs-title function_">e</span>(k, g, h, j, E, <span class="hljs-number">9</span>, a[<span class="hljs-number">25</span>]),<br>                j = <span class="hljs-title function_">e</span>(j, k, g, h, r, <span class="hljs-number">14</span>, a[<span class="hljs-number">26</span>]), h = <span class="hljs-title function_">e</span>(h, j, k, g, y, <span class="hljs-number">20</span>, a[<span class="hljs-number">27</span>]), g = <span class="hljs-title function_">e</span>(g, h, j, k, D, <span class="hljs-number">5</span>, a[<span class="hljs-number">28</span>]),<br>                k = <span class="hljs-title function_">e</span>(k, g,<br>                    h, j, f, <span class="hljs-number">9</span>, a[<span class="hljs-number">29</span>]), j = <span class="hljs-title function_">e</span>(j, k, g, h, v, <span class="hljs-number">14</span>, a[<span class="hljs-number">30</span>]), h = <span class="hljs-title function_">e</span>(h, j, k, g, C, <span class="hljs-number">20</span>, a[<span class="hljs-number">31</span>]),<br>                g = <span class="hljs-title function_">n</span>(g, h, j, k, t, <span class="hljs-number">4</span>, a[<span class="hljs-number">32</span>]), k = <span class="hljs-title function_">n</span>(k, g, h, j, y, <span class="hljs-number">11</span>, a[<span class="hljs-number">33</span>]), j = <span class="hljs-title function_">n</span>(j, k, g, h, B, <span class="hljs-number">16</span>, a[<span class="hljs-number">34</span>]),<br>                h = <span class="hljs-title function_">n</span>(h, j, k, g, E, <span class="hljs-number">23</span>, a[<span class="hljs-number">35</span>]), g = <span class="hljs-title function_">n</span>(g, h, j, k, m, <span class="hljs-number">4</span>, a[<span class="hljs-number">36</span>]), k = <span class="hljs-title function_">n</span>(k, g, h, j, x, <span class="hljs-number">11</span>, a[<span class="hljs-number">37</span>]),<br>                j = <span class="hljs-title function_">n</span>(j, k, g, h, v, <span class="hljs-number">16</span>, a[<span class="hljs-number">38</span>]), h = <span class="hljs-title function_">n</span>(h, j, k, g, A, <span class="hljs-number">23</span>, a[<span class="hljs-number">39</span>]), g = <span class="hljs-title function_">n</span>(g, h, j, k, D, <span class="hljs-number">4</span>, a[<span class="hljs-number">40</span>]),<br>                k = <span class="hljs-title function_">n</span>(k, g, h, j, q, <span class="hljs-number">11</span>, a[<span class="hljs-number">41</span>]), j = <span class="hljs-title function_">n</span>(j, k, g, h, r, <span class="hljs-number">16</span>, a[<span class="hljs-number">42</span>]), h = <span class="hljs-title function_">n</span>(h, j, k, g, s, <span class="hljs-number">23</span>, a[<span class="hljs-number">43</span>]),<br>                g = <span class="hljs-title function_">n</span>(g, h, j, k, z, <span class="hljs-number">4</span>, a[<span class="hljs-number">44</span>]), k = <span class="hljs-title function_">n</span>(k, g, h, j, C, <span class="hljs-number">11</span>, a[<span class="hljs-number">45</span>]), j = <span class="hljs-title function_">n</span>(j, k, g, h, F, <span class="hljs-number">16</span>, a[<span class="hljs-number">46</span>]),<br>                h = <span class="hljs-title function_">n</span>(h, j, k, g, f, <span class="hljs-number">23</span>, a[<span class="hljs-number">47</span>]), g = <span class="hljs-title function_">p</span>(g, h, j, k, q, <span class="hljs-number">6</span>, a[<span class="hljs-number">48</span>]), k = <span class="hljs-title function_">p</span>(k, g, h, j, v, <span class="hljs-number">10</span>, a[<span class="hljs-number">49</span>]),<br>                j = <span class="hljs-title function_">p</span>(j, k, g, h,<br>                    E, <span class="hljs-number">15</span>, a[<span class="hljs-number">50</span>]), h = <span class="hljs-title function_">p</span>(h, j, k, g, t, <span class="hljs-number">21</span>, a[<span class="hljs-number">51</span>]), g = <span class="hljs-title function_">p</span>(g, h, j, k, C, <span class="hljs-number">6</span>, a[<span class="hljs-number">52</span>]),<br>                k = <span class="hljs-title function_">p</span>(k, g, h, j, r, <span class="hljs-number">10</span>, a[<span class="hljs-number">53</span>]), j = <span class="hljs-title function_">p</span>(j, k, g, h, A, <span class="hljs-number">15</span>, a[<span class="hljs-number">54</span>]), h = <span class="hljs-title function_">p</span>(h, j, k, g, m, <span class="hljs-number">21</span>, a[<span class="hljs-number">55</span>]),<br>                g = <span class="hljs-title function_">p</span>(g, h, j, k, y, <span class="hljs-number">6</span>, a[<span class="hljs-number">56</span>]), k = <span class="hljs-title function_">p</span>(k, g, h, j, F, <span class="hljs-number">10</span>, a[<span class="hljs-number">57</span>]), j = <span class="hljs-title function_">p</span>(j, k, g, h, s, <span class="hljs-number">15</span>, a[<span class="hljs-number">58</span>]),<br>                h = <span class="hljs-title function_">p</span>(h, j, k, g, D, <span class="hljs-number">21</span>, a[<span class="hljs-number">59</span>]), g = <span class="hljs-title function_">p</span>(g, h, j, k, x, <span class="hljs-number">6</span>, a[<span class="hljs-number">60</span>]), k = <span class="hljs-title function_">p</span>(k, g, h, j, B, <span class="hljs-number">10</span>, a[<span class="hljs-number">61</span>]),<br>                j = <span class="hljs-title function_">p</span>(j, k, g, h, f, <span class="hljs-number">15</span>, a[<span class="hljs-number">62</span>]), h = <span class="hljs-title function_">p</span>(h, j, k, g, z, <span class="hljs-number">21</span>, a[<span class="hljs-number">63</span>]);<br>            c[<span class="hljs-number">0</span>] = c[<span class="hljs-number">0</span>] + g | <span class="hljs-number">0</span>;<br>            c[<span class="hljs-number">1</span>] = c[<span class="hljs-number">1</span>] + h | <span class="hljs-number">0</span>;<br>            c[<span class="hljs-number">2</span>] = c[<span class="hljs-number">2</span>] + j | <span class="hljs-number">0</span>;<br>            c[<span class="hljs-number">3</span>] = c[<span class="hljs-number">3</span>] + k | <span class="hljs-number">0</span><br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, b = a.<span class="hljs-property">words</span>, c = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, d = <span class="hljs-number">8</span> * a.<span class="hljs-property">sigBytes</span>;<br>            b[d &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - d % <span class="hljs-number">32</span>;<br>            <span class="hljs-keyword">var</span> m = s.<span class="hljs-title function_">floor</span>(c /<br>                <span class="hljs-number">4294967296</span>);<br>            b[(d + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">15</span>] = (m &lt;&lt; <span class="hljs-number">8</span> | m &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (m &lt;&lt; <span class="hljs-number">24</span> | m &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            b[(d + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">14</span>] = (c &lt;&lt; <span class="hljs-number">8</span> | c &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (c &lt;&lt; <span class="hljs-number">24</span> | c &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * (b.<span class="hljs-property">length</span> + <span class="hljs-number">1</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>;<br>            b = a.<span class="hljs-property">words</span>;<br>            <span class="hljs-keyword">for</span> (c = <span class="hljs-number">0</span>; <span class="hljs-number">4</span> &gt; c; c++) d = b[c], b[c] = (d &lt;&lt; <span class="hljs-number">8</span> | d &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (d &lt;&lt; <span class="hljs-number">24</span> | d &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            <span class="hljs-keyword">return</span> a<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = q.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            a.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> a<br>        &#125;<br>    &#125;);<br>    b.<span class="hljs-property">MD5</span> = q.<span class="hljs-title function_">_createHelper</span>(d);<br>    b.<span class="hljs-property">HmacMD5</span> = q.<span class="hljs-title function_">_createHmacHelper</span>(d)<br>&#125;)(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> s = <span class="hljs-title class_">CryptoJS</span>, l = s.<span class="hljs-property">lib</span>, e = l.<span class="hljs-property">Base</span>, n = l.<span class="hljs-property">WordArray</span>, l = s.<span class="hljs-property">algo</span>, p = l.<span class="hljs-property">EvpKDF</span> = e.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: e.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">keySize</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">hasher</span>: l.<span class="hljs-property">MD5</span>, <span class="hljs-attr">iterations</span>: <span class="hljs-number">1</span>&#125;), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(b)<br>        &#125;, <span class="hljs-attr">compute</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, d</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>, q = e.<span class="hljs-property">hasher</span>.<span class="hljs-title function_">create</span>(), a = n.<span class="hljs-title function_">create</span>(), l = a.<span class="hljs-property">words</span>, p = e.<span class="hljs-property">keySize</span>, e = e.<span class="hljs-property">iterations</span>; l.<span class="hljs-property">length</span> &lt; p;) &#123;<br>                s &amp;&amp; q.<span class="hljs-title function_">update</span>(s);<br>                <span class="hljs-keyword">var</span> s = q.<span class="hljs-title function_">update</span>(b).<span class="hljs-title function_">finalize</span>(d);<br>                q.<span class="hljs-title function_">reset</span>();<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = <span class="hljs-number">1</span>; c &lt; e; c++) s = q.<span class="hljs-title function_">finalize</span>(s), q.<span class="hljs-title function_">reset</span>();<br>                a.<span class="hljs-title function_">concat</span>(s)<br>            &#125;<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * p;<br>            <span class="hljs-keyword">return</span> a<br>        &#125;<br>    &#125;);<br>    s.<span class="hljs-property">EvpKDF</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">b, d, e</span>) &#123;<br>        <span class="hljs-keyword">return</span> p.<span class="hljs-title function_">create</span>(e).<span class="hljs-title function_">compute</span>(b,<br>            d)<br>    &#125;<br>&#125;)();<br><span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">lib</span>.<span class="hljs-property">Cipher</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">s</span>) &#123;<br>    <span class="hljs-keyword">var</span> l = <span class="hljs-title class_">CryptoJS</span>, e = l.<span class="hljs-property">lib</span>, n = e.<span class="hljs-property">Base</span>, p = e.<span class="hljs-property">WordArray</span>, b = e.<span class="hljs-property">BufferedBlockAlgorithm</span>, d = l.<span class="hljs-property">enc</span>.<span class="hljs-property">Base64</span>,<br>        t = l.<span class="hljs-property">algo</span>.<span class="hljs-property">EvpKDF</span>, q = e.<span class="hljs-property">Cipher</span> = b.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">cfg</span>: n.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">createEncryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f</span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">create</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_ENC_XFORM_MODE</span>, a, f)<br>            &#125;, <span class="hljs-attr">createDecryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f</span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">create</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_DEC_XFORM_MODE</span>, a, f)<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f, c</span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(c);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_xformMode</span> = a;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_key</span> = f;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>            &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                b.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>            &#125;, <span class="hljs-attr">process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>()<br>            &#125;,<br>            <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>            &#125;, <span class="hljs-attr">keySize</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">ivSize</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">_ENC_XFORM_MODE</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">_DEC_XFORM_MODE</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> &#123;<br>                    <span class="hljs-attr">encrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">f, b, d</span>) &#123;<br>                        <span class="hljs-keyword">return</span> (<span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> b ? G : c).<span class="hljs-title function_">encrypt</span>(a, f, b, d)<br>                    &#125;, <span class="hljs-attr">decrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">f, b, d</span>) &#123;<br>                        <span class="hljs-keyword">return</span> (<span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> b ? G : c).<span class="hljs-title function_">decrypt</span>(a, f, b, d)<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;);<br>    e.<span class="hljs-property">StreamCipher</span> = q.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>(!<span class="hljs-number">0</span>)<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">1</span><br>    &#125;);<br>    <span class="hljs-keyword">var</span> a = l.<span class="hljs-property">mode</span> = &#123;&#125;, v = <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f, b</span>) &#123;<br>        <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iv</span>;<br>        c ? <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iv</span> = s : c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_prevBlock</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = <span class="hljs-number">0</span>; d &lt; b; d++) a[f + d] ^=<br>            c[d]<br>    &#125;, u = (e.<span class="hljs-property">BlockCipherMode</span> = n.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">createEncryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">Encryptor</span>.<span class="hljs-title function_">create</span>(a, f)<br>        &#125;, <span class="hljs-attr">createDecryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">Decryptor</span>.<span class="hljs-title function_">create</span>(a, f)<br>        &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_cipher</span> = a;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iv</span> = f<br>        &#125;<br>    &#125;)).<span class="hljs-title function_">extend</span>();<br>    u.<span class="hljs-property">Encryptor</span> = u.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">processBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f</span>) &#123;<br>            <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_cipher</span>, c = b.<span class="hljs-property">blockSize</span>;<br>            v.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, a, f, c);<br>            b.<span class="hljs-title function_">encryptBlock</span>(a, f);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_prevBlock</span> = a.<span class="hljs-title function_">slice</span>(f, f + c)<br>        &#125;<br>    &#125;);<br>    u.<span class="hljs-property">Decryptor</span> = u.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">processBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f</span>) &#123;<br>            <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_cipher</span>, c = b.<span class="hljs-property">blockSize</span>, d = a.<span class="hljs-title function_">slice</span>(f, f + c);<br>            b.<span class="hljs-title function_">decryptBlock</span>(a, f);<br>            v.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>,<br>                a, f, c);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_prevBlock</span> = d<br>        &#125;<br>    &#125;);<br>    a = a.<span class="hljs-property">CBC</span> = u;<br>    u = (l.<span class="hljs-property">pad</span> = &#123;&#125;).<span class="hljs-property">Pkcs7</span> = &#123;<br>        <span class="hljs-attr">pad</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">4</span> * f, b = b - a.<span class="hljs-property">sigBytes</span> % b, c = b &lt;&lt; <span class="hljs-number">24</span> | b &lt;&lt; <span class="hljs-number">16</span> | b &lt;&lt; <span class="hljs-number">8</span> | b, d = [], e = <span class="hljs-number">0</span>; e &lt; b; e += <span class="hljs-number">4</span>) d.<span class="hljs-title function_">push</span>(c);<br>            b = p.<span class="hljs-title function_">create</span>(d, b);<br>            a.<span class="hljs-title function_">concat</span>(b)<br>        &#125;, <span class="hljs-attr">unpad</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a.<span class="hljs-property">sigBytes</span> -= a.<span class="hljs-property">words</span>[a.<span class="hljs-property">sigBytes</span> - <span class="hljs-number">1</span> &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp; <span class="hljs-number">255</span><br>        &#125;<br>    &#125;;<br>    e.<span class="hljs-property">BlockCipher</span> = q.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: q.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">mode</span>: a, <span class="hljs-attr">padding</span>: u&#125;), <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            q.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>, b = a.<span class="hljs-property">iv</span>, a = a.<span class="hljs-property">mode</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">_xformMode</span> == <span class="hljs-variable language_">this</span>.<span class="hljs-property">_ENC_XFORM_MODE</span>) <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">createEncryptor</span>; <span class="hljs-keyword">else</span> c = a.<span class="hljs-property">createDecryptor</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span> = <span class="hljs-number">1</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_mode</span> = c.<span class="hljs-title function_">call</span>(a,<br>                <span class="hljs-variable language_">this</span>, b &amp;&amp; b.<span class="hljs-property">words</span>)<br>        &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_mode</span>.<span class="hljs-title function_">processBlock</span>(a, b)<br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-property">padding</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">_xformMode</span> == <span class="hljs-variable language_">this</span>.<span class="hljs-property">_ENC_XFORM_MODE</span>) &#123;<br>                a.<span class="hljs-title function_">pad</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>);<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>(!<span class="hljs-number">0</span>)<br>            &#125; <span class="hljs-keyword">else</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>(!<span class="hljs-number">0</span>), a.<span class="hljs-title function_">unpad</span>(b);<br>            <span class="hljs-keyword">return</span> b<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">4</span><br>    &#125;);<br>    <span class="hljs-keyword">var</span> w = e.<span class="hljs-property">CipherParams</span> = n.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">mixIn</span>(a)<br>        &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> (a || <span class="hljs-variable language_">this</span>.<span class="hljs-property">formatter</span>).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>        &#125;<br>    &#125;), a = (l.<span class="hljs-property">format</span> = &#123;&#125;).<span class="hljs-property">OpenSSL</span> = &#123;<br>        <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">ciphertext</span>;<br>            a = a.<span class="hljs-property">salt</span>;<br>            <span class="hljs-keyword">return</span> (a ? p.<span class="hljs-title function_">create</span>([<span class="hljs-number">1398893684</span>,<br>                <span class="hljs-number">1701076831</span>]).<span class="hljs-title function_">concat</span>(a).<span class="hljs-title function_">concat</span>(b) : b).<span class="hljs-title function_">toString</span>(d)<br>        &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a = d.<span class="hljs-title function_">parse</span>(a);<br>            <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">words</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-number">1398893684</span> == b[<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-number">1701076831</span> == b[<span class="hljs-number">1</span>]) &#123;<br>                <span class="hljs-keyword">var</span> c = p.<span class="hljs-title function_">create</span>(b.<span class="hljs-title function_">slice</span>(<span class="hljs-number">2</span>, <span class="hljs-number">4</span>));<br>                b.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>);<br>                a.<span class="hljs-property">sigBytes</span> -= <span class="hljs-number">16</span><br>            &#125;<br>            <span class="hljs-keyword">return</span> w.<span class="hljs-title function_">create</span>(&#123;<span class="hljs-attr">ciphertext</span>: a, <span class="hljs-attr">salt</span>: c&#125;)<br>        &#125;<br>    &#125;, c = e.<span class="hljs-property">SerializableCipher</span> = n.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: n.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">format</span>: a&#125;), <span class="hljs-attr">encrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, c, d</span>) &#123;<br>            d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(d);<br>            <span class="hljs-keyword">var</span> e = a.<span class="hljs-title function_">createEncryptor</span>(c, d);<br>            b = e.<span class="hljs-title function_">finalize</span>(b);<br>            e = e.<span class="hljs-property">cfg</span>;<br>            <span class="hljs-keyword">return</span> w.<span class="hljs-title function_">create</span>(&#123;<br>                <span class="hljs-attr">ciphertext</span>: b,<br>                <span class="hljs-attr">key</span>: c,<br>                <span class="hljs-attr">iv</span>: e.<span class="hljs-property">iv</span>,<br>                <span class="hljs-attr">algorithm</span>: a,<br>                <span class="hljs-attr">mode</span>: e.<span class="hljs-property">mode</span>,<br>                <span class="hljs-attr">padding</span>: e.<span class="hljs-property">padding</span>,<br>                <span class="hljs-attr">blockSize</span>: a.<span class="hljs-property">blockSize</span>,<br>                <span class="hljs-attr">formatter</span>: d.<span class="hljs-property">format</span><br>            &#125;)<br>        &#125;,<br>        <span class="hljs-attr">decrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, c, d</span>) &#123;<br>            d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(d);<br>            b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_parse</span>(b, d.<span class="hljs-property">format</span>);<br>            <span class="hljs-keyword">return</span> a.<span class="hljs-title function_">createDecryptor</span>(c, d).<span class="hljs-title function_">finalize</span>(b.<span class="hljs-property">ciphertext</span>)<br>        &#125;, <span class="hljs-attr">_parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a ? b.<span class="hljs-title function_">parse</span>(a, <span class="hljs-variable language_">this</span>) : a<br>        &#125;<br>    &#125;), l = (l.<span class="hljs-property">kdf</span> = &#123;&#125;).<span class="hljs-property">OpenSSL</span> = &#123;<br>        <span class="hljs-attr">execute</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, c, d</span>) &#123;<br>            d || (d = p.<span class="hljs-title function_">random</span>(<span class="hljs-number">8</span>));<br>            a = t.<span class="hljs-title function_">create</span>(&#123;<span class="hljs-attr">keySize</span>: b + c&#125;).<span class="hljs-title function_">compute</span>(a, d);<br>            c = p.<span class="hljs-title function_">create</span>(a.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(b), <span class="hljs-number">4</span> * c);<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * b;<br>            <span class="hljs-keyword">return</span> w.<span class="hljs-title function_">create</span>(&#123;<span class="hljs-attr">key</span>: a, <span class="hljs-attr">iv</span>: c, <span class="hljs-attr">salt</span>: d&#125;)<br>        &#125;<br>    &#125;, G = e.<span class="hljs-property">PasswordBasedCipher</span> = c.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: c.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">kdf</span>: l&#125;), <span class="hljs-attr">encrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, d, e</span>) &#123;<br>            e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(e);<br>            d = e.<span class="hljs-property">kdf</span>.<span class="hljs-title function_">execute</span>(d,<br>                a.<span class="hljs-property">keySize</span>, a.<span class="hljs-property">ivSize</span>);<br>            e.<span class="hljs-property">iv</span> = d.<span class="hljs-property">iv</span>;<br>            a = c.<span class="hljs-property">encrypt</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, a, b, d.<span class="hljs-property">key</span>, e);<br>            a.<span class="hljs-title function_">mixIn</span>(d);<br>            <span class="hljs-keyword">return</span> a<br>        &#125;, <span class="hljs-attr">decrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, d, e</span>) &#123;<br>            e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(e);<br>            b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_parse</span>(b, e.<span class="hljs-property">format</span>);<br>            d = e.<span class="hljs-property">kdf</span>.<span class="hljs-title function_">execute</span>(d, a.<span class="hljs-property">keySize</span>, a.<span class="hljs-property">ivSize</span>, b.<span class="hljs-property">salt</span>);<br>            e.<span class="hljs-property">iv</span> = d.<span class="hljs-property">iv</span>;<br>            <span class="hljs-keyword">return</span> c.<span class="hljs-property">decrypt</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, a, b, d.<span class="hljs-property">key</span>, e)<br>        &#125;<br>    &#125;)<br>&#125;();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">s</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_S</span>, d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_i</span>, e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_j</span>, q = <span class="hljs-number">0</span>, a = <span class="hljs-number">0</span>; <span class="hljs-number">4</span> &gt; a; a++) &#123;<br>            <span class="hljs-keyword">var</span> d = (d + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span>, e = (e + b[d]) % <span class="hljs-number">256</span>, l = b[d];<br>            b[d] = b[e];<br>            b[e] = l;<br>            q |= b[(b[d] + b[e]) % <span class="hljs-number">256</span>] &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * a<br>        &#125;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">_i</span> = d;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">_j</span> = e;<br>        <span class="hljs-keyword">return</span> q<br>    &#125;<br><br>    <span class="hljs-keyword">var</span> l = <span class="hljs-title class_">CryptoJS</span>, e = l.<span class="hljs-property">lib</span>.<span class="hljs-property">StreamCipher</span>, n = l.<span class="hljs-property">algo</span>, p = n.<span class="hljs-property">RC4</span> = e.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_key</span>, d = b.<span class="hljs-property">words</span>, b = b.<span class="hljs-property">sigBytes</span>, e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_S</span> = [], l = <span class="hljs-number">0</span>; <span class="hljs-number">256</span> &gt; l; l++) e[l] = l;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = l = <span class="hljs-number">0</span>; <span class="hljs-number">256</span> &gt; l; l++) &#123;<br>                <span class="hljs-keyword">var</span> n = l % b, a = (a + e[l] + (d[n &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (n % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>)) % <span class="hljs-number">256</span>, n = e[l];<br>                e[l] = e[a];<br>                e[a] = n<br>            &#125;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_i</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_j</span> = <span class="hljs-number">0</span><br>        &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b,</span><br><span class="hljs-params">                                      d</span>) &#123;<br>            b[d] ^= s.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>)<br>        &#125;, <span class="hljs-attr">keySize</span>: <span class="hljs-number">8</span>, <span class="hljs-attr">ivSize</span>: <span class="hljs-number">0</span><br>    &#125;);<br>    l.<span class="hljs-property">RC4</span> = e.<span class="hljs-title function_">_createHelper</span>(p);<br>    n = n.<span class="hljs-property">RC4Drop</span> = p.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: p.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">drop</span>: <span class="hljs-number">192</span>&#125;), <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            p.<span class="hljs-property">_doReset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-property">drop</span>; <span class="hljs-number">0</span> &lt; b; b--) s.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>)<br>        &#125;<br>    &#125;);<br>    l.<span class="hljs-property">RC4Drop</span> = e.<span class="hljs-title function_">_createHelper</span>(n)<br>&#125;)();<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Md5</title>
    <link href="/posts/d021ad01/"/>
    <url>/posts/d021ad01/</url>
    
    <content type="html"><![CDATA[<h2 id="Md5源码"><a href="#Md5源码" class="headerlink" title="Md5源码"></a>Md5源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">s, p</span>) &#123;<br>    <span class="hljs-keyword">var</span> m = &#123;&#125;, l = m.<span class="hljs-property">lib</span> = &#123;&#125;, n = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, r = l.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                n.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> h = <span class="hljs-keyword">new</span> n;<br>                b &amp;&amp; h.<span class="hljs-title function_">mixIn</span>(b);<br>                h.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (h.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    h.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                h.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = h;<br>                h.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> h<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                b.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(b, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> b<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> h <span class="hljs-keyword">in</span> b) b.<span class="hljs-title function_">hasOwnProperty</span>(h) &amp;&amp; (<span class="hljs-variable language_">this</span>[h] = b[h]);<br>                b.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = b.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        q = l.<span class="hljs-property">WordArray</span> = r.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, h</span>) &#123;<br>                b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = b || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = h != p ? h : <span class="hljs-number">4</span> * b.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">return</span> (b || t).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">var</span> h = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, a = b.<span class="hljs-property">words</span>, j = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                b = b.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (j % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> g = <span class="hljs-number">0</span>; g &lt; b; g++) h[j + g &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a[g &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (g % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((j + g) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; a.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (g = <span class="hljs-number">0</span>; g &lt; b; g += <span class="hljs-number">4</span>) h[j + g &gt;&gt;&gt; <span class="hljs-number">2</span>] = a[g &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> h.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(h, a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += b;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, h = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                b[h &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (h % <span class="hljs-number">4</span>);<br>                b.<span class="hljs-property">length</span> = s.<span class="hljs-title function_">ceil</span>(h / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> b = r.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                b.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> b<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> h = [], a = <span class="hljs-number">0</span>; a &lt; b; a += <span class="hljs-number">4</span>) h.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * s.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> q.<span class="hljs-title function_">init</span>(h, b)<br>            &#125;<br>        &#125;), v = m.<span class="hljs-property">enc</span> = &#123;&#125;, t = v.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">var</span> a = b.<span class="hljs-property">words</span>;<br>                b = b.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> g = [], j = <span class="hljs-number">0</span>; j &lt; b; j++) &#123;<br>                    <span class="hljs-keyword">var</span> k = a[j &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    g.<span class="hljs-title function_">push</span>((k &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    g.<span class="hljs-title function_">push</span>((k &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> g.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = b.<span class="hljs-property">length</span>, g = [], j = <span class="hljs-number">0</span>; j &lt; a; j += <span class="hljs-number">2</span>) g[j &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(b.<span class="hljs-title function_">substr</span>(j,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (j % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> q.<span class="hljs-title function_">init</span>(g, a / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, a = v.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">var</span> a = b.<span class="hljs-property">words</span>;<br>                b = b.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> g = [], j = <span class="hljs-number">0</span>; j &lt; b; j++) g.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(a[j &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> g.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = b.<span class="hljs-property">length</span>, g = [], j = <span class="hljs-number">0</span>; j &lt; a; j++) g[j &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (b.<span class="hljs-title function_">charCodeAt</span>(j) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> q.<span class="hljs-title function_">init</span>(g, a)<br>            &#125;<br>        &#125;, u = v.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(a.<span class="hljs-title function_">stringify</span>(b)))<br>                &#125; <span class="hljs-keyword">catch</span> (g) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">return</span> a.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(b)))<br>            &#125;<br>        &#125;,<br>        g = l.<span class="hljs-property">BufferedBlockAlgorithm</span> = r.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> q.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> b &amp;&amp; (b = u.<span class="hljs-title function_">parse</span>(b));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(b);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += b.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, g = a.<span class="hljs-property">words</span>, j = a.<span class="hljs-property">sigBytes</span>, k = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, m = j / (<span class="hljs-number">4</span> * k),<br>                    m = b ? s.<span class="hljs-title function_">ceil</span>(m) : s.<span class="hljs-title function_">max</span>((m | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                b = m * k;<br>                j = s.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * b, j);<br>                <span class="hljs-keyword">if</span> (b) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> l = <span class="hljs-number">0</span>; l &lt; b; l += k) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(g, l);<br>                    l = g.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, b);<br>                    a.<span class="hljs-property">sigBytes</span> -= j<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> q.<span class="hljs-title function_">init</span>(l, j)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> b = r.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                b.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> b<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    l.<span class="hljs-property">Hasher</span> = g.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: r.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(b);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            g.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(b);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            b &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(b);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">a, g</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> b.<span class="hljs-title function_">init</span>(g)).<span class="hljs-title function_">finalize</span>(a)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">a, g</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> k.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(b,<br>                    g)).<span class="hljs-title function_">finalize</span>(a)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> k = m.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> m<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">s</span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">p</span>(<span class="hljs-params">a, k, b, h, l, j, m</span>) &#123;<br>        a = a + (k &amp; b | ~k &amp; h) + l + m;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; j | a &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + k<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">m</span>(<span class="hljs-params">a, k, b, h, l, j, m</span>) &#123;<br>        a = a + (k &amp; h | b &amp; ~h) + l + m;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; j | a &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + k<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">l</span>(<span class="hljs-params">a, k, b, h, l, j, m</span>) &#123;<br>        a = a + (k ^ b ^ h) + l + m;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; j | a &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + k<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">n</span>(<span class="hljs-params">a, k, b, h, l, j, m</span>) &#123;<br>        a = a + (b ^ (k | ~h)) + l + m;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; j | a &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + k<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> r = <span class="hljs-title class_">CryptoJS</span>, q = r.<span class="hljs-property">lib</span>, v = q.<span class="hljs-property">WordArray</span>, t = q.<span class="hljs-property">Hasher</span>, q = r.<span class="hljs-property">algo</span>, a = [], u = <span class="hljs-number">0</span>; <span class="hljs-number">64</span> &gt; u; u++) a[u] = <span class="hljs-number">4294967296</span> * s.<span class="hljs-title function_">abs</span>(s.<span class="hljs-title function_">sin</span>(u + <span class="hljs-number">1</span>)) | <span class="hljs-number">0</span>;<br>    q = q.<span class="hljs-property">MD5</span> = t.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> v.<span class="hljs-title function_">init</span>([<span class="hljs-number">1732584193</span>, <span class="hljs-number">4023233417</span>, <span class="hljs-number">2562383102</span>, <span class="hljs-number">271733878</span>])<br>        &#125;,<br>        <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">g, k</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">0</span>; <span class="hljs-number">16</span> &gt; b; b++) &#123;<br>                <span class="hljs-keyword">var</span> h = k + b, w = g[h];<br>                g[h] = (w &lt;&lt; <span class="hljs-number">8</span> | w &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (w &lt;&lt; <span class="hljs-number">24</span> | w &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span><br>            &#125;<br>            <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>, h = g[k + <span class="hljs-number">0</span>], w = g[k + <span class="hljs-number">1</span>], j = g[k + <span class="hljs-number">2</span>], q = g[k + <span class="hljs-number">3</span>], r = g[k + <span class="hljs-number">4</span>],<br>                s = g[k + <span class="hljs-number">5</span>], t = g[k + <span class="hljs-number">6</span>], u = g[k + <span class="hljs-number">7</span>], v = g[k + <span class="hljs-number">8</span>], x = g[k + <span class="hljs-number">9</span>], y = g[k + <span class="hljs-number">10</span>], z = g[k + <span class="hljs-number">11</span>],<br>                A = g[k + <span class="hljs-number">12</span>], B = g[k + <span class="hljs-number">13</span>], C = g[k + <span class="hljs-number">14</span>], D = g[k + <span class="hljs-number">15</span>], c = b[<span class="hljs-number">0</span>], d = b[<span class="hljs-number">1</span>], e = b[<span class="hljs-number">2</span>], f = b[<span class="hljs-number">3</span>],<br>                c = <span class="hljs-title function_">p</span>(c, d, e, f, h, <span class="hljs-number">7</span>, a[<span class="hljs-number">0</span>]), f = <span class="hljs-title function_">p</span>(f, c, d, e, w, <span class="hljs-number">12</span>, a[<span class="hljs-number">1</span>]), e = <span class="hljs-title function_">p</span>(e, f, c, d, j, <span class="hljs-number">17</span>, a[<span class="hljs-number">2</span>]),<br>                d = <span class="hljs-title function_">p</span>(d, e, f, c, q, <span class="hljs-number">22</span>, a[<span class="hljs-number">3</span>]), c = <span class="hljs-title function_">p</span>(c, d, e, f, r, <span class="hljs-number">7</span>, a[<span class="hljs-number">4</span>]), f = <span class="hljs-title function_">p</span>(f, c, d, e, s, <span class="hljs-number">12</span>, a[<span class="hljs-number">5</span>]),<br>                e = <span class="hljs-title function_">p</span>(e, f, c, d, t, <span class="hljs-number">17</span>, a[<span class="hljs-number">6</span>]), d = <span class="hljs-title function_">p</span>(d, e, f, c, u, <span class="hljs-number">22</span>, a[<span class="hljs-number">7</span>]),<br>                c = <span class="hljs-title function_">p</span>(c, d, e, f, v, <span class="hljs-number">7</span>, a[<span class="hljs-number">8</span>]), f = <span class="hljs-title function_">p</span>(f, c, d, e, x, <span class="hljs-number">12</span>, a[<span class="hljs-number">9</span>]), e = <span class="hljs-title function_">p</span>(e, f, c, d, y, <span class="hljs-number">17</span>, a[<span class="hljs-number">10</span>]),<br>                d = <span class="hljs-title function_">p</span>(d, e, f, c, z, <span class="hljs-number">22</span>, a[<span class="hljs-number">11</span>]), c = <span class="hljs-title function_">p</span>(c, d, e, f, A, <span class="hljs-number">7</span>, a[<span class="hljs-number">12</span>]), f = <span class="hljs-title function_">p</span>(f, c, d, e, B, <span class="hljs-number">12</span>, a[<span class="hljs-number">13</span>]),<br>                e = <span class="hljs-title function_">p</span>(e, f, c, d, C, <span class="hljs-number">17</span>, a[<span class="hljs-number">14</span>]), d = <span class="hljs-title function_">p</span>(d, e, f, c, D, <span class="hljs-number">22</span>, a[<span class="hljs-number">15</span>]), c = <span class="hljs-title function_">m</span>(c, d, e, f, w, <span class="hljs-number">5</span>, a[<span class="hljs-number">16</span>]),<br>                f = <span class="hljs-title function_">m</span>(f, c, d, e, t, <span class="hljs-number">9</span>, a[<span class="hljs-number">17</span>]), e = <span class="hljs-title function_">m</span>(e, f, c, d, z, <span class="hljs-number">14</span>, a[<span class="hljs-number">18</span>]), d = <span class="hljs-title function_">m</span>(d, e, f, c, h, <span class="hljs-number">20</span>, a[<span class="hljs-number">19</span>]),<br>                c = <span class="hljs-title function_">m</span>(c, d, e, f, s, <span class="hljs-number">5</span>, a[<span class="hljs-number">20</span>]), f = <span class="hljs-title function_">m</span>(f, c, d, e, y, <span class="hljs-number">9</span>, a[<span class="hljs-number">21</span>]), e = <span class="hljs-title function_">m</span>(e, f, c, d, D, <span class="hljs-number">14</span>, a[<span class="hljs-number">22</span>]),<br>                d = <span class="hljs-title function_">m</span>(d, e, f, c, r, <span class="hljs-number">20</span>, a[<span class="hljs-number">23</span>]), c = <span class="hljs-title function_">m</span>(c, d, e, f, x, <span class="hljs-number">5</span>, a[<span class="hljs-number">24</span>]), f = <span class="hljs-title function_">m</span>(f, c, d, e, C, <span class="hljs-number">9</span>, a[<span class="hljs-number">25</span>]),<br>                e = <span class="hljs-title function_">m</span>(e, f, c, d, q, <span class="hljs-number">14</span>, a[<span class="hljs-number">26</span>]), d = <span class="hljs-title function_">m</span>(d, e, f, c, v, <span class="hljs-number">20</span>, a[<span class="hljs-number">27</span>]), c = <span class="hljs-title function_">m</span>(c, d, e, f, B, <span class="hljs-number">5</span>, a[<span class="hljs-number">28</span>]),<br>                f = <span class="hljs-title function_">m</span>(f, c,<br>                    d, e, j, <span class="hljs-number">9</span>, a[<span class="hljs-number">29</span>]), e = <span class="hljs-title function_">m</span>(e, f, c, d, u, <span class="hljs-number">14</span>, a[<span class="hljs-number">30</span>]), d = <span class="hljs-title function_">m</span>(d, e, f, c, A, <span class="hljs-number">20</span>, a[<span class="hljs-number">31</span>]),<br>                c = <span class="hljs-title function_">l</span>(c, d, e, f, s, <span class="hljs-number">4</span>, a[<span class="hljs-number">32</span>]), f = <span class="hljs-title function_">l</span>(f, c, d, e, v, <span class="hljs-number">11</span>, a[<span class="hljs-number">33</span>]), e = <span class="hljs-title function_">l</span>(e, f, c, d, z, <span class="hljs-number">16</span>, a[<span class="hljs-number">34</span>]),<br>                d = <span class="hljs-title function_">l</span>(d, e, f, c, C, <span class="hljs-number">23</span>, a[<span class="hljs-number">35</span>]), c = <span class="hljs-title function_">l</span>(c, d, e, f, w, <span class="hljs-number">4</span>, a[<span class="hljs-number">36</span>]), f = <span class="hljs-title function_">l</span>(f, c, d, e, r, <span class="hljs-number">11</span>, a[<span class="hljs-number">37</span>]),<br>                e = <span class="hljs-title function_">l</span>(e, f, c, d, u, <span class="hljs-number">16</span>, a[<span class="hljs-number">38</span>]), d = <span class="hljs-title function_">l</span>(d, e, f, c, y, <span class="hljs-number">23</span>, a[<span class="hljs-number">39</span>]), c = <span class="hljs-title function_">l</span>(c, d, e, f, B, <span class="hljs-number">4</span>, a[<span class="hljs-number">40</span>]),<br>                f = <span class="hljs-title function_">l</span>(f, c, d, e, h, <span class="hljs-number">11</span>, a[<span class="hljs-number">41</span>]), e = <span class="hljs-title function_">l</span>(e, f, c, d, q, <span class="hljs-number">16</span>, a[<span class="hljs-number">42</span>]), d = <span class="hljs-title function_">l</span>(d, e, f, c, t, <span class="hljs-number">23</span>, a[<span class="hljs-number">43</span>]),<br>                c = <span class="hljs-title function_">l</span>(c, d, e, f, x, <span class="hljs-number">4</span>, a[<span class="hljs-number">44</span>]), f = <span class="hljs-title function_">l</span>(f, c, d, e, A, <span class="hljs-number">11</span>, a[<span class="hljs-number">45</span>]), e = <span class="hljs-title function_">l</span>(e, f, c, d, D, <span class="hljs-number">16</span>, a[<span class="hljs-number">46</span>]),<br>                d = <span class="hljs-title function_">l</span>(d, e, f, c, j, <span class="hljs-number">23</span>, a[<span class="hljs-number">47</span>]), c = <span class="hljs-title function_">n</span>(c, d, e, f, h, <span class="hljs-number">6</span>, a[<span class="hljs-number">48</span>]), f = <span class="hljs-title function_">n</span>(f, c, d, e, u, <span class="hljs-number">10</span>, a[<span class="hljs-number">49</span>]),<br>                e = <span class="hljs-title function_">n</span>(e, f, c, d,<br>                    C, <span class="hljs-number">15</span>, a[<span class="hljs-number">50</span>]), d = <span class="hljs-title function_">n</span>(d, e, f, c, s, <span class="hljs-number">21</span>, a[<span class="hljs-number">51</span>]), c = <span class="hljs-title function_">n</span>(c, d, e, f, A, <span class="hljs-number">6</span>, a[<span class="hljs-number">52</span>]),<br>                f = <span class="hljs-title function_">n</span>(f, c, d, e, q, <span class="hljs-number">10</span>, a[<span class="hljs-number">53</span>]), e = <span class="hljs-title function_">n</span>(e, f, c, d, y, <span class="hljs-number">15</span>, a[<span class="hljs-number">54</span>]), d = <span class="hljs-title function_">n</span>(d, e, f, c, w, <span class="hljs-number">21</span>, a[<span class="hljs-number">55</span>]),<br>                c = <span class="hljs-title function_">n</span>(c, d, e, f, v, <span class="hljs-number">6</span>, a[<span class="hljs-number">56</span>]), f = <span class="hljs-title function_">n</span>(f, c, d, e, D, <span class="hljs-number">10</span>, a[<span class="hljs-number">57</span>]), e = <span class="hljs-title function_">n</span>(e, f, c, d, t, <span class="hljs-number">15</span>, a[<span class="hljs-number">58</span>]),<br>                d = <span class="hljs-title function_">n</span>(d, e, f, c, B, <span class="hljs-number">21</span>, a[<span class="hljs-number">59</span>]), c = <span class="hljs-title function_">n</span>(c, d, e, f, r, <span class="hljs-number">6</span>, a[<span class="hljs-number">60</span>]), f = <span class="hljs-title function_">n</span>(f, c, d, e, z, <span class="hljs-number">10</span>, a[<span class="hljs-number">61</span>]),<br>                e = <span class="hljs-title function_">n</span>(e, f, c, d, j, <span class="hljs-number">15</span>, a[<span class="hljs-number">62</span>]), d = <span class="hljs-title function_">n</span>(d, e, f, c, x, <span class="hljs-number">21</span>, a[<span class="hljs-number">63</span>]);<br>            b[<span class="hljs-number">0</span>] = b[<span class="hljs-number">0</span>] + c | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">1</span>] = b[<span class="hljs-number">1</span>] + d | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">2</span>] = b[<span class="hljs-number">2</span>] + e | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">3</span>] = b[<span class="hljs-number">3</span>] + f | <span class="hljs-number">0</span><br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, k = a.<span class="hljs-property">words</span>, b = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, h = <span class="hljs-number">8</span> * a.<span class="hljs-property">sigBytes</span>;<br>            k[h &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - h % <span class="hljs-number">32</span>;<br>            <span class="hljs-keyword">var</span> l = s.<span class="hljs-title function_">floor</span>(b /<br>                <span class="hljs-number">4294967296</span>);<br>            k[(h + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">15</span>] = (l &lt;&lt; <span class="hljs-number">8</span> | l &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (l &lt;&lt; <span class="hljs-number">24</span> | l &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            k[(h + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">14</span>] = (b &lt;&lt; <span class="hljs-number">8</span> | b &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (b &lt;&lt; <span class="hljs-number">24</span> | b &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * (k.<span class="hljs-property">length</span> + <span class="hljs-number">1</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>;<br>            k = a.<span class="hljs-property">words</span>;<br>            <span class="hljs-keyword">for</span> (b = <span class="hljs-number">0</span>; <span class="hljs-number">4</span> &gt; b; b++) h = k[b], k[b] = (h &lt;&lt; <span class="hljs-number">8</span> | h &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (h &lt;&lt; <span class="hljs-number">24</span> | h &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            <span class="hljs-keyword">return</span> a<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = t.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            a.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> a<br>        &#125;<br>    &#125;);<br>    r.<span class="hljs-property">MD5</span> = t.<span class="hljs-title function_">_createHelper</span>(q);<br>    r.<span class="hljs-property">HmacMD5</span> = t.<span class="hljs-title function_">_createHmacHelper</span>(q)<br>&#125;)(<span class="hljs-title class_">Math</span>);<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hmac-Sha1</title>
    <link href="/posts/e019b1c3/"/>
    <url>/posts/e019b1c3/</url>
    
    <content type="html"><![CDATA[<h2 id="Hmac-Sha1加密源码"><a href="#Hmac-Sha1加密源码" class="headerlink" title="Hmac-Sha1加密源码"></a>Hmac-Sha1加密源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">g, l</span>) &#123;<br>    <span class="hljs-keyword">var</span> e = &#123;&#125;, d = e.<span class="hljs-property">lib</span> = &#123;&#125;, m = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, k = d.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                m.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-keyword">new</span> m;<br>                a &amp;&amp; c.<span class="hljs-title function_">mixIn</span>(a);<br>                c.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (c.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    c.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                c.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = c;<br>                c.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> c<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                a.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(a, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c <span class="hljs-keyword">in</span> a) a.<span class="hljs-title function_">hasOwnProperty</span>(c) &amp;&amp; (<span class="hljs-variable language_">this</span>[c] = a[c]);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = a.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        p = d.<span class="hljs-property">WordArray</span> = k.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, c</span>) &#123;<br>                a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = a || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = c != l ? c : <span class="hljs-number">4</span> * a.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> (a || n).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, q = a.<span class="hljs-property">words</span>, f = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (f % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">0</span>; b &lt; a; b++) c[f + b &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (q[b &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (b % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((f + b) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; q.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (b = <span class="hljs-number">0</span>; b &lt; a; b += <span class="hljs-number">4</span>) c[f + b &gt;&gt;&gt; <span class="hljs-number">2</span>] = q[b &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> c.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(c, q);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += a;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a[c &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (c % <span class="hljs-number">4</span>);<br>                a.<span class="hljs-property">length</span> = g.<span class="hljs-title function_">ceil</span>(c / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = k.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = [], b = <span class="hljs-number">0</span>; b &lt; a; b += <span class="hljs-number">4</span>) c.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * g.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(c, a)<br>            &#125;<br>        &#125;), b = e.<span class="hljs-property">enc</span> = &#123;&#125;, n = b.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], f = <span class="hljs-number">0</span>; f &lt; a; f++) &#123;<br>                    <span class="hljs-keyword">var</span> d = c[f &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    b.<span class="hljs-title function_">push</span>((d &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    b.<span class="hljs-title function_">push</span>((d &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> b.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">length</span>, b = [], f = <span class="hljs-number">0</span>; f &lt; c; f += <span class="hljs-number">2</span>) b[f &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(a.<span class="hljs-title function_">substr</span>(f,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (f % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(b, c / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, j = b.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], f = <span class="hljs-number">0</span>; f &lt; a; f++) b.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(c[f &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> b.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">length</span>, b = [], f = <span class="hljs-number">0</span>; f &lt; c; f++) b[f &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a.<span class="hljs-title function_">charCodeAt</span>(f) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(b, c)<br>            &#125;<br>        &#125;, h = b.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(j.<span class="hljs-title function_">stringify</span>(a)))<br>                &#125; <span class="hljs-keyword">catch</span> (c) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> j.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(a)))<br>            &#125;<br>        &#125;,<br>        r = d.<span class="hljs-property">BufferedBlockAlgorithm</span> = k.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> p.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = h.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, b = c.<span class="hljs-property">words</span>, f = c.<span class="hljs-property">sigBytes</span>, d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, e = f / (<span class="hljs-number">4</span> * d),<br>                    e = a ? g.<span class="hljs-title function_">ceil</span>(e) : g.<span class="hljs-title function_">max</span>((e | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                a = e * d;<br>                f = g.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * a, f);<br>                <span class="hljs-keyword">if</span> (a) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> k = <span class="hljs-number">0</span>; k &lt; a; k += d) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(b, k);<br>                    k = b.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, a);<br>                    c.<span class="hljs-property">sigBytes</span> -= f<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(k, f)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = k.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    d.<span class="hljs-property">Hasher</span> = r.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: k.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            r.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, d</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(d)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, d</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> s.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    d)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> s = e.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> e<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> g = <span class="hljs-title class_">CryptoJS</span>, l = g.<span class="hljs-property">lib</span>, e = l.<span class="hljs-property">WordArray</span>, d = l.<span class="hljs-property">Hasher</span>, m = [], l = g.<span class="hljs-property">algo</span>.<span class="hljs-property">SHA1</span> = d.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> e.<span class="hljs-title function_">init</span>([<span class="hljs-number">1732584193</span>, <span class="hljs-number">4023233417</span>, <span class="hljs-number">2562383102</span>, <span class="hljs-number">271733878</span>, <span class="hljs-number">3285377520</span>])<br>        &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">d, e</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>, n = b[<span class="hljs-number">0</span>], j = b[<span class="hljs-number">1</span>], h = b[<span class="hljs-number">2</span>], g = b[<span class="hljs-number">3</span>], l = b[<span class="hljs-number">4</span>], a = <span class="hljs-number">0</span>; <span class="hljs-number">80</span> &gt; a; a++) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-number">16</span> &gt; a) m[a] = d[e + a] | <span class="hljs-number">0</span>; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">var</span> c = m[a - <span class="hljs-number">3</span>] ^ m[a - <span class="hljs-number">8</span>] ^ m[a - <span class="hljs-number">14</span>] ^ m[a - <span class="hljs-number">16</span>];<br>                    m[a] = c &lt;&lt; <span class="hljs-number">1</span> | c &gt;&gt;&gt; <span class="hljs-number">31</span><br>                &#125;<br>                c = (n &lt;&lt; <span class="hljs-number">5</span> | n &gt;&gt;&gt; <span class="hljs-number">27</span>) + l + m[a];<br>                c = <span class="hljs-number">20</span> &gt; a ? c + ((j &amp; h | ~j &amp; g) + <span class="hljs-number">1518500249</span>) : <span class="hljs-number">40</span> &gt; a ? c + ((j ^ h ^ g) + <span class="hljs-number">1859775393</span>) : <span class="hljs-number">60</span> &gt; a ? c + ((j &amp; h | j &amp; g | h &amp; g) - <span class="hljs-number">1894007588</span>) : c + ((j ^ h ^<br>                    g) - <span class="hljs-number">899497514</span>);<br>                l = g;<br>                g = h;<br>                h = j &lt;&lt; <span class="hljs-number">30</span> | j &gt;&gt;&gt; <span class="hljs-number">2</span>;<br>                j = n;<br>                n = c<br>            &#125;<br>            b[<span class="hljs-number">0</span>] = b[<span class="hljs-number">0</span>] + n | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">1</span>] = b[<span class="hljs-number">1</span>] + j | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">2</span>] = b[<span class="hljs-number">2</span>] + h | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">3</span>] = b[<span class="hljs-number">3</span>] + g | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">4</span>] = b[<span class="hljs-number">4</span>] + l | <span class="hljs-number">0</span><br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, e = d.<span class="hljs-property">words</span>, b = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, g = <span class="hljs-number">8</span> * d.<span class="hljs-property">sigBytes</span>;<br>            e[g &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - g % <span class="hljs-number">32</span>;<br>            e[(g + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">14</span>] = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(b / <span class="hljs-number">4294967296</span>);<br>            e[(g + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">15</span>] = b;<br>            d.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * e.<span class="hljs-property">length</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span><br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> e = d.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            e.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> e<br>        &#125;<br>    &#125;);<br>    g.<span class="hljs-property">SHA1</span> = d.<span class="hljs-title function_">_createHelper</span>(l);<br>    g.<span class="hljs-property">HmacSHA1</span> = d.<span class="hljs-title function_">_createHmacHelper</span>(l)<br>&#125;)();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> g = <span class="hljs-title class_">CryptoJS</span>, l = g.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>;<br>    g.<span class="hljs-property">algo</span>.<span class="hljs-property">HMAC</span> = g.<span class="hljs-property">lib</span>.<span class="hljs-property">Base</span>.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, d</span>) &#123;<br>            e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span> = <span class="hljs-keyword">new</span> e.<span class="hljs-property">init</span>;<br>            <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> d &amp;&amp; (d = l.<span class="hljs-title function_">parse</span>(d));<br>            <span class="hljs-keyword">var</span> g = e.<span class="hljs-property">blockSize</span>, k = <span class="hljs-number">4</span> * g;<br>            d.<span class="hljs-property">sigBytes</span> &gt; k &amp;&amp; (d = e.<span class="hljs-title function_">finalize</span>(d));<br>            d.<span class="hljs-title function_">clamp</span>();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> p = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_oKey</span> = d.<span class="hljs-title function_">clone</span>(), b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iKey</span> = d.<span class="hljs-title function_">clone</span>(), n = p.<span class="hljs-property">words</span>, j = b.<span class="hljs-property">words</span>, h = <span class="hljs-number">0</span>; h &lt; g; h++) n[h] ^= <span class="hljs-number">1549556828</span>, j[h] ^= <span class="hljs-number">909522486</span>;<br>            p.<span class="hljs-property">sigBytes</span> = b.<span class="hljs-property">sigBytes</span> = k;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>;<br>            e.<span class="hljs-title function_">reset</span>();<br>            e.<span class="hljs-title function_">update</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_iKey</span>)<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>.<span class="hljs-title function_">update</span>(e);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>            <span class="hljs-keyword">var</span> d =<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>;<br>            e = d.<span class="hljs-title function_">finalize</span>(e);<br>            d.<span class="hljs-title function_">reset</span>();<br>            <span class="hljs-keyword">return</span> d.<span class="hljs-title function_">finalize</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_oKey</span>.<span class="hljs-title function_">clone</span>().<span class="hljs-title function_">concat</span>(e))<br>        &#125;<br>    &#125;)<br>&#125;)();<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hmac-Ripemd160</title>
    <link href="/posts/f418bd3e/"/>
    <url>/posts/f418bd3e/</url>
    
    <content type="html"><![CDATA[<h2 id="Hmac-Ripemd160加密源码"><a href="#Hmac-Ripemd160加密源码" class="headerlink" title="Hmac-Ripemd160加密源码"></a>Hmac-Ripemd160加密源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">(c) 2012 by C?dric Mesnil. All rights reserved.</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</span><br><span class="hljs-comment">    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">h, j</span>) &#123;<br>    <span class="hljs-keyword">var</span> c = &#123;&#125;, e = c.<span class="hljs-property">lib</span> = &#123;&#125;, A = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, l = e.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                A.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> d = <span class="hljs-keyword">new</span> A;<br>                a &amp;&amp; d.<span class="hljs-title function_">mixIn</span>(a);<br>                d.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (d.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    d.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                d.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = d;<br>                d.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> d<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                a.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(a, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d <span class="hljs-keyword">in</span> a) a.<span class="hljs-title function_">hasOwnProperty</span>(d) &amp;&amp; (<span class="hljs-variable language_">this</span>[d] = a[d]);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = a.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        m = e.<span class="hljs-property">WordArray</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, d</span>) &#123;<br>                a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = a || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = d != j ? d : <span class="hljs-number">4</span> * a.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> (a || x).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, B = a.<span class="hljs-property">words</span>, f = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (f % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">0</span>; b &lt; a; b++) d[f + b &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (B[b &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (b % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((f + b) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; B.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (b = <span class="hljs-number">0</span>; b &lt; a; b += <span class="hljs-number">4</span>) d[f + b &gt;&gt;&gt; <span class="hljs-number">2</span>] = B[b &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> d.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(d, B);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += a;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a[d &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (d % <span class="hljs-number">4</span>);<br>                a.<span class="hljs-property">length</span> = h.<span class="hljs-title function_">ceil</span>(d / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = l.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = [], b = <span class="hljs-number">0</span>; b &lt; a; b += <span class="hljs-number">4</span>) d.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * h.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> m.<span class="hljs-title function_">init</span>(d, a)<br>            &#125;<br>        &#125;), v = c.<span class="hljs-property">enc</span> = &#123;&#125;, x = v.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> d = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], f = <span class="hljs-number">0</span>; f &lt; a; f++) &#123;<br>                    <span class="hljs-keyword">var</span> c = d[f &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    b.<span class="hljs-title function_">push</span>((c &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    b.<span class="hljs-title function_">push</span>((c &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> b.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = a.<span class="hljs-property">length</span>, b = [], f = <span class="hljs-number">0</span>; f &lt; d; f += <span class="hljs-number">2</span>) b[f &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(a.<span class="hljs-title function_">substr</span>(f,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (f % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> m.<span class="hljs-title function_">init</span>(b, d / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, w = v.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> d = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], f = <span class="hljs-number">0</span>; f &lt; a; f++) b.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(d[f &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> b.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = a.<span class="hljs-property">length</span>, c = [], f = <span class="hljs-number">0</span>; f &lt; b; f++) c[f &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a.<span class="hljs-title function_">charCodeAt</span>(f) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> m.<span class="hljs-title function_">init</span>(c, b)<br>            &#125;<br>        &#125;, k = v.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(w.<span class="hljs-title function_">stringify</span>(a)))<br>                &#125; <span class="hljs-keyword">catch</span> (b) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> w.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(a)))<br>            &#125;<br>        &#125;,<br>        u = e.<span class="hljs-property">BufferedBlockAlgorithm</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> m.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = k.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, c = b.<span class="hljs-property">words</span>, f = b.<span class="hljs-property">sigBytes</span>, e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, k = f / (<span class="hljs-number">4</span> * e),<br>                    k = a ? h.<span class="hljs-title function_">ceil</span>(k) : h.<span class="hljs-title function_">max</span>((k | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                a = k * e;<br>                f = h.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * a, f);<br>                <span class="hljs-keyword">if</span> (a) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> u = <span class="hljs-number">0</span>; u &lt; a; u += e) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(c, u);<br>                    u = c.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, a);<br>                    b.<span class="hljs-property">sigBytes</span> -= f<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> m.<span class="hljs-title function_">init</span>(u, f)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = l.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    e.<span class="hljs-property">Hasher</span> = u.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: l.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            u.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, c</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(c)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">d, c</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> b.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    c)).<span class="hljs-title function_">finalize</span>(d)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> b = c.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> c<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> h = <span class="hljs-title class_">CryptoJS</span>, j = h.<span class="hljs-property">lib</span>, c = j.<span class="hljs-property">WordArray</span>, e = j.<span class="hljs-property">Hasher</span>, j = h.<span class="hljs-property">algo</span>,<br>        A = c.<span class="hljs-title function_">create</span>([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">7</span>, <span class="hljs-number">4</span>, <span class="hljs-number">13</span>, <span class="hljs-number">1</span>, <span class="hljs-number">10</span>, <span class="hljs-number">6</span>, <span class="hljs-number">15</span>, <span class="hljs-number">3</span>, <span class="hljs-number">12</span>, <span class="hljs-number">0</span>, <span class="hljs-number">9</span>, <span class="hljs-number">5</span>, <span class="hljs-number">2</span>, <span class="hljs-number">14</span>, <span class="hljs-number">11</span>, <span class="hljs-number">8</span>, <span class="hljs-number">3</span>, <span class="hljs-number">10</span>, <span class="hljs-number">14</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">15</span>, <span class="hljs-number">8</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0</span>, <span class="hljs-number">6</span>, <span class="hljs-number">13</span>, <span class="hljs-number">11</span>, <span class="hljs-number">5</span>, <span class="hljs-number">12</span>, <span class="hljs-number">1</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">10</span>, <span class="hljs-number">0</span>, <span class="hljs-number">8</span>, <span class="hljs-number">12</span>, <span class="hljs-number">4</span>, <span class="hljs-number">13</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>, <span class="hljs-number">15</span>, <span class="hljs-number">14</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">9</span>, <span class="hljs-number">7</span>, <span class="hljs-number">12</span>, <span class="hljs-number">2</span>, <span class="hljs-number">10</span>, <span class="hljs-number">14</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">8</span>, <span class="hljs-number">11</span>, <span class="hljs-number">6</span>, <span class="hljs-number">15</span>, <span class="hljs-number">13</span>]),<br>        l = c.<span class="hljs-title function_">create</span>([<span class="hljs-number">5</span>, <span class="hljs-number">14</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0</span>, <span class="hljs-number">9</span>, <span class="hljs-number">2</span>, <span class="hljs-number">11</span>, <span class="hljs-number">4</span>, <span class="hljs-number">13</span>, <span class="hljs-number">6</span>, <span class="hljs-number">15</span>, <span class="hljs-number">8</span>, <span class="hljs-number">1</span>, <span class="hljs-number">10</span>, <span class="hljs-number">3</span>, <span class="hljs-number">12</span>, <span class="hljs-number">6</span>, <span class="hljs-number">11</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0</span>, <span class="hljs-number">13</span>, <span class="hljs-number">5</span>, <span class="hljs-number">10</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">8</span>, <span class="hljs-number">12</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">15</span>, <span class="hljs-number">5</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>, <span class="hljs-number">14</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">8</span>, <span class="hljs-number">12</span>, <span class="hljs-number">2</span>, <span class="hljs-number">10</span>, <span class="hljs-number">0</span>, <span class="hljs-number">4</span>, <span class="hljs-number">13</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>, <span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">11</span>, <span class="hljs-number">15</span>, <span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">12</span>, <span class="hljs-number">2</span>, <span class="hljs-number">13</span>, <span class="hljs-number">9</span>, <span class="hljs-number">7</span>, <span class="hljs-number">10</span>, <span class="hljs-number">14</span>, <span class="hljs-number">12</span>, <span class="hljs-number">15</span>, <span class="hljs-number">10</span>, <span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>, <span class="hljs-number">6</span>, <span class="hljs-number">2</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>]),<br>        m = c.<span class="hljs-title function_">create</span>([<span class="hljs-number">11</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">12</span>,<br>            <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>, <span class="hljs-number">13</span>, <span class="hljs-number">11</span>, <span class="hljs-number">9</span>, <span class="hljs-number">7</span>, <span class="hljs-number">15</span>, <span class="hljs-number">7</span>, <span class="hljs-number">12</span>, <span class="hljs-number">15</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">7</span>, <span class="hljs-number">13</span>, <span class="hljs-number">12</span>, <span class="hljs-number">11</span>, <span class="hljs-number">13</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">14</span>, <span class="hljs-number">9</span>, <span class="hljs-number">13</span>, <span class="hljs-number">15</span>, <span class="hljs-number">14</span>, <span class="hljs-number">8</span>, <span class="hljs-number">13</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>, <span class="hljs-number">12</span>, <span class="hljs-number">7</span>, <span class="hljs-number">5</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">9</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">14</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>, <span class="hljs-number">12</span>, <span class="hljs-number">9</span>, <span class="hljs-number">15</span>, <span class="hljs-number">5</span>, <span class="hljs-number">11</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>, <span class="hljs-number">13</span>, <span class="hljs-number">12</span>, <span class="hljs-number">5</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">11</span>, <span class="hljs-number">8</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>]),<br>        v = c.<span class="hljs-title function_">create</span>([<span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">13</span>, <span class="hljs-number">15</span>, <span class="hljs-number">15</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">11</span>, <span class="hljs-number">14</span>, <span class="hljs-number">14</span>, <span class="hljs-number">12</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">13</span>, <span class="hljs-number">15</span>, <span class="hljs-number">7</span>, <span class="hljs-number">12</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">12</span>, <span class="hljs-number">7</span>, <span class="hljs-number">6</span>, <span class="hljs-number">15</span>, <span class="hljs-number">13</span>, <span class="hljs-number">11</span>, <span class="hljs-number">9</span>, <span class="hljs-number">7</span>, <span class="hljs-number">15</span>, <span class="hljs-number">11</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>, <span class="hljs-number">14</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">5</span>, <span class="hljs-number">14</span>, <span class="hljs-number">13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">7</span>, <span class="hljs-number">5</span>, <span class="hljs-number">15</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">11</span>, <span class="hljs-number">14</span>, <span class="hljs-number">14</span>, <span class="hljs-number">6</span>, <span class="hljs-number">14</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">12</span>, <span class="hljs-number">9</span>, <span class="hljs-number">12</span>, <span class="hljs-number">5</span>, <span class="hljs-number">15</span>, <span class="hljs-number">8</span>, <span class="hljs-number">8</span>, <span class="hljs-number">5</span>, <span class="hljs-number">12</span>, <span class="hljs-number">9</span>, <span class="hljs-number">12</span>, <span class="hljs-number">5</span>, <span class="hljs-number">14</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>, <span class="hljs-number">13</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>, <span class="hljs-number">15</span>, <span class="hljs-number">13</span>, <span class="hljs-number">11</span>, <span class="hljs-number">11</span>]),<br>        x = c.<span class="hljs-title function_">create</span>([<span class="hljs-number">0</span>, <span class="hljs-number">1518500249</span>, <span class="hljs-number">1859775393</span>, <span class="hljs-number">2400959708</span>, <span class="hljs-number">2840853838</span>]),<br>        w = c.<span class="hljs-title function_">create</span>([<span class="hljs-number">1352829926</span>, <span class="hljs-number">1548603684</span>, <span class="hljs-number">1836072691</span>,<br>            <span class="hljs-number">2053994217</span>, <span class="hljs-number">0</span>]), j = j.<span class="hljs-property">RIPEMD160</span> = e.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = c.<span class="hljs-title function_">create</span>([<span class="hljs-number">1732584193</span>, <span class="hljs-number">4023233417</span>, <span class="hljs-number">2562383102</span>, <span class="hljs-number">271733878</span>, <span class="hljs-number">3285377520</span>])<br>            &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c, e</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">0</span>; <span class="hljs-number">16</span> &gt; b; b++) &#123;<br>                    <span class="hljs-keyword">var</span> a = e + b, d = c[a];<br>                    c[a] = (d &lt;&lt; <span class="hljs-number">8</span> | d &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (d &lt;&lt; <span class="hljs-number">24</span> | d &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span><br>                &#125;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>, d = x.<span class="hljs-property">words</span>, h = w.<span class="hljs-property">words</span>, f = A.<span class="hljs-property">words</span>, j = l.<span class="hljs-property">words</span>, E = m.<span class="hljs-property">words</span>, F = v.<span class="hljs-property">words</span>, C,<br>                    n, p, q, y, D, r, s, t, z;<br>                D = C = a[<span class="hljs-number">0</span>];<br>                r = n = a[<span class="hljs-number">1</span>];<br>                s = p = a[<span class="hljs-number">2</span>];<br>                t = q = a[<span class="hljs-number">3</span>];<br>                z = y = a[<span class="hljs-number">4</span>];<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> g, b = <span class="hljs-number">0</span>; <span class="hljs-number">80</span> &gt; b; b += <span class="hljs-number">1</span>) g = C + c[e + f[b]] | <span class="hljs-number">0</span>, g = <span class="hljs-number">16</span> &gt; b ? g + ((n ^ p ^ q) + d[<span class="hljs-number">0</span>]) : <span class="hljs-number">32</span> &gt; b ? g + ((n &amp; p | ~n &amp; q) + d[<span class="hljs-number">1</span>]) : <span class="hljs-number">48</span> &gt; b ?<br>                    g + (((n | ~p) ^ q) + d[<span class="hljs-number">2</span>]) : <span class="hljs-number">64</span> &gt; b ? g + ((n &amp; q | p &amp; ~q) + d[<span class="hljs-number">3</span>]) : g + ((n ^ (p | ~q)) + d[<span class="hljs-number">4</span>]), g |= <span class="hljs-number">0</span>, g = g &lt;&lt; E[b] | g &gt;&gt;&gt; <span class="hljs-number">32</span> - E[b], g = g + y | <span class="hljs-number">0</span>, C = y, y = q, q = p &lt;&lt; <span class="hljs-number">10</span> | p &gt;&gt;&gt; <span class="hljs-number">22</span>, p = n, n = g, g = D + c[e + j[b]] | <span class="hljs-number">0</span>, g = <span class="hljs-number">16</span> &gt; b ? g + ((r ^ (s | ~t)) + h[<span class="hljs-number">0</span>]) : <span class="hljs-number">32</span> &gt; b ? g + ((r &amp; t | s &amp; ~t) + h[<span class="hljs-number">1</span>]) : <span class="hljs-number">48</span> &gt; b ? g + (((r | ~s) ^ t) + h[<span class="hljs-number">2</span>]) : <span class="hljs-number">64</span> &gt; b ? g + ((r &amp; s | ~r &amp; t) + h[<span class="hljs-number">3</span>]) : g + ((r ^ s ^ t) + h[<span class="hljs-number">4</span>]), g |= <span class="hljs-number">0</span>, g = g &lt;&lt; F[b] | g &gt;&gt;&gt; <span class="hljs-number">32</span> - F[b], g = g + z | <span class="hljs-number">0</span>, D = z, z = t, t = s &lt;&lt; <span class="hljs-number">10</span> | s &gt;&gt;&gt; <span class="hljs-number">22</span>, s = r, r = g;<br>                g = a[<span class="hljs-number">1</span>] + p + t | <span class="hljs-number">0</span>;<br>                a[<span class="hljs-number">1</span>] = a[<span class="hljs-number">2</span>] + q + z | <span class="hljs-number">0</span>;<br>                a[<span class="hljs-number">2</span>] = a[<span class="hljs-number">3</span>] + y + D | <span class="hljs-number">0</span>;<br>                a[<span class="hljs-number">3</span>] = a[<span class="hljs-number">4</span>] + C + r | <span class="hljs-number">0</span>;<br>                a[<span class="hljs-number">4</span>] = a[<span class="hljs-number">0</span>] + n + s | <span class="hljs-number">0</span>;<br>                a[<span class="hljs-number">0</span>] = g<br>            &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, e = c.<span class="hljs-property">words</span>, b = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, a = <span class="hljs-number">8</span> * c.<span class="hljs-property">sigBytes</span>;<br>                e[a &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - a % <span class="hljs-number">32</span>;<br>                e[(a + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">14</span>] = (b &lt;&lt; <span class="hljs-number">8</span> | b &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (b &lt;&lt; <span class="hljs-number">24</span> | b &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>                c.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * (e.<span class="hljs-property">length</span> + <span class="hljs-number">1</span>);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>                c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>;<br>                e = c.<span class="hljs-property">words</span>;<br>                <span class="hljs-keyword">for</span> (b = <span class="hljs-number">0</span>; <span class="hljs-number">5</span> &gt; b; b++) a = e[b], e[b] = (a &lt;&lt; <span class="hljs-number">8</span> | a &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (a &lt;&lt; <span class="hljs-number">24</span> | a &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>                <span class="hljs-keyword">return</span> c<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> c = e.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                c.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> c<br>            &#125;<br>        &#125;);<br>    h.<span class="hljs-property">RIPEMD160</span> = e.<span class="hljs-title function_">_createHelper</span>(j);<br>    h.<span class="hljs-property">HmacRIPEMD160</span> = e.<span class="hljs-title function_">_createHmacHelper</span>(j)<br>&#125;)(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> h = <span class="hljs-title class_">CryptoJS</span>, j = h.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>;<br>    h.<span class="hljs-property">algo</span>.<span class="hljs-property">HMAC</span> = h.<span class="hljs-property">lib</span>.<span class="hljs-property">Base</span>.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c, e</span>) &#123;<br>            c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span> = <span class="hljs-keyword">new</span> c.<span class="hljs-property">init</span>;<br>            <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> e &amp;&amp; (e = j.<span class="hljs-title function_">parse</span>(e));<br>            <span class="hljs-keyword">var</span> h = c.<span class="hljs-property">blockSize</span>, l = <span class="hljs-number">4</span> * h;<br>            e.<span class="hljs-property">sigBytes</span> &gt; l &amp;&amp; (e = c.<span class="hljs-title function_">finalize</span>(e));<br>            e.<span class="hljs-title function_">clamp</span>();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> m = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_oKey</span> = e.<span class="hljs-title function_">clone</span>(), v = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iKey</span> = e.<span class="hljs-title function_">clone</span>(), x = m.<span class="hljs-property">words</span>, w = v.<span class="hljs-property">words</span>, k = <span class="hljs-number">0</span>; k &lt; h; k++) x[k] ^= <span class="hljs-number">1549556828</span>, w[k] ^= <span class="hljs-number">909522486</span>;<br>            m.<span class="hljs-property">sigBytes</span> = v.<span class="hljs-property">sigBytes</span> = l;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>;<br>            c.<span class="hljs-title function_">reset</span>();<br>            c.<span class="hljs-title function_">update</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_iKey</span>)<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>.<span class="hljs-title function_">update</span>(c);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>            <span class="hljs-keyword">var</span> e =<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>;<br>            c = e.<span class="hljs-title function_">finalize</span>(c);<br>            e.<span class="hljs-title function_">reset</span>();<br>            <span class="hljs-keyword">return</span> e.<span class="hljs-title function_">finalize</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_oKey</span>.<span class="hljs-title function_">clone</span>().<span class="hljs-title function_">concat</span>(c))<br>        &#125;<br>    &#125;)<br>&#125;)();<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hmac-Md5</title>
    <link href="/posts/cf05c6c0/"/>
    <url>/posts/cf05c6c0/</url>
    
    <content type="html"><![CDATA[<h2 id="Hmac-Md5加密源码"><a href="#Hmac-Md5加密源码" class="headerlink" title="Hmac-Md5加密源码"></a>Hmac-Md5加密源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">q, r</span>) &#123;<br>    <span class="hljs-keyword">var</span> k = &#123;&#125;, g = k.<span class="hljs-property">lib</span> = &#123;&#125;, p = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, t = g.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                p.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> j = <span class="hljs-keyword">new</span> p;<br>                b &amp;&amp; j.<span class="hljs-title function_">mixIn</span>(b);<br>                j.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (j.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    j.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                j.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = j;<br>                j.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> j<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                b.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(b, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> b<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j <span class="hljs-keyword">in</span> b) b.<span class="hljs-title function_">hasOwnProperty</span>(j) &amp;&amp; (<span class="hljs-variable language_">this</span>[j] = b[j]);<br>                b.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = b.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        n = g.<span class="hljs-property">WordArray</span> = t.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, j</span>) &#123;<br>                b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = b || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = j != r ? j : <span class="hljs-number">4</span> * b.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">return</span> (b || u).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">var</span> j = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, a = b.<span class="hljs-property">words</span>, l = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                b = b.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (l % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> h = <span class="hljs-number">0</span>; h &lt; b; h++) j[l + h &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a[h &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (h % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((l + h) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; a.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (h = <span class="hljs-number">0</span>; h &lt; b; h += <span class="hljs-number">4</span>) j[l + h &gt;&gt;&gt; <span class="hljs-number">2</span>] = a[h &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> j.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(j, a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += b;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, j = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                b[j &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>);<br>                b.<span class="hljs-property">length</span> = q.<span class="hljs-title function_">ceil</span>(j / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> b = t.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                b.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> b<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = [], a = <span class="hljs-number">0</span>; a &lt; b; a += <span class="hljs-number">4</span>) j.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * q.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> n.<span class="hljs-title function_">init</span>(j, b)<br>            &#125;<br>        &#125;), v = k.<span class="hljs-property">enc</span> = &#123;&#125;, u = v.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">var</span> a = b.<span class="hljs-property">words</span>;<br>                b = b.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> h = [], l = <span class="hljs-number">0</span>; l &lt; b; l++) &#123;<br>                    <span class="hljs-keyword">var</span> m = a[l &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (l % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    h.<span class="hljs-title function_">push</span>((m &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    h.<span class="hljs-title function_">push</span>((m &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> h.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = b.<span class="hljs-property">length</span>, h = [], l = <span class="hljs-number">0</span>; l &lt; a; l += <span class="hljs-number">2</span>) h[l &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(b.<span class="hljs-title function_">substr</span>(l,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (l % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> n.<span class="hljs-title function_">init</span>(h, a / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, a = v.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">var</span> a = b.<span class="hljs-property">words</span>;<br>                b = b.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> h = [], l = <span class="hljs-number">0</span>; l &lt; b; l++) h.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(a[l &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (l % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> h.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = b.<span class="hljs-property">length</span>, h = [], l = <span class="hljs-number">0</span>; l &lt; a; l++) h[l &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (b.<span class="hljs-title function_">charCodeAt</span>(l) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (l % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> n.<span class="hljs-title function_">init</span>(h, a)<br>            &#125;<br>        &#125;, s = v.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(a.<span class="hljs-title function_">stringify</span>(b)))<br>                &#125; <span class="hljs-keyword">catch</span> (h) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">return</span> a.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(b)))<br>            &#125;<br>        &#125;,<br>        h = g.<span class="hljs-property">BufferedBlockAlgorithm</span> = t.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> n.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> b &amp;&amp; (b = s.<span class="hljs-title function_">parse</span>(b));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(b);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += b.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, h = a.<span class="hljs-property">words</span>, l = a.<span class="hljs-property">sigBytes</span>, m = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, k = l / (<span class="hljs-number">4</span> * m),<br>                    k = b ? q.<span class="hljs-title function_">ceil</span>(k) : q.<span class="hljs-title function_">max</span>((k | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                b = k * m;<br>                l = q.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * b, l);<br>                <span class="hljs-keyword">if</span> (b) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> g = <span class="hljs-number">0</span>; g &lt; b; g += m) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(h, g);<br>                    g = h.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, b);<br>                    a.<span class="hljs-property">sigBytes</span> -= l<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> n.<span class="hljs-title function_">init</span>(g, l)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> b = t.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                b.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> b<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    g.<span class="hljs-property">Hasher</span> = h.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: t.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(b);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            h.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(b);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            b &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(b);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">a, h</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> b.<span class="hljs-title function_">init</span>(h)).<span class="hljs-title function_">finalize</span>(a)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">a, h</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> m.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(b,<br>                    h)).<span class="hljs-title function_">finalize</span>(a)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> m = k.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> k<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">q</span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">r</span>(<span class="hljs-params">a, m, b, j, g, l, k</span>) &#123;<br>        a = a + (m &amp; b | ~m &amp; j) + g + k;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; l | a &gt;&gt;&gt; <span class="hljs-number">32</span> - l) + m<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">k</span>(<span class="hljs-params">a, m, b, j, g, l, k</span>) &#123;<br>        a = a + (m &amp; j | b &amp; ~j) + g + k;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; l | a &gt;&gt;&gt; <span class="hljs-number">32</span> - l) + m<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">g</span>(<span class="hljs-params">a, m, b, j, g, l, k</span>) &#123;<br>        a = a + (m ^ b ^ j) + g + k;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; l | a &gt;&gt;&gt; <span class="hljs-number">32</span> - l) + m<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">p</span>(<span class="hljs-params">a, g, b, j, k, l, p</span>) &#123;<br>        a = a + (b ^ (g | ~j)) + k + p;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; l | a &gt;&gt;&gt; <span class="hljs-number">32</span> - l) + g<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = <span class="hljs-title class_">CryptoJS</span>, n = t.<span class="hljs-property">lib</span>, v = n.<span class="hljs-property">WordArray</span>, u = n.<span class="hljs-property">Hasher</span>, n = t.<span class="hljs-property">algo</span>, a = [], s = <span class="hljs-number">0</span>; <span class="hljs-number">64</span> &gt; s; s++) a[s] = <span class="hljs-number">4294967296</span> * q.<span class="hljs-title function_">abs</span>(q.<span class="hljs-title function_">sin</span>(s + <span class="hljs-number">1</span>)) | <span class="hljs-number">0</span>;<br>    n = n.<span class="hljs-property">MD5</span> = u.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> v.<span class="hljs-title function_">init</span>([<span class="hljs-number">1732584193</span>, <span class="hljs-number">4023233417</span>, <span class="hljs-number">2562383102</span>, <span class="hljs-number">271733878</span>])<br>        &#125;,<br>        <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">h, m</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">0</span>; <span class="hljs-number">16</span> &gt; b; b++) &#123;<br>                <span class="hljs-keyword">var</span> j = m + b, n = h[j];<br>                h[j] = (n &lt;&lt; <span class="hljs-number">8</span> | n &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (n &lt;&lt; <span class="hljs-number">24</span> | n &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span><br>            &#125;<br>            <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>, j = h[m + <span class="hljs-number">0</span>], n = h[m + <span class="hljs-number">1</span>], l = h[m + <span class="hljs-number">2</span>], q = h[m + <span class="hljs-number">3</span>], t = h[m + <span class="hljs-number">4</span>],<br>                s = h[m + <span class="hljs-number">5</span>], u = h[m + <span class="hljs-number">6</span>], v = h[m + <span class="hljs-number">7</span>], w = h[m + <span class="hljs-number">8</span>], x = h[m + <span class="hljs-number">9</span>], y = h[m + <span class="hljs-number">10</span>], z = h[m + <span class="hljs-number">11</span>],<br>                A = h[m + <span class="hljs-number">12</span>], B = h[m + <span class="hljs-number">13</span>], C = h[m + <span class="hljs-number">14</span>], D = h[m + <span class="hljs-number">15</span>], c = b[<span class="hljs-number">0</span>], d = b[<span class="hljs-number">1</span>], e = b[<span class="hljs-number">2</span>], f = b[<span class="hljs-number">3</span>],<br>                c = <span class="hljs-title function_">r</span>(c, d, e, f, j, <span class="hljs-number">7</span>, a[<span class="hljs-number">0</span>]), f = <span class="hljs-title function_">r</span>(f, c, d, e, n, <span class="hljs-number">12</span>, a[<span class="hljs-number">1</span>]), e = <span class="hljs-title function_">r</span>(e, f, c, d, l, <span class="hljs-number">17</span>, a[<span class="hljs-number">2</span>]),<br>                d = <span class="hljs-title function_">r</span>(d, e, f, c, q, <span class="hljs-number">22</span>, a[<span class="hljs-number">3</span>]), c = <span class="hljs-title function_">r</span>(c, d, e, f, t, <span class="hljs-number">7</span>, a[<span class="hljs-number">4</span>]), f = <span class="hljs-title function_">r</span>(f, c, d, e, s, <span class="hljs-number">12</span>, a[<span class="hljs-number">5</span>]),<br>                e = <span class="hljs-title function_">r</span>(e, f, c, d, u, <span class="hljs-number">17</span>, a[<span class="hljs-number">6</span>]), d = <span class="hljs-title function_">r</span>(d, e, f, c, v, <span class="hljs-number">22</span>, a[<span class="hljs-number">7</span>]),<br>                c = <span class="hljs-title function_">r</span>(c, d, e, f, w, <span class="hljs-number">7</span>, a[<span class="hljs-number">8</span>]), f = <span class="hljs-title function_">r</span>(f, c, d, e, x, <span class="hljs-number">12</span>, a[<span class="hljs-number">9</span>]), e = <span class="hljs-title function_">r</span>(e, f, c, d, y, <span class="hljs-number">17</span>, a[<span class="hljs-number">10</span>]),<br>                d = <span class="hljs-title function_">r</span>(d, e, f, c, z, <span class="hljs-number">22</span>, a[<span class="hljs-number">11</span>]), c = <span class="hljs-title function_">r</span>(c, d, e, f, A, <span class="hljs-number">7</span>, a[<span class="hljs-number">12</span>]), f = <span class="hljs-title function_">r</span>(f, c, d, e, B, <span class="hljs-number">12</span>, a[<span class="hljs-number">13</span>]),<br>                e = <span class="hljs-title function_">r</span>(e, f, c, d, C, <span class="hljs-number">17</span>, a[<span class="hljs-number">14</span>]), d = <span class="hljs-title function_">r</span>(d, e, f, c, D, <span class="hljs-number">22</span>, a[<span class="hljs-number">15</span>]), c = <span class="hljs-title function_">k</span>(c, d, e, f, n, <span class="hljs-number">5</span>, a[<span class="hljs-number">16</span>]),<br>                f = <span class="hljs-title function_">k</span>(f, c, d, e, u, <span class="hljs-number">9</span>, a[<span class="hljs-number">17</span>]), e = <span class="hljs-title function_">k</span>(e, f, c, d, z, <span class="hljs-number">14</span>, a[<span class="hljs-number">18</span>]), d = <span class="hljs-title function_">k</span>(d, e, f, c, j, <span class="hljs-number">20</span>, a[<span class="hljs-number">19</span>]),<br>                c = <span class="hljs-title function_">k</span>(c, d, e, f, s, <span class="hljs-number">5</span>, a[<span class="hljs-number">20</span>]), f = <span class="hljs-title function_">k</span>(f, c, d, e, y, <span class="hljs-number">9</span>, a[<span class="hljs-number">21</span>]), e = <span class="hljs-title function_">k</span>(e, f, c, d, D, <span class="hljs-number">14</span>, a[<span class="hljs-number">22</span>]),<br>                d = <span class="hljs-title function_">k</span>(d, e, f, c, t, <span class="hljs-number">20</span>, a[<span class="hljs-number">23</span>]), c = <span class="hljs-title function_">k</span>(c, d, e, f, x, <span class="hljs-number">5</span>, a[<span class="hljs-number">24</span>]), f = <span class="hljs-title function_">k</span>(f, c, d, e, C, <span class="hljs-number">9</span>, a[<span class="hljs-number">25</span>]),<br>                e = <span class="hljs-title function_">k</span>(e, f, c, d, q, <span class="hljs-number">14</span>, a[<span class="hljs-number">26</span>]), d = <span class="hljs-title function_">k</span>(d, e, f, c, w, <span class="hljs-number">20</span>, a[<span class="hljs-number">27</span>]), c = <span class="hljs-title function_">k</span>(c, d, e, f, B, <span class="hljs-number">5</span>, a[<span class="hljs-number">28</span>]),<br>                f = <span class="hljs-title function_">k</span>(f, c,<br>                    d, e, l, <span class="hljs-number">9</span>, a[<span class="hljs-number">29</span>]), e = <span class="hljs-title function_">k</span>(e, f, c, d, v, <span class="hljs-number">14</span>, a[<span class="hljs-number">30</span>]), d = <span class="hljs-title function_">k</span>(d, e, f, c, A, <span class="hljs-number">20</span>, a[<span class="hljs-number">31</span>]),<br>                c = <span class="hljs-title function_">g</span>(c, d, e, f, s, <span class="hljs-number">4</span>, a[<span class="hljs-number">32</span>]), f = <span class="hljs-title function_">g</span>(f, c, d, e, w, <span class="hljs-number">11</span>, a[<span class="hljs-number">33</span>]), e = <span class="hljs-title function_">g</span>(e, f, c, d, z, <span class="hljs-number">16</span>, a[<span class="hljs-number">34</span>]),<br>                d = <span class="hljs-title function_">g</span>(d, e, f, c, C, <span class="hljs-number">23</span>, a[<span class="hljs-number">35</span>]), c = <span class="hljs-title function_">g</span>(c, d, e, f, n, <span class="hljs-number">4</span>, a[<span class="hljs-number">36</span>]), f = <span class="hljs-title function_">g</span>(f, c, d, e, t, <span class="hljs-number">11</span>, a[<span class="hljs-number">37</span>]),<br>                e = <span class="hljs-title function_">g</span>(e, f, c, d, v, <span class="hljs-number">16</span>, a[<span class="hljs-number">38</span>]), d = <span class="hljs-title function_">g</span>(d, e, f, c, y, <span class="hljs-number">23</span>, a[<span class="hljs-number">39</span>]), c = <span class="hljs-title function_">g</span>(c, d, e, f, B, <span class="hljs-number">4</span>, a[<span class="hljs-number">40</span>]),<br>                f = <span class="hljs-title function_">g</span>(f, c, d, e, j, <span class="hljs-number">11</span>, a[<span class="hljs-number">41</span>]), e = <span class="hljs-title function_">g</span>(e, f, c, d, q, <span class="hljs-number">16</span>, a[<span class="hljs-number">42</span>]), d = <span class="hljs-title function_">g</span>(d, e, f, c, u, <span class="hljs-number">23</span>, a[<span class="hljs-number">43</span>]),<br>                c = <span class="hljs-title function_">g</span>(c, d, e, f, x, <span class="hljs-number">4</span>, a[<span class="hljs-number">44</span>]), f = <span class="hljs-title function_">g</span>(f, c, d, e, A, <span class="hljs-number">11</span>, a[<span class="hljs-number">45</span>]), e = <span class="hljs-title function_">g</span>(e, f, c, d, D, <span class="hljs-number">16</span>, a[<span class="hljs-number">46</span>]),<br>                d = <span class="hljs-title function_">g</span>(d, e, f, c, l, <span class="hljs-number">23</span>, a[<span class="hljs-number">47</span>]), c = <span class="hljs-title function_">p</span>(c, d, e, f, j, <span class="hljs-number">6</span>, a[<span class="hljs-number">48</span>]), f = <span class="hljs-title function_">p</span>(f, c, d, e, v, <span class="hljs-number">10</span>, a[<span class="hljs-number">49</span>]),<br>                e = <span class="hljs-title function_">p</span>(e, f, c, d,<br>                    C, <span class="hljs-number">15</span>, a[<span class="hljs-number">50</span>]), d = <span class="hljs-title function_">p</span>(d, e, f, c, s, <span class="hljs-number">21</span>, a[<span class="hljs-number">51</span>]), c = <span class="hljs-title function_">p</span>(c, d, e, f, A, <span class="hljs-number">6</span>, a[<span class="hljs-number">52</span>]),<br>                f = <span class="hljs-title function_">p</span>(f, c, d, e, q, <span class="hljs-number">10</span>, a[<span class="hljs-number">53</span>]), e = <span class="hljs-title function_">p</span>(e, f, c, d, y, <span class="hljs-number">15</span>, a[<span class="hljs-number">54</span>]), d = <span class="hljs-title function_">p</span>(d, e, f, c, n, <span class="hljs-number">21</span>, a[<span class="hljs-number">55</span>]),<br>                c = <span class="hljs-title function_">p</span>(c, d, e, f, w, <span class="hljs-number">6</span>, a[<span class="hljs-number">56</span>]), f = <span class="hljs-title function_">p</span>(f, c, d, e, D, <span class="hljs-number">10</span>, a[<span class="hljs-number">57</span>]), e = <span class="hljs-title function_">p</span>(e, f, c, d, u, <span class="hljs-number">15</span>, a[<span class="hljs-number">58</span>]),<br>                d = <span class="hljs-title function_">p</span>(d, e, f, c, B, <span class="hljs-number">21</span>, a[<span class="hljs-number">59</span>]), c = <span class="hljs-title function_">p</span>(c, d, e, f, t, <span class="hljs-number">6</span>, a[<span class="hljs-number">60</span>]), f = <span class="hljs-title function_">p</span>(f, c, d, e, z, <span class="hljs-number">10</span>, a[<span class="hljs-number">61</span>]),<br>                e = <span class="hljs-title function_">p</span>(e, f, c, d, l, <span class="hljs-number">15</span>, a[<span class="hljs-number">62</span>]), d = <span class="hljs-title function_">p</span>(d, e, f, c, x, <span class="hljs-number">21</span>, a[<span class="hljs-number">63</span>]);<br>            b[<span class="hljs-number">0</span>] = b[<span class="hljs-number">0</span>] + c | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">1</span>] = b[<span class="hljs-number">1</span>] + d | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">2</span>] = b[<span class="hljs-number">2</span>] + e | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">3</span>] = b[<span class="hljs-number">3</span>] + f | <span class="hljs-number">0</span><br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, g = a.<span class="hljs-property">words</span>, b = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, j = <span class="hljs-number">8</span> * a.<span class="hljs-property">sigBytes</span>;<br>            g[j &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - j % <span class="hljs-number">32</span>;<br>            <span class="hljs-keyword">var</span> k = q.<span class="hljs-title function_">floor</span>(b /<br>                <span class="hljs-number">4294967296</span>);<br>            g[(j + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">15</span>] = (k &lt;&lt; <span class="hljs-number">8</span> | k &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (k &lt;&lt; <span class="hljs-number">24</span> | k &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            g[(j + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">14</span>] = (b &lt;&lt; <span class="hljs-number">8</span> | b &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (b &lt;&lt; <span class="hljs-number">24</span> | b &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * (g.<span class="hljs-property">length</span> + <span class="hljs-number">1</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>;<br>            g = a.<span class="hljs-property">words</span>;<br>            <span class="hljs-keyword">for</span> (b = <span class="hljs-number">0</span>; <span class="hljs-number">4</span> &gt; b; b++) j = g[b], g[b] = (j &lt;&lt; <span class="hljs-number">8</span> | j &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (j &lt;&lt; <span class="hljs-number">24</span> | j &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            <span class="hljs-keyword">return</span> a<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = u.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            a.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> a<br>        &#125;<br>    &#125;);<br>    t.<span class="hljs-property">MD5</span> = u.<span class="hljs-title function_">_createHelper</span>(n);<br>    t.<span class="hljs-property">HmacMD5</span> = u.<span class="hljs-title function_">_createHmacHelper</span>(n)<br>&#125;)(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> q = <span class="hljs-title class_">CryptoJS</span>, r = q.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>;<br>    q.<span class="hljs-property">algo</span>.<span class="hljs-property">HMAC</span> = q.<span class="hljs-property">lib</span>.<span class="hljs-property">Base</span>.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">k, g</span>) &#123;<br>            k = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span> = <span class="hljs-keyword">new</span> k.<span class="hljs-property">init</span>;<br>            <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> g &amp;&amp; (g = r.<span class="hljs-title function_">parse</span>(g));<br>            <span class="hljs-keyword">var</span> p = k.<span class="hljs-property">blockSize</span>, q = <span class="hljs-number">4</span> * p;<br>            g.<span class="hljs-property">sigBytes</span> &gt; q &amp;&amp; (g = k.<span class="hljs-title function_">finalize</span>(g));<br>            g.<span class="hljs-title function_">clamp</span>();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> n = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_oKey</span> = g.<span class="hljs-title function_">clone</span>(), v = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iKey</span> = g.<span class="hljs-title function_">clone</span>(), u = n.<span class="hljs-property">words</span>, a = v.<span class="hljs-property">words</span>, s = <span class="hljs-number">0</span>; s &lt; p; s++) u[s] ^= <span class="hljs-number">1549556828</span>, a[s] ^= <span class="hljs-number">909522486</span>;<br>            n.<span class="hljs-property">sigBytes</span> = v.<span class="hljs-property">sigBytes</span> = q;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> k = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>;<br>            k.<span class="hljs-title function_">reset</span>();<br>            k.<span class="hljs-title function_">update</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_iKey</span>)<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">k</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>.<span class="hljs-title function_">update</span>(k);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">k</span>) &#123;<br>            <span class="hljs-keyword">var</span> g =<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>;<br>            k = g.<span class="hljs-title function_">finalize</span>(k);<br>            g.<span class="hljs-title function_">reset</span>();<br>            <span class="hljs-keyword">return</span> g.<span class="hljs-title function_">finalize</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_oKey</span>.<span class="hljs-title function_">clone</span>().<span class="hljs-title function_">concat</span>(k))<br>        &#125;<br>    &#125;)<br>&#125;)();<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AES</title>
    <link href="/posts/6e9c5cdb/"/>
    <url>/posts/6e9c5cdb/</url>
    
    <content type="html"><![CDATA[<h3 id="AES加密源码"><a href="#AES加密源码" class="headerlink" title="AES加密源码"></a>AES加密源码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">u, p</span>) &#123;<br>    <span class="hljs-keyword">var</span> d = &#123;&#125;, l = d.<span class="hljs-property">lib</span> = &#123;&#125;, s = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, t = l.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                s.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-keyword">new</span> s;<br>                a &amp;&amp; c.<span class="hljs-title function_">mixIn</span>(a);<br>                c.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (c.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    c.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                c.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = c;<br>                c.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> c<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                a.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(a, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c <span class="hljs-keyword">in</span> a) a.<span class="hljs-title function_">hasOwnProperty</span>(c) &amp;&amp; (<span class="hljs-variable language_">this</span>[c] = a[c]);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = a.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        r = l.<span class="hljs-property">WordArray</span> = t.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, c</span>) &#123;<br>                a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = a || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = c != p ? c : <span class="hljs-number">4</span> * a.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> (a || v).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, e = a.<span class="hljs-property">words</span>, j = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (j % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> k = <span class="hljs-number">0</span>; k &lt; a; k++) c[j + k &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (e[k &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (k % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((j + k) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; e.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (k = <span class="hljs-number">0</span>; k &lt; a; k += <span class="hljs-number">4</span>) c[j + k &gt;&gt;&gt; <span class="hljs-number">2</span>] = e[k &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> c.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(c, e);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += a;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a[c &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (c % <span class="hljs-number">4</span>);<br>                a.<span class="hljs-property">length</span> = u.<span class="hljs-title function_">ceil</span>(c / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = t.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = [], e = <span class="hljs-number">0</span>; e &lt; a; e += <span class="hljs-number">4</span>) c.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * u.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> r.<span class="hljs-title function_">init</span>(c, a)<br>            &#125;<br>        &#125;), w = d.<span class="hljs-property">enc</span> = &#123;&#125;, v = w.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = [], j = <span class="hljs-number">0</span>; j &lt; a; j++) &#123;<br>                    <span class="hljs-keyword">var</span> k = c[j &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    e.<span class="hljs-title function_">push</span>((k &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    e.<span class="hljs-title function_">push</span>((k &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> e.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">length</span>, e = [], j = <span class="hljs-number">0</span>; j &lt; c; j += <span class="hljs-number">2</span>) e[j &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(a.<span class="hljs-title function_">substr</span>(j,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (j % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> r.<span class="hljs-title function_">init</span>(e, c / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, b = w.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = [], j = <span class="hljs-number">0</span>; j &lt; a; j++) e.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(c[j &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> e.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">length</span>, e = [], j = <span class="hljs-number">0</span>; j &lt; c; j++) e[j &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a.<span class="hljs-title function_">charCodeAt</span>(j) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> r.<span class="hljs-title function_">init</span>(e, c)<br>            &#125;<br>        &#125;, x = w.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(b.<span class="hljs-title function_">stringify</span>(a)))<br>                &#125; <span class="hljs-keyword">catch</span> (c) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> b.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(a)))<br>            &#125;<br>        &#125;,<br>        q = l.<span class="hljs-property">BufferedBlockAlgorithm</span> = t.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> r.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = x.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, e = c.<span class="hljs-property">words</span>, j = c.<span class="hljs-property">sigBytes</span>, k = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, b = j / (<span class="hljs-number">4</span> * k),<br>                    b = a ? u.<span class="hljs-title function_">ceil</span>(b) : u.<span class="hljs-title function_">max</span>((b | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                a = b * k;<br>                j = u.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * a, j);<br>                <span class="hljs-keyword">if</span> (a) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> q = <span class="hljs-number">0</span>; q &lt; a; q += k) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(e, q);<br>                    q = e.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, a);<br>                    c.<span class="hljs-property">sigBytes</span> -= j<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> r.<span class="hljs-title function_">init</span>(q, j)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = t.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    l.<span class="hljs-property">Hasher</span> = q.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: t.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            q.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, e</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(e)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, e</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> n.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    e)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> n = d.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> d<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> u = <span class="hljs-title class_">CryptoJS</span>, p = u.<span class="hljs-property">lib</span>.<span class="hljs-property">WordArray</span>;<br>    u.<span class="hljs-property">enc</span>.<span class="hljs-property">Base64</span> = &#123;<br>        <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">d</span>) &#123;<br>            <span class="hljs-keyword">var</span> l = d.<span class="hljs-property">words</span>, p = d.<span class="hljs-property">sigBytes</span>, t = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_map</span>;<br>            d.<span class="hljs-title function_">clamp</span>();<br>            d = [];<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> r = <span class="hljs-number">0</span>; r &lt; p; r += <span class="hljs-number">3</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> w = (l[r &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (r % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">16</span> | (l[r + <span class="hljs-number">1</span> &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((r + <span class="hljs-number">1</span>) % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">8</span> | l[r + <span class="hljs-number">2</span> &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((r + <span class="hljs-number">2</span>) % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>, v = <span class="hljs-number">0</span>; <span class="hljs-number">4</span> &gt; v &amp;&amp; r + <span class="hljs-number">0.75</span> * v &lt; p; v++) d.<span class="hljs-title function_">push</span>(t.<span class="hljs-title function_">charAt</span>(w &gt;&gt;&gt; <span class="hljs-number">6</span> * (<span class="hljs-number">3</span> - v) &amp; <span class="hljs-number">63</span>));<br>            <span class="hljs-keyword">if</span> (l = t.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">64</span>)) <span class="hljs-keyword">for</span> (; d.<span class="hljs-property">length</span> % <span class="hljs-number">4</span>;) d.<span class="hljs-title function_">push</span>(l);<br>            <span class="hljs-keyword">return</span> d.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>        &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">d</span>) &#123;<br>            <span class="hljs-keyword">var</span> l = d.<span class="hljs-property">length</span>, s = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_map</span>, t = s.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">64</span>);<br>            t &amp;&amp; (t = d.<span class="hljs-title function_">indexOf</span>(t), -<span class="hljs-number">1</span> != t &amp;&amp; (l = t));<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = [], r = <span class="hljs-number">0</span>, w = <span class="hljs-number">0</span>; w &lt;<br>            l; w++) <span class="hljs-keyword">if</span> (w % <span class="hljs-number">4</span>) &#123;<br>                <span class="hljs-keyword">var</span> v = s.<span class="hljs-title function_">indexOf</span>(d.<span class="hljs-title function_">charAt</span>(w - <span class="hljs-number">1</span>)) &lt;&lt; <span class="hljs-number">2</span> * (w % <span class="hljs-number">4</span>), b = s.<span class="hljs-title function_">indexOf</span>(d.<span class="hljs-title function_">charAt</span>(w)) &gt;&gt;&gt; <span class="hljs-number">6</span> - <span class="hljs-number">2</span> * (w % <span class="hljs-number">4</span>);<br>                t[r &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (v | b) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (r % <span class="hljs-number">4</span>);<br>                r++<br>            &#125;<br>            <span class="hljs-keyword">return</span> p.<span class="hljs-title function_">create</span>(t, r)<br>        &#125;, <span class="hljs-attr">_map</span>: <span class="hljs-string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span><br>    &#125;<br>&#125;)();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">u</span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">p</span>(<span class="hljs-params">b, n, a, c, e, j, k</span>) &#123;<br>        b = b + (n &amp; a | ~n &amp; c) + e + k;<br>        <span class="hljs-keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + n<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">d</span>(<span class="hljs-params">b, n, a, c, e, j, k</span>) &#123;<br>        b = b + (n &amp; c | a &amp; ~c) + e + k;<br>        <span class="hljs-keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + n<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">l</span>(<span class="hljs-params">b, n, a, c, e, j, k</span>) &#123;<br>        b = b + (n ^ a ^ c) + e + k;<br>        <span class="hljs-keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + n<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">s</span>(<span class="hljs-params">b, n, a, c, e, j, k</span>) &#123;<br>        b = b + (a ^ (n | ~c)) + e + k;<br>        <span class="hljs-keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + n<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = <span class="hljs-title class_">CryptoJS</span>, r = t.<span class="hljs-property">lib</span>, w = r.<span class="hljs-property">WordArray</span>, v = r.<span class="hljs-property">Hasher</span>, r = t.<span class="hljs-property">algo</span>, b = [], x = <span class="hljs-number">0</span>; <span class="hljs-number">64</span> &gt; x; x++) b[x] = <span class="hljs-number">4294967296</span> * u.<span class="hljs-title function_">abs</span>(u.<span class="hljs-title function_">sin</span>(x + <span class="hljs-number">1</span>)) | <span class="hljs-number">0</span>;<br>    r = r.<span class="hljs-property">MD5</span> = v.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> w.<span class="hljs-title function_">init</span>([<span class="hljs-number">1732584193</span>, <span class="hljs-number">4023233417</span>, <span class="hljs-number">2562383102</span>, <span class="hljs-number">271733878</span>])<br>        &#125;,<br>        <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">q, n</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-number">0</span>; <span class="hljs-number">16</span> &gt; a; a++) &#123;<br>                <span class="hljs-keyword">var</span> c = n + a, e = q[c];<br>                q[c] = (e &lt;&lt; <span class="hljs-number">8</span> | e &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (e &lt;&lt; <span class="hljs-number">24</span> | e &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span><br>            &#125;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>, c = q[n + <span class="hljs-number">0</span>], e = q[n + <span class="hljs-number">1</span>], j = q[n + <span class="hljs-number">2</span>], k = q[n + <span class="hljs-number">3</span>], z = q[n + <span class="hljs-number">4</span>],<br>                r = q[n + <span class="hljs-number">5</span>], t = q[n + <span class="hljs-number">6</span>], w = q[n + <span class="hljs-number">7</span>], v = q[n + <span class="hljs-number">8</span>], A = q[n + <span class="hljs-number">9</span>], B = q[n + <span class="hljs-number">10</span>], C = q[n + <span class="hljs-number">11</span>],<br>                u = q[n + <span class="hljs-number">12</span>], D = q[n + <span class="hljs-number">13</span>], E = q[n + <span class="hljs-number">14</span>], x = q[n + <span class="hljs-number">15</span>], f = a[<span class="hljs-number">0</span>], m = a[<span class="hljs-number">1</span>], g = a[<span class="hljs-number">2</span>], h = a[<span class="hljs-number">3</span>],<br>                f = <span class="hljs-title function_">p</span>(f, m, g, h, c, <span class="hljs-number">7</span>, b[<span class="hljs-number">0</span>]), h = <span class="hljs-title function_">p</span>(h, f, m, g, e, <span class="hljs-number">12</span>, b[<span class="hljs-number">1</span>]), g = <span class="hljs-title function_">p</span>(g, h, f, m, j, <span class="hljs-number">17</span>, b[<span class="hljs-number">2</span>]),<br>                m = <span class="hljs-title function_">p</span>(m, g, h, f, k, <span class="hljs-number">22</span>, b[<span class="hljs-number">3</span>]), f = <span class="hljs-title function_">p</span>(f, m, g, h, z, <span class="hljs-number">7</span>, b[<span class="hljs-number">4</span>]), h = <span class="hljs-title function_">p</span>(h, f, m, g, r, <span class="hljs-number">12</span>, b[<span class="hljs-number">5</span>]),<br>                g = <span class="hljs-title function_">p</span>(g, h, f, m, t, <span class="hljs-number">17</span>, b[<span class="hljs-number">6</span>]), m = <span class="hljs-title function_">p</span>(m, g, h, f, w, <span class="hljs-number">22</span>, b[<span class="hljs-number">7</span>]),<br>                f = <span class="hljs-title function_">p</span>(f, m, g, h, v, <span class="hljs-number">7</span>, b[<span class="hljs-number">8</span>]), h = <span class="hljs-title function_">p</span>(h, f, m, g, A, <span class="hljs-number">12</span>, b[<span class="hljs-number">9</span>]), g = <span class="hljs-title function_">p</span>(g, h, f, m, B, <span class="hljs-number">17</span>, b[<span class="hljs-number">10</span>]),<br>                m = <span class="hljs-title function_">p</span>(m, g, h, f, C, <span class="hljs-number">22</span>, b[<span class="hljs-number">11</span>]), f = <span class="hljs-title function_">p</span>(f, m, g, h, u, <span class="hljs-number">7</span>, b[<span class="hljs-number">12</span>]), h = <span class="hljs-title function_">p</span>(h, f, m, g, D, <span class="hljs-number">12</span>, b[<span class="hljs-number">13</span>]),<br>                g = <span class="hljs-title function_">p</span>(g, h, f, m, E, <span class="hljs-number">17</span>, b[<span class="hljs-number">14</span>]), m = <span class="hljs-title function_">p</span>(m, g, h, f, x, <span class="hljs-number">22</span>, b[<span class="hljs-number">15</span>]), f = <span class="hljs-title function_">d</span>(f, m, g, h, e, <span class="hljs-number">5</span>, b[<span class="hljs-number">16</span>]),<br>                h = <span class="hljs-title function_">d</span>(h, f, m, g, t, <span class="hljs-number">9</span>, b[<span class="hljs-number">17</span>]), g = <span class="hljs-title function_">d</span>(g, h, f, m, C, <span class="hljs-number">14</span>, b[<span class="hljs-number">18</span>]), m = <span class="hljs-title function_">d</span>(m, g, h, f, c, <span class="hljs-number">20</span>, b[<span class="hljs-number">19</span>]),<br>                f = <span class="hljs-title function_">d</span>(f, m, g, h, r, <span class="hljs-number">5</span>, b[<span class="hljs-number">20</span>]), h = <span class="hljs-title function_">d</span>(h, f, m, g, B, <span class="hljs-number">9</span>, b[<span class="hljs-number">21</span>]), g = <span class="hljs-title function_">d</span>(g, h, f, m, x, <span class="hljs-number">14</span>, b[<span class="hljs-number">22</span>]),<br>                m = <span class="hljs-title function_">d</span>(m, g, h, f, z, <span class="hljs-number">20</span>, b[<span class="hljs-number">23</span>]), f = <span class="hljs-title function_">d</span>(f, m, g, h, A, <span class="hljs-number">5</span>, b[<span class="hljs-number">24</span>]), h = <span class="hljs-title function_">d</span>(h, f, m, g, E, <span class="hljs-number">9</span>, b[<span class="hljs-number">25</span>]),<br>                g = <span class="hljs-title function_">d</span>(g, h, f, m, k, <span class="hljs-number">14</span>, b[<span class="hljs-number">26</span>]), m = <span class="hljs-title function_">d</span>(m, g, h, f, v, <span class="hljs-number">20</span>, b[<span class="hljs-number">27</span>]), f = <span class="hljs-title function_">d</span>(f, m, g, h, D, <span class="hljs-number">5</span>, b[<span class="hljs-number">28</span>]),<br>                h = <span class="hljs-title function_">d</span>(h, f,<br>                    m, g, j, <span class="hljs-number">9</span>, b[<span class="hljs-number">29</span>]), g = <span class="hljs-title function_">d</span>(g, h, f, m, w, <span class="hljs-number">14</span>, b[<span class="hljs-number">30</span>]), m = <span class="hljs-title function_">d</span>(m, g, h, f, u, <span class="hljs-number">20</span>, b[<span class="hljs-number">31</span>]),<br>                f = <span class="hljs-title function_">l</span>(f, m, g, h, r, <span class="hljs-number">4</span>, b[<span class="hljs-number">32</span>]), h = <span class="hljs-title function_">l</span>(h, f, m, g, v, <span class="hljs-number">11</span>, b[<span class="hljs-number">33</span>]), g = <span class="hljs-title function_">l</span>(g, h, f, m, C, <span class="hljs-number">16</span>, b[<span class="hljs-number">34</span>]),<br>                m = <span class="hljs-title function_">l</span>(m, g, h, f, E, <span class="hljs-number">23</span>, b[<span class="hljs-number">35</span>]), f = <span class="hljs-title function_">l</span>(f, m, g, h, e, <span class="hljs-number">4</span>, b[<span class="hljs-number">36</span>]), h = <span class="hljs-title function_">l</span>(h, f, m, g, z, <span class="hljs-number">11</span>, b[<span class="hljs-number">37</span>]),<br>                g = <span class="hljs-title function_">l</span>(g, h, f, m, w, <span class="hljs-number">16</span>, b[<span class="hljs-number">38</span>]), m = <span class="hljs-title function_">l</span>(m, g, h, f, B, <span class="hljs-number">23</span>, b[<span class="hljs-number">39</span>]), f = <span class="hljs-title function_">l</span>(f, m, g, h, D, <span class="hljs-number">4</span>, b[<span class="hljs-number">40</span>]),<br>                h = <span class="hljs-title function_">l</span>(h, f, m, g, c, <span class="hljs-number">11</span>, b[<span class="hljs-number">41</span>]), g = <span class="hljs-title function_">l</span>(g, h, f, m, k, <span class="hljs-number">16</span>, b[<span class="hljs-number">42</span>]), m = <span class="hljs-title function_">l</span>(m, g, h, f, t, <span class="hljs-number">23</span>, b[<span class="hljs-number">43</span>]),<br>                f = <span class="hljs-title function_">l</span>(f, m, g, h, A, <span class="hljs-number">4</span>, b[<span class="hljs-number">44</span>]), h = <span class="hljs-title function_">l</span>(h, f, m, g, u, <span class="hljs-number">11</span>, b[<span class="hljs-number">45</span>]), g = <span class="hljs-title function_">l</span>(g, h, f, m, x, <span class="hljs-number">16</span>, b[<span class="hljs-number">46</span>]),<br>                m = <span class="hljs-title function_">l</span>(m, g, h, f, j, <span class="hljs-number">23</span>, b[<span class="hljs-number">47</span>]), f = <span class="hljs-title function_">s</span>(f, m, g, h, c, <span class="hljs-number">6</span>, b[<span class="hljs-number">48</span>]), h = <span class="hljs-title function_">s</span>(h, f, m, g, w, <span class="hljs-number">10</span>, b[<span class="hljs-number">49</span>]),<br>                g = <span class="hljs-title function_">s</span>(g, h, f, m,<br>                    E, <span class="hljs-number">15</span>, b[<span class="hljs-number">50</span>]), m = <span class="hljs-title function_">s</span>(m, g, h, f, r, <span class="hljs-number">21</span>, b[<span class="hljs-number">51</span>]), f = <span class="hljs-title function_">s</span>(f, m, g, h, u, <span class="hljs-number">6</span>, b[<span class="hljs-number">52</span>]),<br>                h = <span class="hljs-title function_">s</span>(h, f, m, g, k, <span class="hljs-number">10</span>, b[<span class="hljs-number">53</span>]), g = <span class="hljs-title function_">s</span>(g, h, f, m, B, <span class="hljs-number">15</span>, b[<span class="hljs-number">54</span>]), m = <span class="hljs-title function_">s</span>(m, g, h, f, e, <span class="hljs-number">21</span>, b[<span class="hljs-number">55</span>]),<br>                f = <span class="hljs-title function_">s</span>(f, m, g, h, v, <span class="hljs-number">6</span>, b[<span class="hljs-number">56</span>]), h = <span class="hljs-title function_">s</span>(h, f, m, g, x, <span class="hljs-number">10</span>, b[<span class="hljs-number">57</span>]), g = <span class="hljs-title function_">s</span>(g, h, f, m, t, <span class="hljs-number">15</span>, b[<span class="hljs-number">58</span>]),<br>                m = <span class="hljs-title function_">s</span>(m, g, h, f, D, <span class="hljs-number">21</span>, b[<span class="hljs-number">59</span>]), f = <span class="hljs-title function_">s</span>(f, m, g, h, z, <span class="hljs-number">6</span>, b[<span class="hljs-number">60</span>]), h = <span class="hljs-title function_">s</span>(h, f, m, g, C, <span class="hljs-number">10</span>, b[<span class="hljs-number">61</span>]),<br>                g = <span class="hljs-title function_">s</span>(g, h, f, m, j, <span class="hljs-number">15</span>, b[<span class="hljs-number">62</span>]), m = <span class="hljs-title function_">s</span>(m, g, h, f, A, <span class="hljs-number">21</span>, b[<span class="hljs-number">63</span>]);<br>            a[<span class="hljs-number">0</span>] = a[<span class="hljs-number">0</span>] + f | <span class="hljs-number">0</span>;<br>            a[<span class="hljs-number">1</span>] = a[<span class="hljs-number">1</span>] + m | <span class="hljs-number">0</span>;<br>            a[<span class="hljs-number">2</span>] = a[<span class="hljs-number">2</span>] + g | <span class="hljs-number">0</span>;<br>            a[<span class="hljs-number">3</span>] = a[<span class="hljs-number">3</span>] + h | <span class="hljs-number">0</span><br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, n = b.<span class="hljs-property">words</span>, a = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, c = <span class="hljs-number">8</span> * b.<span class="hljs-property">sigBytes</span>;<br>            n[c &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - c % <span class="hljs-number">32</span>;<br>            <span class="hljs-keyword">var</span> e = u.<span class="hljs-title function_">floor</span>(a /<br>                <span class="hljs-number">4294967296</span>);<br>            n[(c + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">15</span>] = (e &lt;&lt; <span class="hljs-number">8</span> | e &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (e &lt;&lt; <span class="hljs-number">24</span> | e &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            n[(c + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">14</span>] = (a &lt;&lt; <span class="hljs-number">8</span> | a &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (a &lt;&lt; <span class="hljs-number">24</span> | a &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            b.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * (n.<span class="hljs-property">length</span> + <span class="hljs-number">1</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>;<br>            n = b.<span class="hljs-property">words</span>;<br>            <span class="hljs-keyword">for</span> (a = <span class="hljs-number">0</span>; <span class="hljs-number">4</span> &gt; a; a++) c = n[a], n[a] = (c &lt;&lt; <span class="hljs-number">8</span> | c &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (c &lt;&lt; <span class="hljs-number">24</span> | c &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            <span class="hljs-keyword">return</span> b<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> b = v.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            b.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> b<br>        &#125;<br>    &#125;);<br>    t.<span class="hljs-property">MD5</span> = v.<span class="hljs-title function_">_createHelper</span>(r);<br>    t.<span class="hljs-property">HmacMD5</span> = v.<span class="hljs-title function_">_createHmacHelper</span>(r)<br>&#125;)(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> u = <span class="hljs-title class_">CryptoJS</span>, p = u.<span class="hljs-property">lib</span>, d = p.<span class="hljs-property">Base</span>, l = p.<span class="hljs-property">WordArray</span>, p = u.<span class="hljs-property">algo</span>, s = p.<span class="hljs-property">EvpKDF</span> = d.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: d.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">keySize</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">hasher</span>: p.<span class="hljs-property">MD5</span>, <span class="hljs-attr">iterations</span>: <span class="hljs-number">1</span>&#125;), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">d</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(d)<br>        &#125;, <span class="hljs-attr">compute</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">d, r</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> p = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>, s = p.<span class="hljs-property">hasher</span>.<span class="hljs-title function_">create</span>(), b = l.<span class="hljs-title function_">create</span>(), u = b.<span class="hljs-property">words</span>, q = p.<span class="hljs-property">keySize</span>, p = p.<span class="hljs-property">iterations</span>; u.<span class="hljs-property">length</span> &lt; q;) &#123;<br>                n &amp;&amp; s.<span class="hljs-title function_">update</span>(n);<br>                <span class="hljs-keyword">var</span> n = s.<span class="hljs-title function_">update</span>(d).<span class="hljs-title function_">finalize</span>(r);<br>                s.<span class="hljs-title function_">reset</span>();<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-number">1</span>; a &lt; p; a++) n = s.<span class="hljs-title function_">finalize</span>(n), s.<span class="hljs-title function_">reset</span>();<br>                b.<span class="hljs-title function_">concat</span>(n)<br>            &#125;<br>            b.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * q;<br>            <span class="hljs-keyword">return</span> b<br>        &#125;<br>    &#125;);<br>    u.<span class="hljs-property">EvpKDF</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">d, l, p</span>) &#123;<br>        <span class="hljs-keyword">return</span> s.<span class="hljs-title function_">create</span>(p).<span class="hljs-title function_">compute</span>(d,<br>            l)<br>    &#125;<br>&#125;)();<br><span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">lib</span>.<span class="hljs-property">Cipher</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">u</span>) &#123;<br>    <span class="hljs-keyword">var</span> p = <span class="hljs-title class_">CryptoJS</span>, d = p.<span class="hljs-property">lib</span>, l = d.<span class="hljs-property">Base</span>, s = d.<span class="hljs-property">WordArray</span>, t = d.<span class="hljs-property">BufferedBlockAlgorithm</span>, r = p.<span class="hljs-property">enc</span>.<span class="hljs-property">Base64</span>,<br>        w = p.<span class="hljs-property">algo</span>.<span class="hljs-property">EvpKDF</span>, v = d.<span class="hljs-property">Cipher</span> = t.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">cfg</span>: l.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">createEncryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">create</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_ENC_XFORM_MODE</span>, e, a)<br>            &#125;, <span class="hljs-attr">createDecryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">create</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_DEC_XFORM_MODE</span>, e, a)<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a, b</span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(b);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_xformMode</span> = e;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_key</span> = a;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>            &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                t.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>            &#125;, <span class="hljs-attr">process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(e);<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>()<br>            &#125;,<br>            <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>                e &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(e);<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>            &#125;, <span class="hljs-attr">keySize</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">ivSize</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">_ENC_XFORM_MODE</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">_DEC_XFORM_MODE</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>                <span class="hljs-keyword">return</span> &#123;<br>                    <span class="hljs-attr">encrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, k, d</span>) &#123;<br>                        <span class="hljs-keyword">return</span> (<span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> k ? c : a).<span class="hljs-title function_">encrypt</span>(e, b, k, d)<br>                    &#125;, <span class="hljs-attr">decrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, k, d</span>) &#123;<br>                        <span class="hljs-keyword">return</span> (<span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> k ? c : a).<span class="hljs-title function_">decrypt</span>(e, b, k, d)<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;);<br>    d.<span class="hljs-property">StreamCipher</span> = v.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>(!<span class="hljs-number">0</span>)<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">1</span><br>    &#125;);<br>    <span class="hljs-keyword">var</span> b = p.<span class="hljs-property">mode</span> = &#123;&#125;, x = <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a, b</span>) &#123;<br>        <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iv</span>;<br>        c ? <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iv</span> = u : c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_prevBlock</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = <span class="hljs-number">0</span>; d &lt; b; d++) e[a + d] ^=<br>            c[d]<br>    &#125;, q = (d.<span class="hljs-property">BlockCipherMode</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">createEncryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">Encryptor</span>.<span class="hljs-title function_">create</span>(e, a)<br>        &#125;, <span class="hljs-attr">createDecryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">Decryptor</span>.<span class="hljs-title function_">create</span>(e, a)<br>        &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_cipher</span> = e;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iv</span> = a<br>        &#125;<br>    &#125;)).<span class="hljs-title function_">extend</span>();<br>    q.<span class="hljs-property">Encryptor</span> = q.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">processBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>            <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_cipher</span>, c = b.<span class="hljs-property">blockSize</span>;<br>            x.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, e, a, c);<br>            b.<span class="hljs-title function_">encryptBlock</span>(e, a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_prevBlock</span> = e.<span class="hljs-title function_">slice</span>(a, a + c)<br>        &#125;<br>    &#125;);<br>    q.<span class="hljs-property">Decryptor</span> = q.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">processBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>            <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_cipher</span>, c = b.<span class="hljs-property">blockSize</span>, d = e.<span class="hljs-title function_">slice</span>(a, a + c);<br>            b.<span class="hljs-title function_">decryptBlock</span>(e, a);<br>            x.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>,<br>                e, a, c);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_prevBlock</span> = d<br>        &#125;<br>    &#125;);<br>    b = b.<span class="hljs-property">CBC</span> = q;<br>    q = (p.<span class="hljs-property">pad</span> = &#123;&#125;).<span class="hljs-property">Pkcs7</span> = &#123;<br>        <span class="hljs-attr">pad</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = <span class="hljs-number">4</span> * b, c = c - a.<span class="hljs-property">sigBytes</span> % c, d = c &lt;&lt; <span class="hljs-number">24</span> | c &lt;&lt; <span class="hljs-number">16</span> | c &lt;&lt; <span class="hljs-number">8</span> | c, l = [], n = <span class="hljs-number">0</span>; n &lt; c; n += <span class="hljs-number">4</span>) l.<span class="hljs-title function_">push</span>(d);<br>            c = s.<span class="hljs-title function_">create</span>(l, c);<br>            a.<span class="hljs-title function_">concat</span>(c)<br>        &#125;, <span class="hljs-attr">unpad</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a.<span class="hljs-property">sigBytes</span> -= a.<span class="hljs-property">words</span>[a.<span class="hljs-property">sigBytes</span> - <span class="hljs-number">1</span> &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp; <span class="hljs-number">255</span><br>        &#125;<br>    &#125;;<br>    d.<span class="hljs-property">BlockCipher</span> = v.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: v.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">mode</span>: b, <span class="hljs-attr">padding</span>: q&#125;), <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            v.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>, b = a.<span class="hljs-property">iv</span>, a = a.<span class="hljs-property">mode</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">_xformMode</span> == <span class="hljs-variable language_">this</span>.<span class="hljs-property">_ENC_XFORM_MODE</span>) <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">createEncryptor</span>; <span class="hljs-keyword">else</span> c = a.<span class="hljs-property">createDecryptor</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span> = <span class="hljs-number">1</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_mode</span> = c.<span class="hljs-title function_">call</span>(a,<br>                <span class="hljs-variable language_">this</span>, b &amp;&amp; b.<span class="hljs-property">words</span>)<br>        &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_mode</span>.<span class="hljs-title function_">processBlock</span>(a, b)<br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-property">padding</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">_xformMode</span> == <span class="hljs-variable language_">this</span>.<span class="hljs-property">_ENC_XFORM_MODE</span>) &#123;<br>                a.<span class="hljs-title function_">pad</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>);<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>(!<span class="hljs-number">0</span>)<br>            &#125; <span class="hljs-keyword">else</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>(!<span class="hljs-number">0</span>), a.<span class="hljs-title function_">unpad</span>(b);<br>            <span class="hljs-keyword">return</span> b<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">4</span><br>    &#125;);<br>    <span class="hljs-keyword">var</span> n = d.<span class="hljs-property">CipherParams</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">mixIn</span>(a)<br>        &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> (a || <span class="hljs-variable language_">this</span>.<span class="hljs-property">formatter</span>).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>        &#125;<br>    &#125;), b = (p.<span class="hljs-property">format</span> = &#123;&#125;).<span class="hljs-property">OpenSSL</span> = &#123;<br>        <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">ciphertext</span>;<br>            a = a.<span class="hljs-property">salt</span>;<br>            <span class="hljs-keyword">return</span> (a ? s.<span class="hljs-title function_">create</span>([<span class="hljs-number">1398893684</span>,<br>                <span class="hljs-number">1701076831</span>]).<span class="hljs-title function_">concat</span>(a).<span class="hljs-title function_">concat</span>(b) : b).<span class="hljs-title function_">toString</span>(r)<br>        &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a = r.<span class="hljs-title function_">parse</span>(a);<br>            <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">words</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-number">1398893684</span> == b[<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-number">1701076831</span> == b[<span class="hljs-number">1</span>]) &#123;<br>                <span class="hljs-keyword">var</span> c = s.<span class="hljs-title function_">create</span>(b.<span class="hljs-title function_">slice</span>(<span class="hljs-number">2</span>, <span class="hljs-number">4</span>));<br>                b.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>);<br>                a.<span class="hljs-property">sigBytes</span> -= <span class="hljs-number">16</span><br>            &#125;<br>            <span class="hljs-keyword">return</span> n.<span class="hljs-title function_">create</span>(&#123;<span class="hljs-attr">ciphertext</span>: a, <span class="hljs-attr">salt</span>: c&#125;)<br>        &#125;<br>    &#125;, a = d.<span class="hljs-property">SerializableCipher</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: l.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">format</span>: b&#125;), <span class="hljs-attr">encrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, c, d</span>) &#123;<br>            d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(d);<br>            <span class="hljs-keyword">var</span> l = a.<span class="hljs-title function_">createEncryptor</span>(c, d);<br>            b = l.<span class="hljs-title function_">finalize</span>(b);<br>            l = l.<span class="hljs-property">cfg</span>;<br>            <span class="hljs-keyword">return</span> n.<span class="hljs-title function_">create</span>(&#123;<br>                <span class="hljs-attr">ciphertext</span>: b,<br>                <span class="hljs-attr">key</span>: c,<br>                <span class="hljs-attr">iv</span>: l.<span class="hljs-property">iv</span>,<br>                <span class="hljs-attr">algorithm</span>: a,<br>                <span class="hljs-attr">mode</span>: l.<span class="hljs-property">mode</span>,<br>                <span class="hljs-attr">padding</span>: l.<span class="hljs-property">padding</span>,<br>                <span class="hljs-attr">blockSize</span>: a.<span class="hljs-property">blockSize</span>,<br>                <span class="hljs-attr">formatter</span>: d.<span class="hljs-property">format</span><br>            &#125;)<br>        &#125;,<br>        <span class="hljs-attr">decrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, c, d</span>) &#123;<br>            d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(d);<br>            b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_parse</span>(b, d.<span class="hljs-property">format</span>);<br>            <span class="hljs-keyword">return</span> a.<span class="hljs-title function_">createDecryptor</span>(c, d).<span class="hljs-title function_">finalize</span>(b.<span class="hljs-property">ciphertext</span>)<br>        &#125;, <span class="hljs-attr">_parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a ? b.<span class="hljs-title function_">parse</span>(a, <span class="hljs-variable language_">this</span>) : a<br>        &#125;<br>    &#125;), p = (p.<span class="hljs-property">kdf</span> = &#123;&#125;).<span class="hljs-property">OpenSSL</span> = &#123;<br>        <span class="hljs-attr">execute</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, c, d</span>) &#123;<br>            d || (d = s.<span class="hljs-title function_">random</span>(<span class="hljs-number">8</span>));<br>            a = w.<span class="hljs-title function_">create</span>(&#123;<span class="hljs-attr">keySize</span>: b + c&#125;).<span class="hljs-title function_">compute</span>(a, d);<br>            c = s.<span class="hljs-title function_">create</span>(a.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(b), <span class="hljs-number">4</span> * c);<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * b;<br>            <span class="hljs-keyword">return</span> n.<span class="hljs-title function_">create</span>(&#123;<span class="hljs-attr">key</span>: a, <span class="hljs-attr">iv</span>: c, <span class="hljs-attr">salt</span>: d&#125;)<br>        &#125;<br>    &#125;, c = d.<span class="hljs-property">PasswordBasedCipher</span> = a.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: a.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">kdf</span>: p&#125;), <span class="hljs-attr">encrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, c, d, l</span>) &#123;<br>            l = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(l);<br>            d = l.<span class="hljs-property">kdf</span>.<span class="hljs-title function_">execute</span>(d,<br>                b.<span class="hljs-property">keySize</span>, b.<span class="hljs-property">ivSize</span>);<br>            l.<span class="hljs-property">iv</span> = d.<span class="hljs-property">iv</span>;<br>            b = a.<span class="hljs-property">encrypt</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, b, c, d.<span class="hljs-property">key</span>, l);<br>            b.<span class="hljs-title function_">mixIn</span>(d);<br>            <span class="hljs-keyword">return</span> b<br>        &#125;, <span class="hljs-attr">decrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, c, d, l</span>) &#123;<br>            l = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(l);<br>            c = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_parse</span>(c, l.<span class="hljs-property">format</span>);<br>            d = l.<span class="hljs-property">kdf</span>.<span class="hljs-title function_">execute</span>(d, b.<span class="hljs-property">keySize</span>, b.<span class="hljs-property">ivSize</span>, c.<span class="hljs-property">salt</span>);<br>            l.<span class="hljs-property">iv</span> = d.<span class="hljs-property">iv</span>;<br>            <span class="hljs-keyword">return</span> a.<span class="hljs-property">decrypt</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, b, c, d.<span class="hljs-property">key</span>, l)<br>        &#125;<br>    &#125;)<br>&#125;();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> u = <span class="hljs-title class_">CryptoJS</span>, p = u.<span class="hljs-property">lib</span>.<span class="hljs-property">BlockCipher</span>, d = u.<span class="hljs-property">algo</span>, l = [], s = [], t = [], r = [], w = [], v = [], b = [], x = [], q = [], n = [], a = [], c = <span class="hljs-number">0</span>; <span class="hljs-number">256</span> &gt; c; c++) a[c] = <span class="hljs-number">128</span> &gt; c ? c &lt;&lt; <span class="hljs-number">1</span> : c &lt;&lt; <span class="hljs-number">1</span> ^ <span class="hljs-number">283</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = <span class="hljs-number">0</span>, j = <span class="hljs-number">0</span>, c = <span class="hljs-number">0</span>; <span class="hljs-number">256</span> &gt; c; c++) &#123;<br>        <span class="hljs-keyword">var</span> k = j ^ j &lt;&lt; <span class="hljs-number">1</span> ^ j &lt;&lt; <span class="hljs-number">2</span> ^ j &lt;&lt; <span class="hljs-number">3</span> ^ j &lt;&lt; <span class="hljs-number">4</span>, k = k &gt;&gt;&gt; <span class="hljs-number">8</span> ^ k &amp; <span class="hljs-number">255</span> ^ <span class="hljs-number">99</span>;<br>        l[e] = k;<br>        s[k] = e;<br>        <span class="hljs-keyword">var</span> z = a[e], F = a[z], G = a[F], y = <span class="hljs-number">257</span> * a[k] ^ <span class="hljs-number">16843008</span> * k;<br>        t[e] = y &lt;&lt; <span class="hljs-number">24</span> | y &gt;&gt;&gt; <span class="hljs-number">8</span>;<br>        r[e] = y &lt;&lt; <span class="hljs-number">16</span> | y &gt;&gt;&gt; <span class="hljs-number">16</span>;<br>        w[e] = y &lt;&lt; <span class="hljs-number">8</span> | y &gt;&gt;&gt; <span class="hljs-number">24</span>;<br>        v[e] = y;<br>        y = <span class="hljs-number">16843009</span> * G ^ <span class="hljs-number">65537</span> * F ^ <span class="hljs-number">257</span> * z ^ <span class="hljs-number">16843008</span> * e;<br>        b[k] = y &lt;&lt; <span class="hljs-number">24</span> | y &gt;&gt;&gt; <span class="hljs-number">8</span>;<br>        x[k] = y &lt;&lt; <span class="hljs-number">16</span> | y &gt;&gt;&gt; <span class="hljs-number">16</span>;<br>        q[k] = y &lt;&lt; <span class="hljs-number">8</span> | y &gt;&gt;&gt; <span class="hljs-number">24</span>;<br>        n[k] = y;<br>        e ? (e = z ^ a[a[a[G ^ z]]], j ^= a[a[j]]) : e = j = <span class="hljs-number">1</span><br>    &#125;<br>    <span class="hljs-keyword">var</span> H = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">8</span>,<br>        <span class="hljs-number">16</span>, <span class="hljs-number">32</span>, <span class="hljs-number">64</span>, <span class="hljs-number">128</span>, <span class="hljs-number">27</span>, <span class="hljs-number">54</span>], d = d.<span class="hljs-property">AES</span> = p.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_key</span>, c = a.<span class="hljs-property">words</span>, d = a.<span class="hljs-property">sigBytes</span> / <span class="hljs-number">4</span>, a = <span class="hljs-number">4</span> * ((<span class="hljs-variable language_">this</span>.<span class="hljs-property">_nRounds</span> = d + <span class="hljs-number">6</span>) + <span class="hljs-number">1</span>), e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_keySchedule</span> = [], j = <span class="hljs-number">0</span>; j &lt; a; j++) <span class="hljs-keyword">if</span> (j &lt; d) e[j] = c[j]; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">var</span> k = e[j - <span class="hljs-number">1</span>];<br>                j % d ? <span class="hljs-number">6</span> &lt; d &amp;&amp; <span class="hljs-number">4</span> == j % d &amp;&amp; (k = l[k &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | l[k &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | l[k &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | l[k &amp; <span class="hljs-number">255</span>]) : (k = k &lt;&lt; <span class="hljs-number">8</span> | k &gt;&gt;&gt; <span class="hljs-number">24</span>, k = l[k &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | l[k &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | l[k &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | l[k &amp; <span class="hljs-number">255</span>], k ^= H[j / d | <span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-number">24</span>);<br>                e[j] = e[j - d] ^ k<br>            &#125;<br>            c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_invKeySchedule</span> = [];<br>            <span class="hljs-keyword">for</span> (d = <span class="hljs-number">0</span>; d &lt; a; d++) j = a - d, k = d % <span class="hljs-number">4</span> ? e[j] : e[j - <span class="hljs-number">4</span>], c[d] = <span class="hljs-number">4</span> &gt; d || <span class="hljs-number">4</span> &gt;= j ? k : b[l[k &gt;&gt;&gt; <span class="hljs-number">24</span>]] ^ x[l[k &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>]] ^ q[l[k &gt;&gt;&gt;<br>            <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>]] ^ n[l[k &amp; <span class="hljs-number">255</span>]]<br>        &#125;, <span class="hljs-attr">encryptBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doCryptBlock</span>(a, b, <span class="hljs-variable language_">this</span>.<span class="hljs-property">_keySchedule</span>, t, r, w, v, l)<br>        &#125;, <span class="hljs-attr">decryptBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, c</span>) &#123;<br>            <span class="hljs-keyword">var</span> d = a[c + <span class="hljs-number">1</span>];<br>            a[c + <span class="hljs-number">1</span>] = a[c + <span class="hljs-number">3</span>];<br>            a[c + <span class="hljs-number">3</span>] = d;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doCryptBlock</span>(a, c, <span class="hljs-variable language_">this</span>.<span class="hljs-property">_invKeySchedule</span>, b, x, q, n, s);<br>            d = a[c + <span class="hljs-number">1</span>];<br>            a[c + <span class="hljs-number">1</span>] = a[c + <span class="hljs-number">3</span>];<br>            a[c + <span class="hljs-number">3</span>] = d<br>        &#125;, <span class="hljs-attr">_doCryptBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, c, d, e, j, l, f</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> m = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nRounds</span>, g = a[b] ^ c[<span class="hljs-number">0</span>], h = a[b + <span class="hljs-number">1</span>] ^ c[<span class="hljs-number">1</span>], k = a[b + <span class="hljs-number">2</span>] ^ c[<span class="hljs-number">2</span>], n = a[b + <span class="hljs-number">3</span>] ^ c[<span class="hljs-number">3</span>], p = <span class="hljs-number">4</span>, r = <span class="hljs-number">1</span>; r &lt; m; r++) <span class="hljs-keyword">var</span> q = d[g &gt;&gt;&gt; <span class="hljs-number">24</span>] ^ e[h &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] ^ j[k &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] ^ l[n &amp; <span class="hljs-number">255</span>] ^ c[p++], s = d[h &gt;&gt;&gt; <span class="hljs-number">24</span>] ^ e[k &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] ^ j[n &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] ^ l[g &amp; <span class="hljs-number">255</span>] ^ c[p++], t =<br>                d[k &gt;&gt;&gt; <span class="hljs-number">24</span>] ^ e[n &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] ^ j[g &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] ^ l[h &amp; <span class="hljs-number">255</span>] ^ c[p++], n = d[n &gt;&gt;&gt; <span class="hljs-number">24</span>] ^ e[g &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] ^ j[h &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] ^ l[k &amp; <span class="hljs-number">255</span>] ^ c[p++], g = q, h = s, k = t;<br>            q = (f[g &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | f[h &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | f[k &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | f[n &amp; <span class="hljs-number">255</span>]) ^ c[p++];<br>            s = (f[h &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | f[k &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | f[n &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | f[g &amp; <span class="hljs-number">255</span>]) ^ c[p++];<br>            t = (f[k &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | f[n &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | f[g &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | f[h &amp; <span class="hljs-number">255</span>]) ^ c[p++];<br>            n = (f[n &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | f[g &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | f[h &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | f[k &amp; <span class="hljs-number">255</span>]) ^ c[p++];<br>            a[b] = q;<br>            a[b + <span class="hljs-number">1</span>] = s;<br>            a[b + <span class="hljs-number">2</span>] = t;<br>            a[b + <span class="hljs-number">3</span>] = n<br>        &#125;, <span class="hljs-attr">keySize</span>: <span class="hljs-number">8</span><br>    &#125;);<br>    u.<span class="hljs-property">AES</span> = p.<span class="hljs-title function_">_createHelper</span>(d)<br>&#125;)();<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>fiddler导入系统证书根目录</title>
    <link href="/posts/8e1f71aa/"/>
    <url>/posts/8e1f71aa/</url>
    
    <content type="html"><![CDATA[<h2 id="fiddler导入系统证书到根目录"><a href="#fiddler导入系统证书到根目录" class="headerlink" title="fiddler导入系统证书到根目录"></a>fiddler导入系统证书到根目录</h2><h3 id="1-将证书导入本地"><a href="#1-将证书导入本地" class="headerlink" title="1. 将证书导入本地"></a>1. 将证书导入本地</h3><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl"><span class="hljs-function"><span class="hljs-title">fiddler</span> -&gt;</span> <span class="hljs-function"><span class="hljs-title">options</span> -&gt;</span> Export root certificate to desktop <br></code></pre></td></tr></table></figure><h3 id="2-openssl命令"><a href="#2-openssl命令" class="headerlink" title="2. openssl命令"></a>2. openssl命令</h3><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livescript">openssl x509 -subject_hash_old -<span class="hljs-keyword">in</span> .<span class="hljs-string">\FiddlerRoot.cer</span> -inform der<br></code></pre></td></tr></table></figure><h3 id="3-更改证书名称"><a href="#3-更改证书名称" class="headerlink" title="3. 更改证书名称"></a>3. 更改证书名称</h3><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">拿到hash值 269953<span class="hljs-built_in">fb</span>, 修改FiddlerRoot.cer 为269953<span class="hljs-built_in">fb</span><span class="hljs-number">.0</span><br></code></pre></td></tr></table></figure><h3 id="4-上传到sdcard"><a href="#4-上传到sdcard" class="headerlink" title="4. 上传到sdcard"></a>4. 上传到sdcard</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb push ./269953fb.0 /sdcard<br></code></pre></td></tr></table></figure><h3 id="5-开启导入根目录权限"><a href="#5-开启导入根目录权限" class="headerlink" title="5. 开启导入根目录权限"></a>5. 开启导入根目录权限</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell <br>su <br>mount -o rw,remount /<br></code></pre></td></tr></table></figure><h3 id="6-复制证书到系统证书"><a href="#6-复制证书到系统证书" class="headerlink" title="6. 复制证书到系统证书"></a>6. 复制证书到系统证书</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">cp /sdcard/269953fb.0 /system/etc/security/cacerts/269953fb.0<br></code></pre></td></tr></table></figure><h3 id="7-重启手机"><a href="#7-重启手机" class="headerlink" title="7. 重启手机"></a>7. 重启手机</h3><h3 id="8-查看证书"><a href="#8-查看证书" class="headerlink" title="8. 查看证书"></a>8. 查看证书</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean">设置-&gt;搜索 加密-&gt; 加密与凭据 -&gt; 信任的凭据 -&gt; 系统 DO_NOT_TRUST_FiddlerRoot<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>证书相关</category>
      
    </categories>
    
    
    <tags>
      
      <tag>fiddler</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>adb语法</title>
    <link href="/posts/b01a1416/"/>
    <url>/posts/b01a1416/</url>
    
    <content type="html"><![CDATA[<h2 id="adb常用命令"><a href="#adb常用命令" class="headerlink" title="adb常用命令"></a>adb常用命令</h2><h3 id="1-显示连接到计算机设备"><a href="#1-显示连接到计算机设备" class="headerlink" title="1. 显示连接到计算机设备"></a>1. 显示连接到计算机设备</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb devices<br></code></pre></td></tr></table></figure><h3 id="2-连接设备"><a href="#2-连接设备" class="headerlink" title="2. 连接设备"></a>2. 连接设备</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb connect 127.0.0.1:7555 //雷电模拟器端口<br></code></pre></td></tr></table></figure><h3 id="3-重启设备"><a href="#3-重启设备" class="headerlink" title="3. 重启设备"></a>3. 重启设备</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb reboot<br></code></pre></td></tr></table></figure><h3 id="4-查看手机安装app包名"><a href="#4-查看手机安装app包名" class="headerlink" title="4. 查看手机安装app包名"></a>4. 查看手机安装app包名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell pm list packages // 查看所有应用列表<br>adb shell pm list packages -s // 查看系统应用列表<br>adb shell pm list packages -3 // 查看第三方应用列表<br></code></pre></td></tr></table></figure><h3 id="5-安装apk"><a href="#5-安装apk" class="headerlink" title="5. 安装apk"></a>5. 安装apk</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb install &#x27;path&#x27;<br>adb -s &quot;ip_port&quot; install -r &quot;app_path&quot; // 安装指定ip<br></code></pre></td></tr></table></figure><h3 id="6-卸载apk"><a href="#6-卸载apk" class="headerlink" title="6. 卸载apk"></a>6. 卸载apk</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb uninstall &#x27;packagename&#x27;<br></code></pre></td></tr></table></figure><h3 id="7-启动app"><a href="#7-启动app" class="headerlink" title="7. 启动app"></a>7. 启动app</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell am start -n &quot;package_name&quot;/.&quot;activity_class_name&quot;<br></code></pre></td></tr></table></figure><h3 id="8-查看进程列表"><a href="#8-查看进程列表" class="headerlink" title="8. 查看进程列表"></a>8. 查看进程列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell ps<br></code></pre></td></tr></table></figure><h3 id="9-杀死进程"><a href="#9-杀死进程" class="headerlink" title="9. 杀死进程"></a>9. 杀死进程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell kill pid<br></code></pre></td></tr></table></figure><h3 id="10-查看app版本号"><a href="#10-查看app版本号" class="headerlink" title="10. 查看app版本号"></a>10. 查看app版本号</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell pm dump com.ss.android.ugc.aweme | findstr &quot;version&quot;<br></code></pre></td></tr></table></figure><h3 id="11-查看手机cpu架构"><a href="#11-查看手机cpu架构" class="headerlink" title="11. 查看手机cpu架构"></a>11. 查看手机cpu架构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell getprop ro.product.cpu.abi<br></code></pre></td></tr></table></figure><hr><p><a href="https://blog.csdn.net/weixin_43927138/article/details/90477966">参考链接</a></p><hr><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Android</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>FridaHook</title>
    <link href="/posts/a9c3d13e/"/>
    <url>/posts/a9c3d13e/</url>
    
    <content type="html"><![CDATA[<h1 id="FridaHook指令集"><a href="#FridaHook指令集" class="headerlink" title="FridaHook指令集"></a>FridaHook指令集</h1><h2 id="1-HookArt"><a href="#1-HookArt" class="headerlink" title="1. HookArt"></a>1. <a href="https://github.com/lasting-yang/frida_hook_libart">HookArt</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">frida -U --no-pause -f package_name -l hook_art.js -o out.log<br></code></pre></td></tr></table></figure><p><strong>HookArtSourceCode</strong>:</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">STD_STRING_SIZE</span> = <span class="hljs-number">3</span> * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">StdString</span> &#123;<br>    <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">handle</span> = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">alloc</span>(<span class="hljs-variable constant_">STD_STRING_SIZE</span>);<br>    &#125;<br><br>    <span class="hljs-title function_">dispose</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> [data, isTiny] = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_getData</span>();<br>        <span class="hljs-keyword">if</span> (!isTiny) &#123;<br>            <span class="hljs-title class_">Java</span>.<span class="hljs-property">api</span>.$delete(data);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-title function_">disposeToString</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> result = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">toString</span>();<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">dispose</span>();<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-title function_">toString</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> [data] = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_getData</span>();<br>        <span class="hljs-keyword">return</span> data.<span class="hljs-title function_">readUtf8String</span>();<br>    &#125;<br><br>    <span class="hljs-title function_">_getData</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> str = <span class="hljs-variable language_">this</span>.<span class="hljs-property">handle</span>;<br>        <span class="hljs-keyword">const</span> isTiny = (str.<span class="hljs-title function_">readU8</span>() &amp; <span class="hljs-number">1</span>) === <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">const</span> data = isTiny ? str.<span class="hljs-title function_">add</span>(<span class="hljs-number">1</span>) : str.<span class="hljs-title function_">add</span>(<span class="hljs-number">2</span> * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>).<span class="hljs-title function_">readPointer</span>();<br>        <span class="hljs-keyword">return</span> [data, isTiny];<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">prettyMethod</span>(<span class="hljs-params">method_id, withSignature</span>) &#123;<br>    <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">new</span> <span class="hljs-title class_">StdString</span>();<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-property">api</span>[<span class="hljs-string">&#x27;art::ArtMethod::PrettyMethod&#x27;</span>](result, method_id, withSignature ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">return</span> result.<span class="hljs-title function_">disposeToString</span>();<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">GetFieldID is at  0xe39b87c5 _ZN3art3JNI10GetFieldIDEP7_JNIEnvP7_jclassPKcS6_</span><br><span class="hljs-comment">GetMethodID is at  0xe39a1a19 _ZN3art3JNI11GetMethodIDEP7_JNIEnvP7_jclassPKcS6_</span><br><span class="hljs-comment">NewStringUTF is at  0xe39cff25 _ZN3art3JNI12NewStringUTFEP7_JNIEnvPKc</span><br><span class="hljs-comment">RegisterNatives is at  0xe39e08fd _ZN3art3JNI15RegisterNativesEP7_JNIEnvP7_jclassPK15JNINativeMethodi</span><br><span class="hljs-comment">GetStaticFieldID is at  0xe39c9635 _ZN3art3JNI16GetStaticFieldIDEP7_JNIEnvP7_jclassPKcS6_</span><br><span class="hljs-comment">GetStaticMethodID is at  0xe39be0ed _ZN3art3JNI17GetStaticMethodIDEP7_JNIEnvP7_jclassPKcS6_</span><br><span class="hljs-comment">GetStringUTFChars is at  0xe39d06e5 _ZN3art3JNI17GetStringUTFCharsEP7_JNIEnvP8_jstringPh</span><br><span class="hljs-comment">FindClass is at  0xe399ae5d _ZN3art3JNI9FindClassEP7_JNIEnvPKc</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook_libart</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> symbols = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">enumerateSymbolsSync</span>(<span class="hljs-string">&quot;libart.so&quot;</span>);<br>    <span class="hljs-keyword">var</span> addrGetStringUTFChars = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrNewStringUTF = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrFindClass = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrGetMethodID = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrGetStaticMethodID = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrGetFieldID = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrGetStaticFieldID = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrRegisterNatives = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> so_name = <span class="hljs-string">&quot;libsmsdk&quot;</span>;      <span class="hljs-comment">//TODO 这里写需要过滤的so</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;symbols length:&quot;</span>, symbols.<span class="hljs-property">length</span>)<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; symbols.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">var</span> symbol = symbols[i];<br>        <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;art&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp;<br>            symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;JNI&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp;<br>            symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;CheckJNI&quot;</span>) &lt; <span class="hljs-number">0</span> &amp;&amp;<br>            <span class="hljs-comment">// symbol.name.indexOf(&quot;_ZN3art3JNIILb0&quot;) &gt;= 0</span><br>            symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;_ZN3art3JNI&quot;</span>) &gt;= <span class="hljs-number">0</span><br>        ) &#123;<br>            <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;GetStringUTFChars&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrGetStringUTFChars = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;GetStringUTFChars is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;NewStringUTF&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrNewStringUTF = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;NewStringUTF is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;FindClass&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrFindClass = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;FindClass is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;GetMethodID&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrGetMethodID = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;GetMethodID is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;GetStaticMethodID&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrGetStaticMethodID = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;GetStaticMethodID is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;GetFieldID&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrGetFieldID = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;GetFieldID is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;GetStaticFieldID&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrGetStaticFieldID = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;GetStaticFieldID is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;RegisterNatives&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrRegisterNatives = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;RegisterNatives is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;CallStatic&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;CallStatic is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>                <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(symbol.<span class="hljs-property">address</span>, &#123;<br>                    <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                        <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                            <span class="hljs-keyword">var</span> java_class = args[<span class="hljs-number">1</span>];<br>                            <span class="hljs-keyword">var</span> mid = args[<span class="hljs-number">2</span>];<br>                            <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(java_class);<br>                            <span class="hljs-keyword">if</span> (class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;java.&quot;</span>) == -<span class="hljs-number">1</span> &amp;&amp; class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;android.&quot;</span>) == -<span class="hljs-number">1</span>) &#123;<br>                                <span class="hljs-keyword">var</span> method_name = <span class="hljs-title function_">prettyMethod</span>(mid, <span class="hljs-number">1</span>);<br>                                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&lt;&gt;CallStatic:&quot;</span>, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>), class_name, method_name);<br>                            &#125;<br>                        &#125;<br>                    &#125;,<br>                    <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                    &#125;<br>                &#125;);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;CallNonvirtual&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;CallNonvirtual is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>                <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(symbol.<span class="hljs-property">address</span>, &#123;<br>                    <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                        <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                            <span class="hljs-keyword">var</span> jobject = args[<span class="hljs-number">1</span>];<br>                            <span class="hljs-keyword">var</span> jclass = args[<span class="hljs-number">2</span>];<br>                            <span class="hljs-keyword">var</span> jmethodID = args[<span class="hljs-number">3</span>];<br>                            <span class="hljs-keyword">var</span> obj_class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getObjectClassName</span>(jobject);<br>                            <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(jclass);<br>                            <span class="hljs-keyword">if</span> (class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;java.&quot;</span>) == -<span class="hljs-number">1</span> &amp;&amp; class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;android.&quot;</span>) == -<span class="hljs-number">1</span>) &#123;<br>                                <span class="hljs-keyword">var</span> method_name = <span class="hljs-title function_">prettyMethod</span>(jmethodID, <span class="hljs-number">1</span>);<br>                                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&lt;&gt;CallNonvirtual:&quot;</span>, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>), class_name, obj_class_name, method_name);<br>                            &#125;<br>                        &#125;<br>                    &#125;,<br>                    <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                    &#125;<br>                &#125;);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;Call&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp; symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;Method&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Call&lt;&gt;Method is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>                <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(symbol.<span class="hljs-property">address</span>, &#123;<br>                    <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                        <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                            <span class="hljs-keyword">var</span> java_class = args[<span class="hljs-number">1</span>];<br>                            <span class="hljs-keyword">var</span> mid = args[<span class="hljs-number">2</span>];<br>                            <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getObjectClassName</span>(java_class);<br>                            <span class="hljs-keyword">if</span> (class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;java.&quot;</span>) == -<span class="hljs-number">1</span> &amp;&amp; class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;android.&quot;</span>) == -<span class="hljs-number">1</span>) &#123;<br>                                <span class="hljs-keyword">var</span> method_name = <span class="hljs-title function_">prettyMethod</span>(mid, <span class="hljs-number">1</span>);<br>                                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&lt;&gt;Call&lt;&gt;Method:&quot;</span>, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>), class_name, method_name);<br>                            &#125;<br>                        &#125;<br>                    &#125;,<br>                    <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                    &#125;<br>                &#125;);<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (addrGetStringUTFChars != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrGetStringUTFChars, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                <span class="hljs-keyword">if</span> (retval != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> bytes = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(retval);<br>                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetStringUTFChars] result:&quot;</span> + bytes, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (addrNewStringUTF != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrNewStringUTF, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">1</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> string = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">1</span>]);<br>                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[NewStringUTF] bytes:&quot;</span> + string, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (addrFindClass != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrFindClass, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">1</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">1</span>]);<br>                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[FindClass] name:&quot;</span> + name, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (addrGetMethodID != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrGetMethodID, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">2</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> clazz = args[<span class="hljs-number">1</span>];<br>                    <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(clazz);<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">2</span>]);<br>                        <span class="hljs-keyword">if</span> (args[<span class="hljs-number">3</span>] != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">3</span>]);<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetMethodID] class_name:&quot;</span> + class_name + <span class="hljs-string">&quot; name:&quot;</span> + name + <span class="hljs-string">&quot;, sig:&quot;</span> + sig, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetMethodID] class_name:&quot;</span> + class_name + <span class="hljs-string">&quot; name:&quot;</span> + name, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (addrGetStaticMethodID != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrGetStaticMethodID, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">2</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> clazz = args[<span class="hljs-number">1</span>];<br>                    <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(clazz);<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">2</span>]);<br>                        <span class="hljs-keyword">if</span> (args[<span class="hljs-number">3</span>] != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">3</span>]);<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetStaticMethodID] class_name:&quot;</span> + class_name + <span class="hljs-string">&quot; name:&quot;</span> + name + <span class="hljs-string">&quot;, sig:&quot;</span> + sig, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetStaticMethodID] class_name:&quot;</span> + class_name + <span class="hljs-string">&quot; name:&quot;</span> + name, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (addrGetFieldID != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrGetFieldID, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">2</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">2</span>]);<br>                        <span class="hljs-keyword">if</span> (args[<span class="hljs-number">3</span>] != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">3</span>]);<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetFieldID] name:&quot;</span> + name + <span class="hljs-string">&quot;, sig:&quot;</span> + sig, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetFieldID] name:&quot;</span> + name, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (addrGetStaticFieldID != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrGetStaticFieldID, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">2</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">2</span>]);<br>                        <span class="hljs-keyword">if</span> (args[<span class="hljs-number">3</span>] != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">3</span>]);<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetStaticFieldID] name:&quot;</span> + name + <span class="hljs-string">&quot;, sig:&quot;</span> + sig, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetStaticFieldID] name:&quot;</span> + name, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (addrRegisterNatives != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrRegisterNatives, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[RegisterNatives] method_count:&quot;</span>, args[<span class="hljs-number">3</span>], <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                <span class="hljs-keyword">var</span> env = args[<span class="hljs-number">0</span>];<br>                <span class="hljs-keyword">var</span> java_class = args[<span class="hljs-number">1</span>];<br>                <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(java_class);<br>                <span class="hljs-keyword">var</span> methods_ptr = <span class="hljs-title function_">ptr</span>(args[<span class="hljs-number">2</span>]);<br>                <span class="hljs-keyword">var</span> method_count = <span class="hljs-built_in">parseInt</span>(args[<span class="hljs-number">3</span>]);<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; method_count; i++) &#123;<br>                    <span class="hljs-keyword">var</span> name_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span>));<br>                    <span class="hljs-keyword">var</span> sig_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span> + <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>));<br>                    <span class="hljs-keyword">var</span> fnPtr_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span> + <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">2</span>));<br><br>                    <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(name_ptr);<br>                    <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(sig_ptr);<br>                    <span class="hljs-keyword">var</span> find_module = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(fnPtr_ptr);<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[RegisterNatives] java_class:&quot;</span>, class_name, <span class="hljs-string">&quot;name:&quot;</span>, name, <span class="hljs-string">&quot;sig:&quot;</span>, sig, <span class="hljs-string">&quot;fnPtr:&quot;</span>, fnPtr_ptr, <span class="hljs-string">&quot;module_name:&quot;</span>, find_module.<span class="hljs-property">name</span>, <span class="hljs-string">&quot;module_base:&quot;</span>, find_module.<span class="hljs-property">base</span>, <span class="hljs-string">&quot;offset:&quot;</span>, <span class="hljs-title function_">ptr</span>(fnPtr_ptr).<span class="hljs-title function_">sub</span>(find_module.<span class="hljs-property">base</span>));<br><br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br>&#125;<br><br><span class="hljs-title function_">setImmediate</span>(hook_libart);<br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><h2 id="2-HookArtMethod"><a href="#2-HookArtMethod" class="headerlink" title="2. HookArtMethod"></a>2. <a href="https://github.com/lasting-yang/frida_hook_libart">HookArtMethod</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">frida -U --no-pause -f package_name -l hook_artmethod.js -o out.log<br></code></pre></td></tr></table></figure><p><strong>HookArtMethodSourceCode</strong>:</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">STD_STRING_SIZE</span> = <span class="hljs-number">3</span> * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">StdString</span> &#123;<br>    <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">handle</span> = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">alloc</span>(<span class="hljs-variable constant_">STD_STRING_SIZE</span>);<br>    &#125;<br><br>    <span class="hljs-title function_">dispose</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> [data, isTiny] = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_getData</span>();<br>        <span class="hljs-keyword">if</span> (!isTiny) &#123;<br>            <span class="hljs-title class_">Java</span>.<span class="hljs-property">api</span>.$delete(data);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-title function_">disposeToString</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> result = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">toString</span>();<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">dispose</span>();<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-title function_">toString</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> [data] = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_getData</span>();<br>        <span class="hljs-keyword">return</span> data.<span class="hljs-title function_">readUtf8String</span>();<br>    &#125;<br><br>    <span class="hljs-title function_">_getData</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> str = <span class="hljs-variable language_">this</span>.<span class="hljs-property">handle</span>;<br>        <span class="hljs-keyword">const</span> isTiny = (str.<span class="hljs-title function_">readU8</span>() &amp; <span class="hljs-number">1</span>) === <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">const</span> data = isTiny ? str.<span class="hljs-title function_">add</span>(<span class="hljs-number">1</span>) : str.<span class="hljs-title function_">add</span>(<span class="hljs-number">2</span> * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>).<span class="hljs-title function_">readPointer</span>();<br>        <span class="hljs-keyword">return</span> [data, isTiny];<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">prettyMethod</span>(<span class="hljs-params">method_id, withSignature</span>) &#123;<br>    <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">new</span> <span class="hljs-title class_">StdString</span>();<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-property">api</span>[<span class="hljs-string">&#x27;art::ArtMethod::PrettyMethod&#x27;</span>](result, method_id, withSignature ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">return</span> result.<span class="hljs-title function_">disposeToString</span>();<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook_dlopen</span>(<span class="hljs-params">module_name, fun</span>) &#123;<br>    <span class="hljs-keyword">var</span> android_dlopen_ext = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&quot;android_dlopen_ext&quot;</span>);<br><br>    <span class="hljs-keyword">if</span> (android_dlopen_ext) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(android_dlopen_ext, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">var</span> pathptr = args[<span class="hljs-number">0</span>];<br>                <span class="hljs-keyword">if</span> (pathptr) &#123;<br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span> = (pathptr).<span class="hljs-title function_">readCString</span>();<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span>.<span class="hljs-title function_">indexOf</span>(module_name) &gt;= <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-variable language_">this</span>.<span class="hljs-property">canhook</span> = <span class="hljs-literal">true</span>;<br>                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;android_dlopen_ext:&quot;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span>);<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">canhook</span>) &#123;<br>                    <span class="hljs-title function_">fun</span>();<br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">var</span> dlopen = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&quot;dlopen&quot;</span>);<br>    <span class="hljs-keyword">if</span> (dlopen) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(dlopen, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">var</span> pathptr = args[<span class="hljs-number">0</span>];<br>                <span class="hljs-keyword">if</span> (pathptr) &#123;<br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span> = (pathptr).<span class="hljs-title function_">readCString</span>();<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span>.<span class="hljs-title function_">indexOf</span>(module_name) &gt;= <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-variable language_">this</span>.<span class="hljs-property">canhook</span> = <span class="hljs-literal">true</span>;<br>                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;dlopen:&quot;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span>);<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">canhook</span>) &#123;<br>                    <span class="hljs-title function_">fun</span>();<br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;android_dlopen_ext:&quot;</span>, android_dlopen_ext, <span class="hljs-string">&quot;dlopen:&quot;</span>, dlopen);<br>&#125;<br><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook_native</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> module_libart = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByName</span>(<span class="hljs-string">&quot;libart.so&quot;</span>);<br>    <span class="hljs-keyword">var</span> symbols = module_libart.<span class="hljs-title function_">enumerateSymbols</span>();<br>    <span class="hljs-keyword">var</span> <span class="hljs-title class_">ArtMethod</span>_Invoke = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; symbols.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">var</span> symbol = symbols[i];<br>        <span class="hljs-keyword">var</span> address = symbol.<span class="hljs-property">address</span>;<br>        <span class="hljs-keyword">var</span> name = symbol.<span class="hljs-property">name</span>;<br>        <span class="hljs-keyword">var</span> indexArtMethod = name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;ArtMethod&quot;</span>);<br>        <span class="hljs-keyword">var</span> indexInvoke = name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;Invoke&quot;</span>);<br>        <span class="hljs-keyword">var</span> indexThread = name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;Thread&quot;</span>);<br>        <span class="hljs-keyword">if</span> (indexArtMethod &gt;= <span class="hljs-number">0</span><br>            &amp;&amp; indexInvoke &gt;= <span class="hljs-number">0</span><br>            &amp;&amp; indexThread &gt;= <span class="hljs-number">0</span><br>            &amp;&amp; indexArtMethod &lt; indexInvoke<br>            &amp;&amp; indexInvoke &lt; indexThread) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(name);<br>            <span class="hljs-title class_">ArtMethod</span>_Invoke = address;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title class_">ArtMethod</span>_Invoke) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(<span class="hljs-title class_">ArtMethod</span>_Invoke, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">var</span> method_name = <span class="hljs-title function_">prettyMethod</span>(args[<span class="hljs-number">0</span>], <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">if</span> (!(method_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;java.&quot;</span>) == <span class="hljs-number">0</span> || method_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;android.&quot;</span>) == <span class="hljs-number">0</span>)) &#123;<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;ArtMethod Invoke:&quot;</span> + method_name + <span class="hljs-string">&#x27;  called from:\n&#x27;</span> +<br>                        <span class="hljs-title class_">Thread</span>.<span class="hljs-title function_">backtrace</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">context</span>, <span class="hljs-title class_">Backtracer</span>.<span class="hljs-property">ACCURATE</span>)<br>                            .<span class="hljs-title function_">map</span>(<span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-property">fromAddress</span>).<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;\n&#x27;</span>) + <span class="hljs-string">&#x27;\n&#x27;</span>);<br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title function_">hook_dlopen</span>(<span class="hljs-string">&quot;libart.so&quot;</span>, hook_native);<br>    <span class="hljs-title function_">hook_native</span>();<br>&#125;<br><br><span class="hljs-title function_">setImmediate</span>(main);<br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><h2 id="3-HookRegisterNatives"><a href="#3-HookRegisterNatives" class="headerlink" title="3. HookRegisterNatives"></a>3. <a href="https://github.com/lasting-yang/frida_hook_libart">HookRegisterNatives</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">frida -U --no-pause -f package_name -l hook_RegisterNatives.js<br></code></pre></td></tr></table></figure><p><strong>HookRegisterNativesSourceCode</strong></p><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">find_RegisterNatives</span>(<span class="hljs-params">params</span>) &#123;<br>    <span class="hljs-keyword">var</span> symbols = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">enumerateSymbolsSync</span>(<span class="hljs-string">&quot;libart.so&quot;</span>);<br>    <span class="hljs-keyword">var</span> addrRegisterNatives = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; symbols.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">var</span> symbol = symbols[i];<br><br>        <span class="hljs-comment">//_ZN3art3JNI15RegisterNativesEP7_JNIEnvP7_jclassPK15JNINativeMethodi</span><br>        <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;art&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp;<br>                symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;JNI&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp;<br>                symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;RegisterNatives&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp;<br>                symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;CheckJNI&quot;</span>) &lt; <span class="hljs-number">0</span>) &#123;<br>            addrRegisterNatives = symbol.<span class="hljs-property">address</span>;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;RegisterNatives is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            <span class="hljs-title function_">hook_RegisterNatives</span>(addrRegisterNatives)<br>        &#125;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook_RegisterNatives</span>(<span class="hljs-params">addrRegisterNatives</span>) &#123;<br><br>    <span class="hljs-keyword">if</span> (addrRegisterNatives != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrRegisterNatives, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[RegisterNatives] method_count:&quot;</span>, args[<span class="hljs-number">3</span>]);<br>                <span class="hljs-keyword">var</span> env = args[<span class="hljs-number">0</span>];<br>                <span class="hljs-keyword">var</span> java_class = args[<span class="hljs-number">1</span>];<br>                <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(java_class);<br>                <span class="hljs-comment">//console.log(class_name);</span><br><br>                <span class="hljs-keyword">var</span> methods_ptr = <span class="hljs-title function_">ptr</span>(args[<span class="hljs-number">2</span>]);<br><br>                <span class="hljs-keyword">var</span> method_count = <span class="hljs-built_in">parseInt</span>(args[<span class="hljs-number">3</span>]);<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; method_count; i++) &#123;<br>                    <span class="hljs-keyword">var</span> name_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span>));<br>                    <span class="hljs-keyword">var</span> sig_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span> + <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>));<br>                    <span class="hljs-keyword">var</span> fnPtr_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span> + <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">2</span>));<br><br>                    <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(name_ptr);<br>                    <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(sig_ptr);<br>                    <span class="hljs-keyword">var</span> find_module = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(fnPtr_ptr);<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[RegisterNatives] java_class:&quot;</span>, class_name, <span class="hljs-string">&quot;name:&quot;</span>, name, <span class="hljs-string">&quot;sig:&quot;</span>, sig, <span class="hljs-string">&quot;fnPtr:&quot;</span>, fnPtr_ptr,  <span class="hljs-string">&quot; fnOffset:&quot;</span>, <span class="hljs-title function_">ptr</span>(fnPtr_ptr).<span class="hljs-title function_">sub</span>(find_module.<span class="hljs-property">base</span>), <span class="hljs-string">&quot; callee:&quot;</span>, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br><br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br>&#125;<br><br><span class="hljs-title function_">setImmediate</span>(find_RegisterNatives);<br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Frida</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Frida Hook</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Frida基本命令</title>
    <link href="/posts/96901429/"/>
    <url>/posts/96901429/</url>
    
    <content type="html"><![CDATA[<h1 id="Frida基本命令"><a href="#Frida基本命令" class="headerlink" title="Frida基本命令"></a>Frida基本命令</h1><h2 id="1-本地安装"><a href="#1-本地安装" class="headerlink" title="1. 本地安装"></a>1. 本地安装</h2> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs commandline">pip install frida<br>pip install frida-tools<br>npm install frida<br></code></pre></td></tr></table></figure><p>   (注意，新版本的frida需要安装frida-tools)</p><h2 id="2-手机安装frida-安装版本和本地版本一致"><a href="#2-手机安装frida-安装版本和本地版本一致" class="headerlink" title="2. 手机安装frida(安装版本和本地版本一致)"></a>2. 手机安装frida(安装版本和本地版本一致)</h2><p>   下载对应版本<a href="https://github.com/frida/frida/releases">frida-server</a>, 类似<strong>frida-server-15.1.27-android-arm.xz</strong>, 注意手机CPU架构, 上传手机/data/local/tmp 目录, 启动服务<br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell getprop ro.product.cpu.abi // 查看手机CPU架构<br>adb push ./frida-server-15.1.27-android-arm /data/local/tmp // 上传frida-server<br></code></pre></td></tr></table></figure></p><h2 id="3-启动服务"><a href="#3-启动服务" class="headerlink" title="3. 启动服务"></a>3. 启动服务</h2> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell <br>su <br>cd /data/local/tmp<br>chmod 777 frida-server-15.1.27-android-arm<br>./frida-server-15.1.27-android-arm<br></code></pre></td></tr></table></figure><h2 id="4-端口转发"><a href="#4-端口转发" class="headerlink" title="4. 端口转发"></a>4. 端口转发</h2> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb forward tcp:27042 tcp:27042 // 默认端口<br></code></pre></td></tr></table></figure><h2 id="5-查看进程列表"><a href="#5-查看进程列表" class="headerlink" title="5. 查看进程列表"></a>5. 查看进程列表</h2> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">frida-ps -U<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Frida</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Frida</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>创建虚拟环境pip无法升级</title>
    <link href="/posts/c6eca636/"/>
    <url>/posts/c6eca636/</url>
    
    <content type="html"><![CDATA[<h1 id="创建虚拟环境pip无法升级"><a href="#创建虚拟环境pip无法升级" class="headerlink" title="创建虚拟环境pip无法升级"></a>创建虚拟环境pip无法升级</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">python -m pip install -U --force-reinstall pip<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>虚拟环境</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo操作</title>
    <link href="/posts/7ab4e26f/"/>
    <url>/posts/7ab4e26f/</url>
    
    <content type="html"><![CDATA[<h2 id="Hexo-命令"><a href="#Hexo-命令" class="headerlink" title="Hexo 命令"></a>Hexo 命令</h2><ol><li><p>基本命令</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ hexo clean <span class="hljs-regexp">//</span> 清除缓存<br>$ hexo g <span class="hljs-regexp">//</span> 生成静态文件<br>$ hexo s <span class="hljs-regexp">//</span> 启动服务<br>$ hexo d <span class="hljs-regexp">//</span> 部署<br></code></pre></td></tr></table></figure></li><li><p>创建文章</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss">$ hexo <span class="hljs-keyword">new</span> &lt;<span class="hljs-built_in">title</span>&gt;<br></code></pre></td></tr></table></figure></li><li><p>创建指定布局 layout</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xl">$ hexo new [layout] &lt;<span class="hljs-built_in">title</span>&gt;<br><span class="hljs-function"><span class="hljs-title">layout</span> -&gt;</span> post(文章), draft（草稿）、<span class="hljs-built_in">page</span>（页面）<br></code></pre></td></tr></table></figure></li><li><p>添加文章分类和标签</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs subunit">categories:<br>   1. 单分类<br>     - 个人博客（第一层级）<br>     - Hexo博客（第二层级）<br>   2.多分类: <br>     - [日常, 生活]<br>     - [日常, 随想]<br>     - [日记]<br><span class="hljs-keyword">tags:</span><br>  - Hexo<br>  - 博客<br></code></pre></td></tr></table></figure></li><li><p>多命令(win11 暂不支持)</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$ </span>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s<br><span class="hljs-variable">$ </span>hexo d<br></code></pre></td></tr></table></figure></li><li><p>文章加密</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">password</span>: &lt;<span class="hljs-keyword">password</span>&gt;<br></code></pre></td></tr></table></figure></li><li><p>代码块折叠</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-sliding-spoiler --save<br></code></pre></td></tr></table></figure><p>在指定代码块内输入</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs gams">&#123;% spoiler <span class="hljs-string">&quot;show/hide&quot;</span> %&#125;<br>... 代码块<br>...<br><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><br>e^&#123;ix&#125; = cosx+isinx<br><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><br>&#123;% endspoiler %&#125;<br></code></pre></td></tr></table></figure></li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
