<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>某东APP扫码登录</title>
    <link href="/posts/ec1004d6/"/>
    <url>/posts/ec1004d6/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="886c66037aa07f2969b4520c0651a2d50abfe3868ea0339daad7d81c7f1ec93e"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>Android</category>
      
      <category>Android逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>private</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>App抓包原理及SSL Pinning绕过</title>
    <link href="/posts/421051f1/"/>
    <url>/posts/421051f1/</url>
    
    <content type="html"><![CDATA[<h3 id="1、HTTPS工作原理及简介"><a href="#1、HTTPS工作原理及简介" class="headerlink" title="1、HTTPS工作原理及简介"></a>1、HTTPS工作原理及简介</h3><p><img src="1.png"></p><h3 id="2、HTTPS抓包原理-中间人攻击"><a href="#2、HTTPS抓包原理-中间人攻击" class="headerlink" title="2、HTTPS抓包原理(中间人攻击)"></a>2、HTTPS抓包原理(中间人攻击)</h3><p>我们熟悉的 <strong>Fiddler、Charles 和 HttpCanary App 等抓包工具，其实都是采用了中间人攻击（Man-in-the-MiddleAttack，MITM）的方案</strong>： 将客户端的网络流量代理到 MITM 主机，再通过一系列的面板或工具将网络请求结构化地呈现出来。<br>如果拦截的是 HTTP 请求还好说，要是拦截的是 HTTPS 请求，首先就遇到第一个问题 </p><p>—— <strong>加密</strong>：<br>    加密： 由于 HTTPS 通信中对称密钥 Master Secret 只有通信双方才持有，MITM 无法解密密文，导致在抓包工具上也只能看到一堆无意义的乱码。</p><p>要解决这个问题，只能想办法让 MITM 也获得这个对称密钥。此时，MITM 不仅要做流量拦截，还需要伪装成真实的客户端和服务端，与真实的通信双方分别建立独立的连接。我们来看下在中间人攻击下，HTTPS 的三阶段：</p><p>连接 1：客户端与中间人的 HTTPS 连接：</p><p>CA 证书校验： 客户端与 MITM 握手，MITM 返回一个 “调包” 的 CA 证书（为了让客户端验证 CA 证书通过，需要提前在系统上安装 MITM 的证书）；<br>密钥协商： 客户端和 MITM 基于 “调包” 的公钥和私钥进行非对称加密通信，协商获得对称密钥；<br>数据传输： 客户端和 MITM 基于协商的对称密钥进行对称加密通信，此时 MITM 就可以解密出明文。</p><p>连接 2：中间人与服务端的 HTTPS 连接：</p><p>CA 证书校验： MITM 与 服务端握手，服务端返回 CA 证书，由于服务端证书本来就是合法的，因此 MITM 可以拿到服务端公钥；<br>密钥协商： MITM 和服务端分别基于公钥和私钥进行非对称加密通信，协商获得 Master Secret 对称加密私钥；<br>数据传输： MITM 和服务端基于协商的对称密钥进行对称加密通信。</p><p><img src="2.jpg"></p><h3 id="3、SSL-Pinning"><a href="#3、SSL-Pinning" class="headerlink" title="3、SSL Pinning"></a>3、SSL Pinning</h3><p>SSL Pinning是一种防止中间人攻击的技术，主要机制是客户端发起请求-&gt;收到服务器发来的证书进行校验，如果收到的证书不被客户端信任，就直接断开连接不继续请求。<br>MITM中间人攻击要点就是伪造了一个假的服务端证书给了客户端，客户端误以为真。解决思路就是将客户端app内也预置一份服务端证书进行比较。<br><img src="3.jpg"><br>SSL-Pinning校验方式：</p><p>1、 证书锁定</p><pre><code class="hljs">需要在客户端代码内置仅接受指定域名的证书，而不接受操作系统或浏览器内置的CA根证书对应的任何证书，通过这种授权方式，保障了App与服务端通信的唯一性和安全性，因此客户端和服务端之间的通信是可以保证绝对安全。但CA证书签发都存在有效期问题，缺点是证书续期后需要将证书重新内置到App中</code></pre><p>2、公钥锁定</p><pre><code class="hljs">提取证书中的公钥并内置到客户端中，通过与服务器对比公钥值来验证连接的正确性。制作证书秘钥时，公钥在证书的续期前后都可以保持不变(即秘钥对不变)，所以可以避免证书有效期问题，比较推荐。</code></pre><h3 id="4、SSL-Pinning-绕过方案"><a href="#4、SSL-Pinning-绕过方案" class="headerlink" title="4、SSL-Pinning 绕过方案"></a>4、SSL-Pinning 绕过方案</h3><p>1、方案1(不需要root)</p><p><strong>修改原有app smali代码。</strong></p><p>思路：</p><pre><code class="hljs">反编译apk,找到校验证书方法,改变返回值。再编译apk，抓包。public void checkClientTrusted(X509Certificate[] ...)&#123;...&#125;public void checkServerTrusted(X509Certificate[] ...)&#123;...&#125;</code></pre><p>利用条件：</p><pre><code class="hljs">客户端app内未做签名校验。</code></pre><p>2、方案2(需要root)</p><p><strong>Xposed+JustTrustMe绕过</strong></p><p><a href="https://github.com/Fuzion24/JustTrustMe">JustTrustMe</a>简介:</p><pre><code class="hljs">JustTrustMe一个用来禁用、绕过SSL证书校验的基于XPosed模块。原理就是将APK中所有用于校验SSL证书的API都进行了Hook，从而绕过检测。</code></pre><p>3、方案3<br><strong>Frida绕过</strong></p><h3 id="4、特殊情况"><a href="#4、特殊情况" class="headerlink" title="4、特殊情况"></a>4、特殊情况</h3><pre><code class="hljs">1、淘宝    spdy协议        2、抖音    SSL_CTX_set_custom_verify</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Android</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Frida-反反调试</title>
    <link href="/posts/85029a3a/"/>
    <url>/posts/85029a3a/</url>
    
    <content type="html"><![CDATA[<h3 id="应用程序崩溃退出"><a href="#应用程序崩溃退出" class="headerlink" title="应用程序崩溃退出"></a>应用程序崩溃退出</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">show_native_stacks</span>(<span class="hljs-params">flag</span>)&#123; <br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;flag&#125;</span> \tBacktrace:\n\t`</span> + <span class="hljs-title class_">Thread</span>.<span class="hljs-title function_">backtrace</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">context</span>,<span class="hljs-title class_">Backtracer</span>.<span class="hljs-property">ACCURATE</span>).<span class="hljs-title function_">map</span>(<span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-property">fromAddress</span>).<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;\n\t&#x27;</span>));<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">anti_exit</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">const</span> exit_ptr = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&#x27;exit&#x27;</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;anti_exit: &#x27;</span>,  exit_ptr);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> == exit_ptr) &#123;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">replace</span>(exit_ptr, <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeCallback</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">flag</span>) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> == <span class="hljs-variable language_">this</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;anti_exit lr: &#x27;</span>,<span class="hljs-variable language_">this</span>.<span class="hljs-property">context</span>.<span class="hljs-property">lr</span>);<br>        <span class="hljs-title function_">show_native_stacks</span>(<span class="hljs-string">&#x27;anti_exit&#x27;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;, <span class="hljs-string">&#x27;int&#x27;</span>, [<span class="hljs-string">&#x27;int&#x27;</span>, <span class="hljs-string">&#x27;int&#x27;</span>]));<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">anti_kill</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">const</span> kill_ptr = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&#x27;kill&#x27;</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;anti_kill: &#x27;</span>, kill_ptr);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> == kill_ptr) &#123;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">replace</span>(kill_ptr, <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeCallback</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">pid, flag</span>) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> == <span class="hljs-variable language_">this</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`anti_kill: lr=<span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.context.lr&#125;</span> pid=<span class="hljs-subst">$&#123;pid&#125;</span> flag=<span class="hljs-subst">$&#123;flag&#125;</span>`</span>);<br>        <span class="hljs-title function_">show_native_stacks</span>(<span class="hljs-string">&#x27;anti_kill&#x27;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;, <span class="hljs-string">&#x27;int&#x27;</span>, [<span class="hljs-string">&#x27;int&#x27;</span>, <span class="hljs-string">&#x27;int&#x27;</span>]));<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="检测是否被调试"><a href="#检测是否被调试" class="headerlink" title="检测是否被调试"></a>检测是否被调试</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">anti_isDebuggerConnected</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-keyword">var</span> <span class="hljs-title class_">Debug</span> = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&#x27;android.os.Debug&#x27;</span>);<br>      <span class="hljs-title class_">Debug</span>.<span class="hljs-property">isDebuggerConnected</span>.<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;isDebuggerConnected Bypassed !&#x27;</span>);<br>          <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>      &#125;<br>  &#125;);<br>&#125;<br><br><span class="hljs-comment">//开发者模式</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">anti_developer_mod</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">var</span> <span class="hljs-title class_">SSecure</span> = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;android.provider.Settings$Secure&quot;</span>);<br>        <span class="hljs-title class_">SSecure</span>.<span class="hljs-property">getStringForUser</span>.<span class="hljs-title function_">overload</span>(<span class="hljs-string">&#x27;android.content.ContentResolver&#x27;</span>, <span class="hljs-string">&#x27;java.lang.String&#x27;</span>, <span class="hljs-string">&#x27;int&#x27;</span>).<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">contentResolver, name, flag</span>) &#123;<br>            <span class="hljs-keyword">if</span> (name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;development_settings_enabled&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>              <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(name);<br>              <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">getStringForUser</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, contentResolver, <span class="hljs-string">&#x27;fuckyou&#x27;</span>, flag);<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getStringForUser</span>(contentResolver, name, flag);<br>        &#125;<br>&#125;)<br>&#125;<br><br><span class="hljs-comment">//long ptrace(enum __ptrace_request request, pid_t pid, void *addr, void *data);</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">anti_ptrace</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> ptrace_ptr = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&quot;ptrace&quot;</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;ptrace_ptr: &#x27;</span>, ptrace_ptr);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> != ptrace_ptr) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">replace</span>(ptrace_ptr.<span class="hljs-title function_">or</span>(<span class="hljs-number">1</span>), <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeCallback</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">request, pid, addr, data</span>) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;anti_ptrace entry&#x27;</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>        &#125;, <span class="hljs-string">&#x27;long&#x27;</span>, [<span class="hljs-string">&#x27;int&#x27;</span>, <span class="hljs-string">&quot;int&quot;</span>, <span class="hljs-string">&#x27;pointer&#x27;</span>, <span class="hljs-string">&#x27;pointer&#x27;</span>]));<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//每日优鲜</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">anti_fork</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> fork_ptr = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&quot;fork&quot;</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;fork_ptr: &#x27;</span>,  fork_ptr);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> != fork_ptr) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">replace</span>(fork_ptr, <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeCallback</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;fork_ptr&#x27;</span>, <span class="hljs-string">&#x27;entry&#x27;</span>);<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br>        &#125;, <span class="hljs-string">&#x27;int&#x27;</span>, []));<br>    &#125;<br>&#125;<br><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getModuleByAddr</span>(<span class="hljs-params">addr</span>) &#123;<br>    <span class="hljs-keyword">var</span> result = <span class="hljs-literal">null</span>;<br>    <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">enumerateModules</span>().<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"><span class="hljs-variable language_">module</span></span>) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span>.<span class="hljs-property">base</span> &lt;= addr &amp;&amp; addr &lt;= (<span class="hljs-variable language_">module</span>.<span class="hljs-property">base</span>.<span class="hljs-title function_">add</span>(<span class="hljs-variable language_">module</span>.<span class="hljs-property">size</span>))) &#123;<br>            result = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">module</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>; <span class="hljs-comment">// 跳出循环</span><br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-comment">//char *fgets(char *str, int n, FILE *stream)</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">anti_fgets</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">const</span> tag = <span class="hljs-string">&#x27;anti_fgets&#x27;</span>;<br>    <span class="hljs-keyword">const</span> fgets_ptr = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&#x27;fgets&#x27;</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;fgets_ptr: &#x27;</span>, fgets_ptr);<br>    <span class="hljs-keyword">if</span> (!fgets_ptr) &#123;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">var</span> fgets = <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeFunction</span>(fgets_ptr, <span class="hljs-string">&#x27;pointer&#x27;</span>, [<span class="hljs-string">&#x27;pointer&#x27;</span>, <span class="hljs-string">&#x27;int&#x27;</span>, <span class="hljs-string">&#x27;pointer&#x27;</span>]);<br>    <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">replace</span>(fgets_ptr, <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeCallback</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">buffer, size, fp</span>) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> == <span class="hljs-variable language_">this</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">var</span> logTag = <span class="hljs-literal">null</span>;<br>        <span class="hljs-comment">// 进入时先记录现场</span><br>        <span class="hljs-keyword">const</span> lr = <span class="hljs-variable language_">this</span>.<span class="hljs-property">context</span>.<span class="hljs-property">lr</span><br>        <span class="hljs-comment">// 读取原 buffer</span><br>        <span class="hljs-keyword">var</span> retval = <span class="hljs-title function_">fgets</span>(buffer, size, fp);<br>        <span class="hljs-keyword">var</span> bufstr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readUtf8String</span>(buffer);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> != bufstr) &#123;<br>            <span class="hljs-keyword">if</span> (bufstr.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;TracerPid:&quot;</span>) &gt; -<span class="hljs-number">1</span>) &#123;<br>                buffer.<span class="hljs-title function_">writeUtf8String</span>(<span class="hljs-string">&quot;TracerPid:\t0&quot;</span>);<br>                logTag = <span class="hljs-string">&#x27;TracerPid&#x27;</span>;<br>            &#125;<br>            <span class="hljs-comment">//State:S (sleeping)</span><br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (bufstr.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;State:\tt (tracing stop)&quot;</span>) &gt; -<span class="hljs-number">1</span>) &#123;<br>                buffer.<span class="hljs-title function_">writeUtf8String</span>(<span class="hljs-string">&quot;State:\tS (sleeping)&quot;</span>);<br>                logTag = <span class="hljs-string">&#x27;State&#x27;</span>;<br>            &#125;<br>            <span class="hljs-comment">// ptrace_stop</span><br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (bufstr.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;ptrace_stop&quot;</span>) &gt; -<span class="hljs-number">1</span>) &#123;<br>                buffer.<span class="hljs-title function_">writeUtf8String</span>(<span class="hljs-string">&quot;sys_epoll_wait&quot;</span>);<br>                logTag = <span class="hljs-string">&#x27;ptrace_stop&#x27;</span>;<br>            &#125;<br><br>            <span class="hljs-comment">//(sankuai.meituan) t</span><br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (bufstr.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;) t&quot;</span>) &gt; -<span class="hljs-number">1</span>) &#123;<br>                buffer.<span class="hljs-title function_">writeUtf8String</span>(bufstr.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&quot;) t&quot;</span>, <span class="hljs-string">&quot;) S&quot;</span>));<br>                logTag = <span class="hljs-string">&#x27;stat_t&#x27;</span>;<br>            &#125;<br><br>            <span class="hljs-comment">// SigBlk</span><br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (bufstr.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#x27;SigBlk:&#x27;</span>) &gt; -<span class="hljs-number">1</span>) &#123;<br>                buffer.<span class="hljs-title function_">writeUtf8String</span>(<span class="hljs-string">&#x27;SigBlk:\t0000000000001204&#x27;</span>);<br>                logTag = <span class="hljs-string">&#x27;SigBlk&#x27;</span>;<br>            &#125;<br>            <span class="hljs-keyword">if</span> (logTag) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(tag + <span class="hljs-string">&quot; &quot;</span> + logTag, bufstr + <span class="hljs-string">&quot; -&gt; &quot;</span> + buffer.<span class="hljs-title function_">readCString</span>() + <span class="hljs-string">&#x27; lr: &#x27;</span> + lr +<br>                    <span class="hljs-string">&quot;(&quot;</span> + <span class="hljs-title function_">getModuleByAddr</span>(lr) + <span class="hljs-string">&quot;)&quot;</span>);<br>                <span class="hljs-title function_">show_native_stacks</span>(tag)<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> retval;<br>    &#125;, <span class="hljs-string">&#x27;pointer&#x27;</span>, [<span class="hljs-string">&#x27;pointer&#x27;</span>, <span class="hljs-string">&#x27;int&#x27;</span>, <span class="hljs-string">&#x27;pointer&#x27;</span>]));<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="检测frida"><a href="#检测frida" class="headerlink" title="检测frida"></a>检测frida</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//梆梆检测点</span><br><span class="hljs-comment">//int  readlink(const  char *path,  char *buf, size_t  bufsiz);</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">anti_readlink</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">const</span> readlink_ptr = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&quot;readlink&quot;</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;readlink_ptr: &#x27;</span>,  readlink_ptr);<br>    <span class="hljs-keyword">if</span>(!readlink_ptr)&#123;<br>        <span class="hljs-keyword">return</span> <br>    &#125;<br>    <span class="hljs-keyword">const</span> readlink = <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeFunction</span>(readlink_ptr, <span class="hljs-string">&#x27;int&#x27;</span>, [<span class="hljs-string">&#x27;pointer&#x27;</span>, <span class="hljs-string">&#x27;pointer&#x27;</span>, <span class="hljs-string">&#x27;pointer&#x27;</span>])<br>    <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">replace</span>(readlink_ptr, <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeCallback</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">path, buf, size</span>)&#123;<br>        <span class="hljs-keyword">var</span> retval = <span class="hljs-title function_">readlink</span>(path, buf, size);<br>        <span class="hljs-keyword">var</span> bufstr = buf.<span class="hljs-title function_">readCString</span>(); <br>        <span class="hljs-keyword">if</span> (bufstr.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#x27;frida&#x27;</span>)!==-<span class="hljs-number">1</span> ||<br>            bufstr.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#x27;gum-js-loop&#x27;</span>)!==-<span class="hljs-number">1</span> ||<br>            bufstr.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#x27;gmain&#x27;</span>)!==-<span class="hljs-number">1</span> ||<br>            bufstr.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#x27;linjector&#x27;</span>)!==-<span class="hljs-number">1</span>)&#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`\nreadlink(path=<span class="hljs-subst">$&#123;path.readCstring()&#125;</span>, buf=<span class="hljs-subst">$&#123;bufstr&#125;</span>, size=<span class="hljs-subst">$&#123;size&#125;</span>`</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">buf</span>.<span class="hljs-title function_">writeUtf8String</span>(<span class="hljs-string">&quot;/system/framework/boot.art&quot;</span>)<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;replce with: &quot;</span>+ <span class="hljs-variable language_">this</span>.<span class="hljs-property">buf</span>.<span class="hljs-title function_">readCString</span>())<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0x1A</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> retval;<br>    &#125;, <span class="hljs-string">&#x27;int&#x27;</span>, [<span class="hljs-string">&#x27;pointer&#x27;</span>, <span class="hljs-string">&#x27;pointer&#x27;</span>, <span class="hljs-string">&#x27;pointer&#x27;</span>]))<br>&#125;<br><br><span class="hljs-comment">//char *strstr(const char *haystack, const char *needle)</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">anti_strstr</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">const</span> strstr_ptr = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&quot;strstr&quot;</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;strstr_ptr: &#x27;</span>,  strstr_ptr);<br>    <span class="hljs-keyword">if</span>(!strstr_ptr)&#123;<br>        <span class="hljs-keyword">return</span> <br>    &#125;<br>    <span class="hljs-keyword">const</span> strstr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeFunction</span>(strstr_ptr, <span class="hljs-string">&#x27;pointer&#x27;</span>, [<span class="hljs-string">&#x27;pointer&#x27;</span>, <span class="hljs-string">&#x27;pointer&#x27;</span>])<br>    <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">replace</span>(strstr_ptr, <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeCallback</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">haystack, needle</span>)&#123;<br>        <span class="hljs-keyword">var</span> retval = <span class="hljs-title function_">strstr</span>(haystack, needle);<br>        <span class="hljs-keyword">var</span> haystackstr = haystack.<span class="hljs-title function_">readCString</span>(); <br>        <span class="hljs-keyword">var</span> needle_content = haystack.<span class="hljs-title function_">readCString</span>(); <br>        <span class="hljs-keyword">if</span> (haystackstr.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#x27;frida&#x27;</span>)!==-<span class="hljs-number">1</span> ||<br>            needle_content.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#x27;frida&#x27;</span>)!==-<span class="hljs-number">1</span> ||<br>            haystackstr.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#x27;gum-js-loop&#x27;</span>)!==-<span class="hljs-number">1</span> ||<br>            needle_content.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#x27;gum-js-loop&#x27;</span>)!==-<span class="hljs-number">1</span> ||<br>            haystackstr.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#x27;gmain&#x27;</span>)!==-<span class="hljs-number">1</span> ||<br>            needle_content.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#x27;gmain&#x27;</span>)!==-<span class="hljs-number">1</span> ||<br>            haystackstr.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#x27;linjector&#x27;</span>)!==-<span class="hljs-number">1</span> ||<br>            needle_content.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#x27;linjector&#x27;</span>)!==-<span class="hljs-number">1</span>)&#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`\nstrstr(haystack=<span class="hljs-subst">$&#123;haystackstr&#125;</span>, needle=<span class="hljs-subst">$&#123;needle_content&#125;</span>`</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">buf</span>.<span class="hljs-title function_">writeUtf8String</span>(<span class="hljs-string">&quot;/system/framework/boot.art&quot;</span>)<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;replce with: &quot;</span>+ <span class="hljs-variable language_">this</span>.<span class="hljs-property">buf</span>.<span class="hljs-title function_">readCString</span>())<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> retval;<br>    &#125;, <span class="hljs-string">&#x27;pointer&#x27;</span>, [<span class="hljs-string">&#x27;pointer&#x27;</span>, <span class="hljs-string">&#x27;pointer&#x27;</span>]))<br>&#125;<br><br><span class="hljs-comment">//线程检测</span><br><span class="hljs-comment">//int pthread_create(pthread_t* thread_out, pthread_attr_t const* attr, </span><br><span class="hljs-comment">//void* (*start_routine)(void*), void* arg)</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">anti_pthread_create_detect_frida_loop</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">const</span> pthread_create_ptr = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&quot;pthread_create&quot;</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;pthread_create_ptr: &#x27;</span>,  pthread_create_ptr);<br>    <span class="hljs-keyword">if</span>(!strstr_ptr)&#123;<br>        <span class="hljs-keyword">return</span> <br>    &#125;<br>    <span class="hljs-keyword">const</span> pthread_create = <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeFunction</span>(pthread_create_ptr, <span class="hljs-string">&#x27;int&#x27;</span>, [<span class="hljs-string">&#x27;pointer&#x27;</span>, <span class="hljs-string">&#x27;pointer&#x27;</span>,<span class="hljs-string">&#x27;pointer&#x27;</span>,<span class="hljs-string">&#x27;pointer&#x27;</span>]);<br>    <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">replace</span>(pthread_create_ptr, <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeCallback</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">thread_out, attr, start_routine, arg</span>) &#123;<br>        <span class="hljs-keyword">var</span> retval;<br>        <span class="hljs-keyword">var</span> detect_frida_loop = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&quot;_Z17detect_frida_loopPv&quot;</span>);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title class_">String</span>(detect_frida_loop) === <span class="hljs-title class_">String</span>(start_routine))&#123;<br>            retval = <span class="hljs-number">0</span>;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;Prevent detect_frida_loop Thread start&#x27;</span>)<br>        &#125; <span class="hljs-keyword">else</span>&#123;<br>            retval = <span class="hljs-title function_">pthread_create</span>(thread_out, attr, start_routine, arg);<br>        &#125;<br>        <span class="hljs-keyword">return</span> retval<br>    &#125;,<span class="hljs-string">&#x27;int&#x27;</span>, [<span class="hljs-string">&#x27;pointer&#x27;</span>, <span class="hljs-string">&#x27;pointer&#x27;</span>,<span class="hljs-string">&#x27;pointer&#x27;</span>,<span class="hljs-string">&#x27;pointer&#x27;</span>]))<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="环境检测"><a href="#环境检测" class="headerlink" title="环境检测"></a>环境检测</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> openPtr = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">getExportByName</span>(<span class="hljs-string">&#x27;libc.so&#x27;</span>, <span class="hljs-string">&#x27;open&#x27;</span>);<br><span class="hljs-keyword">const</span> open = <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeFunction</span>(openPtr, <span class="hljs-string">&#x27;int&#x27;</span>, [<span class="hljs-string">&#x27;pointer&#x27;</span>, <span class="hljs-string">&#x27;int&#x27;</span>]);<br><br><span class="hljs-keyword">var</span> readPtr = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-string">&quot;libc.so&quot;</span>, <span class="hljs-string">&quot;read&quot;</span>);<br><span class="hljs-keyword">var</span> read = <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeFunction</span>(readPtr, <span class="hljs-string">&#x27;int&#x27;</span>, [<span class="hljs-string">&#x27;int&#x27;</span>, <span class="hljs-string">&#x27;pointer&#x27;</span>, <span class="hljs-string">&quot;int&quot;</span>]);<br><span class="hljs-keyword">var</span> fakePath = <span class="hljs-string">&quot;/data/data/com.xingin.xhs/maps&quot;</span>;<span class="hljs-comment">//这里要改包名</span><br><span class="hljs-keyword">var</span> file = <span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(fakePath, <span class="hljs-string">&quot;w&quot;</span>);<br><span class="hljs-keyword">var</span> buffer = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">alloc</span>(<span class="hljs-number">512</span>);<br><br><span class="hljs-keyword">var</span> fakePath2 = <span class="hljs-string">&quot;/data/data/com.xingin.xhs/task&quot;</span>;<br><span class="hljs-keyword">var</span> file2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(fakePath2, <span class="hljs-string">&quot;w&quot;</span>);<br><span class="hljs-keyword">var</span> buffer2 = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">alloc</span>(<span class="hljs-number">512</span>);<br><br><span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">replace</span>(openPtr, <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeCallback</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">pathnameptr, flag</span>) &#123;<br>    <span class="hljs-keyword">var</span> pathname = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readUtf8String</span>(pathnameptr);<br>    <span class="hljs-keyword">var</span> realFd = <span class="hljs-title function_">open</span>(pathnameptr, flag);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;open:&quot;</span>, pathname)<br>    <span class="hljs-comment">//路径是否包含maps 和task</span><br>    <span class="hljs-keyword">if</span> (pathname.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;maps&quot;</span>) &gt;= <span class="hljs-number">0</span> || pathname.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;status&quot;</span>) &gt;= <span class="hljs-number">0</span> || pathname.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;cmdline&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">var</span> temp = pathname.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;maps&quot;</span>) &gt;= <span class="hljs-number">0</span> ? <span class="hljs-number">1</span>:<span class="hljs-number">2</span>;<br>        <span class="hljs-comment">//包含maps则map为1 task为2</span><br>        <span class="hljs-keyword">switch</span> (temp) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<span class="hljs-comment">//maps</span><br>            &#123;<br>               <span class="hljs-comment">// console.log(&quot;open maps:&quot;, pathname);</span><br>                <span class="hljs-keyword">while</span> (<span class="hljs-built_in">parseInt</span>(<span class="hljs-title function_">read</span>(realFd, buffer, <span class="hljs-number">512</span>)) !== <span class="hljs-number">0</span>) &#123;<br>                    <span class="hljs-keyword">var</span> oneLine = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(buffer);<br>                <span class="hljs-comment">//   if(pathname==&quot;/proc/self/maps&quot;)&#123;</span><br>                <span class="hljs-comment">//     console.log(&quot;maps 打印 oneLine: &quot;,oneLine);</span><br>                <span class="hljs-comment">//   &#125;</span><br>            <br>                    <span class="hljs-keyword">if</span> (oneLine.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;tmp&quot;</span>) === -<span class="hljs-number">1</span>) &#123;<br>                        <span class="hljs-comment">// === 比== 更加严格 ==类型不匹配再转化匹配值 ===类型不匹配就是false</span><br>                        <span class="hljs-comment">// 就是online 不包含tmp 则写入/data/data/com.wujie.chengxin/maps中</span><br>                        <span class="hljs-comment">// 因为Frida在运行时会先确定/data/local/tmp路径下是否有re.frida.server文件夹，</span><br>                        <span class="hljs-comment">// 若没有则创建该文件夹并存放fridaagent.so等文件</span><br>                        <span class="hljs-comment">// console.log(&quot;write :&quot;,oneLine);</span><br>                        file.<span class="hljs-title function_">write</span>(oneLine);<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        <br>                    &#125;<br>                &#125;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;外打印 maps oneLine: &quot;</span>,oneLine)<br>                <span class="hljs-keyword">var</span> filename = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">allocUtf8String</span>(fakePath);<br>                <span class="hljs-keyword">return</span> <span class="hljs-title function_">open</span>(filename, flag);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<span class="hljs-comment">//task</span><br>            &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;open task:&quot;</span>, pathname);<br>                <span class="hljs-keyword">while</span>(<span class="hljs-built_in">parseInt</span>(<span class="hljs-title function_">read</span>(realFd, buffer2, <span class="hljs-number">512</span>)) !== <span class="hljs-number">0</span>)&#123;<br>                    <span class="hljs-keyword">var</span> oneLine = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(buffer2);<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;打印 oneLine: &quot;</span>,oneLine)<br><br>                    <span class="hljs-keyword">if</span>(oneLine.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;gum-js-loop&quot;</span>)!=-<span class="hljs-number">1</span>)&#123;<br>                        <span class="hljs-keyword">var</span> replaceStr = <span class="hljs-string">&quot;AAAAAAAAAA&quot;</span><br>                        oneLine = oneLine.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&quot;gum-js-loop&quot;</span>, replaceStr)<br>                        <span class="hljs-comment">//console.log(oneLine)</span><br>                    &#125;<br>                    <span class="hljs-keyword">if</span>(oneLine.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;pool-frida&quot;</span>)!=-<span class="hljs-number">1</span>)&#123;<br>                         <span class="hljs-keyword">var</span> replaceStr = <span class="hljs-string">&quot;BBBBBBB&quot;</span><br>                        oneLine = oneLine.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&quot;pool-frida&quot;</span>, replaceStr)<br>                        <span class="hljs-comment">//console.log(oneLine)</span><br>                    &#125;<br>                    <span class="hljs-keyword">if</span>(oneLine.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;gmain&quot;</span>)!=-<span class="hljs-number">1</span>)&#123;<br>                         <span class="hljs-keyword">var</span> replaceStr = <span class="hljs-string">&quot;CCCCCCC&quot;</span>  <span class="hljs-comment">//最终只有这里匹配上了</span><br>                        oneLine = oneLine.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&quot;gmain&quot;</span>, replaceStr)<br>                        <span class="hljs-comment">//console.log(oneLine)</span><br>                    &#125;<br>                    file2.<span class="hljs-title function_">write</span>(oneLine);<br>                &#125;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;外打印 oneLine: &quot;</span>,oneLine)<br>                <span class="hljs-keyword">var</span> filename = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">allocUtf8String</span>(fakePath2);<br>                <span class="hljs-keyword">return</span> <span class="hljs-title function_">open</span>(filename, flag);<span class="hljs-comment">//把伪造的路径打开返回</span><br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">var</span> fd = <span class="hljs-title function_">open</span>(pathnameptr, flag);<br>    <span class="hljs-comment">// Thread.sleep(1)</span><br>    <span class="hljs-keyword">return</span> fd; <br>&#125;, <span class="hljs-string">&#x27;int&#x27;</span>, [<span class="hljs-string">&#x27;pointer&#x27;</span>, <span class="hljs-string">&#x27;int&#x27;</span>]));<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_self_process_name</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> openPtr = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">getExportByName</span>(<span class="hljs-string">&#x27;libc.so&#x27;</span>, <span class="hljs-string">&#x27;open&#x27;</span>);<br>    <span class="hljs-keyword">var</span> open = <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeFunction</span>(openPtr, <span class="hljs-string">&#x27;int&#x27;</span>, [<span class="hljs-string">&#x27;pointer&#x27;</span>, <span class="hljs-string">&#x27;int&#x27;</span>]);<br><br>    <span class="hljs-keyword">var</span> readPtr = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">getExportByName</span>(<span class="hljs-string">&quot;libc.so&quot;</span>, <span class="hljs-string">&quot;read&quot;</span>);<br>    <span class="hljs-keyword">var</span> read = <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeFunction</span>(readPtr, <span class="hljs-string">&quot;int&quot;</span>, [<span class="hljs-string">&quot;int&quot;</span>, <span class="hljs-string">&quot;pointer&quot;</span>, <span class="hljs-string">&quot;int&quot;</span>]);<br><br>    <span class="hljs-keyword">var</span> closePtr = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">getExportByName</span>(<span class="hljs-string">&#x27;libc.so&#x27;</span>, <span class="hljs-string">&#x27;close&#x27;</span>);<br>    <span class="hljs-keyword">var</span> close = <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeFunction</span>(closePtr, <span class="hljs-string">&#x27;int&#x27;</span>, [<span class="hljs-string">&#x27;int&#x27;</span>]);<br><br>    <span class="hljs-keyword">var</span> path = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">allocUtf8String</span>(<span class="hljs-string">&quot;/proc/self/cmdline&quot;</span>);<br>    <span class="hljs-keyword">var</span> fd = <span class="hljs-title function_">open</span>(path, <span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">if</span> (fd != -<span class="hljs-number">1</span>) &#123;<br>        <span class="hljs-keyword">var</span> buffer = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">alloc</span>(<span class="hljs-number">0x1000</span>);<br><br>        <span class="hljs-keyword">var</span> result = <span class="hljs-title function_">read</span>(fd, buffer, <span class="hljs-number">0x1000</span>);<br>        <span class="hljs-title function_">close</span>(fd);<br>        result = <span class="hljs-title function_">ptr</span>(buffer).<span class="hljs-title function_">readCString</span>();<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;进程的名字是:&quot;</span>+result);<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;-1&quot;</span>;<br>&#125;<br><br><span class="hljs-comment">//int __system_property_get(const char *name, char *value);</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">anti_system_property_get</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">const</span> system_property_get_ptr = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">getExportByName</span>(<span class="hljs-string">&#x27;libc.so&#x27;</span>, <span class="hljs-string">&#x27;__system_property_get&#x27;</span>);<br>    <span class="hljs-keyword">if</span> (!system_property_get_ptr)&#123;<br>        <span class="hljs-keyword">return</span><br>    &#125;<br>    <span class="hljs-keyword">var</span> system_property_get = <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeFunction</span>(system_property_get_ptr, <span class="hljs-string">&#x27;int&#x27;</span>, [<span class="hljs-string">&#x27;pointer&#x27;</span>, <span class="hljs-string">&#x27;pointer&#x27;</span>])<br>    <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">replace</span>(system_property_get, <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeCallback</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">name, value</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`\n__system_property_get(name=<span class="hljs-subst">$&#123;name.readCString()&#125;</span>, value=<span class="hljs-subst">$&#123;value.readCString()&#125;</span>`</span>);<br>        <span class="hljs-keyword">var</span> retval = <span class="hljs-title function_">system_property_get</span>(name, value);<br>        <span class="hljs-keyword">return</span> retval;<br>    &#125;, <span class="hljs-string">&#x27;int&#x27;</span>, [<span class="hljs-string">&#x27;pointer&#x27;</span>, <span class="hljs-string">&#x27;pointer&#x27;</span>]))<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="端口检测"><a href="#端口检测" class="headerlink" title="端口检测"></a>端口检测</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(<span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-string">&quot;libc.so&quot;</span>, <span class="hljs-string">&quot;connect&quot;</span>), &#123;<br>    <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>        <span class="hljs-keyword">var</span> memory = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readByteArray</span>(args[<span class="hljs-number">1</span>], <span class="hljs-number">64</span>);<br>        <span class="hljs-keyword">var</span> b = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(memory);<br>        <span class="hljs-keyword">if</span> (b[<span class="hljs-number">2</span>] == <span class="hljs-number">0x69</span> &amp;&amp; b[<span class="hljs-number">3</span>] == <span class="hljs-number">0xa2</span> &amp;&amp; b[<span class="hljs-number">4</span>] == <span class="hljs-number">0x7f</span> &amp;&amp; b[<span class="hljs-number">5</span>] == <span class="hljs-number">0x00</span> &amp;&amp; b[<span class="hljs-number">6</span>] == <span class="hljs-number">0x00</span> &amp;&amp; b[<span class="hljs-number">7</span>] == <span class="hljs-number">0x01</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">frida_detection</span> = <span class="hljs-literal">true</span>;<br>        &#125;<br>    &#125;,<br>    <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">frida_detection</span>) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Frida Bypassed&quot;</span>);<br>            retval.<span class="hljs-title function_">replace</span>(-<span class="hljs-number">1</span>);<br>        &#125;<br>    &#125;<br>&#125;);<br><br><span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(<span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&quot;connect&quot;</span>), &#123;<br>    <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>        <span class="hljs-keyword">var</span> family = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readU16</span>(args[<span class="hljs-number">1</span>]);<br>        <span class="hljs-keyword">if</span> (family !== <span class="hljs-number">2</span>) &#123;<br>            <span class="hljs-keyword">return</span><br>        &#125;<br>        <span class="hljs-keyword">var</span> port = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readU16</span>(args[<span class="hljs-number">1</span>].<span class="hljs-title function_">add</span>(<span class="hljs-number">2</span>));<br>        port = ((port &amp; <span class="hljs-number">0xff</span>) &lt;&lt; <span class="hljs-number">8</span>) | (port &gt;&gt; <span class="hljs-number">8</span>);<br>        <span class="hljs-keyword">if</span> (port === <span class="hljs-number">27042</span>) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;Frida port check&#x27;</span>);<br>            <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">writeU16</span>(args[<span class="hljs-number">1</span>].<span class="hljs-title function_">add</span>(<span class="hljs-number">2</span>), <span class="hljs-number">0x0101</span>);<br>        &#125;<br>    &#125;<br>&#125;);<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Hook框架</category>
      
      <category>Frida</category>
      
      <category>Hook脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Frida Hook</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Dalvik &amp; Art 虚拟机区别及优缺点</title>
    <link href="/posts/67d459b8/"/>
    <url>/posts/67d459b8/</url>
    
    <content type="html"><![CDATA[<p>Android4.4之前是Dalvik虚拟机, 4.4版本以后开始引用Art虚拟机。在4.4版本上，两种运行时环境共存，可以相互切换，但是在5.0版本以后，Dalvik虚拟机则被彻底的丢弃，全部采用ART。</p><h3 id="1、Dalvik虚拟机"><a href="#1、Dalvik虚拟机" class="headerlink" title="1、Dalvik虚拟机"></a>1、Dalvik虚拟机</h3><p><strong>Dalvik</strong>是Google专门为Android操作系统开发的虚拟机。它支持.dex（即“Dalvik Executable”）格式的Java应用程序的运行。.dex格式是专为Dalvik设计的一种压缩格式，适合内存和处理器速度有限的系统。</p><p>Dalvik 虚拟机采用的是JIT<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="JIT代表运行时编译策略，也可以理解成一种运行时编译器，是为了加快Dalvik虚拟机解释dex速度提出的一种技术方案，来缓存频繁使用的本地机器码">[1]</span></a></sup>（Just-In-Time）编译模式，意思为即时编译，我们知道apk被安装到手机中时，对应目录会有dex或odex和apk文件，apk文件存储的是资源文件，而dex或odex（经过优化后的dex文件内部存储class文件）内部存储class文件，每次运行app时虚拟机会将dex文件解释翻译成机器码，这样才算是本地可执行代码，之后被系统运行。</p><p>Dalvik虚拟机可以看做是一个<strong>Java VM</strong>，他负责解释dex文件为机器码，如果我们不做处理的话，每次执行代码，都需要Dalvik将dex代码翻译为微处理器指令，然后交给系统处理，这样效率不高。为了解决这个问题，Google在2.2版本添加了JIT编译器，当App运行时，每当遇到一个新类，JIT编译器就会对这个类进行编译，经过编译后的代码，会被优化成相当精简的原生型指令码（即native code），这样在下次执行到相同逻辑的时候，速度就会更快。</p><h3 id="2、Art虚拟机"><a href="#2、Art虚拟机" class="headerlink" title="2、Art虚拟机"></a>2、Art虚拟机</h3><p><strong>ART</strong> 是一种执行效率更高且更省电的运行机制，执行的是本地机器码，这些本地机器码是从dex字节码转换而来。ART采用的是AOT<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="AOT可以理解为一种编译策略，即运行前编译，ART虚拟机的主要特征就是AOT">[2]</span></a></sup>（Ahead-Of-Time）编译，应用在第一次安装的时候，字节码就会预先编译成机器码存储在本地。在App运行时，ART模式就较Dalvik模式少了解释字节码的过程，所以App的运行效率会有所提高，占用内存也会相应减少。谷哥在5.0以后的Android版本中默认了ART模式启动，就是希望Android能摆脱卡顿这个毛病。</p><h3 id="3、区别及优缺点"><a href="#3、区别及优缺点" class="headerlink" title="3、区别及优缺点"></a>3、区别及优缺点</h3><p>ART和Dalvik都算是一种Android运行时环境，或者叫做虚拟机，用来解释dex类型文件。但是ART是安装时解释，Dalvik是运行时解释</p><p><strong>区别</strong>:</p><ul><li><p>Dalvik每次都要编译再运行，Art只会安装时启动编译</p></li><li><p>Art占用空间比Dalvik大（原生代码占用的存储空间更大），就是用“空间换时间”</p></li><li><p>Art减少编译，减少了CPU使用频率，使用明显改善电池续航</p></li><li><p>Art应用启动更快、运行更快、体验更流畅、触感反馈更及时</p></li></ul><p><strong>Art优缺点:</strong></p><p><strong>优点:</strong></p><ul><li><p>系统性能的显著提升</p></li><li><p>应用启动更快、运行更快、体验更流畅、触感反馈更及时</p></li><li><p>更长的电池续航能力</p></li><li><p>支持更低的硬件</p></li></ul><p><strong>缺点:</strong></p><ul><li><p>更大的存储空间占用，可能会增加10%-20%</p></li><li><p>更长的应用安装时间</p></li></ul><h3 id="4、总结"><a href="#4、总结" class="headerlink" title="4、总结"></a>4、总结</h3><p><strong>Art</strong> 预先加载代替用时查找以提升应用的性能。类似编译型语言(java, go, c/c++)..<br><strong>Dalvik</strong> 一边执行一边编译, 类似解释性语言(Python, JavaScript)..</p><h4 id="注脚"><a href="#注脚" class="headerlink" title="注脚:"></a>注脚:</h4><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>JIT代表运行时编译策略，也可以理解成一种运行时编译器，是为了加快Dalvik虚拟机解释dex速度提出的一种技术方案，来缓存频繁使用的本地机器码<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>AOT可以理解为一种编译策略，即运行前编译，ART虚拟机的主要特征就是AOT<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Android</category>
      
      <category>基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Frida简介</title>
    <link href="/posts/d4d9005b/"/>
    <url>/posts/d4d9005b/</url>
    
    <content type="html"><![CDATA[<h3 id="1、什么是Frida"><a href="#1、什么是Frida" class="headerlink" title="1、什么是Frida"></a>1、<a href="https://frida.re/">什么是Frida</a></h3><p>frida是平台原生app的Greasemonkey<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="Greasemonke: firefox的一套插件体系，使用它编写的脚本可以直接改变firefox对网页的编排方式，实现想要的任何功能.">[1]</span></a></sup>，说的专业一点，就是一种<strong>动态插桩工具</strong><sup id="fnref:6" class="footnote-ref"><a href="#fn:6" rel="footnote"><span class="hint--top hint--rounded" aria-label="动态二进制插桩（dynamic binary instrumentation ,DBI）技术是一种通过注入插桩代码，来分析**二进制**应用程序在运行时的行为的方法。它可以在不影响程序动态执行结果的前提下，按照用户的分析需求，在程序执行过程中插入特定分析代码，实现对程序动态执行过程的监控与分析。目前，应用广泛的动态二进制分析平台有Pin，DynamoRIO和Frida等。">[6]</span></a></sup>，可以插入一些代码到原生app的内存空间去,动态地监视和修改其行为，这些原生平台可以是Win、Mac、Linux、Android或者iOS。俗称”外挂”😯</p><h3 id="2、Frida能干什么"><a href="#2、Frida能干什么" class="headerlink" title="2、Frida能干什么"></a>2、Frida能干什么</h3><p>动静态修改内存实现作弊一直是刚需，比如: 金山游侠<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="金山游侠: 金山软件公司出品的游戏修改工具。">[2]</span></a></sup>, CheatEngine<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="CheatEngine: 一般简称CE，是一个开放源代码的软件，功能包括：内存扫描、十六进制编辑器、调试工具，供Windows和Mac操作系统运行。">[3]</span></a></sup>, 本质上frida做的跟它是一件事情。原则上是可以用frida把金山游侠，CheatEngine包括等“外挂”做出来的。<br>在逆向的工作上也是一样的道理，使用frida可以“看到”平时看不到的东西。出于编译型语言的特性，机器码在CPU和内存上执行的过程中，其内部数据的交互和跳转，对用户来讲是看不见的。当然如果手上有源码，甚至哪怕有带调试符号的可执行文件包，也可以使用gbd<sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="gdb: Linux 下常用的程序调试器。 [官网](https://www.sourceware.org/gdb/)">[4]</span></a></sup>、lldb<sup id="fnref:5" class="footnote-ref"><a href="#fn:5" rel="footnote"><span class="hint--top hint--rounded" aria-label="lldb: 底层调试器。 [官网](https://lldb.llvm.org/)">[5]</span></a></sup>等调试器连上去看。<br>那如果没有呢？如果是纯黑盒呢？又要对app进行逆向和动态调试、甚至自动化分析以及规模化收集信息的话，我们需要的是细粒度的流程控制和代码级的可定制体系，以及不断对调试进行动态纠正和可编程调试的框架，这就是frida。<br>frida使用的是python、JavaScript等“胶水语言”也是它火爆的一个原因，可以迅速将逆向过程自动化，以及整合到现有的架构和体系中去，为发布“威胁情报”、“数据平台”甚至“AI风控”等产品打好基础。</p><h3 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h3><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>Greasemonke: firefox的一套插件体系，使用它编写的脚本可以直接改变firefox对网页的编排方式，实现想要的任何功能.<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>金山游侠: 金山软件公司出品的游戏修改工具。<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span>CheatEngine: 一般简称CE，是一个开放源代码的软件，功能包括：内存扫描、十六进制编辑器、调试工具，供Windows和Mac操作系统运行。<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span>gdb: Linux 下常用的程序调试器。 <a href="https://www.sourceware.org/gdb/">官网</a><a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span>lldb: 底层调试器。 <a href="https://lldb.llvm.org/">官网</a><a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:6" class="footnote-text"><span>动态二进制插桩（dynamic binary instrumentation ,DBI）技术是一种通过注入插桩代码，来分析<strong>二进制</strong>应用程序在运行时的行为的方法。它可以在不影响程序动态执行结果的前提下，按照用户的分析需求，在程序执行过程中插入特定分析代码，实现对程序动态执行过程的监控与分析。目前，应用广泛的动态二进制分析平台有Pin，DynamoRIO和Frida等。<a href="#fnref:6" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Hook框架</category>
      
      <category>Frida</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Frida</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hook简介</title>
    <link href="/posts/97f8220e/"/>
    <url>/posts/97f8220e/</url>
    
    <content type="html"><![CDATA[<h3 id="1、什么是Hook"><a href="#1、什么是Hook" class="headerlink" title="1、什么是Hook"></a>1、什么是Hook</h3><p>Hook是<em><strong>钩子</strong></em>的意思，在Android 操作系统中系统维护着自己的一套事件分发机制。应用程序，包括应用触发事件和后台逻辑处理，也是根据事件流程一步步地向下执行。而<strong>钩子</strong>的意思，就是在事件传送到终点前截获井监控事件的传输，像个钩子钩上事件一样，并且能够在钩上事件时，处理一些自己特定的事件。较为形象的流程如下图所示。<br><img src="img.png" alt="Hook原理图"></p><h3 id="2、Hook原理"><a href="#2、Hook原理" class="headerlink" title="2、Hook原理"></a>2、Hook原理</h3><p>Hook技术无论对安全软件还是恶意软件都是十分关键的一项技术，其本质就是<strong>劫持函数调用</strong>。但是由于处于Linux 用户态，每个进程都有自己独立的进程空间，所以必须先注入到所要Hook 的进程空间，修改其<em><strong>内存</strong></em>中的进程代码，替换其过程表的符号地址。在Android 中一般是通过<em><strong>ptrace函数</strong></em>附加进程，然后向远程进程注人so 库，从而达到监控以及远程进程关键函数挂钩。</p><h3 id="3、Hook工作流程"><a href="#3、Hook工作流程" class="headerlink" title="3、Hook工作流程"></a>3、Hook工作流程</h3><p>Hook 的原理就是改变目标函数的指向，原理看起来并不复杂，但是实现起来却不是那么的简单。<br>这里我们将问题细分为两个</p><p>如何注入代码？</p><pre><code class="hljs">需要注入的代码我们存放在哪里？如何注入代码？</code></pre><p>如何注人动态链接库？</p><pre><code class="hljs">我们不能只在自己的进程载入动态链接库，如何使进程附着上目标进程？如何让目标进程调用我们的动态链接库函数？</code></pre><p>对于进程附着， Android 的内核中有一个函数叫ptrace，它能够动态地attach （跟踪一个目标进程）、detach （结束跟踪一个目标进程）、peektext （获取内存字节）、poketext （向内存写入地址）等，它能够满足我们的需求。而Android 中的另一个内核函数dlopen ，能够以指定模式打开指定的动态链接库文件。对于程序的指向流程，我们可以调用ptrace 让PC 指向LR 堆找。 最后调用，对目标进程调用diopen 则能够将我们希望注入的动态库注入至目标进程中。</p><p>对于代码的注入（ Hook API ），我们可以使用mmap 函数分配一段临时的内存来完成代码的存放。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">对于目标进程中的mmap 函数地址的寻找与Hook API 函数地址的寻找都需要通过目标进程的虚拟地址空间解析与ELF 文件解析来完成，具体算法如下。<br>    通过读取/proc/&lt;PID&gt;/maps 文件找到链接库的基地址。<br>    读取动态库．解析ELF 文件，找到符号（需要对ELF 文件格式的深入理解）。<br>    计算目标函数的绝对地址。<br></code></pre></td></tr></table></figure><p><strong>目标进程函数绝对地址＝函数地址+动态库基地址(偏移地址)</strong><br>向目标进程中注入代码总结后的步骤分为以下几步。</p><pre><code class="hljs">( 1 ）用ptrace 函数attach 上目标进程。( 2 ）发现装载共享库so 函数。( 3 ）装载指定的 .so。( 4 ）让目标进程的执行流程跳转到注入的代码执行。( 5 ）使用ptrace 函数的detach 释放目标进程。</code></pre><h3 id="4、Hook-种类"><a href="#4、Hook-种类" class="headerlink" title="4、Hook 种类"></a>4、Hook 种类</h3><p>Hook ，也就是平时我们所说的函数挂钩、函数注入、函数劫持等操作。</p><p>针对Android 操作系统，根据API Hook 对应API 不一样我们可以分为</p><pre><code class="hljs">使用Android SDK 开发环境的Java API Hook使用Android NDK 开发环境的Native API Hook 。</code></pre><p>对于Android 中so 库文件的函数Hook ，根据ELF 文件的特性能分为</p><pre><code class="hljs">Got 表HookSym 表Hookinline Hook 等。</code></pre><p>根据Hook 方式的应用范围我们在Android这样一个特殊的环境中还能分别出</p><pre><code class="hljs">全局Hook单个应用程序Hook。</code></pre><p>对于Hook 程序的运行环境不同，还可以分为</p><pre><code class="hljs">用户级API Hook用户级APIHook 主要是针对在操作系统上为用户所提供的API 函数方法进行重定向修改内核级API Hook内核级API Hook 则是针对Android 内核Linux 系统提供的内核驱动模式造成的函数重定向，多数是应用在Rootkit 中。</code></pre><h3 id="5、Java-层API-Hook"><a href="#5、Java-层API-Hook" class="headerlink" title="5、Java 层API Hook"></a>5、Java 层API Hook</h3><p>通过对Android 平台的虚拟机注入与Java 反射的方式，来改变Android 虚拟机调用函数的方式（ClassLoader），从而达到Java 函数重定向的目的。这里我们将此类操作称为Java API Hook。</p><pre><code class="hljs">注意：因为是根据Java 中的反射机制来重定向函数的，那么很多Java 中反射出现的问题也会在此出现，如无法反射调用关键字为native 的方法函数（开q 实现的函数），基本类型的静态常量无法反射修改等。</code></pre><h3 id="6、Native-层So-库Hook"><a href="#6、Native-层So-库Hook" class="headerlink" title="6、Native 层So 库Hook"></a>6、Native 层So 库Hook</h3><p>主要是针对使用NDK开发出来的so 库文件的函数重定向，其中也包括对Android 操作系统底层的Linux 函数重定向，如使用so 库文件（ ELF 格式文件）中的全局偏移表GOT 表或符号表SYM 表进行修改从而达到的函数重定向，我们有可以对其称为GOT Hook 和SYM Hook。针对其中的inline 函数（内联函数）的Hook 称为inline Hook。</p><p><a href="https://www.kancloud.cn/alex_wsc/android/506821">参考链接</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Hook框架</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hook框架</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Frida常用命令</title>
    <link href="/posts/d1375a5/"/>
    <url>/posts/d1375a5/</url>
    
    <content type="html"><![CDATA[<h2 id="1-查看进程列表-USB设备"><a href="#1-查看进程列表-USB设备" class="headerlink" title="1. 查看进程列表(USB设备)"></a>1. 查看进程列表(USB设备)</h2> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">frida-ps -U<br></code></pre></td></tr></table></figure><h2 id="2-启动App"><a href="#2-启动App" class="headerlink" title="2. 启动App"></a>2. 启动App</h2><ul><li>spawn<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="spawn: 重新启动app并开始hook">[1]</span></a></sup>模式启动</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">frida -U -f com.xxx.xxx -l hook.js<br></code></pre></td></tr></table></figure><ul><li>attach<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="attach: 附加当前app并开始hook">[2]</span></a></sup>模式启动</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">frida -U com.xxx.xxx -p 111 -l hook.js<br></code></pre></td></tr></table></figure><p>-U USB 设备<br>-f spawn 模式启动<br>-l js hook脚本<br>-p app进程ID<br>-o out.json/log</p><h2 id="2-端口转发"><a href="#2-端口转发" class="headerlink" title="2. 端口转发"></a>2. 端口转发</h2> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb forward tcp:27042 tcp:27042 // 默认端口<br></code></pre></td></tr></table></figure><h3 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h3><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>spawn: 重新启动app并开始hook<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>attach: 附加当前app并开始hook<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Hook框架</category>
      
      <category>Frida</category>
      
      <category>基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Frida</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android查看签名信息</title>
    <link href="/posts/f43100dc/"/>
    <url>/posts/f43100dc/</url>
    
    <content type="html"><![CDATA[<h2 id="Android查看签名信息"><a href="#Android查看签名信息" class="headerlink" title="Android查看签名信息"></a>Android查看签名信息</h2><h3 id="AS开发配置签名debug-release使用同一签名"><a href="#AS开发配置签名debug-release使用同一签名" class="headerlink" title="AS开发配置签名debug/release使用同一签名"></a>AS开发配置签名debug/release使用同一签名</h3><h4 id="build-gradle-app中配置"><a href="#build-gradle-app中配置" class="headerlink" title="build.gradle app中配置"></a>build.gradle app中配置</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>配置keystore签名<br>    signingConfigs &#123;<br>        release &#123;<br>            <span class="hljs-regexp">//</span>签名文件的路径<br>            storeFile file(<span class="hljs-string">&quot;/a/b/xxx.jks&quot;</span>)<br>            <span class="hljs-regexp">//</span>Keystore password<br>            storePassword <span class="hljs-string">&quot;pwd&quot;</span><br>            <span class="hljs-regexp">//</span>Key alias<br>            keyAlias <span class="hljs-string">&quot;alias&quot;</span><br>            <span class="hljs-regexp">//</span>Key Password<br>            keyPassword <span class="hljs-string">&quot;pwd&quot;</span><br>        &#125;<br>    &#125;<br>    buildTypes &#123;<br>        debug &#123;<br>            signingConfig signingConfigs.release<br>        &#125;<br>        release &#123;<br>            signingConfig signingConfigs.release<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><h3 id="查看证书签名sha1"><a href="#查看证书签名sha1" class="headerlink" title="查看证书签名sha1"></a>查看证书签名sha1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">keytool -list -v -keystore XXX.jks<br></code></pre></td></tr></table></figure><p><img src="img.png"></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Android</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Unidbg补环境问题</title>
    <link href="/posts/3af15ef1/"/>
    <url>/posts/3af15ef1/</url>
    
    <content type="html"><![CDATA[<h3 id="补环境问题"><a href="#补环境问题" class="headerlink" title="补环境问题"></a>补环境问题</h3><h4 id="so-load-dependency-libandroid-so-failed"><a href="#so-load-dependency-libandroid-so-failed" class="headerlink" title="***.so load dependency libandroid.so failed"></a>***.so load dependency libandroid.so failed</h4><p>加载<strong>libandroid.so</strong>文件异常, 解决:<br>在加载指定so文件之前插入如下代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 将libandroid.so 加载进内存</span><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">AndroidModule</span>(emulator, vm).register(memory);<br></code></pre></td></tr></table></figure><h4 id="pathname-proc-PID-status-amp-pathname-proc-PID-cmdline"><a href="#pathname-proc-PID-status-amp-pathname-proc-PID-cmdline" class="headerlink" title="pathname=proc/PID/status  &amp; pathname=proc/PID/cmdline"></a>pathname=proc/PID/status  &amp; pathname=proc/PID/cmdline</h4><p>proc 文件系统由内核提供, 系统中正在运行的每个进程都有对应的一个目录在 proc 下，其以进程的PID 号为目录名，这个目录是读取进程信息的接口</p><p><strong>cmdline</strong>里是应用的进程名.</p><p><strong>Status</strong>，则包含的信息非常多：可执行文件名、当前状态、PID 和 PPID、实际及有效的 UID 和 GID、内存使用情况..</p><p>查看cmdline/status命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">adb shell<br>su<br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看进程ID pkgname_contains 包名截取部分</span><br>ps -A | grep pkgname_contains<br>cd /proc/PID<br>cat cmdline<br>cat status<br><br></code></pre></td></tr></table></figure><p>类需要引入接口 implements IOResolver并绑定IO重定向接口, 实现resolve方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ClassName</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AbstractJni</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">IOResolver</span><br># 创建模拟器后绑定IO重定向<br>emulator.getSyscallHandler().addIOResolver(<span class="hljs-built_in">this</span>);<br><br># resolve<br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> FileResult <span class="hljs-title function_">resolve</span><span class="hljs-params">(Emulator emulator, String pathname, <span class="hljs-type">int</span> oflags)</span> &#123;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="status"><a href="#status" class="headerlink" title="status"></a>status</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span> ((<span class="hljs-string">&quot;proc/&quot;</span> + emulator.getPid() + <span class="hljs-string">&quot;/status&quot;</span>).equals(pathname))&#123;<br>    <span class="hljs-keyword">return</span> FileResult.success(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayFileIO</span>(oflags, pathname, (<span class="hljs-string">&quot;Name:   ip.android.view\n&quot;</span> +<br>        <span class="hljs-string">&quot;State:  R (running)\n&quot;</span> +<br>        <span class="hljs-string">&quot;Tgid:   &quot;</span>+emulator.getPid()+<span class="hljs-string">&quot;\n&quot;</span> +<br>        <span class="hljs-string">&quot;Pid:    &quot;</span>+emulator.getPid()+<span class="hljs-string">&quot;\n&quot;</span> +<br>        <span class="hljs-string">&quot;PPid:   26216\n&quot;</span> +<br>        <span class="hljs-string">&quot;TracerPid:      0\n&quot;</span> +<br>        <span class="hljs-string">&quot;Uid:    10195   10195   10195   10195\n&quot;</span> +<br>        <span class="hljs-string">&quot;Gid:    10195   10195   10195   10195\n&quot;</span> +<br>        <span class="hljs-string">&quot;Ngid:   0\n&quot;</span> +<br>        <span class="hljs-string">&quot;FDSize: 512\n&quot;</span> +<br>        <span class="hljs-string">&quot;Groups: 3002 3003 9997 20195 50195\n&quot;</span> +<br>        <span class="hljs-string">&quot;VmPeak:  2696564 kB\n&quot;</span> +<br>        <span class="hljs-string">&quot;VmSize:  2580000 kB\n&quot;</span> +<br>        <span class="hljs-string">&quot;VmLck:         0 kB\n&quot;</span> +<br>        <span class="hljs-string">&quot;VmPin:         0 kB\n&quot;</span> +<br>        <span class="hljs-string">&quot;VmHWM:    565596 kB\n&quot;</span> +<br>        <span class="hljs-string">&quot;VmRSS:    438556 kB\n&quot;</span> +<br>        <span class="hljs-string">&quot;VmData:  1874468 kB\n&quot;</span> +<br>        <span class="hljs-string">&quot;VmStk:      8192 kB\n&quot;</span> +<br>        <span class="hljs-string">&quot;VmExe:        20 kB\n&quot;</span> +<br>        <span class="hljs-string">&quot;VmLib:    215136 kB\n&quot;</span> +<br>        <span class="hljs-string">&quot;VmPTE:      2416 kB\n&quot;</span> +<br>        <span class="hljs-string">&quot;VmPMD:        16 kB\n&quot;</span> +<br>        <span class="hljs-string">&quot;VmSwap:    13072 kB\n&quot;</span> +<br>        <span class="hljs-string">&quot;Threads:        126\n&quot;</span> +<br>        <span class="hljs-string">&quot;SigQ:   3/22066\n&quot;</span> +<br>        <span class="hljs-string">&quot;SigPnd: 0000000000000000\n&quot;</span> +<br>        <span class="hljs-string">&quot;ShdPnd: 0000000000000000\n&quot;</span> +<br>        <span class="hljs-string">&quot;SigBlk: 0000000080001204\n&quot;</span> +<br>        <span class="hljs-string">&quot;SigIgn: 0000000000000001\n&quot;</span> +<br>        <span class="hljs-string">&quot;SigCgt: 0000000e400096fc\n&quot;</span> +<br>        <span class="hljs-string">&quot;CapInh: 0000000000000000\n&quot;</span> +<br>        <span class="hljs-string">&quot;CapPrm: 0000000000000000\n&quot;</span> +<br>        <span class="hljs-string">&quot;CapEff: 0000000000000000\n&quot;</span> +<br>        <span class="hljs-string">&quot;CapBnd: 0000000000000000\n&quot;</span> +<br>        <span class="hljs-string">&quot;CapAmb: 0000000000000000\n&quot;</span> +<br>        <span class="hljs-string">&quot;Seccomp:        2\n&quot;</span> +<br>        <span class="hljs-string">&quot;Speculation_Store_Bypass:       unknown\n&quot;</span> +<br>        <span class="hljs-string">&quot;Cpus_allowed:   ff\n&quot;</span> +<br>        <span class="hljs-string">&quot;Cpus_allowed_list:      0-7\n&quot;</span> +<br>        <span class="hljs-string">&quot;Mems_allowed:   1\n&quot;</span> +<br>        <span class="hljs-string">&quot;Mems_allowed_list:      0\n&quot;</span> +<br>        <span class="hljs-string">&quot;voluntary_ctxt_switches:        120568\n&quot;</span> +<br>        <span class="hljs-string">&quot;nonvoluntary_ctxt_switches:     40489&quot;</span>).getBytes()));<br>    &#125;<br></code></pre></td></tr></table></figure><h5 id="cmdline"><a href="#cmdline" class="headerlink" title="cmdline"></a>cmdline</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span> ((<span class="hljs-string">&quot;proc/&quot;</span> + emulator.getPid() + <span class="hljs-string">&quot;/cmdline&quot;</span>).equals(pathname))&#123;<br>    <span class="hljs-keyword">return</span> FileResult.success(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayFileIO</span>(oflags, pathname, <span class="hljs-string">&quot;pkgName&quot;</span>.getBytes()));<br>&#125;<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>Unidbg</category>
      
    </categories>
    
    
    <tags>
      
      <tag>unidbg</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Unidbg基础</title>
    <link href="/posts/bc142051/"/>
    <url>/posts/bc142051/</url>
    
    <content type="html"><![CDATA[<h2 id="Unidbg基础"><a href="#Unidbg基础" class="headerlink" title="Unidbg基础"></a>Unidbg基础</h2><p><a href="https://github.com/zhkl0228/unidbg">源码地址</a></p><h3 id="调试命令"><a href="#调试命令" class="headerlink" title="调试命令"></a>调试命令</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs text"># 下一个断点 ida-F8<br>c: continue<br># 单步调试 ida-F9<br>n: step over<br># 查看调用栈<br>bt: back trace<br><br>st hex: search stack<br>shw hex: search writable heap<br>shr hex: search readable heap<br>shx hex: search executable heap<br><br>nb: break at next block<br>s|si: step into<br>s[decimal]: execute specified amount instruction<br>s(blx): execute util BLX mnemonic, low performance<br><br>m(op) [size]: show memory, default size is 0x70, size may hex or decimal<br><br># mr0查看r0所指向的内存块，它等同于Frida native hook中的 hexdump(this.context.r0)<br>mr0-mr7, mfp, mip, msp [size]: show memory of specified register<br>m(address) [size]: show memory of specified address, address must start with 0x<br><br>wr0-wr7, wfp, wip, wsp &lt;value&gt;: write specified register<br>wb(address), ws(address), wi(address) &lt;value&gt;: write (byte, short, integer) memory of specified address, address must start with 0x<br>wx(address) &lt;hex&gt;: write bytes to memory at specified address, address must start with 0x<br><br>b(address): add temporarily breakpoint, address must start with 0x, can be module offset<br>b: add breakpoint of register PC<br>r: remove breakpoint of register PC<br>blr: add temporarily breakpoint of register LR<br><br>p (assembly): patch assembly at PC address<br>where: show java stack trace<br><br>trace [begin end]: Set trace instructions<br>traceRead [begin end]: Set trace memory read<br>traceWrite [begin end]: Set trace memory write<br>vm: view loaded modules<br>vbs: view breakpoints<br>d|dis: show disassemble<br>d(0x): show disassemble at specify address<br>stop: stop emulation<br>run [arg]: run test<br>gc: Run System.gc()<br>cc size: convert asm from 0x40087dd8 - 0x40087dd8 + size bytes to c function<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>Unidbg</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Unidbg</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Unidbg模板</title>
    <link href="/posts/a8164fb1/"/>
    <url>/posts/a8164fb1/</url>
    
    <content type="html"><![CDATA[<h2 id="unidbg模板-Android"><a href="#unidbg模板-Android" class="headerlink" title="unidbg模板(Android)"></a>unidbg模板(Android)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com;<br><br><span class="hljs-comment">// Unidbg android 模板</span><br><br><br><span class="hljs-keyword">import</span> com.github.unidbg.AndroidEmulator;<br><span class="hljs-keyword">import</span> com.github.unidbg.Module;<br><span class="hljs-keyword">import</span> com.github.unidbg.debugger.Debugger;<br><span class="hljs-keyword">import</span> com.github.unidbg.debugger.DebuggerType;<br><span class="hljs-keyword">import</span> com.github.unidbg.linux.android.AndroidEmulatorBuilder;<br><span class="hljs-keyword">import</span> com.github.unidbg.linux.android.AndroidResolver;<br><span class="hljs-keyword">import</span> com.github.unidbg.linux.android.dvm.AbstractJni;<br><span class="hljs-keyword">import</span> com.github.unidbg.linux.android.dvm.DalvikModule;<br><span class="hljs-keyword">import</span> com.github.unidbg.linux.android.dvm.StringObject;<br><span class="hljs-keyword">import</span> com.github.unidbg.linux.android.dvm.VM;<br><span class="hljs-keyword">import</span> com.github.unidbg.memory.Memory;<br><br><span class="hljs-keyword">import</span> java.io.File;<br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UnidbgAndroidModule</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AbstractJni</span> &#123;<br>    <span class="hljs-comment">// ARM 模拟器</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> AndroidEmulator emulator;<br>    <span class="hljs-comment">// VM</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> VM vm;<br>    <span class="hljs-comment">// 载入类</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> Module <span class="hljs-keyword">module</span>;<br>    <span class="hljs-comment">// APK绝对路径, 用于签名校验</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">static</span> <span class="hljs-type">String</span> <span class="hljs-variable">APK_PATH</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-comment">// SO文件绝对路径</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">static</span> <span class="hljs-type">String</span> <span class="hljs-variable">SO_PATH</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span>;<br><br>    UnidbgAndroidModule() &#123;<br>        <span class="hljs-comment">// 创建Android模拟器实例 32, 进程名字可以随便取</span><br>        <span class="hljs-comment">// emulator = AndroidEmulatorBuilder.for32Bit().setProcessName(&quot;com.32process&quot;).build();</span><br>        <span class="hljs-comment">// 创建Android模拟器实例 64</span><br>        emulator = AndroidEmulatorBuilder.for64Bit().setProcessName(<span class="hljs-string">&quot;com.64process&quot;</span>).build();<br>        <span class="hljs-comment">// 获取操作内存的接口</span><br>        <span class="hljs-type">Memory</span> <span class="hljs-variable">memory</span> <span class="hljs-operator">=</span> emulator.getMemory();<br>        <span class="hljs-comment">// 设置Android sdk版本</span><br>        memory.setLibraryResolver(<span class="hljs-keyword">new</span> <span class="hljs-title class_">AndroidResolver</span>(<span class="hljs-number">23</span>));<br>        <span class="hljs-comment">// 创建Android 虚拟机</span><br>        vm = emulator.createDalvikVM(<span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(APK_PATH));<br>        vm.setJni(<span class="hljs-built_in">this</span>);<br>        vm.setVerbose(<span class="hljs-literal">true</span>);<br>        <span class="hljs-comment">// 加载ELF文件</span><br>        <span class="hljs-type">DalvikModule</span> <span class="hljs-variable">dm</span> <span class="hljs-operator">=</span> vm.loadLibrary(<span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(SO_PATH), <span class="hljs-literal">true</span>);<br>        dm.callJNI_OnLoad(emulator);<br>        <span class="hljs-keyword">module</span> = dm.getModule();<br>        <span class="hljs-comment">// 动态调试</span><br>        <span class="hljs-comment">// Debugger MyDbg = emulator.attach(DebuggerType.CONSOLE);</span><br>        <span class="hljs-comment">// 指定断点地址</span><br>        <span class="hljs-comment">// MyDbg.addBreakPoint(module.base + 0xabcd);</span><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">run_1</span><span class="hljs-params">()</span>&#123;<br>        List&lt;Object&gt; params = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>        params.add(vm.getJNIEnv()); <span class="hljs-comment">// 第一个参数是env 固定</span><br>        params.add(<span class="hljs-number">0</span>); <span class="hljs-comment">// 第二个参数, 实例方法是jobject, 静态方法是jclass, 直接写0, 一般用不到</span><br>        <span class="hljs-comment">// 载入参数String</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">params_1</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">params_2</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span>;<br>        params.add(vm.addLocalObject(<span class="hljs-keyword">new</span> <span class="hljs-title class_">StringObject</span>(vm, params_1)));<br>        params.add(vm.addLocalObject(<span class="hljs-keyword">new</span> <span class="hljs-title class_">StringObject</span>(vm, params_2)));<br>        <span class="hljs-comment">// 填入函数偏移地址 0x12345</span><br>        <span class="hljs-keyword">module</span>.callFunction(emulator, <span class="hljs-number">0x12345</span>, params.toArray());<br>        <span class="hljs-comment">// 如果当前函数偏移地址有返回值则通过以下方式获取</span><br>        <span class="hljs-type">Number</span> <span class="hljs-variable">number</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">module</span>.callFunction(emulator, <span class="hljs-number">0x123456</span>, params.toArray())[<span class="hljs-number">0</span>];<br>        <span class="hljs-comment">// 返回值String</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> vm.getObject(number.intValue()).getValue().toString();<br>    &#125;<br><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 实例化</span><br>        <span class="hljs-type">UnidbgAndroidModule</span> <span class="hljs-variable">unidbgAndroidModule</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnidbgAndroidModule</span>();<br>        <span class="hljs-comment">// 运行</span><br>        unidbgAndroidModule.run_1();<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>Unidbg</category>
      
    </categories>
    
    
    <tags>
      
      <tag>unidbg</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>某书Shield算法V6960</title>
    <link href="/posts/a85cbf02/"/>
    <url>/posts/a85cbf02/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="a9c6d264d7a42e37589ec8847cb53cf9e063099ab991e15a227aca9e528f2684"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>Android</category>
      
      <category>Android逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>private</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>某博PC登录</title>
    <link href="/posts/20f15d3d/"/>
    <url>/posts/20f15d3d/</url>
    
    <content type="html"><![CDATA[<h2 id="某博PC登录"><a href="#某博PC登录" class="headerlink" title="某博PC登录"></a>某博PC登录</h2><h3 id="未整合"><a href="#未整合" class="headerlink" title="未整合"></a>未整合</h3><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">from</span> urllib <span class="hljs-keyword">import</span> parse<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> rsa<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">from</span> lxml <span class="hljs-keyword">import</span> etree<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Weibo_login</span>():<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, username, password</span>):<br>        self.username = username<br>        self.password = password<br>        self.headers = &#123;<br>            <span class="hljs-string">&quot;Accept&quot;</span>: <span class="hljs-string">&quot;*/*&quot;</span>,<br>            <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.9&quot;</span>,<br>            <span class="hljs-string">&quot;Cache-Control&quot;</span>: <span class="hljs-string">&quot;no-cache&quot;</span>,<br>            <span class="hljs-string">&quot;Host&quot;</span>: <span class="hljs-string">&quot;login.sina.com.cn&quot;</span>,<br>            <span class="hljs-string">&quot;Pragma&quot;</span>: <span class="hljs-string">&quot;no-cache&quot;</span>,<br>            <span class="hljs-string">&quot;Referer&quot;</span>: <span class="hljs-string">&quot;https://weibo.com/&quot;</span>,<br>            <span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36&quot;</span>,<br>        &#125;<br><br>        self.b64_username = self.b64_encrypt(data=username)<br><br>        self.server_time = <span class="hljs-literal">None</span><br>        self.pcid = <span class="hljs-literal">None</span><br>        self.nonce = <span class="hljs-literal">None</span><br>        self.pubkey = <span class="hljs-literal">None</span><br>        self.rsakv = <span class="hljs-literal">None</span><br>        self.session = requests.session()<br><br><span class="hljs-meta">    @staticmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_rsa_result</span>(<span class="hljs-params">e, n, content</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        根据 模量与指数 生成公钥，并利用公钥对内容 rsa 加密返回结果</span><br><span class="hljs-string">        :param e:指数 10001</span><br><span class="hljs-string">        :param n: 模量 00C1E3934D1614465B33053E7F48EE4EC87B14B95EF88947713D25EECBFF7E74C7977D02DC1D9451F79DD5D1C10C29ACB6A9B4D6FB7D0A0279B6719E1772565F09AF627715919221AEF91899CAE08C0D686D748B20A3603BE2318CA6BC2B59706592A9219D0BF05C9F65023A21D2330807252AE0066D59CEEFA5F2748EA80BAB81</span><br><span class="hljs-string">        :param content:待加密字符串</span><br><span class="hljs-string">        :return: 加密后结果</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        e = <span class="hljs-built_in">int</span>(e, <span class="hljs-number">16</span>)<br>        n = <span class="hljs-built_in">int</span>(n, <span class="hljs-number">16</span>)<br><br>        pub_key = rsa.PublicKey(e=e, n=n)<br>        m = rsa.encrypt(content.encode(), pub_key)<br>        <span class="hljs-comment"># print(m.hex())</span><br>        <span class="hljs-keyword">return</span> m.<span class="hljs-built_in">hex</span>()<br><br><span class="hljs-meta">    @staticmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">b64_encrypt</span>(<span class="hljs-params">data</span>):<br>        <span class="hljs-keyword">return</span> base64.b64encode(data.encode(<span class="hljs-string">&quot;utf-8&quot;</span>)).decode()<br><br><span class="hljs-meta">    @staticmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_str_sha1_secret_str</span>(<span class="hljs-params">res: <span class="hljs-built_in">str</span></span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        使用sha1加密算法，返回str加密后的字符串</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        sha = hashlib.sha1(res.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>        encrypts = sha.hexdigest()<br>        <span class="hljs-keyword">return</span> encrypts<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_pubkey</span>(<span class="hljs-params">self</span>):<br>        url = <span class="hljs-string">&quot;https://login.sina.com.cn/sso/prelogin.php&quot;</span><br>        params = &#123;<br>            <span class="hljs-string">&quot;entry&quot;</span>: <span class="hljs-string">&quot;weibo&quot;</span>,<br>            <span class="hljs-string">&quot;callback&quot;</span>: <span class="hljs-string">&quot;sinaSSOController.preloginCallBack&quot;</span>,<br>            <span class="hljs-string">&quot;su&quot;</span>: self.b64_username,<br>            <span class="hljs-string">&quot;rsakt&quot;</span>: <span class="hljs-string">&quot;mod&quot;</span>,<br>            <span class="hljs-string">&quot;checkpin&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>            <span class="hljs-string">&quot;client&quot;</span>: <span class="hljs-string">&quot;ssologin.js(v1.4.19)&quot;</span>,<br>            <span class="hljs-string">&quot;_&quot;</span>: <span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(time.time() * <span class="hljs-number">1000</span>)),<br>        &#125;<br>        result = self.session.get(url, headers=self.headers, params=params)<br>        res_str = re.findall(<span class="hljs-string">r&#x27;sinaSSOController.preloginCallBack\((.*?)\)&#x27;</span>, result.text)[<span class="hljs-number">0</span>]<br>        res_dict = json.loads(res_str)<br>        self.server_time = <span class="hljs-built_in">str</span>(res_dict.get(<span class="hljs-string">&quot;servertime&quot;</span>))<br>        self.pcid = res_dict.get(<span class="hljs-string">&quot;pcid&quot;</span>)<br>        self.nonce = res_dict.get(<span class="hljs-string">&quot;nonce&quot;</span>)<br>        self.pubkey = res_dict.get(<span class="hljs-string">&quot;pubkey&quot;</span>)<br>        self.rsakv = res_dict.get(<span class="hljs-string">&quot;rsakv&quot;</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt_password</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-comment"># RSA</span><br>        str_data = (self.server_time + self.nonce).join(<span class="hljs-string">&quot;\t&quot;</span>) + <span class="hljs-string">&quot;\n&quot;</span> + self.password<br>        en_string = self.get_rsa_result(<span class="hljs-string">&quot;10001&quot;</span>, self.pubkey, str_data)<br>        <span class="hljs-comment"># SHA1</span><br>        <span class="hljs-comment"># print(first_en_str)</span><br>        <span class="hljs-keyword">return</span> en_string<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">send_sms</span>(<span class="hljs-params">self, token</span>):<br><br>        send_sms_url = <span class="hljs-string">f&#x27;https://passport.weibo.com/protection/mobile/sendcode?token=<span class="hljs-subst">&#123;token&#125;</span>&#x27;</span><br>        index_url = <span class="hljs-string">f&#x27;https://passport.weibo.com/protection/index?token=<span class="hljs-subst">&#123;token&#125;</span>&amp;callback_url=https%3A%2F%2Fweibo.com%2F&#x27;</span><br>        check_url = <span class="hljs-string">f&quot;https://passport.weibo.com/protection/mobile/confirm?token=<span class="hljs-subst">&#123;token&#125;</span>&quot;</span><br><br>        wb_sso_url = <span class="hljs-string">&quot;https://passport.weibo.com/wbsso/login&quot;</span><br>        headers = &#123;<br>            <span class="hljs-string">&quot;Accept&quot;</span>: <span class="hljs-string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&quot;</span>,<br>            <span class="hljs-comment"># &quot;Accept-Encoding&quot;: &quot;gzip, deflate, br&quot;,</span><br>            <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.9&quot;</span>,<br>            <span class="hljs-comment"># &quot;Host&quot;: &quot;passport.weibo.com&quot;,</span><br>            <span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36&quot;</span>,<br>        &#125;<br>        index_response = self.session.get(index_url, headers=headers)<br>        tree = etree.HTML(index_response.content.decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>        encrypt_mobile = tree.xpath(<span class="hljs-string">&#x27;//input[@name=&quot;encrypt_mobile&quot;]/@value&#x27;</span>)[<span class="hljs-number">0</span>]<br>        data = &#123;<br>            <span class="hljs-string">&quot;encrypt_mobile&quot;</span>: encrypt_mobile,<br>        &#125;<br><br>        sms_response = self.session.post(send_sms_url, headers=headers, data=data).json()<br>        <span class="hljs-keyword">if</span> sms_response.get(<span class="hljs-string">&quot;msg&quot;</span>) == <span class="hljs-string">&quot;succ&quot;</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;发送验证码成功&#x27;</span>)<br>            input_sms = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入验证码:&quot;</span>)<br>            data[<span class="hljs-string">&quot;code&quot;</span>] = input_sms<br>            check_response = self.session.post(check_url, headers=headers, data=data)<br>            verify_sms_json = check_response.json()<br>            redirect_url = verify_sms_json.get(<span class="hljs-string">&quot;data&quot;</span>).get(<span class="hljs-string">&quot;redirect_url&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;redirect_url:&quot;</span>, redirect_url)<br>            redirect_response = self.session.get(redirect_url, headers=headers)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;redirect_result:&quot;</span>, redirect_response.text)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;redirect_headers:&quot;</span>, redirect_response.headers)<br>            crossdomain2 = re.findall(<span class="hljs-string">r&#x27;location.replace\(&quot;(.*?)&quot;\)&#x27;</span>, redirect_response.text)[<span class="hljs-number">0</span>]<br>            headers[<span class="hljs-string">&quot;referer&quot;</span>] = redirect_url<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;crossdomain2:&quot;</span>, crossdomain2)<br>            crossdomain2_result = self.session.get(crossdomain2, headers=headers)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;crossdomain2_result text&quot;</span>, crossdomain2_result.text)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;crossdomain2_result headers&quot;</span>, crossdomain2_result.headers)<br>            arr_url = json.loads(re.findall(<span class="hljs-string">r&#x27;setCrossDomainUrlList\((.*?)\);&#x27;</span>, crossdomain2_result.text)[<span class="hljs-number">0</span>]).get(<span class="hljs-string">&quot;arrURL&quot;</span>)<br>            start_script = <span class="hljs-number">0</span><br>            <span class="hljs-keyword">for</span> arr_url_one <span class="hljs-keyword">in</span> arr_url:<br>                headers[<span class="hljs-string">&quot;referer&quot;</span>] = <span class="hljs-string">&quot;https://login.sina.com.cn/&quot;</span><br>                arr_url_last = arr_url_one + <span class="hljs-string">f&quot;&amp;callback=sinaSSOController.doCrossDomainCallBack&quot;</span> \<br>                                             <span class="hljs-string">f&quot;&amp;scriptId=ssoscript<span class="hljs-subst">&#123;start_script&#125;</span>&quot;</span> \<br>                                             <span class="hljs-string">f&quot;&amp;client=ssologin.js(v1.4.19)&quot;</span> \<br>                                             <span class="hljs-string">f&quot;&amp;_=<span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(time.time() * <span class="hljs-number">1000</span>))&#125;</span>&quot;</span><br>                res_one = self.session.get(arr_url_last, headers=headers)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;arr_url_one:<span class="hljs-subst">&#123;arr_url_last&#125;</span>&quot;</span>, res_one.headers)<br>                start_script += <span class="hljs-number">1</span><br>                <span class="hljs-comment"># 可以写成每次获取res_one.headers.set-cookie 判断 如果SUB domain=.weibo.cn; 就可用</span><br>            sso_second_url = re.findall(<span class="hljs-string">r&quot;location.replace\(&#x27;(.*?)&#x27;\)&quot;</span>, crossdomain2_result.text)[<span class="hljs-number">0</span>]<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;sso_second_url:&quot;</span>, sso_second_url)<br>            sso_second_resp = self.session.get(sso_second_url, headers=headers)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;sso_second_resp text&quot;</span>, sso_second_resp.text)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;sso_second_resp headers&quot;</span>, sso_second_resp.headers)<br><br><br>            <span class="hljs-comment"># signup_url = &quot;https://login.sina.com.cn/signup/signin.php?entry=weibo&amp;r=https%3A%2F%2Fweibo.com%2F&quot;</span><br>            <span class="hljs-comment"># signup_resp = self.session.get(signup_url, headers=headers)</span><br>            <span class="hljs-comment"># print(&quot;signup_result:&quot;, signup_resp.text)</span><br>            <span class="hljs-comment"># print(&quot;signup_headers:&quot;, signup_resp.headers)</span><br>            <span class="hljs-comment">#</span><br>            <span class="hljs-comment"># wb_index = &quot;https://weibo.com/&quot;</span><br>            <span class="hljs-comment"># crossdomain2_response = self.session.get(wb_index, headers=headers)</span><br>            <span class="hljs-comment"># print(&quot;wb_index:&quot;, crossdomain2_response.text)</span><br>            <span class="hljs-comment"># print(&quot;wb_index_headers:&quot;, crossdomain2_response.headers)</span><br><br>            <span class="hljs-comment"># print(check_response.json())</span><br>            <span class="hljs-comment"># print(check_response.headers)</span><br><br>            <span class="hljs-comment"># 重新二次校验</span><br>            <span class="hljs-comment"># wb_sso_params = &#123;</span><br>            <span class="hljs-comment">#     &quot;ticket&quot;: &quot;&quot;,</span><br>            <span class="hljs-comment">#     &quot;ssosavestate&quot;: &quot;1685158935&quot;,</span><br>            <span class="hljs-comment">#     &quot;callback&quot;: &quot;sinaSSOController.doCrossDomainCallBack&quot;,</span><br>            <span class="hljs-comment">#     &quot;scriptId&quot;: &quot;ssoscript0&quot;,</span><br>            <span class="hljs-comment">#     &quot;client&quot;: &quot;ssologin.js(v1.4.19)&quot;,</span><br>            <span class="hljs-comment">#     &quot;_&quot;: str(int(time.time() * 1000)),</span><br>            <span class="hljs-comment"># &#125;</span><br>            <span class="hljs-comment"># wb_sso_response = self.session.get(wb_sso_url, params=wb_sso_params, headers=headers)</span><br>            <span class="hljs-comment"># print(&quot;wb_sso_response:&quot;, wb_sso_response.text)</span><br>            <span class="hljs-comment"># print(&#x27;wb_sso_headers:&#x27;, wb_sso_response.headers)</span><br><br><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;发送验证码失败&#x27;</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">login</span>(<span class="hljs-params">self</span>):<br>        psd_encrypt = self.encrypt_password()<br>        url = <span class="hljs-string">f&quot;https://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.15)&amp;_=<span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(time.time() * <span class="hljs-number">1000</span>))&#125;</span>&quot;</span><br>        data = &#123;<br>            <span class="hljs-string">&quot;entry&quot;</span>: <span class="hljs-string">&quot;sso&quot;</span>,<br>            <span class="hljs-string">&quot;gateway&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>            <span class="hljs-string">&quot;from&quot;</span>: <span class="hljs-string">&quot;null&quot;</span>,<br>            <span class="hljs-string">&quot;savestate&quot;</span>: <span class="hljs-string">&quot;30&quot;</span>,<br>            <span class="hljs-string">&quot;useticket&quot;</span>: <span class="hljs-string">&quot;0&quot;</span>,<br>            <span class="hljs-string">&quot;pagerefer&quot;</span>: <span class="hljs-string">&quot;https://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.19)&quot;</span>,<br>            <span class="hljs-string">&quot;vsnf&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>            <span class="hljs-string">&quot;su&quot;</span>: self.b64_username,<br>            <span class="hljs-string">&quot;service&quot;</span>: <span class="hljs-string">&quot;sso&quot;</span>,<br>            <span class="hljs-string">&quot;servertime&quot;</span>: self.server_time,<br>            <span class="hljs-string">&quot;nonce&quot;</span>: self.nonce,<br>            <span class="hljs-string">&quot;pwencode&quot;</span>: <span class="hljs-string">&quot;rsa2&quot;</span>,<br>            <span class="hljs-string">&quot;rsakv&quot;</span>: self.rsakv,<br>            <span class="hljs-string">&quot;sp&quot;</span>: psd_encrypt,<br>            <span class="hljs-string">&quot;sr&quot;</span>: <span class="hljs-string">&quot;1920*1080&quot;</span>,<br>            <span class="hljs-string">&quot;encoding&quot;</span>: <span class="hljs-string">&quot;UTF-8&quot;</span>,<br>            <span class="hljs-string">&quot;cdult&quot;</span>: <span class="hljs-string">&quot;3&quot;</span>,<br>            <span class="hljs-string">&quot;domain&quot;</span>: <span class="hljs-string">&quot;sina.com.cn&quot;</span>,<br>            <span class="hljs-string">&quot;prelt&quot;</span>: <span class="hljs-string">&quot;78&quot;</span>,<br>            <span class="hljs-string">&quot;returntype&quot;</span>: <span class="hljs-string">&quot;TEXT&quot;</span>,<br>        &#125;<br><br>        result = self.session.post(url, headers=self.headers, data=data)<br>        result_json = result.json()<br>        reason = result_json.get(<span class="hljs-string">&quot;reason&quot;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;提示完成登录&quot;</span> <span class="hljs-keyword">in</span> reason:<br>            set_cookie = result.headers[<span class="hljs-string">&#x27;Set-Cookie&#x27;</span>]<br>            token = re.findall(<span class="hljs-string">r&#x27;TEMP_PWD_FLOW_ID=(.*?);&#x27;</span>, set_cookie)[<span class="hljs-number">0</span>]<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;token---&gt;&#x27;</span>, token)<br>            self.send_sms(token=token)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(reason)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>(<span class="hljs-params">username, password</span>):<br>    wb = Weibo_login(username=username, password=password)<br>    wb.get_pubkey()<br>    wb.login()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    username = <span class="hljs-string">&quot;&quot;</span><br>    password = <span class="hljs-string">&quot;&quot;</span><br>    run(username=username, password=password)<br><br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><h3 id="整合过"><a href="#整合过" class="headerlink" title="整合过"></a>整合过</h3><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> rsa<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">from</span> lxml <span class="hljs-keyword">import</span> etree<br><span class="hljs-keyword">import</span> re<br><br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">WeiboLogin</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, username, password</span>):<br>        self.username = username<br>        self.password = password<br>        self.headers = &#123;<br>            <span class="hljs-string">&quot;Accept&quot;</span>: <span class="hljs-string">&quot;*/*&quot;</span>,<br>            <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.9&quot;</span>,<br>            <span class="hljs-string">&quot;Cache-Control&quot;</span>: <span class="hljs-string">&quot;no-cache&quot;</span>,<br>            <span class="hljs-string">&quot;Host&quot;</span>: <span class="hljs-string">&quot;login.sina.com.cn&quot;</span>,<br>            <span class="hljs-string">&quot;Pragma&quot;</span>: <span class="hljs-string">&quot;no-cache&quot;</span>,<br>            <span class="hljs-string">&quot;Referer&quot;</span>: <span class="hljs-string">&quot;https://weibo.com/&quot;</span>,<br>            <span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36&quot;</span>,<br>        &#125;<br><br>        self.b64_username = self.b64_encrypt(data=username)<br><br>        self.server_time = <span class="hljs-literal">None</span><br>        self.pcid = <span class="hljs-literal">None</span><br>        self.nonce = <span class="hljs-literal">None</span><br>        self.pubkey = <span class="hljs-literal">None</span><br>        self.rsakv = <span class="hljs-literal">None</span><br>        self.session = requests.session()<br><br><span class="hljs-meta">    @staticmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_rsa_result</span>(<span class="hljs-params">e, n, content</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        根据 模量与指数 生成公钥，并利用公钥对内容 rsa 加密返回结果</span><br><span class="hljs-string">        :param e:指数 10001</span><br><span class="hljs-string">        :param n: 模量 00C1E3934D1614465B33053E7F48EE4EC87B14B95EF88947713D25EECBFF7E74C7977D02DC1D9451F79DD5D1C10C29ACB6A9B4D6FB7D0A0279B6719E1772565F09AF627715919221AEF91899CAE08C0D686D748B20A3603BE2318CA6BC2B59706592A9219D0BF05C9F65023A21D2330807252AE0066D59CEEFA5F2748EA80BAB81</span><br><span class="hljs-string">        :param content:待加密字符串</span><br><span class="hljs-string">        :return: 加密后结果</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        e = <span class="hljs-built_in">int</span>(e, <span class="hljs-number">16</span>)<br>        n = <span class="hljs-built_in">int</span>(n, <span class="hljs-number">16</span>)<br><br>        pub_key = rsa.PublicKey(e=e, n=n)<br>        m = rsa.encrypt(content.encode(), pub_key)<br>        <span class="hljs-comment"># print(m.hex())</span><br>        <span class="hljs-keyword">return</span> m.<span class="hljs-built_in">hex</span>()<br><br><span class="hljs-meta">    @staticmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">b64_encrypt</span>(<span class="hljs-params">data</span>):<br>        <span class="hljs-keyword">return</span> base64.b64encode(data.encode(<span class="hljs-string">&quot;utf-8&quot;</span>)).decode()<br><br><span class="hljs-meta">    @staticmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_str_sha1_secret_str</span>(<span class="hljs-params">res: <span class="hljs-built_in">str</span></span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        使用sha1加密算法，返回str加密后的字符串</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        sha = hashlib.sha1(res.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>        encrypts = sha.hexdigest()<br>        <span class="hljs-keyword">return</span> encrypts<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_pubkey</span>(<span class="hljs-params">self</span>):<br>        url = <span class="hljs-string">&quot;https://login.sina.com.cn/sso/prelogin.php&quot;</span><br>        params = &#123;<br>            <span class="hljs-string">&quot;entry&quot;</span>: <span class="hljs-string">&quot;weibo&quot;</span>,<br>            <span class="hljs-string">&quot;callback&quot;</span>: <span class="hljs-string">&quot;sinaSSOController.preloginCallBack&quot;</span>,<br>            <span class="hljs-string">&quot;su&quot;</span>: self.b64_username,<br>            <span class="hljs-string">&quot;rsakt&quot;</span>: <span class="hljs-string">&quot;mod&quot;</span>,<br>            <span class="hljs-string">&quot;checkpin&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>            <span class="hljs-string">&quot;client&quot;</span>: <span class="hljs-string">&quot;ssologin.js(v1.4.19)&quot;</span>,<br>            <span class="hljs-string">&quot;_&quot;</span>: <span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(time.time() * <span class="hljs-number">1000</span>)),<br>        &#125;<br>        result = self.session.get(url, headers=self.headers, params=params)<br>        res_str = re.findall(<span class="hljs-string">r&#x27;sinaSSOController.preloginCallBack\((.*?)\)&#x27;</span>, result.text)[<span class="hljs-number">0</span>]<br>        res_dict = json.loads(res_str)<br>        self.server_time = <span class="hljs-built_in">str</span>(res_dict.get(<span class="hljs-string">&quot;servertime&quot;</span>))<br>        self.pcid = res_dict.get(<span class="hljs-string">&quot;pcid&quot;</span>)<br>        self.nonce = res_dict.get(<span class="hljs-string">&quot;nonce&quot;</span>)<br>        self.pubkey = res_dict.get(<span class="hljs-string">&quot;pubkey&quot;</span>)<br>        self.rsakv = res_dict.get(<span class="hljs-string">&quot;rsakv&quot;</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt_password</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-comment"># RSA</span><br>        str_data = (self.server_time + self.nonce).join(<span class="hljs-string">&quot;\t&quot;</span>) + <span class="hljs-string">&quot;\n&quot;</span> + self.password<br>        en_string = self.get_rsa_result(<span class="hljs-string">&quot;10001&quot;</span>, self.pubkey, str_data)<br>        <span class="hljs-comment"># SHA1</span><br>        <span class="hljs-comment"># print(first_en_str)</span><br>        <span class="hljs-keyword">return</span> en_string<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">send_sms</span>(<span class="hljs-params">self, token, times=<span class="hljs-number">1</span></span>):<br>        send_sms_url = <span class="hljs-string">f&#x27;https://passport.weibo.com/protection/mobile/sendcode?token=<span class="hljs-subst">&#123;token&#125;</span>&#x27;</span><br>        index_url = <span class="hljs-string">f&#x27;https://passport.weibo.com/protection/index?token=<span class="hljs-subst">&#123;token&#125;</span>&amp;callback_url=https%3A%2F%2Fweibo.com%2F&#x27;</span><br>        check_url = <span class="hljs-string">f&quot;https://passport.weibo.com/protection/mobile/confirm?token=<span class="hljs-subst">&#123;token&#125;</span>&quot;</span><br>        headers = &#123;<br>            <span class="hljs-string">&quot;Accept&quot;</span>: <span class="hljs-string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&quot;</span>,<br>            <span class="hljs-string">&quot;Accept-Encoding&quot;</span>: <span class="hljs-string">&quot;gzip, deflate, br&quot;</span>,<br>            <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.9&quot;</span>,<br>            <span class="hljs-string">&quot;Host&quot;</span>: <span class="hljs-string">&quot;passport.weibo.com&quot;</span>,<br>            <span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36&quot;</span>,<br>        &#125;<br>        index_response = self.session.get(index_url, headers=headers)<br>        tree = etree.HTML(index_response.content.decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>        encrypt_mobile = tree.xpath(<span class="hljs-string">&#x27;//input[@name=&quot;encrypt_mobile&quot;]/@value&#x27;</span>)[<span class="hljs-number">0</span>]<br>        data = &#123;<br>            <span class="hljs-string">&quot;encrypt_mobile&quot;</span>: encrypt_mobile,<br>        &#125;<br><br>        sms_response = self.session.post(send_sms_url, headers=headers, data=data).json()<br>        <span class="hljs-keyword">if</span> sms_response.get(<span class="hljs-string">&quot;msg&quot;</span>) == <span class="hljs-string">&quot;succ&quot;</span>:<br>            input_sms = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入验证码:&quot;</span>)<br>            <span class="hljs-comment"># input_sms = self.get_code()</span><br>            data[<span class="hljs-string">&quot;code&quot;</span>] = input_sms<br>            check_response = self.session.post(check_url, headers=headers, data=data)<br>            <span class="hljs-keyword">try</span>:<br>                response = self.session.get(check_response.json()[<span class="hljs-string">&#x27;data&#x27;</span>][<span class="hljs-string">&#x27;redirect_url&#x27;</span>])<br>            <span class="hljs-keyword">except</span> KeyError:<br>                time.sleep(<span class="hljs-number">10</span>)<br>                times += <span class="hljs-number">1</span><br>                <span class="hljs-keyword">if</span> times &lt;= <span class="hljs-number">5</span>:<br>                    <span class="hljs-keyword">return</span> self.send_sms(token=token, times=times)<br>                <span class="hljs-keyword">else</span>:<br>                    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br>            cookie = re.findall(<span class="hljs-string">&#x27;SUB=(.*?);&#x27;</span>, response.headers[<span class="hljs-string">&#x27;Set-Cookie&#x27;</span>])[<span class="hljs-number">0</span>]<br>            <span class="hljs-keyword">return</span> cookie<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">login</span>(<span class="hljs-params">self</span>):<br>        psd_encrypt = self.encrypt_password()<br>        url = <span class="hljs-string">f&quot;https://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.15)&amp;_=<span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(time.time() * <span class="hljs-number">1000</span>))&#125;</span>&quot;</span><br>        data = &#123;<br>            <span class="hljs-string">&quot;entry&quot;</span>: <span class="hljs-string">&quot;sso&quot;</span>,<br>            <span class="hljs-string">&quot;gateway&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>            <span class="hljs-string">&quot;from&quot;</span>: <span class="hljs-string">&quot;null&quot;</span>,<br>            <span class="hljs-string">&quot;savestate&quot;</span>: <span class="hljs-string">&quot;30&quot;</span>,<br>            <span class="hljs-string">&quot;useticket&quot;</span>: <span class="hljs-string">&quot;0&quot;</span>,<br>            <span class="hljs-string">&quot;pagerefer&quot;</span>: <span class="hljs-string">&quot;https://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.19)&quot;</span>,<br>            <span class="hljs-string">&quot;vsnf&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>            <span class="hljs-string">&quot;su&quot;</span>: self.b64_username,<br>            <span class="hljs-string">&quot;service&quot;</span>: <span class="hljs-string">&quot;sso&quot;</span>,<br>            <span class="hljs-string">&quot;servertime&quot;</span>: self.server_time,<br>            <span class="hljs-string">&quot;nonce&quot;</span>: self.nonce,<br>            <span class="hljs-string">&quot;pwencode&quot;</span>: <span class="hljs-string">&quot;rsa2&quot;</span>,<br>            <span class="hljs-string">&quot;rsakv&quot;</span>: self.rsakv,<br>            <span class="hljs-string">&quot;sp&quot;</span>: psd_encrypt,<br>            <span class="hljs-string">&quot;sr&quot;</span>: <span class="hljs-string">&quot;1920*1080&quot;</span>,<br>            <span class="hljs-string">&quot;encoding&quot;</span>: <span class="hljs-string">&quot;UTF-8&quot;</span>,<br>            <span class="hljs-string">&quot;cdult&quot;</span>: <span class="hljs-string">&quot;3&quot;</span>,<br>            <span class="hljs-string">&quot;domain&quot;</span>: <span class="hljs-string">&quot;sina.com.cn&quot;</span>,<br>            <span class="hljs-string">&quot;prelt&quot;</span>: <span class="hljs-string">&quot;78&quot;</span>,<br>            <span class="hljs-string">&quot;returntype&quot;</span>: <span class="hljs-string">&quot;TEXT&quot;</span>,<br>        &#125;<br><br>        result = self.session.post(url, headers=self.headers, data=data)<br>        result_json = result.json()<br>        reason = result_json.get(<span class="hljs-string">&quot;reason&quot;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;提示完成登录&quot;</span> <span class="hljs-keyword">in</span> reason:<br>            set_cookie = result.headers[<span class="hljs-string">&#x27;Set-Cookie&#x27;</span>]<br>            token = re.findall(<span class="hljs-string">r&#x27;TEMP_PWD_FLOW_ID=(.*?);&#x27;</span>, set_cookie)[<span class="hljs-number">0</span>]<br>            cookids = self.send_sms(token=token)<br>            <span class="hljs-keyword">return</span> cookids<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(reason)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_code</span>(<span class="hljs-params">self</span>):<br>        sms_code = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;sms code:&quot;</span>)<br>        <span class="hljs-keyword">return</span> sms_code<br>        <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_cookie</span>(<span class="hljs-params">self</span>):<br>        self.get_pubkey()<br>        cookies = self.login()<br>        <span class="hljs-keyword">return</span> cookies<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    wb = WeiboLogin(username=<span class="hljs-string">&#x27;&#x27;</span>, password=<span class="hljs-string">&#x27;&#x27;</span>)<br>    <span class="hljs-comment"># wb.get_code()</span><br>    <span class="hljs-built_in">print</span>(wb.get_cookie())<br><br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>各类平台加密算法</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>某易PC评论</title>
    <link href="/posts/97e1d02a/"/>
    <url>/posts/97e1d02a/</url>
    
    <content type="html"><![CDATA[<h2 id="某易云音乐PC评论"><a href="#某易云音乐PC评论" class="headerlink" title="某易云音乐PC评论"></a>某易云音乐PC评论</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> codecs<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> string<br><br><span class="hljs-comment"># import rsa  # pip install rsa</span><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES  <span class="hljs-comment"># pip install pycryptodome</span><br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Wyyyy_comment_spider</span>(<span class="hljs-title class_ inherited__">object</span>):<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        self.e = <span class="hljs-string">&quot;010001&quot;</span><br>        self.n = <span class="hljs-string">&quot;00e0b509f6259df8642dbc35662901477df22677ec152b5ff68ace615bb7b725152b3ab17a876aea8a5aa76d2e417629ec4ee341f56135fccf695280104e0312ecbda92557c93870114af6c9d05c4f7f0c3685b7a46bee255932575cce10b424d813cfe4875d3e82047b97ddef52741d546b8e289dc6935b3ece0462db0a22b8e7&quot;</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">random_string</span>(<span class="hljs-params">self, <span class="hljs-built_in">len</span></span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>.join(random.choice(string.ascii_letters + string.digits) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>))<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">rsa_encrypt</span>(<span class="hljs-params">self, random_string, key, f</span>):<br>        <span class="hljs-comment"># 随机字符串逆序排列</span><br>        string = random_string[::-<span class="hljs-number">1</span>]<br>        <span class="hljs-comment"># 将随机字符串转换成byte类型数据</span><br>        text = <span class="hljs-built_in">bytes</span>(string, <span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>        <span class="hljs-comment"># RSA加密</span><br>        sec_key = <span class="hljs-built_in">int</span>(codecs.encode(text, encoding=<span class="hljs-string">&#x27;hex&#x27;</span>), <span class="hljs-number">16</span>) ** <span class="hljs-built_in">int</span>(key, <span class="hljs-number">16</span>) % <span class="hljs-built_in">int</span>(f, <span class="hljs-number">16</span>)<br>        <span class="hljs-comment"># 返回结果</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">format</span>(sec_key, <span class="hljs-string">&#x27;x&#x27;</span>).zfill(<span class="hljs-number">256</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_pad</span>(<span class="hljs-params">self, s</span>):<br><br>        <span class="hljs-keyword">return</span> s + (self.bs - <span class="hljs-built_in">len</span>(s) % self.bs) * <span class="hljs-built_in">chr</span>(self.bs - <span class="hljs-built_in">len</span>(s) % self.bs)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">crypto_aec_cbc</span>(<span class="hljs-params">self, key, iv, data</span>):<br>        <span class="hljs-comment"># 将字符串转为字节码</span><br>        <span class="hljs-keyword">try</span>:<br>            self.bytes_key = key <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(key, <span class="hljs-built_in">bytes</span>) <span class="hljs-keyword">else</span> <span class="hljs-built_in">bytes</span>.fromhex(key)<br><br>        <span class="hljs-keyword">except</span>:<br>            self.bytes_key = key.encode()<br><br>        self.bytes_iv = iv.encode()<br>        self.bs = <span class="hljs-number">16</span><br>        self.cipher = AES.new(self.bytes_key, AES.MODE_CBC, self.bytes_iv)<br><br>        data = self._pad(data)<br>        encrypted = self.cipher.encrypt(data.encode())<br>        encoded = base64.b64encode(encrypted)<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">str</span>(encoded, <span class="hljs-string">&quot;utf-8&quot;</span>)<br><br>    <span class="hljs-comment"># 获取所有音乐</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_all_music</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">pass</span><br><br>    <span class="hljs-comment"># 获取指定音乐的评论</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_music_comment</span>(<span class="hljs-params">self, page_num, music_id</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        :params page_num 页数</span><br><span class="hljs-string">        :params music_id 某个音乐ID</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        url = <span class="hljs-string">&#x27;https://music.163.com/weapi/comment/resource/comments/get?csrf_token=&#x27;</span><br>        headers = &#123;<br>            <span class="hljs-string">&quot;accept&quot;</span>: <span class="hljs-string">&quot;*/*&quot;</span>,<br>            <span class="hljs-string">&quot;accept-encoding&quot;</span>: <span class="hljs-string">&quot;gzip, deflate, br&quot;</span>,<br>            <span class="hljs-string">&quot;accept-language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.9,id;q=0.8,en;q=0.7&quot;</span>,<br>            <span class="hljs-comment"># &quot;content-length&quot;: &quot;600&quot;,</span><br>            <span class="hljs-string">&quot;content-type&quot;</span>: <span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span>,<br>            <span class="hljs-comment"># &quot;nm-gcore-status&quot;: &quot;1&quot;,</span><br>            <span class="hljs-comment"># &quot;cookie&quot;:&#x27;_iuqxldmzr_=32; _ntes_nuid=b3eca7f5959113448440743f10eec675; WM_TID=f3hb7MkpOFZBVEFAUAM997Pv%2F3pGJHy2; mail_psc_fingerprint=ed3951139996370fae088d915d096496; NMTID=00OGPw_0FgKawsz8UEwuR40ws7cM8YAAAF1FjDLTw; _ntes_nnid=b3eca7f5959113448440743f10eec675,1603002858151; nts_mail_user=13253354225@163.com:-1:1; P_INFO=m13253354225@163.com|1606734147|0|mail163|00&amp;99|zhj&amp;1606636380&amp;mail163#zhj&amp;330100#10#0#0|132225&amp;1|mail163|13253354225@163.com; JSESSIONID-WYYY=xgU%5C9ogWUyozUZXWROTPYHMav7yF27ESQmkV6luFU8dHvxK54AdJwmY3cOOvVRKEQEoHe35cezSfnCIJt3SMnyKDcjwQ9AVBj90E14%2FPHcfMK5EJYkHrsnynKiYwIW8DOmKC4VYadZvz4Tands4DMVnjqxoQfracF6sxcHDuWXWW7fhA%3A1607138408621; WEVNSM=1.0.0; WNMCID=bszktd.1607136608843.01.0; WM_NI=RflUogD9gqp%2FZseZebkOWmAIstCFTjIdnT0Ym1XRQvmC%2BQWDe2yMyYkmOUPDBX1IBG5SuZvKOM8JGHqu7HrGXw2BImHaTIRVKqa0OYsc%2FUvEVlvyhbBCIdfLrO5FbdEmR3Q%3D; WM_NIKE=9ca17ae2e6ffcda170e2e6ee89f55aed8a0085c93fa99a8bb6c44e838b9aaaf44883ac8bd5d33a829ba0a2b62af0fea7c3b92a92baa4b6ee6d88e7a992f3259aadabbbe86aa991998ec443b1ac8da7d7628bbca2b5b353afef98b3d47eaf9de5b2d650a7eeb7aefc53a9b381b6d3508288ffaac14df78dbbbbf5418d93f8abc644b3abf9a9f14d9ca9fea3cc678cbf9caad15e89afafd1ce53b1bde1b6f54f96b4ba9aeb6a829d8785e548b291fba7e17087b39ed4d437e2a3&#x27;,</span><br>            <span class="hljs-string">&quot;origin&quot;</span>: <span class="hljs-string">&quot;https://music.163.com&quot;</span>,<br>            <span class="hljs-string">&quot;referer&quot;</span>: <span class="hljs-string">&quot;https://music.163.com/song?id=1491221473&quot;</span>,<br>            <span class="hljs-comment"># &quot;sec-fetch-dest&quot;: &quot;empty&quot;,</span><br>            <span class="hljs-comment"># &quot;sec-fetch-mode&quot;: &quot;cors&quot;,</span><br>            <span class="hljs-comment"># &quot;sec-fetch-site&quot;: &quot;same-origin&quot;,</span><br>            <span class="hljs-string">&quot;user-agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36&quot;</span>,<br>        &#125;<br>        aes_key = <span class="hljs-string">&#x27;0CoJUm6Qyw8W8jud&#x27;</span><br>        aes_iv = <span class="hljs-string">&#x27;0102030405060708&#x27;</span><br>        data_info = <span class="hljs-string">&#x27;&#123;&quot;rid&quot;:&quot;R_SO_4_%s&quot;,&quot;threadId&quot;:&quot;R_SO_4_%s&quot;,&quot;pageNo&quot;:&quot;%s&quot;,&quot;pageSize&quot;:&quot;20&quot;,&quot;cursor&quot;:&quot;%s&quot;,&quot;offset&quot;:&quot;0&quot;,&quot;orderType&quot;:&quot;1&quot;,&quot;csrf_token&quot;:&quot;&quot;&#125;&#x27;</span> % (<br>        music_id, music_id, page_num, <span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(time.time() * <span class="hljs-number">1000</span>)))<br>        first_params = self.crypto_aec_cbc(aes_key, aes_iv, data_info)<br>        random_i = self.random_string(<span class="hljs-number">16</span>)<br>        params = self.crypto_aec_cbc(random_i, aes_iv, first_params)<br>        encSecKey = self.rsa_encrypt(random_i, self.e, self.n)<br><br>        data = &#123;<br>            <span class="hljs-string">&quot;params&quot;</span>: params,<br>            <span class="hljs-string">&quot;encSecKey&quot;</span>: encSecKey<br>        &#125;<br><br>        res = requests.post(url, headers=headers, data=data)<br>        <span class="hljs-built_in">print</span>(res.text)<br><br>    <span class="hljs-comment"># 获取指定音乐的评论</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">search_music_comment</span>(<span class="hljs-params">self, music_name</span>):<br>        <span class="hljs-keyword">pass</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-keyword">pass</span><br><br>    wyy = Wyyyy_comment_spider()<br>    <span class="hljs-comment"># key = &#x27;L8JvXu8KiWFLwBEY&#x27;</span><br>    <span class="hljs-comment"># iv = &#x27;0102030405060708&#x27;</span><br>    <span class="hljs-comment"># data = &#x27;&#123;&quot;rid&quot;:&quot;R_SO_4_1491221473&quot;,&quot;threadId&quot;:&quot;R_SO_4_1491221473&quot;,&quot;pageNo&quot;:&quot;5&quot;,&quot;pageSize&quot;:&quot;20&quot;,&quot;cursor&quot;:&quot;1607131158224&quot;,&quot;offset&quot;:&quot;0&quot;,&quot;orderType&quot;:&quot;1&quot;,&quot;csrf_token&quot;:&quot;&quot;&#125;&#x27;</span><br>    <span class="hljs-comment"># data = &#x27;gHPVST6jk9PvEgIDjnZzQlZYoajEhbZIFoDrANTqwnTw5S5scgtXtpJQtcmAVfAY5b3Iua0wz/KH1yhnAWu2+kZC+Zc8G1zjWDieE6J1QDEO1az6MmNZGykQILzQzk6x4eDAoOtcDhVj0sDJcbMJzQLzZ+APAa++77ZSAccgw6lXS68VmEketUheUD8o5J7VDtDgCv3szUApjr/q5jXUug==&#x27;</span><br>    wyy.get_music_comment(<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&#x27;1806584346&#x27;</span>)<br><br></code></pre></td></tr></table></figure><p><img src="img.png" alt="spider"><br><img src="img_1.png" alt="官网"></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>各类平台加密算法</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>某宝滑块221</title>
    <link href="/posts/c11be28f/"/>
    <url>/posts/c11be28f/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="20ea85ea79a2144763b591f1b0844492fd079d0cfbf1f3abe0ba550e6d151fe6"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>各类平台加密算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>private</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>tornado接口模板</title>
    <link href="/posts/49b5159e/"/>
    <url>/posts/49b5159e/</url>
    
    <content type="html"><![CDATA[<h2 id="tornado接口模板"><a href="#tornado接口模板" class="headerlink" title="tornado接口模板"></a>tornado接口模板</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> datetime<br><span class="hljs-keyword">import</span> os<br>dir_path = os.path.dirname(os.path.abspath(__file__))<br><span class="hljs-keyword">from</span> tornado.ioloop <span class="hljs-keyword">import</span> IOLoop<br><span class="hljs-keyword">from</span> tornado.httpserver <span class="hljs-keyword">import</span> HTTPServer<br><span class="hljs-keyword">from</span> tornado.web <span class="hljs-keyword">import</span> Application<br><span class="hljs-keyword">from</span> tornado.options <span class="hljs-keyword">import</span> options<br><span class="hljs-keyword">from</span> tornado.web <span class="hljs-keyword">import</span> RequestHandler<br><span class="hljs-keyword">import</span> tornado.gen<br><span class="hljs-keyword">from</span> concurrent.futures <span class="hljs-keyword">import</span> ThreadPoolExecutor<br><span class="hljs-keyword">from</span> tornado.concurrent <span class="hljs-keyword">import</span> run_on_executor<br><span class="hljs-keyword">import</span> json<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>(<span class="hljs-params">args1: <span class="hljs-built_in">str</span>, args2: <span class="hljs-built_in">dict</span></span>) -&gt; <span class="hljs-built_in">dict</span>:<br>    result_msg = &#123;<br>        <span class="hljs-string">&quot;code&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;msg&quot;</span>: <span class="hljs-string">&quot;&quot;</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> result_msg<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">operator_fun</span>(<span class="hljs-params">request_body</span>):<br>    request_body_dict = json.loads(request_body)<br>    <span class="hljs-comment"># 提起内容</span><br>    url = request_body_dict.get(<span class="hljs-string">&#x27;params1&#x27;</span>)<br>    cookies = request_body_dict.get(<span class="hljs-string">&quot;params2&quot;</span>)<br>    data = run(args1=url, args2=cookies)<br>    <span class="hljs-keyword">return</span> data<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">TestObject</span>(<span class="hljs-title class_ inherited__">RequestHandler</span>):<br>    executor = ThreadPoolExecutor(<span class="hljs-number">999</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get</span>(<span class="hljs-params">self</span>):<br>        write_info = &#123;<br>            <span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;not get method, please use post&quot;</span><br>        &#125;<br>        self.write(write_info)<br><br><span class="hljs-meta">    @tornado.gen.coroutine</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">post</span>(<span class="hljs-params">self</span>):<br>        result = <span class="hljs-keyword">yield</span> self.post_run_function()<br>        self.write(result)<br><br><span class="hljs-meta">    @run_on_executor</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">post_run_function</span>(<span class="hljs-params">self</span>):<br>        data = operator_fun(self.request.body)<br>        <span class="hljs-comment"># return json.dumps(data, ensure_ascii=False)</span><br>        <span class="hljs-keyword">return</span> data<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    options.parse_command_line()<br>    <span class="hljs-comment"># 创建一个项目应用，接入web服务器</span><br>    <span class="hljs-comment"># 需要保证在fork子进程之前IOLoop是未被初始化的。</span><br>    app = Application(<br>        [<br>            (<span class="hljs-string">r&quot;/test&quot;</span>, TestObject),<br>        ],<br>    )<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;tornado 服务启动--&gt;<span class="hljs-subst">&#123;datetime.datetime.now().strftime(<span class="hljs-string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)&#125;</span>&quot;</span>)<br>    <span class="hljs-comment"># 开始监听端口，提供服务</span><br>    http_server = HTTPServer(app)<br>    <span class="hljs-comment"># 指定端口port</span><br>    http_server.bind(<span class="hljs-number">10010</span>)<br>    http_server.start()  <span class="hljs-comment"># 默认参数1 启动一个进程</span><br>    <span class="hljs-comment"># start(num) num&lt;=0 按照当前os cpu核心数量 进行 进程启动 fork</span><br>    <span class="hljs-comment"># num&gt;1 表示通过fork 启动多个子进程</span><br>    <span class="hljs-comment"># 在启动IOLoop之前通过start函数设置进程数量，如果设置为0表示每个CPU都启动一个进程。</span><br>    IOLoop.current().start()<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Tornado</category>
      
    </categories>
    
    
    <tags>
      
      <tag>tornado</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>滑块类破解思路</title>
    <link href="/posts/56fff324/"/>
    <url>/posts/56fff324/</url>
    
    <content type="html"><![CDATA[<h2 id="缺口类滑块破解思路"><a href="#缺口类滑块破解思路" class="headerlink" title="缺口类滑块破解思路"></a>缺口类滑块破解思路</h2><ul><li>加密参数破解</li><li>图片保存本地(是否压缩大小, 需要跟HTML页面上大小一致)</li><li>识别缺口距离</li><li>轨迹生成(需要与平台轨迹加密格式一致)</li><li>校验</li></ul><h2 id="无感验证类破解思路"><a href="#无感验证类破解思路" class="headerlink" title="无感验证类破解思路"></a>无感验证类破解思路</h2><h3 id="google-reCAPTCHA-V2-v3-TikTok-…"><a href="#google-reCAPTCHA-V2-v3-TikTok-…" class="headerlink" title="google reCAPTCHA V2/v3 , TikTok …"></a>google reCAPTCHA V2/v3 , TikTok …</h3><p><a href="https://2captcha.com/2captcha-api#rates">点我</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>加密算法</title>
    <link href="/posts/8f91ec68/"/>
    <url>/posts/8f91ec68/</url>
    
    <content type="html"><![CDATA[<h2 id="Python实现各类加密算法"><a href="#Python实现各类加密算法" class="headerlink" title="Python实现各类加密算法"></a>Python实现各类加密算法</h2><h3 id="散列算法"><a href="#散列算法" class="headerlink" title="散列算法"></a>散列算法</h3><p>对不同长度的输入产生固定长度的输出.</p><h4 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt_md5</span>(<span class="hljs-params">strs</span>):<br>    m = hashlib.md5()<br>    m.update(strs.encode(<span class="hljs-string">&quot;utf-8&quot;</span>))<br>    <span class="hljs-keyword">return</span> m.hexdigest()<br><br></code></pre></td></tr></table></figure><h4 id="SHA"><a href="#SHA" class="headerlink" title="SHA"></a>SHA</h4><h4 id="HMAC"><a href="#HMAC" class="headerlink" title="HMAC"></a>HMAC</h4><h5 id="HMAC-SHA1"><a href="#HMAC-SHA1" class="headerlink" title="HMAC-SHA1"></a>HMAC-SHA1</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hmac<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> sha1<br><span class="hljs-keyword">import</span> base64<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hmac_sha1</span>(<span class="hljs-params">data, hmac_key</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    :param data: 需要加密的数据</span><br><span class="hljs-string">    :param hmac_key: hmac秘钥</span><br><span class="hljs-string">    :return: 加密后的密文</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-comment"># 对加密数据进行base64编码</span><br>    data = base64.b64encode(data.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)).decode(<span class="hljs-string">&quot;utf-8&quot;</span>)<br>    <span class="hljs-comment"># 对编码后的数据进行hmacSha1</span><br>    hmac_code = hmac.new(hmac_key.encode(), data.encode(), sha1).hexdigest()<br>    <span class="hljs-comment"># 对hmacSha1后的数据进行md5</span><br>    sign = hashlib.md5(hmac_code.encode()).hexdigest()<br>    <span class="hljs-keyword">return</span> sign<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    hmac_sha1(<span class="hljs-string">&quot;text=智能内容审核&quot;</span>, <span class="hljs-string">&quot;潜在&quot;</span>)<br><br></code></pre></td></tr></table></figure><h3 id="对称加密"><a href="#对称加密" class="headerlink" title="对称加密"></a>对称加密</h3><h4 id="AES"><a href="#AES" class="headerlink" title="AES"></a>AES</h4><h4 id="DES"><a href="#DES" class="headerlink" title="DES"></a>DES</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> DES<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">DESECBEncrypt</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, key</span>):<br>        self.key = key  <span class="hljs-comment"># 初始化密钥</span><br>        self.length = DES.block_size  <span class="hljs-comment"># 初始化数据块大小</span><br>        self.aes = DES.new(self.key, DES.MODE_ECB)  <span class="hljs-comment"># 初始化AES,ECB模式的实例</span><br>        <span class="hljs-comment"># 截断函数，去除填充的字符</span><br>        self.unpad = <span class="hljs-keyword">lambda</span> date: date[<span class="hljs-number">0</span>:-<span class="hljs-built_in">ord</span>(date[-<span class="hljs-number">1</span>])]<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">pad</span>(<span class="hljs-params">self, text</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        #填充函数，使被加密数据的字节码长度是block_size的整数倍</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        count = <span class="hljs-built_in">len</span>(text.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>        add = self.length - (count % self.length)<br>        entext = text + (<span class="hljs-built_in">chr</span>(add) * add)<br>        <span class="hljs-keyword">return</span> entext<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt</span>(<span class="hljs-params">self, encrData, <span class="hljs-built_in">hex</span>=<span class="hljs-literal">False</span></span>):  <span class="hljs-comment"># 加密函数</span><br>        res = self.aes.encrypt(self.pad(encrData).encode(<span class="hljs-string">&quot;utf8&quot;</span>))<br>        msg = <span class="hljs-built_in">str</span>(base64.b64encode(res), encoding=<span class="hljs-string">&quot;utf-8&quot;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">hex</span>:<br>            msg = res.<span class="hljs-built_in">hex</span>()<br>        <span class="hljs-keyword">return</span> msg<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt</span>(<span class="hljs-params">self, decrData</span>):  <span class="hljs-comment"># 解密函数</span><br>        res = base64.decodebytes(decrData.encode(<span class="hljs-string">&quot;utf8&quot;</span>))<br>        <span class="hljs-comment"># res = bytes.fromhex(decrData)</span><br>        msg = self.aes.decrypt(res).decode(<span class="hljs-string">&quot;utf-8&quot;</span>)<br>        <span class="hljs-keyword">return</span> self.unpad(msg)<br></code></pre></td></tr></table></figure><h4 id="3DES"><a href="#3DES" class="headerlink" title="3DES"></a>3DES</h4><h3 id="非对称加密"><a href="#非对称加密" class="headerlink" title="非对称加密"></a>非对称加密</h3><h4 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h4><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>某书PC加密算法</title>
    <link href="/posts/e10359bf/"/>
    <url>/posts/e10359bf/</url>
    
    <content type="html"><![CDATA[<h2 id="某书PC加密算法"><a href="#某书PC加密算法" class="headerlink" title="某书PC加密算法"></a>某书PC加密算法</h2><h3 id="timestamp2"><a href="#timestamp2" class="headerlink" title="timestamp2"></a>timestamp2</h3><p><strong>生成接口</strong></p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">method</span>: <span class="hljs-string">GET</span><br><span class="hljs-string">url</span> : <span class="hljs-string">https</span>://<span class="hljs-string">www</span>.<span class="hljs-string">xiaohongshu</span>.<span class="hljs-string">com</span>/<span class="hljs-string">fe_api</span>/<span class="hljs-string">burdock</span>/<span class="hljs-string">v2</span>/<span class="hljs-string">shield</span>/<span class="hljs-string">registerCanvas</span>?<span class="hljs-string">p</span>=<span class="hljs-string">cc</span><br><span class="hljs-string">params</span>: <br>    <span class="hljs-string">id</span>: <span class="hljs-string">&quot;436cd2fa20934009182f36895a19f6b3&quot;</span><br>    <span class="hljs-string">sign</span>: <span class="hljs-string">&quot;713c02f1ffc1412d6a76c53e3a5eca9ce72ac06f4c4c880944f40e7c7e5631324e9f88c4272ddb83d9db22766c109e04c43bd6f2b66f44482334e09635c611160d3501378932bbdd30b3734e6abc91d01fc36e1ee35d4b4443f70067600345263e8f07d9afc8d8c5e1c2c624aa18399602af52d4de73a1afc3b8b01ded218f70cedcf093e45232411c841b9532f8fc8d50b450237edc56ff72ff421be662b87a1a6caaa96eb8a0944241bdab8d90864cc98e27732debb6823ae6e246a0c87b6bff79b0daf7232964911adbb01b2f15287fb98c4b94da3bd1ecbcc56bb19c092a2a742c95dacead063196c89cf654cf5947e37031546582a4d84c4996506da931a87bed6c20a5e19680ab2aafbb5fd8580a91fb33a84e6dbf089b500df3586be5baab6bf3999416ade648f86280517a9251c724a9093d1ad0f3df20185411adabd39b0039634f5168cf6261944237316ea5a00e94fa22c24aa2b1eed68c50b934050da89e8f2e6eda6ad9171f9ede2cf9f486f59c00c26a4b921998b850c97f1ba2480c88f8a3d6d863f798baeb5dbfb684c457893d966f9b1756cb49ec082c17578a21c01c690652a513670af7084c5605bc3863380e255451658c41fb5d5bd312e2e88e159e39fe4e3318bd171d135c7803f325e8f4c3e2055cbd75a54279acf0870e3215301d6ca44288c469aedda2836bc2423c227118c53c8cc1df12a9c065f849ca4b0e31376ac65072dfbe4f0fc1d37157a589cf35e9a9d3da2a249bf5f0870e3215301d6ca17a0da1ae0c3999fa44cf10b5876fa026928ac77602d65ed5aaf0fbc548bfb5bde73cf94c0dd29f188ae1822a7e306a0eda9f54945b2ec4abcb9156c47f73a38bc247b2037707be148851f0f7cea1589678d805ea3f4934bef5b7503ee95db196c5f0542b4d06d9ef30507f3fac6bc466b54a950b3fbe374ab7ffacf5d0107d2265cb0bcdc12c8e60507996a908410d70577909ad0d5ad6b3a9e500c70c6d8625731d977f89fc21d9db8a56ffd6d5da6b0a8dc6241c1c88a59cf31eac2dda12cff8705ecebf2f95243ed772eaabf3e6c28dec4feb6817c6a34c8e1e9e59351a31b9b144b2a7516f0c32bd2c88bba99a15da9491605c225cef8a94938c35e092037d8db827811f816a568a78b3cb779ce370da91d0f838471ff8fa6b913376d9148851f0f7cea1589678d805ea3f4934bef5b7503ee95db196c5f0542b4d06d9ef30507f3fac6bc466b54a950b3fbe374ab7ffacf5d0107d2265cb0bcdc12c8e60507996a908410d70577909ad0d5ad6b3a9e500c70c6d869fa69d1ed7745ffe486b971b06dca072687870543bee183692b075a4f7e377d1bbf5a709480a192ebd6dcc0a7c94bfabeebdec2726371b9fe93313e0a316258e63019d4f8f4c3b7116e828d4601f39c482c79922fb901e21fdd2b1ed1d07808a36ddb234ae6208923f8b88733f5f53c883e1e92e8e3832b65d47f647c48b9d4ae4574975c19580271e33c0b38a3425b6be7caceca1c701c3cff8705ecebf2f95243ed772eaabf3e6c28dec4feb6817c6a34c8e1e9e59351a31b9b144b2a7516f0c32bd2c88bba99a15da9491605c225cef8a94938c35e092037d8db827811f810e98d3fe37ead56166d86e11a5e086a9f234f73b018a794540cc5598c6d4f05afa21234006022c80f6df8dfed0ac0984d2465ddf283f43960b71810d639fb41eb42c219f2aa496c745b7287b2954e0fcff79b0daf7232964ac9d41cfaa6386045dd68278da8c5f624f0beec1ca14ef7ab8a8cdcbe5c5d62c413657b023d71c6caea1628452d35d5df486f59c00c26a4b1fc60c27c08e3bb12f2949dff2a243ed63669a662358b227e4aba39503e5a9ab2f2949dff2a243ed2f292c9267eafb398f2b2cc980207d79a4780298d4366c921e018cea83a7587e3942d23282931b47b51a0ffd60f69fbf0338fc1bdb5075a3a110c4b71ea9df0a4f19a80f52234c4822ece663928fb71b927233f5a7146820adbbd181abfafc9d681606869c48983a00212e656fc5334a6c8a3e2a336fdf841dbc862e606bbccd&quot;</span><br><span class="hljs-string">response</span>: <br>    <span class="hljs-built_in">set-cookie:</span> <span class="hljs-string">timestamp2</span>=<span class="hljs-string">1657607811021506a813d3c8ca6b2a22000c3c95b0701b37263dd097a9e8cbe</span>; <span class="hljs-string">path</span>=/; <span class="hljs-string">max-age</span>=<span class="hljs-string">31536000</span>; <span class="hljs-string">expires</span>=<span class="hljs-string">Wed</span>, <span class="hljs-string">12</span> <span class="hljs-string">Jul</span> <span class="hljs-string">2023</span> <span class="hljs-string">06:36:</span><span class="hljs-string">51</span> <span class="hljs-string">GMT</span>; <span class="hljs-string">domain</span>=.<span class="hljs-string">xiaohongshu</span>.<span class="hljs-string">com</span><br></code></pre></td></tr></table></figure><p><strong>sign加密算法</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">DES</span> CBC zeroPadding<br><span class="hljs-attribute">key</span>: G89CfW4k<br><span class="hljs-attribute">data</span>: <span class="hljs-string">&quot;&#123;&quot;</span>userAgent<span class="hljs-string">&quot;:&quot;</span>Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win64; x64) AppleWebKit/<span class="hljs-number">537</span>.<span class="hljs-number">36</span> (KHTML, like Gecko) Chrome/<span class="hljs-number">100</span>.<span class="hljs-number">0</span>.<span class="hljs-number">4896</span>.<span class="hljs-number">127</span> Safari/<span class="hljs-number">537</span>.<span class="hljs-number">36</span><span class="hljs-string">&quot;,&quot;</span>webdriver<span class="hljs-string">&quot;:false,&quot;</span>language<span class="hljs-string">&quot;:&quot;</span>zh-CN<span class="hljs-string">&quot;,&quot;</span>colorDepth<span class="hljs-string">&quot;:24,&quot;</span>deviceMemory<span class="hljs-string">&quot;:8,&quot;</span>hardwareConcurrency<span class="hljs-string">&quot;:8,&quot;</span>screenResolution<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">1920</span>;<span class="hljs-number">1080</span><span class="hljs-string">&quot;,&quot;</span>availableScreenResolution<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">1920</span>;<span class="hljs-number">1032</span><span class="hljs-string">&quot;,&quot;</span>timezoneOffset<span class="hljs-string">&quot;:-480,&quot;</span>timezone<span class="hljs-string">&quot;:&quot;</span>Asia/Shanghai<span class="hljs-string">&quot;,&quot;</span>sessionStorage<span class="hljs-string">&quot;:1,&quot;</span>localStorage<span class="hljs-string">&quot;:1,&quot;</span>indexedDb<span class="hljs-string">&quot;:1,&quot;</span>openDatabase<span class="hljs-string">&quot;:1,&quot;</span>cpuClass<span class="hljs-string">&quot;:&quot;</span>unknown<span class="hljs-string">&quot;,&quot;</span>platform<span class="hljs-string">&quot;:&quot;</span>Win32<span class="hljs-string">&quot;,&quot;</span>plugins<span class="hljs-string">&quot;:[&quot;</span>PDF Viewer::Portable Document Format::application/pdf~pdf,text/pdf~pdf<span class="hljs-string">&quot;,&quot;</span>Chrome PDF Viewer::Portable Document Format::application/pdf~pdf,text/pdf~pdf<span class="hljs-string">&quot;,&quot;</span>Chromium PDF Viewer::Portable Document Format::application/pdf~pdf,text/pdf~pdf<span class="hljs-string">&quot;,&quot;</span>Microsoft Edge PDF Viewer::Portable Document Format::application/pdf~pdf,text/pdf~pdf<span class="hljs-string">&quot;,&quot;</span>WebKit built-in PDF::Portable Document Format::application/pdf~pdf,text/pdf~pdf<span class="hljs-string">&quot;],&quot;</span>canvas<span class="hljs-string">&quot;:&quot;</span>e7c4b0a1f459d57cfa40c0a6d6034c66<span class="hljs-string">&quot;,&quot;</span>adBlock<span class="hljs-string">&quot;:false,&quot;</span>hasLiedLanguages<span class="hljs-string">&quot;:false,&quot;</span>hasLiedResolution<span class="hljs-string">&quot;:false,&quot;</span>hasLiedOs<span class="hljs-string">&quot;:false,&quot;</span>hasLiedBrowser<span class="hljs-string">&quot;:false,&quot;</span>touchSupport<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">0</span>;false;false<span class="hljs-string">&quot;,&quot;</span>fonts<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">4</span>;<span class="hljs-number">7</span>;<span class="hljs-number">8</span><span class="hljs-string">&quot;,&quot;</span>audio<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">124</span>.<span class="hljs-number">04347527516074</span><span class="hljs-string">&quot;&#125;&quot;</span><br></code></pre></td></tr></table></figure><p><strong>id加密算法</strong></p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-variable">id</span>: <span class="hljs-function"><span class="hljs-title">MD5</span>(<span class="hljs-variable">sign</span> + <span class="hljs-variable">RRq9y03tuV</span>)</span><br></code></pre></td></tr></table></figure><h3 id="profileData"><a href="#profileData" class="headerlink" title="profileData"></a>profileData</h3><p><strong>生成接口</strong></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">method:</span> POST<br>url : https:<span class="hljs-comment">//www.xiaohongshu.com/fe_api/burdock/v2/shield/profile</span><br><span class="hljs-symbol">data:</span> <br><span class="hljs-symbol">    platform:</span> <span class="hljs-string">&quot;Windows&quot;</span><br><span class="hljs-symbol">    profileData:</span> <span class="hljs-string">&quot;020bc4c6cd2e52b94cff7e394019c991266dbc1b63406df026698a45d612461bb11cbaba61194bc66881a1f35fb73bf6aba664e735c294a0f0852a0f48b25c1709ac61e4058ed90fd772745ed0adead9d6eedd3e6298f16c90d2d103ea1b431d29a77a8ac580d8262fe61699337e07ac10653aeebeb7982f1bb2d4a53ed988c3b3d1b8d84ec4873437cc23c30e23934a3c90425454f0ce1dfa49ae4fb494b591dd18f0f83afb7b2209766a413053bbd2d5b58df589f44c9c687a4ceece0c359c50e590500a5c10353737a11dbf114df58ea703bcaf830cf6cd9baa4a865a9d8e541402dabd9b49975134c036f41144daf0b280b7c09badbe429d87c3e45b6fe7b8c412a2e8c3ed9d9f1d727b82b29ebd168d6e406f50706c6f4bb9e0a1907863c286f76a68eb7bc3eea2b05132488e0db7c3654531fea2b8fb0129fd8fc234e5620b507c9c101f1508764eaa2a7ba663b9c0811769afa6bb377646ed868f7e35e471c05e121faea797174ec37210147de4b6592f3b2df10af2aa8a8bf787583775229471c3eb64165363fbcf96ba1b0735d90d452e2ce52b3d1661f50e98bf300e814a07aa0b6658eb2bf099b301cb21b12e3185a7931f12f87dc20f7cc9d81a3d1661f50e98bf300e814a07aa0b6658921d486a6f0e01c817ca2e6062e98ceabe12d7d5d172bc01cf41f456990b9b534f5674b7e47c57b93f0d3aa0af933b9d8995d199691852a4442c4d71b8568e8bee987e513a2b26ccc9cd78281673dc3513d4e6a069ee688f44126aa4be85c75d2115f2d426acaf69454721a7c75b840843207fe47afbd59f099243ac4206829c970dc08ac37f490054b6cff98f046263240e05891ee04ba7ce88e6ad653a664893e1df2f1b3c17b5f9c53be6fb71d3960225a5c7baa71ed75633a6fcd7dfd0cb15827a77940046041b3b1c01e8ded911b65ca2c2d5c72cb643207fe47afbd59f099243ac4206829c970dc08ac37f490054b6cff98f046263240e05891ee04ba7ce88e6ad653a664893e1df2f1b3c17b5f9c53be6fb71d3960225a5c7baa71ed75633a6fcd7dfd0cb15827a77940046044d9064ee56cff028f5d99e9fd6e481c48f16c7e4f7e4c9c343207fe47afbd59f099243ac4206829c970dc08ac37f490054b6cff98f046263240e05891ee04ba7ce88e6ad653a664893e1df2f1b3c17b5f9c53be6fb71d3960225a5c7baa71ed75633a6fcd7dfd0cb15827a7794004604c62540b222daf030bc1c8c3c2332ca2ded07fa7815b4bfd7a845c103b7855806970dc08ac37f490054b6cff98f046263240e05891ee04ba7ce88e6ad653a664893e1df2f1b3c17b5f9c53be6fb71d3960225a5c7baa71ed75633a6fcd7dfd0cb15827a77940046040ef6baa25a16c95c30033ee6b0ad78ce7b17736fe2bca904d18eb9f7280606b413fdd956a1412754f000b5a499a5c8b91e84a9ea07f95caa5b5c804814eed4d9c36306b9369117f57c01406643a79493c36306b9369117f5f2b045343488edefc36306b9369117f5d7e635fd71b8ecd2c36306b9369117f5b2b5567e4e420988c36306b9369117f569f5ec4b5077d3c2a6b082fed98e3329d7c6f44e6b12c3303a9922a4127fca08f9aa91907f2bcc56c1e70033a26f7c6b63db6976271ed5095463d85045a5ca71380dfe9e67a0ac2b1e4e234fc1137b74be93d5d15cbe2ee8972d74725a87de70427e62f0cfe0ec53c7aea993be8e94638d8f45404c982e996a2b4083a6b397aad2d213560128ac0df3c1b28ac53ba8659505e0d397f055cf1a31e56929d04a0e8bdbe3cf01beb49da3c4589f91ee22d6ae353a8480b95918d02365781d87be21a3c13d86f12cd0e4687a347f75746374928c5d51aa63d889fbbece59e60321a517125600c05b835fbdab173ed037e9cadc0c2425afb33022778e2dbb3c47b051e81652a700f43e1bb11329dad1fa60c487304dd3c8b60d1c631e7774335af53af9278d8771de33ea057b011294af3bc51fecd56408a3af590a05e120e9687d5bbdfc301ce2b12f939194588d4b29e41885861817b0c2169b3094563b706dac37136a721930e7911894fc99c2a7a15e423ce5ab32890ca2fd43b193fc0634afed6dcd9a90b2a6e36b610edefdd05b6fd3894160ff0bb90d7d80551df252679aaa559962c4dc8050a6e8936bf9a90262506cdb9665d5c9fc2a1cac77c71cfaecb4c63f0236b33382c11ca24bb235fa1668adc3b06742c4c1659719a48b31e132a66e398604d647a00b5f5a1b273f68bf5242e23a4377f77c6dae7b51708ce3e00b06f04f02edd4f58d413cc485060f35d43f3ec5e6f3eeb70127dc2acc014c4ed527dc2acc014c4ed58a29d9f650d2f0ba724e3b74d173244827dc2acc014c4ed5f877a7ad6726f96e8d34113f10a5e239aeb2c30b87b49ad7&quot;</span><br><span class="hljs-symbol">    sdkVersion:</span> <span class="hljs-string">&quot;2.0.1&quot;</span><br><span class="hljs-symbol">    svn:</span> <span class="hljs-string">&quot;0&quot;</span><br></code></pre></td></tr></table></figure><p><strong>profileData加密算法</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">DES</span> CBC zeroPadding<br><span class="hljs-attribute">key</span>: s5e683p4<br><span class="hljs-attribute">data</span>: base64(<span class="hljs-string">&quot;&#123;&quot;</span>x1<span class="hljs-string">&quot;:&quot;</span>Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win64; x64) AppleWebKit/<span class="hljs-number">537</span>.<span class="hljs-number">36</span> (KHTML, like Gecko) Chrome/<span class="hljs-number">100</span>.<span class="hljs-number">0</span>.<span class="hljs-number">4896</span>.<span class="hljs-number">127</span> Safari/<span class="hljs-number">537</span>.<span class="hljs-number">36</span><span class="hljs-string">&quot;,&quot;</span>x2<span class="hljs-string">&quot;:false,&quot;</span>x3<span class="hljs-string">&quot;:&quot;</span>zh-CN<span class="hljs-string">&quot;,&quot;</span>x4<span class="hljs-string">&quot;:24,&quot;</span>x5<span class="hljs-string">&quot;:8,&quot;</span>x6<span class="hljs-string">&quot;:1,&quot;</span>x8<span class="hljs-string">&quot;:8,&quot;</span>x9<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">1920</span>;<span class="hljs-number">1080</span><span class="hljs-string">&quot;,&quot;</span>x10<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">1920</span>;<span class="hljs-number">1032</span><span class="hljs-string">&quot;,&quot;</span>x11<span class="hljs-string">&quot;:-480,&quot;</span>x12<span class="hljs-string">&quot;:&quot;</span>Asia/Shanghai<span class="hljs-string">&quot;,&quot;</span>x13<span class="hljs-string">&quot;:true,&quot;</span>x14<span class="hljs-string">&quot;:true,&quot;</span>x15<span class="hljs-string">&quot;:true,&quot;</span>x16<span class="hljs-string">&quot;:false,&quot;</span>x17<span class="hljs-string">&quot;:true,&quot;</span>x18<span class="hljs-string">&quot;:&quot;</span>unknown<span class="hljs-string">&quot;,&quot;</span>x19<span class="hljs-string">&quot;:&quot;</span>Win32<span class="hljs-string">&quot;,&quot;</span>x20<span class="hljs-string">&quot;:&quot;</span>unknown<span class="hljs-string">&quot;,&quot;</span>x21<span class="hljs-string">&quot;:&quot;</span>PDF Viewer,Portable Document Format,application/pdf,pdf,text/pdf,pdf;Chrome PDF Viewer,Portable Document Format,application/pdf,pdf,text/pdf,pdf;Chromium PDF Viewer,Portable Document Format,application/pdf,pdf,text/pdf,pdf;Microsoft Edge PDF Viewer,Portable Document Format,application/pdf,pdf,text/pdf,pdf;WebKit built-in PDF,Portable Document Format,application/pdf,pdf,text/pdf,pdf<span class="hljs-string">&quot;,&quot;</span>x22<span class="hljs-string">&quot;:&quot;</span>f140d3d8bbcb349b3edc47020c9b0bf6<span class="hljs-string">&quot;,&quot;</span>x23<span class="hljs-string">&quot;:false,&quot;</span>x24<span class="hljs-string">&quot;:false,&quot;</span>x25<span class="hljs-string">&quot;:false,&quot;</span>x26<span class="hljs-string">&quot;:false,&quot;</span>x27<span class="hljs-string">&quot;:false,&quot;</span>x28<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">0</span>;false;false<span class="hljs-string">&quot;,&quot;</span>x29<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">4</span>;<span class="hljs-number">7</span>;<span class="hljs-number">8</span><span class="hljs-string">&quot;,&quot;</span>x30<span class="hljs-string">&quot;:&quot;</span>swf object not loaded<span class="hljs-string">&quot;,&quot;</span>x31<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">124</span>.<span class="hljs-number">04347527516074</span><span class="hljs-string">&quot;,&quot;</span>x32<span class="hljs-string">&quot;:&quot;</span>id=;gid=b2bbab6c5dee2690a962dc1b7e3ba16335600159142308a2ccc19d3825faa8d5;audioinput;;id=;gid=edf8ff5c7d6e0250a16177ea1820713c9305c27f126ede18035b2a9f56649ce5;videoinput;;id=;gid=b2bbab6c5dee2690a962dc1b7e3ba16335600159142308a2ccc19d3825faa8d5;audiooutput;<span class="hljs-string">&quot;,&quot;</span>x33<span class="hljs-string">&quot;:0,&quot;</span>x34<span class="hljs-string">&quot;:0,&quot;</span>x35<span class="hljs-string">&quot;:0,&quot;</span>x36<span class="hljs-string">&quot;:2,&quot;</span>x37<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">0</span>|<span class="hljs-number">0</span>|<span class="hljs-number">0</span>|<span class="hljs-number">0</span>|<span class="hljs-number">0</span>|<span class="hljs-number">0</span>|<span class="hljs-number">0</span>|<span class="hljs-number">0</span>|<span class="hljs-number">0</span><span class="hljs-string">&quot;,&quot;</span>x38<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">0</span>|<span class="hljs-number">0</span>|<span class="hljs-number">0</span>|<span class="hljs-number">0</span>|<span class="hljs-number">1</span>|<span class="hljs-number">0</span>|<span class="hljs-number">0</span>|<span class="hljs-number">0</span>|<span class="hljs-number">0</span>|<span class="hljs-number">0</span><span class="hljs-string">&quot;&#125;&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="滑块"><a href="#滑块" class="headerlink" title="滑块"></a>滑块</h3><p><strong>生成接口</strong></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs gcode">url: https:<span class="hljs-comment">//captcha.fengkongcloud.cn/ca/v2/fverify?</span><br>params:<br>    <span class="hljs-string">&#x27;organization&#x27;</span>: <span class="hljs-string">&quot;eR46sBuqF0fdw7KWFLYa&quot;</span>,<br>    <span class="hljs-string">&#x27;dc&#x27;</span>:   <span class="hljs-attr"># default + _0</span>x<span class="hljs-number">14</span>cd<span class="hljs-comment">(0x365)</span><br>    <span class="hljs-string">&#x27;am&#x27;</span>: <span class="hljs-attr"># endTime - startTime, _0</span>x<span class="hljs-number">14</span>cd<span class="hljs-comment">(0x13d)</span><br>    <span class="hljs-string">&#x27;jv&#x27;</span>: <span class="hljs-attr"># web + _0</span>x<span class="hljs-number">14</span>cd<span class="hljs-comment">(0x211)</span><br>    <span class="hljs-string">&#x27;protocol&#x27;</span>: <span class="hljs-string">&#x27;158&#x27;</span>,<br>    <span class="hljs-string">&quot;gr&quot;</span>: <span class="hljs-attr"># zh-cn + _0</span>x<span class="hljs-number">14</span>cd<span class="hljs-comment">(0x1b2)</span><br>    <span class="hljs-string">&#x27;lh&#x27;</span>:  <span class="hljs-attr"># -1</span>, <span class="hljs-string">&quot;90e8fd86&quot;</span><br>    <span class="hljs-string">&#x27;rid&#x27;</span>: <span class="hljs-number">20220712143652</span>f<span class="hljs-number">96</span>ab<span class="hljs-number">23</span>b<span class="hljs-number">29</span>af<span class="hljs-number">84</span>a<span class="hljs-number">6</span>fb<br>    <span class="hljs-string">&#x27;ke&#x27;</span>: <span class="hljs-attr"># 200</span>, _<span class="hljs-number">0</span>x<span class="hljs-number">14</span>cd<span class="hljs-comment">(0x135)</span><br>    <span class="hljs-string">&#x27;rversion&#x27;</span>: <span class="hljs-string">&#x27;1.0.1&#x27;</span>,<br>    <span class="hljs-string">&#x27;io&#x27;</span>:  <span class="hljs-attr"># mouseEndX / 400</span>, _<span class="hljs-number">0</span>x<span class="hljs-number">14</span>cd<span class="hljs-comment">(0x22d)</span><br>    <span class="hljs-string">&#x27;callback&#x27;</span>: f<span class="hljs-string">&#x27;sm_&#123;str(int(time.time() * 1000))&#125;&#x27;</span>,<br>    <span class="hljs-string">&#x27;ak&#x27;</span>: <span class="hljs-attr"># 1</span>, <span class="hljs-string">&quot;d949a6f5&quot;</span><br>    <span class="hljs-string">&#x27;lg&#x27;</span>: <span class="hljs-attr"># 400</span>, _<span class="hljs-number">0</span>x<span class="hljs-number">14</span>cd<span class="hljs-comment">(0x23a)</span><br>    <span class="hljs-string">&#x27;sdkver&#x27;</span>: <span class="hljs-string">&#x27;1.1.3&#x27;</span>,<br>    <span class="hljs-string">&#x27;bi&#x27;</span>: <span class="hljs-attr"># 0</span>, _<span class="hljs-number">0</span>x<span class="hljs-number">14</span>cd<span class="hljs-comment">(0x23e)</span><br>    <span class="hljs-string">&#x27;on&#x27;</span>: <span class="hljs-attr"># slideArray, _0</span>x<span class="hljs-number">14</span>cd<span class="hljs-comment">(0x363)</span><br>    <span class="hljs-string">&#x27;ostype&#x27;</span>: <span class="hljs-string">&#x27;web&#x27;</span>,<br>    <span class="hljs-string">&#x27;act.os&#x27;</span>: <span class="hljs-string">&#x27;web_pc&#x27;</span>,<br></code></pre></td></tr></table></figure><p><strong>加密JS</strong></p><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">_0x1da0</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> _0x1a20a5 = [<span class="hljs-string">&#x27;match&#x27;</span>, <span class="hljs-string">&#x27;/ca/v2/fverify&#x27;</span>, <span class="hljs-string">&#x27;\x22&gt;&lt;/div&gt;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20&lt;/div&gt;&#x27;</span>, <span class="hljs-string">&#x27;onSuccess&#x27;</span>, <span class="hljs-string">&#x27;rel&#x27;</span>, <span class="hljs-string">&#x27;maskEl&#x27;</span>, <span class="hljs-string">&#x27;getElementById&#x27;</span>, <span class="hljs-string">&#x27;indexOf&#x27;</span>, <span class="hljs-string">&#x27;moveHandler&#x27;</span>, <span class="hljs-string">&#x27;toUpperCase&#x27;</span>, <span class="hljs-string">&#x27;float&#x27;</span>, <span class="hljs-string">&#x27;imageFreshBtnEl&#x27;</span>, <span class="hljs-string">&#x27;String&#x27;</span>, <span class="hljs-string">&#x27;url(\x27./img/pixel.gif\x27)&#x27;</span>, <span class="hljs-string">&#x27;/pr/v1.0.1/img/icon-disabled-square.png&#x27;</span>, <span class="hljs-string">&#x27;f0344506&#x27;</span>, <span class="hljs-string">&#x27;normalizeQuery&#x27;</span>, <span class="hljs-string">&#x27;rversion&#x27;</span>, <span class="hljs-string">&#x27;img&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_slide_tips&#x27;</span>, <span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-string">&#x27;slideWidth&#x27;</span>, <span class="hljs-string">&#x27;mousemoveData&#x27;</span>, <span class="hljs-string">&#x27;maxTouchPoints&#x27;</span>, <span class="hljs-string">&#x27;Click\x20to\x20verification&#x27;</span>, <span class="hljs-string">&#x27;2.6.10&#x27;</span>, <span class="hljs-string">&#x27;./_is-array&#x27;</span>, <span class="hljs-string">&#x27;./_wks-ext&#x27;</span>, <span class="hljs-string">&#x27;srcElement&#x27;</span>, <span class="hljs-string">&#x27;floatOutTimer&#x27;</span>, <span class="hljs-string">&#x27;setRootDom&#x27;</span>, <span class="hljs-string">&#x27;push&#x27;</span>, <span class="hljs-string">&#x27;\x20is\x20not\x20iterable!&#x27;</span>, <span class="hljs-string">&#x27;string&#x27;</span>, <span class="hljs-string">&#x27;./_uid&#x27;</span>, <span class="hljs-string">&#x27;initOnceEvent&#x27;</span>, <span class="hljs-string">&#x27;http&#x27;</span>, <span class="hljs-string">&#x27;:&amp;nbsp;&amp;nbsp;\x20&lt;img\x20src=\x22&#x27;</span>, <span class="hljs-string">&#x27;captcha&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_form_result\x20shumei_hide&#x27;</span>, <span class="hljs-string">&#x27;./_object-gopn&#x27;</span>, <span class="hljs-string">&#x27;select&#x27;</span>, <span class="hljs-string">&#x27;DataTimer&#x27;</span>, <span class="hljs-string">&#x27;241ee979&#x27;</span>, <span class="hljs-string">&#x27;isNumber&#x27;</span>, <span class="hljs-string">&#x27;__esModule&#x27;</span>, <span class="hljs-string">&#x27;&lt;/div&gt;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20&lt;/div&gt;&#x27;</span>, <span class="hljs-string">&#x27;Symbol(&#x27;</span>, <span class="hljs-string">&#x27;toStringTag&#x27;</span>, <span class="hljs-string">&#x27;offsetTop&#x27;</span>, <span class="hljs-string">&#x27;slideBtnEl&#x27;</span>, <span class="hljs-string">&#x27;updateTplStatus&#x27;</span>, <span class="hljs-string">&#x27;fail&#x27;</span>, <span class="hljs-string">&#x27;./_iobject&#x27;</span>, <span class="hljs-string">&#x27;button&#x27;</span>, <span class="hljs-string">&#x27;./_has&#x27;</span>, <span class="hljs-string">&#x27;ab04dd25&#x27;</span>, <span class="hljs-string">&#x27;网络不给力|点击重试&#x27;</span>, <span class="hljs-string">&#x27;slideEl&#x27;</span>, <span class="hljs-string">&#x27;slide_disabled&#x27;</span>, <span class="hljs-string">&#x27;6cace6e6&#x27;</span>, <span class="hljs-string">&#x27;select_success&#x27;</span>, <span class="hljs-string">&#x27;_formDom&#x27;</span>, <span class="hljs-string">&#x27;getConsoleBywindowSize&#x27;</span>, <span class="hljs-string">&#x27;function&#x27;</span>, <span class="hljs-string">&#x27;验证成功&#x27;</span>, <span class="hljs-string">&#x27;location&#x27;</span>, <span class="hljs-string">&#x27;insensitive_disabled&#x27;</span>, <span class="hljs-string">&#x27;style&#x27;</span>, <span class="hljs-string">&#x27;seq_select&#x27;</span>, <span class="hljs-string">&#x27;network&#x27;</span>, <span class="hljs-string">&#x27;slideTipsEl&#x27;</span>, <span class="hljs-string">&#x27;loadImage&#x27;</span>, <span class="hljs-string">&#x27;data-index&#x27;</span>, <span class="hljs-string">&#x27;constructor&#x27;</span>, <span class="hljs-string">&#x27;errMsg&#x27;</span>, <span class="hljs-string">&#x27;floatImagePosition&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;insensitiveProduct&#x27;</span>, <span class="hljs-string">&#x27;innerWidth&#x27;</span>, <span class="hljs-string">&#x27;addEventListener&#x27;</span>, <span class="hljs-string">&#x27;../core-js/symbol/iterator&#x27;</span>, <span class="hljs-string">&#x27;symbol-registry&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_wrapper&#x27;</span>, <span class="hljs-string">&#x27;&amp;nbsp;&#x27;</span>, <span class="hljs-string">&#x27;./_dom-create&#x27;</span>, <span class="hljs-string">&#x27;onReady&#x27;</span>, <span class="hljs-string">&#x27;enumerable&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_img_load_error_icon\x22&gt;&lt;/div&gt;&#x27;</span>, <span class="hljs-string">&#x27;pass&#x27;</span>, <span class="hljs-string">&#x27;参数不合法&#x27;</span>, <span class="hljs-string">&#x27;sdkver&#x27;</span>, <span class="hljs-string">&#x27;getAttribute&#x27;</span>, <span class="hljs-string">&#x27;fromCharCode&#x27;</span>, <span class="hljs-string">&#x27;length&#x27;</span>, <span class="hljs-string">&#x27;symbols&#x27;</span>, <span class="hljs-string">&#x27;./_enum-bug-keys&#x27;</span>, <span class="hljs-string">&#x27;http://&#x27;</span>, <span class="hljs-string">&#x27;image&#x27;</span>, <span class="hljs-string">&#x27;禁用验证码失败&#x27;</span>, <span class="hljs-string">&#x27;runBotDetection&#x27;</span>, <span class="hljs-string">&#x27;42px&#x27;</span>, <span class="hljs-string">&#x27;top&#x27;</span>, <span class="hljs-string">&#x27;extend&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_img_loadding_wrapper&#x27;</span>, <span class="hljs-string">&#x27;icon_select&#x27;</span>, <span class="hljs-string">&#x27;ceil&#x27;</span>, <span class="hljs-string">&#x27;9829490fryFRu&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_img_loading_tips\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;iframe&#x27;</span>, <span class="hljs-string">&#x27;fpMousemoveY&#x27;</span>, <span class="hljs-string">&#x27;\x20\x20\x20\x20\x20\x20\x20\x20&#x27;</span>, <span class="hljs-string">&#x27;Symbol.&#x27;</span>, <span class="hljs-string">&#x27;fpMouseLeftClickY&#x27;</span>, <span class="hljs-string">&#x27;./_set-to-string-tag&#x27;</span>, <span class="hljs-string">&#x27;progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\x27&#x27;</span>, <span class="hljs-string">&#x27;Math&#x27;</span>, <span class="hljs-string">&#x27;Array&#x27;</span>, <span class="hljs-string">&#x27;callPhantom&#x27;</span>, <span class="hljs-string">&#x27;babel-runtime/helpers/classCallCheck&#x27;</span>, <span class="hljs-string">&#x27;closeHandler&#x27;</span>, <span class="hljs-string">&#x27;9444iYaiDP&#x27;</span>, <span class="hljs-string">&#x27;TextTrackList,TouchList&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_slide_wrapper&#x27;</span>, <span class="hljs-string">&#x27;readyState&#x27;</span>, <span class="hljs-string">&#x27;captchaTypeDomains&#x27;</span>, <span class="hljs-string">&#x27;outHandler&#x27;</span>, <span class="hljs-string">&#x27;zh-cn&#x27;</span>, <span class="hljs-string">&#x27;scrollTop&#x27;</span>, <span class="hljs-string">&#x27;CSS资源加载失败&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha\x20shumei_captcha_popup_wrapper\x20shumei_hide\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;captcha.fengkongcloud.cn&#x27;</span>, <span class="hljs-string">&#x27;slide&#x27;</span>, <span class="hljs-string">&#x27;onload&#x27;</span>, <span class="hljs-string">&#x27;tracer&#x27;</span>, <span class="hljs-string">&#x27;type&#x27;</span>, <span class="hljs-string">&#x27;hasOwnProperty&#x27;</span>, <span class="hljs-string">&#x27;/ca/v1/conf&#x27;</span>, <span class="hljs-string">&#x27;sort&#x27;</span>, <span class="hljs-string">&#x27;absolute&#x27;</span>, <span class="hljs-string">&#x27;:&amp;nbsp;&amp;nbsp;&#x27;</span>, <span class="hljs-string">&#x27;ondragstart&#x27;</span>, <span class="hljs-string">&#x27;create&#x27;</span>, <span class="hljs-string">&#x27;babel-runtime/helpers/typeof&#x27;</span>, <span class="hljs-string">&#x27;@@iterator&#x27;</span>, <span class="hljs-string">&#x27;log&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_footer_refresh_btn&#x27;</span>, <span class="hljs-string">&#x27;detail&#x27;</span>, <span class="hljs-string">&#x27;getJSONP&#x27;</span>, <span class="hljs-string">&#x27;core-js/library/fn/object/define-property&#x27;</span>, <span class="hljs-string">&#x27;className&#x27;</span>, <span class="hljs-string">&#x27;virtual&#x27;</span>, <span class="hljs-string">&#x27;onresize&#x27;</span>, <span class="hljs-string">&#x27;mousemove&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_img_refresh_btn&#x27;</span>, <span class="hljs-string">&#x27;https://&#x27;</span>, <span class="hljs-string">&#x27;enableCaptcha&#x27;</span>, <span class="hljs-string">&#x27;getAutoSlideDefaultHtml&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha\x20shumei_captcha_mask\x20shumei_hide\x22&gt;&lt;/div&gt;&#x27;</span>, <span class="hljs-string">&#x27;chrome&#x27;</span>, <span class="hljs-string">&#x27;ontouchstart&#x27;</span>, <span class="hljs-string">&#x27;protocol&#x27;</span>, <span class="hljs-string">&#x27;getSelectPopupHtml&#x27;</span>, <span class="hljs-string">&#x27;fromElement&#x27;</span>, <span class="hljs-string">&#x27;./smEncrypt&#x27;</span>, <span class="hljs-string">&#x27;\x00\x00\x00\x00\x00\x00\x00\x00&#x27;</span>, <span class="hljs-string">&#x27;pageX&#x27;</span>, <span class="hljs-string">&#x27;./_enum-keys&#x27;</span>, <span class="hljs-string">&#x27;opr&#x27;</span>, <span class="hljs-string">&#x27;smThrottle&#x27;</span>, <span class="hljs-string">&#x27;apply&#x27;</span>, <span class="hljs-string">&#x27;../modules/es6.string.iterator&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_loaded_img_bg&#x27;</span>, <span class="hljs-string">&#x27;hover&#x27;</span>, <span class="hljs-string">&#x27;initSMCaptcha&#x27;</span>, <span class="hljs-string">&#x27;getElementsByTagName&#x27;</span>, <span class="hljs-string">&#x27;detachEvent&#x27;</span>, <span class="hljs-string">&#x27;./_hide&#x27;</span>, <span class="hljs-string">&#x27;errorTips&#x27;</span>, <span class="hljs-string">&#x27;background-position&#x27;</span>, <span class="hljs-string">&#x27;load&#x27;</span>, <span class="hljs-string">&#x27;getResult&#x27;</span>, <span class="hljs-string">&#x27;loading&#x27;</span>, <span class="hljs-string">&#x27;3198248gfHZtV&#x27;</span>, <span class="hljs-string">&#x27;getElementViewTop&#x27;</span>, <span class="hljs-string">&#x27;mouseData&#x27;</span>, <span class="hljs-string">&#x27;entries&#x27;</span>, <span class="hljs-string">&#x27;__fxdriver_evaluate&#x27;</span>, <span class="hljs-string">&#x27;iterator&#x27;</span>, <span class="hljs-string">&#x27;%;\x22\x20data-index=\x22&#x27;</span>, <span class="hljs-string">&#x27;web_mobile&#x27;</span>, <span class="hljs-string">&#x27;captchaTypeUrl&#x27;</span>, <span class="hljs-string">&#x27;fpMousemoveX&#x27;</span>, <span class="hljs-string">&#x27;disableCaptcha&#x27;</span>, <span class="hljs-string">&#x27;MODULE_NOT_FOUND&#x27;</span>, <span class="hljs-string">&#x27;isInitialized&#x27;</span>, <span class="hljs-string">&#x27;Network\x20failure&#x27;</span>, <span class="hljs-string">&#x27;constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf&#x27;</span>, <span class="hljs-string">&#x27;./_object-gopn-ext&#x27;</span>, <span class="hljs-string">&#x27;../../modules/es7.symbol.observable&#x27;</span>, <span class="hljs-string">&#x27;outerHeight&#x27;</span>, <span class="hljs-string">&#x27;defineProperties&#x27;</span>, <span class="hljs-string">&#x27;checkApi&#x27;</span>, <span class="hljs-string">&#x27;clearEvent&#x27;</span>, <span class="hljs-string">&#x27;\x20is\x20not\x20a\x20symbol!&#x27;</span>, <span class="hljs-string">&#x27;./_shared&#x27;</span>, <span class="hljs-string">&#x27;fpMouseClickHandler&#x27;</span>, <span class="hljs-string">&#x27;bindForm&#x27;</span>, <span class="hljs-string">&#x27;floatOverHandler&#x27;</span>, <span class="hljs-string">&#x27;undefined&#x27;</span>, <span class="hljs-string">&#x27;mouseLeftClick&#x27;</span>, <span class="hljs-string">&#x27;keyup&#x27;</span>, <span class="hljs-string">&#x27;Css\x20load\x20failure&#x27;</span>, <span class="hljs-string">&#x27;removeEventListener&#x27;</span>, <span class="hljs-string">&#x27;initEvent&#x27;</span>, <span class="hljs-string">&#x27;BackCompat&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_img_loadding_wrapper\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;fixProduct&#x27;</span>, <span class="hljs-string">&#x27;changeRefreshBtnStatus&#x27;</span>, <span class="hljs-string">&#x27;./_redefine&#x27;</span>, <span class="hljs-string">&#x27;clientHeight&#x27;</span>, <span class="hljs-string">&#x27;min&#x27;</span>, <span class="hljs-string">&#x27;fpMousemoveHandler&#x27;</span>, <span class="hljs-string">&#x27;cellectFullPageData&#x27;</span>, <span class="hljs-string">&#x27;auto_slide&#x27;</span>, <span class="hljs-string">&#x27;onError&#x27;</span>, <span class="hljs-string">&#x27;/pr/v1.0.1/img/bg-loading.png&#x27;</span>, <span class="hljs-string">&#x27;226530PdNgfI&#x27;</span>, <span class="hljs-string">&#x27;insensitiveHandlerCallback&#x27;</span>, <span class="hljs-string">&#x27;excuteCallback&#x27;</span>, <span class="hljs-string">&#x27;selectData&#x27;</span>, <span class="hljs-string">&#x27;getMousePos&#x27;</span>, <span class="hljs-string">&#x27;floatOutHandler&#x27;</span>, <span class="hljs-string">&#x27;\x20is\x20not\x20an\x20object!&#x27;</span>, <span class="hljs-string">&#x27;getOwnPropertyNames&#x27;</span>, <span class="hljs-string">&#x27;contentWindow&#x27;</span>, <span class="hljs-string">&#x27;加载失败&#x27;</span>, <span class="hljs-string">&#x27;&lt;span\x20class=\x22shumei_captcha_network_timeout\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;shumei_hide&#x27;</span>, <span class="hljs-string">&#x27;100%&#x27;</span>, <span class="hljs-string">&#x27;bindEvent&#x27;</span>, <span class="hljs-string">&#x27;web&#x27;</span>, <span class="hljs-string">&#x27;src&#x27;</span>, <span class="hljs-string">&#x27;riskLevel&#x27;</span>, <span class="hljs-string">&#x27;refreshHandler&#x27;</span>, <span class="hljs-string">&#x27;__userConf&#x27;</span>, <span class="hljs-string">&#x27;./_wks&#x27;</span>, <span class="hljs-string">&#x27;../../modules/es6.object.to-string&#x27;</span>, <span class="hljs-string">&#x27;UTF-8&#x27;</span>, <span class="hljs-string">&#x27;mouse&#x27;</span>, <span class="hljs-string">&#x27;/pr/v1.0.1/img/icon-success-square.png&#x27;</span>, <span class="hljs-string">&#x27;bottom&#x27;</span>, <span class="hljs-string">&#x27;&lt;/a&gt;&#x27;</span>, <span class="hljs-string">&#x27;version&#x27;</span>, <span class="hljs-string">&#x27;/pr/v1.0.1/img/icon-close.png&#x27;</span>, <span class="hljs-string">&#x27;innerHTML&#x27;</span>, <span class="hljs-string">&#x27;splice&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_slide_wrapper\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;boolean&#x27;</span>, <span class="hljs-string">&#x27;removeClass&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_mask&#x27;</span>, <span class="hljs-string">&#x27;replace&#x27;</span>, <span class="hljs-string">&#x27;../pkg/smImagesConf&#x27;</span>, <span class="hljs-string">&#x27;./_an-object&#x27;</span>, <span class="hljs-string">&#x27;./_meta&#x27;</span>, <span class="hljs-string">&#x27;网络请求异常&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_img_loaded_bg_wrapper&#x27;</span>, <span class="hljs-string">&#x27;/ca/v1/register&#x27;</span>, <span class="hljs-string">&#x27;null&#x27;</span>, <span class="hljs-string">&#x27;maskBindClose&#x27;</span>, <span class="hljs-string">&#x27;debug&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_slide_slot\x22&gt;&lt;/div&gt;&#x27;</span>, <span class="hljs-string">&#x27;getSlideDefaultHtml&#x27;</span>, <span class="hljs-string">&#x27;attachEvent&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_slide_btn\x22&gt;&lt;/div&gt;&#x27;</span>, <span class="hljs-string">&#x27;/pr/v1.0.1/img/bg-default.png&#x27;</span>, <span class="hljs-string">&#x27;webdriver&#x27;</span>, <span class="hljs-string">&#x27;init&#x27;</span>, <span class="hljs-string">&#x27;mousedown&#x27;</span>, <span class="hljs-string">&#x27;defineProperty&#x27;</span>, <span class="hljs-string">&#x27;op-symbols&#x27;</span>, <span class="hljs-string">&#x27;shumei_show&#x27;</span>, <span class="hljs-string">&#x27;write&#x27;</span>, <span class="hljs-string">&#x27;isString&#x27;</span>, <span class="hljs-string">&#x27;selectHandler&#x27;</span>, <span class="hljs-string">&#x27;getMouseAction&#x27;</span>, <span class="hljs-string">&#x27;toPrimitive&#x27;</span>, <span class="hljs-string">&#x27;wks&#x27;</span>, <span class="hljs-string">&#x27;getAutoSlidePopupHtml&#x27;</span>, <span class="hljs-string">&#x27;imageLoadErrorEl&#x27;</span>, <span class="hljs-string">&#x27;saveMouseData&#x27;</span>, <span class="hljs-string">&#x27;event&#x27;</span>, <span class="hljs-string">&#x27;onreadystatechange&#x27;</span>, <span class="hljs-string">&#x27;Firebug&#x27;</span>, <span class="hljs-string">&#x27;number&#x27;</span>, <span class="hljs-string">&#x27;answer_content&#x27;</span>, <span class="hljs-string">&#x27;startTime&#x27;</span>, <span class="hljs-string">&#x27;./_to-length&#x27;</span>, <span class="hljs-string">&#x27;slideTipsTextEl&#x27;</span>, <span class="hljs-string">&#x27;isObject&#x27;</span>, <span class="hljs-string">&#x27;./_global&#x27;</span>, <span class="hljs-string">&#x27;versions&#x27;</span>, <span class="hljs-string">&#x27;footFreshBtnEl&#x27;</span>, <span class="hljs-string">&#x27;random&#x27;</span>, <span class="hljs-string">&#x27;changePannelStatus&#x27;</span>, <span class="hljs-string">&#x27;getFullPageData&#x27;</span>, <span class="hljs-string">&#x27;findChild&#x27;</span>, <span class="hljs-string">&#x27;./_to-integer&#x27;</span>, <span class="hljs-string">&#x27;organization&#x27;</span>, <span class="hljs-string">&#x27;global&#x27;</span>, <span class="hljs-string">&#x27;mode&#x27;</span>, <span class="hljs-string">&#x27;获取配置参数异常&#x27;</span>, <span class="hljs-string">&#x27;Object&#x27;</span>, <span class="hljs-string">&#x27;normalizePath&#x27;</span>, <span class="hljs-string">&#x27;addClass&#x27;</span>, <span class="hljs-string">&#x27;loadScript&#x27;</span>, <span class="hljs-string">&#x27;touchstart&#x27;</span>, <span class="hljs-string">&#x27;host&#x27;</span>, <span class="hljs-string">&#x27;selectPosData&#x27;</span>, <span class="hljs-string">&#x27;offsetParent&#x27;</span>, <span class="hljs-string">&#x27;./_add-to-unscopables&#x27;</span>, <span class="hljs-string">&#x27;_bindNetworkEvent&#x27;</span>, <span class="hljs-string">&#x27;./_classof&#x27;</span>, <span class="hljs-string">&#x27;resetForm&#x27;</span>, <span class="hljs-string">&#x27;channel&#x27;</span>, <span class="hljs-string">&#x27;head&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_img_load_error_tips\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;Cannot\x20call\x20a\x20class\x20as\x20a\x20function&#x27;</span>, <span class="hljs-string">&#x27;./_array-includes&#x27;</span>, <span class="hljs-string">&#x27;_closeCallback&#x27;</span>, <span class="hljs-string">&#x27;selenium&#x27;</span>, <span class="hljs-string">&#x27;symbol&#x27;</span>, <span class="hljs-string">&#x27;./_string-at&#x27;</span>, <span class="hljs-string">&#x27;slide_hover&#x27;</span>, <span class="hljs-string">&#x27;removeElement&#x27;</span>, <span class="hljs-string">&#x27;tracker.fengkongcloud.com&#x27;</span>, <span class="hljs-string">&#x27;mouseup&#x27;</span>, <span class="hljs-string">&#x27;script&#x27;</span>, <span class="hljs-string">&#x27;auto&#x27;</span>, <span class="hljs-string">&#x27;../pkg/smConfig&#x27;</span>, <span class="hljs-string">&#x27;embed&#x27;</span>, <span class="hljs-string">&#x27;complete&#x27;</span>, <span class="hljs-string">&#x27;PASS&#x27;</span>, <span class="hljs-string">&#x27;./_property-desc&#x27;</span>, <span class="hljs-string">&#x27;mouseRightClickDataTimer&#x27;</span>, <span class="hljs-string">&#x27;./_to-object&#x27;</span>, <span class="hljs-string">&#x27;fpKeyboardHandler&#x27;</span>, <span class="hljs-string">&#x27;domain&#x27;</span>, <span class="hljs-string">&#x27;outerWidth&#x27;</span>, <span class="hljs-string">&#x27;,\x20&lt;/font&gt;&#x27;</span>, <span class="hljs-string">&#x27;../modules/web.dom.iterable&#x27;</span>, <span class="hljs-string">&#x27;NEED&#x27;</span>, <span class="hljs-string">&#x27;561249ea&#x27;</span>, <span class="hljs-string">&#x27;399fded8&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_img_wrapper\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;4372c1ba&#x27;</span>, <span class="hljs-string">&#x27;./smLangMessage&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_input_rid&#x27;</span>, <span class="hljs-string">&#x27;SDKVER&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_insensitive_content\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;verify&#x27;</span>, <span class="hljs-string">&#x27;insensitiveEl&#x27;</span>, <span class="hljs-string">&#x27;弹出层式验证码初始化失败&#x27;</span>, <span class="hljs-string">&#x27;Cannot\x20find\x20module\x20\x27&#x27;</span>, <span class="hljs-string">&#x27;changeImageStatus&#x27;</span>, <span class="hljs-string">&#x27;clearClassStatus&#x27;</span>, <span class="hljs-string">&#x27;onselectstart&#x27;</span>, <span class="hljs-string">&#x27;touchend&#x27;</span>, <span class="hljs-string">&#x27;logError&#x27;</span>, <span class="hljs-string">&#x27;documentElement&#x27;</span>, <span class="hljs-string">&#x27;_obj&#x27;</span>, <span class="hljs-string">&#x27;&lt;font&gt;&#x27;</span>, <span class="hljs-string">&#x27;set&#x27;</span>, <span class="hljs-string">&#x27;imageLoadedFgEl&#x27;</span>, <span class="hljs-string">&#x27;css&#x27;</span>, <span class="hljs-string">&#x27;./_ctx&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_footer_close_btn\x22&gt;&lt;/div&gt;&#x27;</span>, <span class="hljs-string">&#x27;getSlidePopupHtml&#x27;</span>, <span class="hljs-string">&#x27;./_object-pie&#x27;</span>, <span class="hljs-string">&#x27;./_shared-key&#x27;</span>, <span class="hljs-string">&#x27;createElement&#x27;</span>, <span class="hljs-string">&#x27;startHandler&#x27;</span>, <span class="hljs-string">&#x27;__webdriver_script_fn&#x27;</span>, <span class="hljs-string">&#x27;./_object-gopd&#x27;</span>, <span class="hljs-string">&#x27;buildTpl&#x27;</span>, <span class="hljs-string">&#x27;./_descriptors&#x27;</span>, <span class="hljs-string">&#x27;__driver_unwrapped&#x27;</span>, <span class="hljs-string">&#x27;insensitive&#x27;</span>, <span class="hljs-string">&#x27;_successCallback&#x27;</span>, <span class="hljs-string">&#x27;toLowerCase&#x27;</span>, <span class="hljs-string">&#x27;_Selenium_IDE_Recorder&#x27;</span>, <span class="hljs-string">&#x27;__core-js_shared__&#x27;</span>, <span class="hljs-string">&#x27;done&#x27;</span>, <span class="hljs-string">&#x27;Arguments&#x27;</span>, <span class="hljs-string">&#x27;startRequestTime&#x27;</span>, <span class="hljs-string">&#x27;fpMouseRightClickX&#x27;</span>, <span class="hljs-string">&#x27;link&#x27;</span>, <span class="hljs-string">&#x27;saveEventList&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_popup_wrapper&#x27;</span>, <span class="hljs-string">&#x27;base64Decode&#x27;</span>, <span class="hljs-string">&#x27;158&#x27;</span>, <span class="hljs-string">&#x27;scrollLeft&#x27;</span>, <span class="hljs-string">&#x27;default&#x27;</span>, <span class="hljs-string">&#x27;values&#x27;</span>, <span class="hljs-string">&#x27;./_to-absolute-index&#x27;</span>, <span class="hljs-string">&#x27;intervalTimer&#x27;</span>, <span class="hljs-string">&#x27;DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,&#x27;</span>, <span class="hljs-string">&#x27;toString&#x27;</span>, <span class="hljs-string">&#x27;../../modules/web.dom.iterable&#x27;</span>, <span class="hljs-string">&#x27;smGetElByClassName&#x27;</span>, <span class="hljs-string">&#x27;async&#x27;</span>, <span class="hljs-string">&#x27;_pannel&#x27;</span>, <span class="hljs-string">&#x27;./smStringify&#x27;</span>, <span class="hljs-string">&#x27;trueUnit&#x27;</span>, <span class="hljs-string">&#x27;getPopupHtml&#x27;</span>, <span class="hljs-string">&#x27;popup&#x27;</span>, <span class="hljs-string">&#x27;target&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_img_loaded_fg_wrapper&#x27;</span>, <span class="hljs-string">&#x27;width:参数不合法&#x27;</span>, <span class="hljs-string">&#x27;\x20Iterator&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_insensitive_tips&#x27;</span>, <span class="hljs-string">&#x27;no-network&#x27;</span>, <span class="hljs-string">&#x27;reload&#x27;</span>, <span class="hljs-string">&#x27;panelEl&#x27;</span>, <span class="hljs-string">&#x27;./_is-object&#x27;</span>, <span class="hljs-string">&#x27;./core.get-iterator-method&#x27;</span>, <span class="hljs-string">&#x27;href&#x27;</span>, <span class="hljs-string">&#x27;registerApi&#x27;</span>, <span class="hljs-string">&#x27;fixConfig&#x27;</span>, <span class="hljs-string">&#x27;substring&#x27;</span>, <span class="hljs-string">&#x27;hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables&#x27;</span>, <span class="hljs-string">&#x27;currentStyle&#x27;</span>, <span class="hljs-string">&#x27;trueHeight&#x27;</span>, <span class="hljs-string">&#x27;appendChild&#x27;</span>, <span class="hljs-string">&#x27;Symbol&#x27;</span>, <span class="hljs-string">&#x27;\x27,\x20sizingMethod=\x27crop\x27)&#x27;</span>, <span class="hljs-string">&#x27;https&#x27;</span>, <span class="hljs-string">&#x27;images&#x27;</span>, <span class="hljs-string">&#x27;meta&#x27;</span>, <span class="hljs-string">&#x27;81YEuPCe&#x27;</span>, <span class="hljs-string">&#x27;fpMouseRightClickY&#x27;</span>, <span class="hljs-string">&#x27;\x20is\x20not\x20a\x20function!&#x27;</span>, <span class="hljs-string">&#x27;updateAnswerHtml&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_img_wrapper&#x27;</span>, <span class="hljs-string">&#x27;charAt&#x27;</span>, <span class="hljs-string">&#x27;fVerifyUrlV2&#x27;</span>, <span class="hljs-string">&#x27;./_library&#x27;</span>, <span class="hljs-string">&#x27;value&#x27;</span>, <span class="hljs-string">&#x27;hasClass&#x27;</span>, <span class="hljs-string">&#x27;preventDefaultHandler&#x27;</span>, <span class="hljs-string">&#x27;act.os&#x27;</span>, <span class="hljs-string">&#x27;isBoolean&#x27;</span>, <span class="hljs-string">&#x27;./_core&#x27;</span>, <span class="hljs-string">&#x27;Failed&#x27;</span>, <span class="hljs-string">&#x27;/exception&#x27;</span>, <span class="hljs-string">&#x27;320875PhHGqX&#x27;</span>, <span class="hljs-string">&#x27;mouseStartY&#x27;</span>, <span class="hljs-string">&#x27;imageLoadingEl&#x27;</span>, <span class="hljs-string">&#x27;prototype&#x27;</span>, <span class="hljs-string">&#x27;spatial_select&#x27;</span>, <span class="hljs-string">&#x27;store&#x27;</span>, <span class="hljs-string">&#x27;CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,&#x27;</span>, <span class="hljs-string">&#x27;&lt;/span&gt;&#x27;</span>, <span class="hljs-string">&#x27;getElementByTagName&#x27;</span>, <span class="hljs-string">&#x27;getRootDom&#x27;</span>, <span class="hljs-string">&#x27;./_iter-step&#x27;</span>, <span class="hljs-string">&#x27;keyboardDataTimer&#x27;</span>, <span class="hljs-string">&#x27;_selenium&#x27;</span>, <span class="hljs-string">&#x27;DEFAULT&#x27;</span>, <span class="hljs-string">&#x27;mouseover&#x27;</span>, <span class="hljs-string">&#x27;web_pc&#x27;</span>, <span class="hljs-string">&#x27;charCodeAt&#x27;</span>, <span class="hljs-string">&#x27;SMCaptcha&#x27;</span>, <span class="hljs-string">&#x27;./_iterators&#x27;</span>, <span class="hljs-string">&#x27;./img/pixel.gif&#x27;</span>, <span class="hljs-string">&#x27;QObject&#x27;</span>, <span class="hljs-string">&#x27;height&#x27;</span>, <span class="hljs-string">&#x27;getSelectDefaultHtml&#x27;</span>, <span class="hljs-string">&#x27;../../modules/es6.symbol&#x27;</span>, <span class="hljs-string">&#x27;getDeviceId&#x27;</span>, <span class="hljs-string">&#x27;keys&#x27;</span>, <span class="hljs-string">&#x27;./_object-keys-internal&#x27;</span>, <span class="hljs-string">&#x27;imageLoadedEl&#x27;</span>, <span class="hljs-string">&#x27;showCaptcha&#x27;</span>, <span class="hljs-string">&#x27;low&#x27;</span>, <span class="hljs-string">&#x27;请依次点击&#x27;</span>, <span class="hljs-string">&#x27;/script&#x27;</span>, <span class="hljs-string">&#x27;\x22\x20/&gt;&#x27;</span>, <span class="hljs-string">&#x27;valueOf&#x27;</span>, <span class="hljs-string">&#x27;javascript:&#x27;</span>, <span class="hljs-string">&#x27;all&#x27;</span>, <span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-string">&#x27;next&#x27;</span>, <span class="hljs-string">&#x27;smDebounce&#x27;</span>, <span class="hljs-string">&#x27;initFreshEvent&#x27;</span>, <span class="hljs-string">&#x27;keyboard&#x27;</span>, <span class="hljs-string">&#x27;slideSlotEl&#x27;</span>, <span class="hljs-string">&#x27;/pr/v1.0.1/img/icon-move-square.png&#x27;</span>, <span class="hljs-string">&#x27;/pr/v1.0.1/img/icon-default-square.png&#x27;</span>, <span class="hljs-string">&#x27;removeEvent&#x27;</span>, <span class="hljs-string">&#x27;propertyIsEnumerable&#x27;</span>, <span class="hljs-string">&#x27;Null&#x27;</span>, <span class="hljs-string">&#x27;__key&#x27;</span>, <span class="hljs-string">&#x27;Accessors\x20not\x20supported!&#x27;</span>, <span class="hljs-string">&#x27;object&#x27;</span>, <span class="hljs-string">&#x27;getOs&#x27;</span>, <span class="hljs-string">&#x27;_errorCallback&#x27;</span>, <span class="hljs-string">&#x27;_data&#x27;</span>, <span class="hljs-string">&#x27;./_html&#x27;</span>, <span class="hljs-string">&#x27;loadImages&#x27;</span>, <span class="hljs-string">&#x27;JS-SDK资源加载失败&#x27;</span>, <span class="hljs-string">&#x27;../modules/core.get-iterator&#x27;</span>, <span class="hljs-string">&#x27;cache_&#x27;</span>, <span class="hljs-string">&#x27;status&#x27;</span>, <span class="hljs-string">&#x27;apiConf&#x27;</span>, <span class="hljs-string">&#x27;isWidthInvalid&#x27;</span>, <span class="hljs-string">&#x27;验证失败,请重新验证&#x27;</span>, <span class="hljs-string">&#x27;babel-runtime/core-js/get-iterator&#x27;</span>, <span class="hljs-string">&#x27;slideProcessEl&#x27;</span>, <span class="hljs-string">&#x27;../../modules/es7.symbol.async-iterator&#x27;</span>, <span class="hljs-string">&#x27;./_export&#x27;</span>, <span class="hljs-string">&#x27;endHandler&#x27;</span>, <span class="hljs-string">&#x27;_config&#x27;</span>, <span class="hljs-string">&#x27;/pr/v1.0.1/img/icon-cry.png&#x27;</span>, <span class="hljs-string">&#x27;SERVER_ERROR&#x27;</span>, <span class="hljs-string">&#x27;clientY&#x27;</span>, <span class="hljs-string">&#x27;JSON&#x27;</span>, <span class="hljs-string">&#x27;./smLoad&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_insensitive_icon\x22&gt;&lt;/div&gt;&#x27;</span>, <span class="hljs-string">&#x27;pageY&#x27;</span>, <span class="hljs-string">&#x27;tipsMessage&#x27;</span>, <span class="hljs-string">&#x27;./_wks-define&#x27;</span>, <span class="hljs-string">&#x27;__selenium_unwrapped&#x27;</span>, <span class="hljs-string">&#x27;4fce15fa&#x27;</span>, <span class="hljs-string">&#x27;appVersion&#x27;</span>, <span class="hljs-string">&#x27;error&#x27;</span>, <span class="hljs-string">&#x27;mouseMoveX&#x27;</span>, <span class="hljs-string">&#x27;registerData&#x27;</span>, <span class="hljs-string">&#x27;isRegisterInvalid&#x27;</span>, <span class="hljs-string">&#x27;Can\x27t\x20call\x20method\x20on\x20\x20&#x27;</span>, <span class="hljs-string">&#x27;getInsensitiveDefaultHtml&#x27;</span>, <span class="hljs-string">&#x27;6234dfbc&#x27;</span>, <span class="hljs-string">&#x27;imagesLoaded&#x27;</span>, <span class="hljs-string">&#x27;keyboadStatus&#x27;</span>, <span class="hljs-string">&#x27;Succeeded&#x27;</span>, <span class="hljs-string">&#x27;_readyCallback&#x27;</span>, <span class="hljs-string">&#x27;getElementsByClassName&#x27;</span>, <span class="hljs-string">&#x27;52px&#x27;</span>, <span class="hljs-string">&#x27;getMainDom&#x27;</span>, <span class="hljs-string">&#x27;../core-js/symbol&#x27;</span>, <span class="hljs-string">&#x27;792264bNXssL&#x27;</span>, <span class="hljs-string">&#x27;../pkg/smUtils&#x27;</span>, <span class="hljs-string">&#x27;./_fails&#x27;</span>, <span class="hljs-string">&#x27;mouseStartX&#x27;</span>, <span class="hljs-string">&#x27;getElementByClassName&#x27;</span>, <span class="hljs-string">&#x27;setDomStyle&#x27;</span>, <span class="hljs-string">&#x27;./_object-dp&#x27;</span>, <span class="hljs-string">&#x27;customData&#x27;</span>, <span class="hljs-string">&#x27;DES&#x27;</span>, <span class="hljs-string">&#x27;./_cof&#x27;</span>, <span class="hljs-string">&#x27;mouseLeftClickDataTimer&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_reload_btn&#x27;</span>, <span class="hljs-string">&#x27;product&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_img_loaded_bg_wrapper\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;./_to-iobject&#x27;</span>, <span class="hljs-string">&#x27;isPc&#x27;</span>, <span class="hljs-string">&#x27;core-js/library/fn/symbol&#x27;</span>, <span class="hljs-string">&#x27;domains&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_slide_slot&#x27;</span>, <span class="hljs-string">&#x27;sliderPlaceholder&#x27;</span>, <span class="hljs-string">&#x27;closePanelEvent&#x27;</span>, <span class="hljs-string">&#x27;trackerPath&#x27;</span>, <span class="hljs-string">&#x27;mouseMoveY&#x27;</span>, <span class="hljs-string">&#x27;REJECT&#x27;</span>, <span class="hljs-string">&#x27;captchaEl&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_&#x27;</span>, <span class="hljs-string">&#x27;initDom&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_insensitive_tips\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;success&#x27;</span>, <span class="hljs-string">&#x27;answer_&#x27;</span>, <span class="hljs-string">&#x27;left&#x27;</span>, <span class="hljs-string">&#x27;getPrototypeOf&#x27;</span>, <span class="hljs-string">&#x27;/pr/v1.0.1/img/icon-popup-refresh.png&#x27;</span>, <span class="hljs-string">&#x27;7CyYpau&#x27;</span>, <span class="hljs-string">&#x27;display&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_slide_process&#x27;</span>, <span class="hljs-string">&#x27;getIteratorMethod&#x27;</span>, <span class="hljs-string">&#x27;./_to-primitive&#x27;</span>, <span class="hljs-string">&#x27;_captcha&#x27;</span>, <span class="hljs-string">&#x27;split&#x27;</span>, <span class="hljs-string">&#x27;_each&#x27;</span>, <span class="hljs-string">&#x27;filter&#x27;</span>, <span class="hljs-string">&#x27;138664KsZvYG&#x27;</span>, <span class="hljs-string">&#x27;loading...&#x27;</span>, <span class="hljs-string">&#x27;[object\x20Window]&#x27;</span>, <span class="hljs-string">&#x27;28uUVcvr&#x27;</span>, <span class="hljs-string">&#x27;max&#x27;</span>, <span class="hljs-string">&#x27;../../modules/_wks-ext&#x27;</span>, <span class="hljs-string">&#x27;callback&#x27;</span>, <span class="hljs-string">&#x27;endTime&#x27;</span>, <span class="hljs-string">&#x27;./smObject&#x27;</span>, <span class="hljs-string">&#x27;setRegisterData&#x27;</span>, <span class="hljs-string">&#x27;console&#x27;</span>, <span class="hljs-string">&#x27;/pr/v1.0.1/img/icon-fail.png&#x27;</span>, <span class="hljs-string">&#x27;blockWidth&#x27;</span>, <span class="hljs-string">&#x27;/ca/v1/fverify&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_img_refresh_btn\x22&gt;&lt;/div&gt;&#x27;</span>, <span class="hljs-string">&#x27;/ca/v1/type_captcha&#x27;</span>, <span class="hljs-string">&#x27;clientWidth&#x27;</span>, <span class="hljs-string">&#x27;VERSION&#x27;</span>, <span class="hljs-string">&#x27;getCurrentTime&#x27;</span>, <span class="hljs-string">&#x27;getValidate&#x27;</span>, <span class="hljs-string">&#x27;loadCss&#x27;</span>, <span class="hljs-string">&#x27;relatedTarget&#x27;</span>, <span class="hljs-string">&#x27;hide&#x27;</span>, <span class="hljs-string">&#x27;insensitive_default&#x27;</span>, <span class="hljs-string">&#x27;./_a-function&#x27;</span>, <span class="hljs-string">&#x27;无感验证码,暂不支持:&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha\x20shumei_captcha_wrapper\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;touchmove&#x27;</span>, <span class="hljs-string">&#x27;__webdriver_evaluate&#x27;</span>, <span class="hljs-string">&#x27;select_fail&#x27;</span>, <span class="hljs-string">&#x27;REVIEW&#x27;</span>, <span class="hljs-string">&#x27;getInsensitiveCaTypeApi&#x27;</span>, <span class="hljs-string">&#x27;disabled&#x27;</span>, <span class="hljs-string">&#x27;mousemoveDataTimer&#x27;</span>, <span class="hljs-string">&#x27;getTime&#x27;</span>, <span class="hljs-string">&#x27;__fxdriver_unwrapped&#x27;</span>, <span class="hljs-string">&#x27;registerUrl&#x27;</span>, <span class="hljs-string">&#x27;join&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_slide_tips\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;getBoundingClientRect&#x27;</span>, <span class="hljs-string">&#x27;show&#x27;</span>, <span class="hljs-string">&#x27;fixProductSuccessStatus&#x27;</span>, <span class="hljs-string">&#x27;mouseEndY&#x27;</span>, <span class="hljs-string">&#x27;saveFullPageData&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_img_loaded_wrapper\x20shumei_hide\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;navigator&#x27;</span>, <span class="hljs-string">&#x27;请按成语顺序点击&#x27;</span>, <span class="hljs-string">&#x27;rootDom&#x27;</span>, <span class="hljs-string">&#x27;makeURL&#x27;</span>, <span class="hljs-string">&#x27;registerApiInvalid&#x27;</span>, <span class="hljs-string">&#x27;order&#x27;</span>, <span class="hljs-string">&#x27;resetPosition&#x27;</span>, <span class="hljs-string">&#x27;innerHeight&#x27;</span>, <span class="hljs-string">&#x27;&lt;a\x20href=\x22###\x22\x20class=\x22shumei_captcha_reload_btn\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;Please\x20click\x20in\x20order&#x27;</span>, <span class="hljs-string">&#x27;lang&#x27;</span>, <span class="hljs-string">&#x27;appendTo&#x27;</span>, <span class="hljs-string">&#x27;shumei_&#x27;</span>, <span class="hljs-string">&#x27;mouseRightClick&#x27;</span>, <span class="hljs-string">&#x27;setResult&#x27;</span>, <span class="hljs-string">&#x27;./smUtils&#x27;</span>, <span class="hljs-string">&#x27;slice&#x27;</span>, <span class="hljs-string">&#x27;bind&#x27;</span>, <span class="hljs-string">&#x27;../../modules/_core&#x27;</span>, <span class="hljs-string">&#x27;charset&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_catpcha_footer_wrapper\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;ccefcd86&#x27;</span>, <span class="hljs-string">&#x27;3ByLGdM&#x27;</span>, <span class="hljs-string">&#x27;keyboardData&#x27;</span>, <span class="hljs-string">&#x27;rid&#x27;</span>, <span class="hljs-string">&#x27;touches&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_answer\x22\x20style=\x22top:&#x27;</span>, <span class="hljs-string">&#x27;mouseRightClickData&#x27;</span>, <span class="hljs-string">&#x27;getEncryptContent&#x27;</span>, <span class="hljs-string">&#x27;external&#x27;</span>, <span class="hljs-string">&#x27;Config\x20load\x20failure&#x27;</span>, <span class="hljs-string">&#x27;__driver_evaluate&#x27;</span>, <span class="hljs-string">&#x27;./_object-create&#x27;</span>, <span class="hljs-string">&#x27;closeBtnEl&#x27;</span>, <span class="hljs-string">&#x27;fixSize&#x27;</span>, <span class="hljs-string">&#x27;insensitiveTipsTextEl&#x27;</span>, <span class="hljs-string">&#x27;slide_fail&#x27;</span>, <span class="hljs-string">&#x27;overHandler&#x27;</span>, <span class="hljs-string">&#x27;return\x20this&#x27;</span>, <span class="hljs-string">&#x27;__webdriver_script_func&#x27;</span>, <span class="hljs-string">&#x27;imageEl&#x27;</span>, <span class="hljs-string">&#x27;trueWidth&#x27;</span>, <span class="hljs-string">&#x27;userAgent&#x27;</span>, <span class="hljs-string">&#x27;\x22&gt;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20&lt;div\x20class=\x22answer_content\x22\x20data-index=\x22&#x27;</span>, <span class="hljs-string">&#x27;base64Encode&#x27;</span>, <span class="hljs-string">&#x27;captcha.fengkongcloud.com&#x27;</span>, <span class="hljs-string">&#x27;inputEls&#x27;</span>, <span class="hljs-string">&#x27;document&#x27;</span>, <span class="hljs-string">&#x27;IE_PROTO&#x27;</span>, <span class="hljs-string">&#x27;../pkg/smLangMessage&#x27;</span>, <span class="hljs-string">&#x27;_buildErrorHtml&#x27;</span>, <span class="hljs-string">&#x27;registCaptcha&#x27;</span>, <span class="hljs-string">&#x27;./_object-dps&#x27;</span>, <span class="hljs-string">&#x27;imageLoadedBgWrapperEl&#x27;</span>, <span class="hljs-string">&#x27;图片加载失败&#x27;</span>, <span class="hljs-string">&#x27;mouseLeftClickData&#x27;</span>, <span class="hljs-string">&#x27;search&#x27;</span>, <span class="hljs-string">&#x27;./_iter-define&#x27;</span>, <span class="hljs-string">&#x27;isArray&#x27;</span>, <span class="hljs-string">&#x27;observable&#x27;</span>, <span class="hljs-string">&#x27;checkCallback&#x27;</span>, <span class="hljs-string">&#x27;mouseEndX&#x27;</span>, <span class="hljs-string">&#x27;fpMouseLeftClickX&#x27;</span>, <span class="hljs-string">&#x27;getRegisterData&#x27;</span>, <span class="hljs-string">&#x27;body&#x27;</span>, <span class="hljs-string">&#x27;htmlNetwork&#x27;</span>, <span class="hljs-string">&#x27;appId&#x27;</span>, <span class="hljs-string">&#x27;点击完成验证&#x27;</span>, <span class="hljs-string">&#x27;call&#x27;</span>, <span class="hljs-string">&#x27;smStringify&#x27;</span>, <span class="hljs-string">&#x27;clientX&#x27;</span>, <span class="hljs-string">&#x27;&lt;/div&gt;&#x27;</span>, <span class="hljs-string">&#x27;fgEl&#x27;</span>, <span class="hljs-string">&#x27;insensitiveHandler&#x27;</span>, <span class="hljs-string">&#x27;concat&#x27;</span>, <span class="hljs-string">&#x27;%;left:&#x27;</span>, <span class="hljs-string">&#x27;code&#x27;</span>, <span class="hljs-string">&#x27;./_object-keys&#x27;</span>, <span class="hljs-string">&#x27;slide_success&#x27;</span>, <span class="hljs-string">&#x27;exports&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_img_load_error_wrapper\x20shumei_hide\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,&#x27;</span>, <span class="hljs-string">&#x27;mouseout&#x27;</span>, <span class="hljs-string">&#x27;onerror&#x27;</span>, <span class="hljs-string">&#x27;forEach&#x27;</span>, <span class="hljs-string">&#x27;./_defined&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_slide_tips_wrapper\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;width&#x27;</span>, <span class="hljs-string">&#x27;open&#x27;</span>, <span class="hljs-string">&#x27;advance&#x27;</span>, <span class="hljs-string">&#x27;data&#x27;</span>, <span class="hljs-string">&#x27;parentNode&#x27;</span>, <span class="hljs-string">&#x27;div&#x27;</span>, <span class="hljs-string">&#x27;checkResult&#x27;</span>, <span class="hljs-string">&#x27;_phantom&#x27;</span>, <span class="hljs-string">&#x27;setAttribute&#x27;</span>, <span class="hljs-string">&#x27;input&#x27;</span>, <span class="hljs-string">&#x27;../../modules/es6.object.define-property&#x27;</span>, <span class="hljs-string">&#x27;return&#x27;</span>, <span class="hljs-string">&#x27;selectPlaceholder&#x27;</span>, <span class="hljs-string">&#x27;selectSeqPlaceholder&#x27;</span>];<br>    _0x1da0 = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">return</span> _0x1a20a5;<br>    &#125;<br>    ;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">_0x1da0</span>();<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">_0x14cd</span>(<span class="hljs-params">_0xec6d09, _0x5831c3</span>) &#123;<br>    <span class="hljs-keyword">var</span> _0x1da058 = <span class="hljs-title function_">_0x1da0</span>();<br>    <span class="hljs-keyword">return</span> _0x14cd = <span class="hljs-keyword">function</span> (<span class="hljs-params">_0x14cd1f, _0x19ec18</span>) &#123;<br>        _0x14cd1f = _0x14cd1f - <span class="hljs-number">0xc8</span>;<br>        <span class="hljs-keyword">var</span> _0x402b31 = _0x1da058[_0x14cd1f];<br>        <span class="hljs-keyword">return</span> _0x402b31;<br>    &#125;<br>        ,<br>        <span class="hljs-title function_">_0x14cd</span>(_0xec6d09, _0x5831c3);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">_0x2d9c</span>(<span class="hljs-params">_0xdd1e20, _0x5eab1a</span>) &#123;<br>    <span class="hljs-keyword">var</span> _0x4f4f1d = <span class="hljs-title function_">_0x4f4f</span>();<br>    <span class="hljs-keyword">return</span> _0x2d9c = <span class="hljs-keyword">function</span>(<span class="hljs-params">_0x2d9c9c, _0x381b8d</span>) &#123;<br>        _0x2d9c9c = _0x2d9c9c - <span class="hljs-number">0x1c7</span>;<br>        <span class="hljs-keyword">var</span> _0x392ae1 = _0x4f4f1d[_0x2d9c9c];<br>        <span class="hljs-keyword">return</span> _0x392ae1;<br>    &#125;<br>        ,<br>        <span class="hljs-title function_">_0x2d9c</span>(_0xdd1e20, _0x5eab1a);<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">_0x4f4f</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> _0x2f6ed0 = [<span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_slide_wrapper\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;getInsensitiveDefaultHtml&#x27;</span>, <span class="hljs-string">&#x27;substring&#x27;</span>, <span class="hljs-string">&#x27;setDomStyle&#x27;</span>, <span class="hljs-string">&#x27;getElementsByClassName&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_img_load_error_icon\x22&gt;&lt;/div&gt;&#x27;</span>, <span class="hljs-string">&#x27;core-js/library/fn/object/define-property&#x27;</span>, <span class="hljs-string">&#x27;1.1.3&#x27;</span>, <span class="hljs-string">&#x27;hide&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_slide_tips_wrapper\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;getAutoSlideDefaultHtml&#x27;</span>, <span class="hljs-string">&#x27;init&#x27;</span>, <span class="hljs-string">&#x27;div&#x27;</span>, <span class="hljs-string">&#x27;onload&#x27;</span>, <span class="hljs-string">&#x27;auto&#x27;</span>, <span class="hljs-string">&#x27;keyboadStatus&#x27;</span>, <span class="hljs-string">&#x27;showCaptcha&#x27;</span>, <span class="hljs-string">&#x27;imagesLoaded&#x27;</span>, <span class="hljs-string">&#x27;./smStringify&#x27;</span>, <span class="hljs-string">&#x27;startHandler&#x27;</span>, <span class="hljs-string">&#x27;captcha&#x27;</span>, <span class="hljs-string">&#x27;./_ie8-dom-define&#x27;</span>, <span class="hljs-string">&#x27;加载中...&#x27;</span>, <span class="hljs-string">&#x27;isString&#x27;</span>, <span class="hljs-string">&#x27;srcElement&#x27;</span>, <span class="hljs-string">&#x27;apiConf&#x27;</span>, <span class="hljs-string">&#x27;getSelectDefaultHtml&#x27;</span>, <span class="hljs-string">&#x27;./_library&#x27;</span>, <span class="hljs-string">&#x27;no-network&#x27;</span>, <span class="hljs-string">&#x27;2MqNMtZ&#x27;</span>, <span class="hljs-string">&#x27;head&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_insensitive_content\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;onReady&#x27;</span>, <span class="hljs-string">&#x27;slideEl&#x27;</span>, <span class="hljs-string">&#x27;captchaEl&#x27;</span>, <span class="hljs-string">&#x27;../modules/core.get-iterator&#x27;</span>, <span class="hljs-string">&#x27;./_to-integer&#x27;</span>, <span class="hljs-string">&#x27;width:参数不合法&#x27;</span>, <span class="hljs-string">&#x27;./_property-desc&#x27;</span>, <span class="hljs-string">&#x27;tracker.fengkongcloud.com&#x27;</span>, <span class="hljs-string">&#x27;body&#x27;</span>, <span class="hljs-string">&#x27;number&#x27;</span>, <span class="hljs-string">&#x27;a4cb0bde&#x27;</span>, <span class="hljs-string">&#x27;imageLoadedBgEl&#x27;</span>, <span class="hljs-string">&#x27;&lt;img\x20class=\x22shumei_captcha_loaded_img_bg\x22\x20/&gt;&#x27;</span>, <span class="hljs-string">&#x27;getSlideDefaultHtml&#x27;</span>, <span class="hljs-string">&#x27;button&#x27;</span>, <span class="hljs-string">&#x27;../core-js/symbol&#x27;</span>, <span class="hljs-string">&#x27;asyncIterator&#x27;</span>, <span class="hljs-string">&#x27;./_iter-define&#x27;</span>, <span class="hljs-string">&#x27;readyState&#x27;</span>, <span class="hljs-string">&#x27;saveFullPageData&#x27;</span>, <span class="hljs-string">&#x27;checkConsoleIsOpenHandler&#x27;</span>, <span class="hljs-string">&#x27;innerHeight&#x27;</span>, <span class="hljs-string">&#x27;getMainDom&#x27;</span>, <span class="hljs-string">&#x27;_pannel&#x27;</span>, <span class="hljs-string">&#x27;tracer&#x27;</span>, <span class="hljs-string">&#x27;smGetElByClassName&#x27;</span>, <span class="hljs-string">&#x27;./_object-keys&#x27;</span>, <span class="hljs-string">&#x27;getOwnPropertySymbols&#x27;</span>, <span class="hljs-string">&#x27;_config&#x27;</span>, <span class="hljs-string">&#x27;5080330BAQbPR&#x27;</span>, <span class="hljs-string">&#x27;preventDefault&#x27;</span>, <span class="hljs-string">&#x27;iterator&#x27;</span>, <span class="hljs-string">&#x27;getRootDom&#x27;</span>, <span class="hljs-string">&#x27;mouseEndX&#x27;</span>, <span class="hljs-string">&#x27;setAttribute&#x27;</span>, <span class="hljs-string">&#x27;./_object-pie&#x27;</span>, <span class="hljs-string">&#x27;data-index&#x27;</span>, <span class="hljs-string">&#x27;./_to-iobject&#x27;</span>, <span class="hljs-string">&#x27;deviceId&#x27;</span>, <span class="hljs-string">&#x27;background-position&#x27;</span>, <span class="hljs-string">&#x27;returnValue&#x27;</span>, <span class="hljs-string">&#x27;saveMouseData&#x27;</span>, <span class="hljs-string">&#x27;getPopupHtml&#x27;</span>, <span class="hljs-string">&#x27;channel&#x27;</span>, <span class="hljs-string">&#x27;initFreshEvent&#x27;</span>, <span class="hljs-string">&#x27;next&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha\x20shumei_captcha_mask\x20shumei_hide\x22&gt;&lt;/div&gt;&#x27;</span>, <span class="hljs-string">&#x27;fixSize&#x27;</span>, <span class="hljs-string">&#x27;checkResult&#x27;</span>, <span class="hljs-string">&#x27;initDom&#x27;</span>, <span class="hljs-string">&#x27;mousemoveDataTimer&#x27;</span>, <span class="hljs-string">&#x27;./_shared-key&#x27;</span>, <span class="hljs-string">&#x27;updateTplStatus&#x27;</span>, <span class="hljs-string">&#x27;./_to-length&#x27;</span>, <span class="hljs-string">&#x27;./_a-function&#x27;</span>, <span class="hljs-string">&#x27;cellectFullPageData&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_img_wrapper\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;./_ctx&#x27;</span>, <span class="hljs-string">&#x27;imageFreshBtnEl&#x27;</span>, <span class="hljs-string">&#x27;mouseRightClick&#x27;</span>, <span class="hljs-string">&#x27;getDefaultHtml&#x27;</span>, <span class="hljs-string">&#x27;获取配置参数异常&#x27;</span>, <span class="hljs-string">&#x27;host&#x27;</span>, <span class="hljs-string">&#x27;checkApi&#x27;</span>, <span class="hljs-string">&#x27;_data&#x27;</span>, <span class="hljs-string">&#x27;mouseData&#x27;</span>, <span class="hljs-string">&#x27;/ca/v1/fverify&#x27;</span>, <span class="hljs-string">&#x27;无感验证码,暂不支持:&#x27;</span>, <span class="hljs-string">&#x27;floatOverHandler&#x27;</span>, <span class="hljs-string">&#x27;./_to-primitive&#x27;</span>, <span class="hljs-string">&#x27;base64Decode&#x27;</span>, <span class="hljs-string">&#x27;iframe&#x27;</span>, <span class="hljs-string">&#x27;opr&#x27;</span>, <span class="hljs-string">&#x27;mouseRightClickData&#x27;</span>, <span class="hljs-string">&#x27;zh-cn&#x27;</span>, <span class="hljs-string">&#x27;extend&#x27;</span>, <span class="hljs-string">&#x27;./_string-at&#x27;</span>, <span class="hljs-string">&#x27;SMSdk&#x27;</span>, <span class="hljs-string">&#x27;fixIE&#x27;</span>, <span class="hljs-string">&#x27;../../modules/es6.object.define-property&#x27;</span>, <span class="hljs-string">&#x27;enableCaptcha&#x27;</span>, <span class="hljs-string">&#x27;babel-runtime/core-js/get-iterator&#x27;</span>, <span class="hljs-string">&#x27;symbols&#x27;</span>, <span class="hljs-string">&#x27;detachEvent&#x27;</span>, <span class="hljs-string">&#x27;closeBtnEl&#x27;</span>, <span class="hljs-string">&#x27;fpMousemoveY&#x27;</span>, <span class="hljs-string">&#x27;console&#x27;</span>, <span class="hljs-string">&#x27;outerHeight&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_slide_slot\x22&gt;&lt;/div&gt;&#x27;</span>, <span class="hljs-string">&#x27;documentElement&#x27;</span>, <span class="hljs-string">&#x27;__webdriver_script_func&#x27;</span>, <span class="hljs-string">&#x27;toStringTag&#x27;</span>, <span class="hljs-string">&#x27;Config\x20load\x20failure&#x27;</span>, <span class="hljs-string">&#x27;TextTrackList,TouchList&#x27;</span>, <span class="hljs-string">&#x27;all&#x27;</span>, <span class="hljs-string">&#x27;isInitialized&#x27;</span>, <span class="hljs-string">&#x27;order&#x27;</span>, <span class="hljs-string">&#x27;show&#x27;</span>, <span class="hljs-string">&#x27;../pkg/smImagesConf&#x27;</span>, <span class="hljs-string">&#x27;加载失败&#x27;</span>, <span class="hljs-string">&#x27;./_object-gpo&#x27;</span>, <span class="hljs-string">&#x27;Css\x20load\x20failure&#x27;</span>, <span class="hljs-string">&#x27;./smLangMessage&#x27;</span>, <span class="hljs-string">&#x27;buildTpl&#x27;</span>, <span class="hljs-string">&#x27;mouseLeftClick&#x27;</span>, <span class="hljs-string">&#x27;insensitiveHandler&#x27;</span>, <span class="hljs-string">&#x27;maskEl&#x27;</span>, <span class="hljs-string">&#x27;./_object-gopn-ext&#x27;</span>, <span class="hljs-string">&#x27;_errorCallback&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_insensitive_tips&#x27;</span>, <span class="hljs-string">&#x27;removeElement&#x27;</span>, <span class="hljs-string">&#x27;isArray&#x27;</span>, <span class="hljs-string">&#x27;_hidden&#x27;</span>, <span class="hljs-string">&#x27;smThrottle&#x27;</span>, <span class="hljs-string">&#x27;offsetTop&#x27;</span>, <span class="hljs-string">&#x27;pure&#x27;</span>, <span class="hljs-string">&#x27;Symbol\x20is\x20not\x20a\x20constructor!&#x27;</span>, <span class="hljs-string">&#x27;./_core&#x27;</span>, <span class="hljs-string">&#x27;insensitive_success&#x27;</span>, <span class="hljs-string">&#x27;htmlNetwork&#x27;</span>, <span class="hljs-string">&#x27;isRegisterInvalid&#x27;</span>, <span class="hljs-string">&#x27;http://&#x27;</span>, <span class="hljs-string">&#x27;driver&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_img_loaded_fg_wrapper\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;appId&#x27;</span>, <span class="hljs-string">&#x27;forEach&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_mask&#x27;</span>, <span class="hljs-string">&#x27;Params\x20invalid&#x27;</span>, <span class="hljs-string">&#x27;0px&#x27;</span>, <span class="hljs-string">&#x27;./_set-to-string-tag&#x27;</span>, <span class="hljs-string">&#x27;\x20is\x20not\x20iterable!&#x27;</span>, <span class="hljs-string">&#x27;./_dom-create&#x27;</span>, <span class="hljs-string">&#x27;DataTimer&#x27;</span>, <span class="hljs-string">&#x27;./_array-includes&#x27;</span>, <span class="hljs-string">&#x27;mouseMoveX&#x27;</span>, <span class="hljs-string">&#x27;image&#x27;</span>, <span class="hljs-string">&#x27;@@iterator&#x27;</span>, <span class="hljs-string">&#x27;getIteratorMethod&#x27;</span>, <span class="hljs-string">&#x27;chrome&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_img_loaded_fg_wrapper&#x27;</span>, <span class="hljs-string">&#x27;img&#x27;</span>, <span class="hljs-string">&#x27;/ca/v2/fverify&#x27;</span>, <span class="hljs-string">&#x27;fpMouseLeftClickX&#x27;</span>, <span class="hljs-string">&#x27;get&#x27;</span>, <span class="hljs-string">&#x27;fromCharCode&#x27;</span>, <span class="hljs-string">&#x27;_successCallback&#x27;</span>, <span class="hljs-string">&#x27;\x22\x20/&gt;&#x27;</span>, <span class="hljs-string">&#x27;popup&#x27;</span>, <span class="hljs-string">&#x27;offsetParent&#x27;</span>, <span class="hljs-string">&#x27;mouseStartY&#x27;</span>, <span class="hljs-string">&#x27;detail&#x27;</span>, <span class="hljs-string">&#x27;value&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_img_load_error_tips\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;_captcha&#x27;</span>, <span class="hljs-string">&#x27;toLocaleLowerCase&#x27;</span>, <span class="hljs-string">&#x27;./_iterators&#x27;</span>, <span class="hljs-string">&#x27;fVerifyUrlV2&#x27;</span>, <span class="hljs-string">&#x27;floatImagePosition&#x27;</span>, <span class="hljs-string">&#x27;../pkg/smObject&#x27;</span>, <span class="hljs-string">&#x27;getElementsByTagName&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_img_loaded_bg_wrapper&#x27;</span>, <span class="hljs-string">&#x27;slide_hover&#x27;</span>, <span class="hljs-string">&#x27;none&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_form_result\x20shumei_hide&#x27;</span>, <span class="hljs-string">&#x27;default&#x27;</span>, <span class="hljs-string">&#x27;\x20Iterator&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_insensitive_wrapper\x20insensitive_disabled\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;updateAnswerHtml&#x27;</span>, <span class="hljs-string">&#x27;overHandler&#x27;</span>, <span class="hljs-string">&#x27;请依次点击&#x27;</span>, <span class="hljs-string">&#x27;observable&#x27;</span>, <span class="hljs-string">&#x27;Load\x20failure&#x27;</span>, <span class="hljs-string">&#x27;call&#x27;</span>, <span class="hljs-string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span>, <span class="hljs-string">&#x27;getDeviceId&#x27;</span>, <span class="hljs-string">&#x27;webdriver&#x27;</span>, <span class="hljs-string">&#x27;../pkg/smCaptcha&#x27;</span>, <span class="hljs-string">&#x27;getInsensitiveCaTypeApi&#x27;</span>, <span class="hljs-string">&#x27;sshummei&#x27;</span>, <span class="hljs-string">&#x27;/pr/v1.0.1/img/bg-default.png&#x27;</span>, <span class="hljs-string">&#x27;rid&#x27;</span>, <span class="hljs-string">&#x27;insensitive_fail&#x27;</span>, <span class="hljs-string">&#x27;web&#x27;</span>, <span class="hljs-string">&#x27;__userConf&#x27;</span>, <span class="hljs-string">&#x27;shumei_hide&#x27;</span>, <span class="hljs-string">&#x27;__nightmare&#x27;</span>, <span class="hljs-string">&#x27;__selenium_evaluate&#x27;</span>, <span class="hljs-string">&#x27;Cannot\x20find\x20module\x20\x27&#x27;</span>, <span class="hljs-string">&#x27;loadImages&#x27;</span>, <span class="hljs-string">&#x27;join&#x27;</span>, <span class="hljs-string">&#x27;footFreshBtnEl&#x27;</span>, <span class="hljs-string">&#x27;undefined&#x27;</span>, <span class="hljs-string">&#x27;absolute&#x27;</span>, <span class="hljs-string">&#x27;onClose&#x27;</span>, <span class="hljs-string">&#x27;fixProductSuccessStatus&#x27;</span>, <span class="hljs-string">&#x27;sdkver&#x27;</span>, <span class="hljs-string">&#x27;scrollLeft&#x27;</span>, <span class="hljs-string">&#x27;loadCss&#x27;</span>, <span class="hljs-string">&#x27;floatOutHandler&#x27;</span>, <span class="hljs-string">&#x27;smStringify&#x27;</span>, <span class="hljs-string">&#x27;success&#x27;</span>, <span class="hljs-string">&#x27;boolean&#x27;</span>, <span class="hljs-string">&#x27;values&#x27;</span>, <span class="hljs-string">&#x27;document.F=Object&#x27;</span>, <span class="hljs-string">&#x27;../../modules/es7.symbol.observable&#x27;</span>, <span class="hljs-string">&#x27;imageLoadedFgEl&#x27;</span>, <span class="hljs-string">&#x27;\x20\x20\x20\x20\x20\x20\x20\x20&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha\x20shumei_captcha_wrapper\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;onresize&#x27;</span>, <span class="hljs-string">&#x27;SERVER_ERROR&#x27;</span>, <span class="hljs-string">&#x27;endTime&#x27;</span>, <span class="hljs-string">&#x27;./_is-object&#x27;</span>, <span class="hljs-string">&#x27;registCaptcha&#x27;</span>, <span class="hljs-string">&#x27;isWidthInvalid&#x27;</span>, <span class="hljs-string">&#x27;captchaTypeUrl&#x27;</span>, <span class="hljs-string">&#x27;cache_&#x27;</span>, <span class="hljs-string">&#x27;outHandler&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_footer_close_btn\x22&gt;&lt;/div&gt;&#x27;</span>, <span class="hljs-string">&#x27;loading&#x27;</span>, <span class="hljs-string">&#x27;indexOf&#x27;</span>, <span class="hljs-string">&#x27;location&#x27;</span>, <span class="hljs-string">&#x27;insensitiveProduct&#x27;</span>, <span class="hljs-string">&#x27;resetPosition&#x27;</span>, <span class="hljs-string">&#x27;Undefined&#x27;</span>, <span class="hljs-string">&#x27;javascript:&#x27;</span>, <span class="hljs-string">&#x27;concat&#x27;</span>, <span class="hljs-string">&#x27;keyboardData&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_slide_process\x22&gt;&lt;/div&gt;&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_img_loadding_wrapper\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;./_to-absolute-index&#x27;</span>, <span class="hljs-string">&#x27;./_redefine&#x27;</span>, <span class="hljs-string">&#x27;changeRefreshBtnStatus&#x27;</span>, <span class="hljs-string">&#x27;push&#x27;</span>, <span class="hljs-string">&#x27;keyboardDataTimer&#x27;</span>, <span class="hljs-string">&#x27;createElement&#x27;</span>, <span class="hljs-string">&#x27;backgroundImage&#x27;</span>, <span class="hljs-string">&#x27;onerror&#x27;</span>, <span class="hljs-string">&#x27;write&#x27;</span>, <span class="hljs-string">&#x27;VERSION&#x27;</span>, <span class="hljs-string">&#x27;mouseRightClickDataTimer&#x27;</span>, <span class="hljs-string">&#x27;_Selenium_IDE_Recorder&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_img_loaded_bg_wrapper\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;splice&#x27;</span>, <span class="hljs-string">&#x27;getAttribute&#x27;</span>, <span class="hljs-string">&#x27;IE_PROTO&#x27;</span>, <span class="hljs-string">&#x27;url(\x27./img/pixel.gif\x27)&#x27;</span>, <span class="hljs-string">&#x27;appendTo参数异常&#x27;</span>, <span class="hljs-string">&#x27;clientX&#x27;</span>, <span class="hljs-string">&#x27;DEFAULT&#x27;</span>, <span class="hljs-string">&#x27;./smObject&#x27;</span>, <span class="hljs-string">&#x27;changeImageStatus&#x27;</span>, <span class="hljs-string">&#x27;./_descriptors&#x27;</span>, <span class="hljs-string">&#x27;keys&#x27;</span>, <span class="hljs-string">&#x27;sm_&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_insensitive_icon\x22&gt;&lt;/div&gt;&#x27;</span>, <span class="hljs-string">&#x27;initOnceEvent&#x27;</span>, <span class="hljs-string">&#x27;selectPosData&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_img_loaded_wrapper&#x27;</span>, <span class="hljs-string">&#x27;domain&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_popup_wrapper&#x27;</span>, <span class="hljs-string">&#x27;mode&#x27;</span>, <span class="hljs-string">&#x27;Cannot\x20call\x20a\x20class\x20as\x20a\x20function&#x27;</span>, <span class="hljs-string">&#x27;./img/pixel.gif&#x27;</span>, <span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_slide_tips\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;%;left:&#x27;</span>, <span class="hljs-string">&#x27;__webdriver_unwrapped&#x27;</span>, <span class="hljs-string">&#x27;endHandler&#x27;</span>, <span class="hljs-string">&#x27;SDKVER&#x27;</span>, <span class="hljs-string">&#x27;../pkg/smLangMessage&#x27;</span>, <span class="hljs-string">&#x27;imageLoadedEl&#x27;</span>, <span class="hljs-string">&#x27;Succeeded&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_img_load_error_wrapper&#x27;</span>, <span class="hljs-string">&#x27;e95f7375&#x27;</span>, <span class="hljs-string">&#x27;exports&#x27;</span>, <span class="hljs-string">&#x27;valueOf&#x27;</span>, <span class="hljs-string">&#x27;getEncryptContent&#x27;</span>, <span class="hljs-string">&#x27;mouseLeftClickData&#x27;</span>, <span class="hljs-string">&#x27;./smUtils&#x27;</span>, <span class="hljs-string">&#x27;__driver_evaluate&#x27;</span>, <span class="hljs-string">&#x27;runBotDetection&#x27;</span>, <span class="hljs-string">&#x27;__fxdriver_evaluate&#x27;</span>, <span class="hljs-string">&#x27;replace&#x27;</span>, <span class="hljs-string">&#x27;../../modules/es7.symbol.async-iterator&#x27;</span>, <span class="hljs-string">&#x27;userAgent&#x27;</span>, <span class="hljs-string">&#x27;loading...&#x27;</span>, <span class="hljs-string">&#x27;meta&#x27;</span>, <span class="hljs-string">&#x27;getElementById&#x27;</span>, <span class="hljs-string">&#x27;1.0.1&#x27;</span>, <span class="hljs-string">&#x27;Network\x20failure&#x27;</span>, <span class="hljs-string">&#x27;store&#x27;</span>, <span class="hljs-string">&#x27;length&#x27;</span>, <span class="hljs-string">&#x27;split&#x27;</span>, <span class="hljs-string">&#x27;src&#x27;</span>, <span class="hljs-string">&#x27;../modules/web.dom.iterable&#x27;</span>, <span class="hljs-string">&#x27;trackerDomain&#x27;</span>, <span class="hljs-string">&#x27;slideBtnEl&#x27;</span>, <span class="hljs-string">&#x27;preventDefaultHandler&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_img_load_error_wrapper\x20shumei_hide\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;_buildErrorHtml&#x27;</span>, <span class="hljs-string">&#x27;Accessors\x20not\x20supported!&#x27;</span>, <span class="hljs-string">&#x27;pageX&#x27;</span>, <span class="hljs-string">&#x27;code&#x27;</span>, <span class="hljs-string">&#x27;wks&#x27;</span>, <span class="hljs-string">&#x27;/exception&#x27;</span>, <span class="hljs-string">&#x27;insensitiveEl&#x27;</span>, <span class="hljs-string">&#x27;Can\x27t\x20convert\x20object\x20to\x20primitive\x20value&#x27;</span>, <span class="hljs-string">&#x27;../core-js/symbol/iterator&#x27;</span>, <span class="hljs-string">&#x27;advance&#x27;</span>, <span class="hljs-string">&#x27;./smEncrypt&#x27;</span>, <span class="hljs-string">&#x27;touchend&#x27;</span>, <span class="hljs-string">&#x27;startRequestTime&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_footer_refresh_btn\x22&gt;&lt;/div&gt;&#x27;</span>, <span class="hljs-string">&#x27;&lt;span\x20class=\x22shumei_captcha_network_timeout\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;mouseout&#x27;</span>, <span class="hljs-string">&#x27;touches&#x27;</span>, <span class="hljs-string">&#x27;selectData&#x27;</span>, <span class="hljs-string">&#x27;../../modules/es6.symbol&#x27;</span>, <span class="hljs-string">&#x27;./_object-gops&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;getOs&#x27;</span>, <span class="hljs-string">&#x27;css&#x27;</span>, <span class="hljs-string">&#x27;object&#x27;</span>, <span class="hljs-string">&#x27;:&amp;nbsp;&amp;nbsp;\x20&lt;img\x20src=\x22&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_img_refresh_btn&#x27;</span>, <span class="hljs-string">&#x27;reset&#x27;</span>, <span class="hljs-string">&#x27;insensitive&#x27;</span>, <span class="hljs-string">&#x27;\x27,\x20sizingMethod=\x27crop\x27)&#x27;</span>, <span class="hljs-string">&#x27;pageYOffset&#x27;</span>, <span class="hljs-string">&#x27;reload&#x27;</span>, <span class="hljs-string">&#x27;normalizeQuery&#x27;</span>, <span class="hljs-string">&#x27;mouseup&#x27;</span>, <span class="hljs-string">&#x27;getOwnPropertyDescriptor&#x27;</span>, <span class="hljs-string">&#x27;substr&#x27;</span>, <span class="hljs-string">&#x27;refreshHandler&#x27;</span>, <span class="hljs-string">&#x27;imageLoadErrorEl&#x27;</span>, <span class="hljs-string">&#x27;42px&#x27;</span>, <span class="hljs-string">&#x27;_phantom&#x27;</span>, <span class="hljs-string">&#x27;random&#x27;</span>, <span class="hljs-string">&#x27;maxTouchPoints&#x27;</span>, <span class="hljs-string">&#x27;slide_disabled&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_slide_wrapper&#x27;</span>, <span class="hljs-string">&#x27;String&#x27;</span>, <span class="hljs-string">&#x27;mousedown&#x27;</span>, <span class="hljs-string">&#x27;core-js/library/fn/get-iterator&#x27;</span>, <span class="hljs-string">&#x27;__defineGetter__&#x27;</span>, <span class="hljs-string">&#x27;_closeCallback&#x27;</span>, <span class="hljs-string">&#x27;/pr/v1.0.1/img/bg-network.png&#x27;</span>, <span class="hljs-string">&#x27;maskBindClose&#x27;</span>, <span class="hljs-string">&#x27;Can\x27t\x20call\x20method\x20on\x20\x20&#x27;</span>, <span class="hljs-string">&#x27;__fxdriver_unwrapped&#x27;</span>, <span class="hljs-string">&#x27;fpMouseRightClickY&#x27;</span>, <span class="hljs-string">&#x27;tipsMessage&#x27;</span>, <span class="hljs-string">&#x27;c237ed87&#x27;</span>, <span class="hljs-string">&#x27;toString&#x27;</span>, <span class="hljs-string">&#x27;slideProcessEl&#x27;</span>, <span class="hljs-string">&#x27;charset&#x27;</span>, <span class="hljs-string">&#x27;./_defined&#x27;</span>, <span class="hljs-string">&#x27;apply&#x27;</span>, <span class="hljs-string">&#x27;rootDom&#x27;</span>, <span class="hljs-string">&#x27;babel-runtime/helpers/typeof&#x27;</span>, <span class="hljs-string">&#x27;b35e036d&#x27;</span>, <span class="hljs-string">&#x27;Object&#x27;</span>, <span class="hljs-string">&#x27;seq_select&#x27;</span>, <span class="hljs-string">&#x27;event&#x27;</span>, <span class="hljs-string">&#x27;_formDom&#x27;</span>, <span class="hljs-string">&#x27;defineProperty&#x27;</span>, <span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-string">&#x27;navigator&#x27;</span>, <span class="hljs-string">&#x27;attachEvent&#x27;</span>, <span class="hljs-string">&#x27;\x20is\x20not\x20a\x20symbol!&#x27;</span>, <span class="hljs-string">&#x27;./_has&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_slide_tips_wrapper&#x27;</span>, <span class="hljs-string">&#x27;./_object-dp&#x27;</span>, <span class="hljs-string">&#x27;&lt;a\x20href=\x22###\x22\x20class=\x22shumei_captcha_reload_btn\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;9111300cSYCkJ&#x27;</span>, <span class="hljs-string">&#x27;fpMouseClickHandler&#x27;</span>, <span class="hljs-string">&#x27;appVersion&#x27;</span>, <span class="hljs-string">&#x27;9rqwdRl&#x27;</span>, <span class="hljs-string">&#x27;Javascript\x20load\x20failure&#x27;</span>, <span class="hljs-string">&#x27;fpMousemoveHandler&#x27;</span>, <span class="hljs-string">&#x27;height&#x27;</span>, <span class="hljs-string">&#x27;378641b2&#x27;</span>, <span class="hljs-string">&#x27;protocol&#x27;</span>, <span class="hljs-string">&#x27;getJSONP&#x27;</span>, <span class="hljs-string">&#x27;addEventListener&#x27;</span>, <span class="hljs-string">&#x27;./_object-gopd&#x27;</span>, <span class="hljs-string">&#x27;mouse&#x27;</span>, <span class="hljs-string">&#x27;Array&#x27;</span>, <span class="hljs-string">&#x27;match&#x27;</span>, <span class="hljs-string">&#x27;closeHandler&#x27;</span>, <span class="hljs-string">&#x27;./_an-object&#x27;</span>, <span class="hljs-string">&#x27;float&#x27;</span>, <span class="hljs-string">&#x27;low&#x27;</span>, <span class="hljs-string">&#x27;appendChild&#x27;</span>, <span class="hljs-string">&#x27;parentNode&#x27;</span>, <span class="hljs-string">&#x27;getElementByClassName&#x27;</span>, <span class="hljs-string">&#x27;:&amp;nbsp;&amp;nbsp;&#x27;</span>, <span class="hljs-string">&#x27;scrollTop&#x27;</span>, <span class="hljs-string">&#x27;MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,&#x27;</span>, <span class="hljs-string">&#x27;185af0e6&#x27;</span>, <span class="hljs-string">&#x27;onSuccess&#x27;</span>, <span class="hljs-string">&#x27;./_shared&#x27;</span>, <span class="hljs-string">&#x27;setResult&#x27;</span>, <span class="hljs-string">&#x27;禁用验证码失败&#x27;</span>, <span class="hljs-string">&#x27;hasOwnProperty&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_insensitive_wrapper&#x27;</span>, <span class="hljs-string">&#x27;slideTipsEl&#x27;</span>, <span class="hljs-string">&#x27;closePanelEvent&#x27;</span>, <span class="hljs-string">&#x27;select&#x27;</span>, <span class="hljs-string">&#x27;touchstart&#x27;</span>, <span class="hljs-string">&#x27;rversion&#x27;</span>, <span class="hljs-string">&#x27;registerUrl&#x27;</span>, <span class="hljs-string">&#x27;6272765GdSyoe&#x27;</span>, <span class="hljs-string">&#x27;appendTo&#x27;</span>, <span class="hljs-string">&#x27;saveEventList&#x27;</span>, <span class="hljs-string">&#x27;./_object-dps&#x27;</span>, <span class="hljs-string">&#x27;hover&#x27;</span>, <span class="hljs-string">&#x27;mousemove&#x27;</span>, <span class="hljs-string">&#x27;./_to-object&#x27;</span>, <span class="hljs-string">&#x27;trueHeight&#x27;</span>, <span class="hljs-string">&#x27;document&#x27;</span>, <span class="hljs-string">&#x27;ceil&#x27;</span>, <span class="hljs-string">&#x27;spatial_select&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_img_loadding_wrapper&#x27;</span>, <span class="hljs-string">&#x27;imageLoadingEl&#x27;</span>, <span class="hljs-string">&#x27;enumerable&#x27;</span>, <span class="hljs-string">&#x27;width&#x27;</span>, <span class="hljs-string">&#x27;slide_fail&#x27;</span>, <span class="hljs-string">&#x27;f96c1d84&#x27;</span>, <span class="hljs-string">&#x27;captchaTypeDomains&#x27;</span>, <span class="hljs-string">&#x27;loadScript&#x27;</span>, <span class="hljs-string">&#x27;rel&#x27;</span>, <span class="hljs-string">&#x27;_bindNetworkEvent&#x27;</span>, <span class="hljs-string">&#x27;global&#x27;</span>, <span class="hljs-string">&#x27;filter&#x27;</span>, <span class="hljs-string">&#x27;./_export&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_footer_close_btn&#x27;</span>, <span class="hljs-string">&#x27;fixProduct&#x27;</span>, <span class="hljs-string">&#x27;log&#x27;</span>, <span class="hljs-string">&#x27;checkCallback&#x27;</span>, <span class="hljs-string">&#x27;contentWindow&#x27;</span>, <span class="hljs-string">&#x27;./_meta&#x27;</span>, <span class="hljs-string">&#x27;changePannelStatus&#x27;</span>, <span class="hljs-string">&#x27;logError&#x27;</span>, <span class="hljs-string">&#x27;trueWidth&#x27;</span>, <span class="hljs-string">&#x27;innerHTML&#x27;</span>, <span class="hljs-string">&#x27;onselectstart&#x27;</span>, <span class="hljs-string">&#x27;toLowerCase&#x27;</span>, <span class="hljs-string">&#x27;/pr/v1.0.1/img/icon-cry.png&#x27;</span>, <span class="hljs-string">&#x27;/ca/v1/conf&#x27;</span>, <span class="hljs-string">&#x27;setRegisterData&#x27;</span>, <span class="hljs-string">&#x27;symbol&#x27;</span>, <span class="hljs-string">&#x27;removeEvent&#x27;</span>, <span class="hljs-string">&#x27;insensitiveMode&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_img_refresh_btn\x22&gt;&lt;/div&gt;&#x27;</span>, <span class="hljs-string">&#x27;../core-js/object/define-property&#x27;</span>, <span class="hljs-string">&#x27;2.6.10&#x27;</span>, <span class="hljs-string">&#x27;startTime&#x27;</span>, <span class="hljs-string">&#x27;clientWidth&#x27;</span>, <span class="hljs-string">&#x27;JSON&#x27;</span>, <span class="hljs-string">&#x27;fgEl&#x27;</span>, <span class="hljs-string">&#x27;makeURL&#x27;</span>, <span class="hljs-string">&#x27;/pr/v1.0.1/img/icon-default-square.png&#x27;</span>, <span class="hljs-string">&#x27;string&#x27;</span>, <span class="hljs-string">&#x27;./smLoad&#x27;</span>, <span class="hljs-string">&#x27;intervalTimer&#x27;</span>, <span class="hljs-string">&#x27;initEvent&#x27;</span>, <span class="hljs-string">&#x27;captcha.fengkongcloud.com&#x27;</span>, <span class="hljs-string">&#x27;getConsoleBywindowSize&#x27;</span>, <span class="hljs-string">&#x27;ondragstart&#x27;</span>, <span class="hljs-string">&#x27;./_iter-step&#x27;</span>, <span class="hljs-string">&#x27;complete&#x27;</span>, <span class="hljs-string">&#x27;_obj&#x27;</span>, <span class="hljs-string">&#x27;isNumber&#x27;</span>, <span class="hljs-string">&#x27;defineProperties&#x27;</span>, <span class="hljs-string">&#x27;registerApiInvalid&#x27;</span>, <span class="hljs-string">&#x27;MODULE_NOT_FOUND&#x27;</span>, <span class="hljs-string">&#x27;1293400zAmyye&#x27;</span>, <span class="hljs-string">&#x27;slide&#x27;</span>, <span class="hljs-string">&#x27;_readyCallback&#x27;</span>, <span class="hljs-string">&#x27;__key&#x27;</span>, <span class="hljs-string">&#x27;function&#x27;</span>, <span class="hljs-string">&#x27;errorTips&#x27;</span>, <span class="hljs-string">&#x27;compatMode&#x27;</span>, <span class="hljs-string">&#x27;disabled&#x27;</span>, <span class="hljs-string">&#x27;&amp;nbsp;&#x27;</span>, <span class="hljs-string">&#x27;preventExtensions&#x27;</span>, <span class="hljs-string">&#x27;./_enum-bug-keys&#x27;</span>, <span class="hljs-string">&#x27;blockWidth&#x27;</span>, <span class="hljs-string">&#x27;removeClass&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_img_wrapper&#x27;</span>, <span class="hljs-string">&#x27;selectPlaceholder&#x27;</span>, <span class="hljs-string">&#x27;select_fail&#x27;</span>, <span class="hljs-string">&#x27;getSlidePopupHtml&#x27;</span>, <span class="hljs-string">&#x27;className&#x27;</span>, <span class="hljs-string">&#x27;insensitive_disabled&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_wrapper&#x27;</span>, <span class="hljs-string">&#x27;./_iter-create&#x27;</span>, <span class="hljs-string">&#x27;FIREFOX&#x27;</span>, <span class="hljs-string">&#x27;moveHandler&#x27;</span>, <span class="hljs-string">&#x27;./_cof&#x27;</span>, <span class="hljs-string">&#x27;./_hide&#x27;</span>, <span class="hljs-string">&#x27;top&#x27;</span>, <span class="hljs-string">&#x27;removeEventListener&#x27;</span>, <span class="hljs-string">&#x27;./_iobject&#x27;</span>, <span class="hljs-string">&#x27;keyup&#x27;</span>, <span class="hljs-string">&#x27;/pr/v1.0.1/img/icon-refresh.png&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_slide_tips&#x27;</span>, <span class="hljs-string">&#x27;参数不合法&#x27;</span>, <span class="hljs-string">&#x27;getRegisterData&#x27;</span>, <span class="hljs-string">&#x27;\x22&gt;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20&lt;div\x20class=\x22answer_content\x22\x20data-index=\x22&#x27;</span>, <span class="hljs-string">&#x27;isObject&#x27;</span>, <span class="hljs-string">&#x27;52px&#x27;</span>, <span class="hljs-string">&#x27;common&#x27;</span>, <span class="hljs-string">&#x27;type&#x27;</span>, <span class="hljs-string">&#x27;slideWidth&#x27;</span>, <span class="hljs-string">&#x27;script&#x27;</span>, <span class="hljs-string">&#x27;icon_select&#x27;</span>, <span class="hljs-string">&#x27;fpMouseRightClickX&#x27;</span>, <span class="hljs-string">&#x27;innerWidth&#x27;</span>, <span class="hljs-string">&#x27;393413myYAvS&#x27;</span>, <span class="hljs-string">&#x27;/pr/v1.0.1/img/icon-default.png&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_loaded_img_bg&#x27;</span>, <span class="hljs-string">&#x27;REJECT&#x27;</span>, <span class="hljs-string">&#x27;product&#x27;</span>, <span class="hljs-string">&#x27;getResult&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha\x20shumei_captcha_popup_wrapper\x20shumei_hide\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_answer\x22\x20style=\x22top:&#x27;</span>, <span class="hljs-string">&#x27;PASS&#x27;</span>, <span class="hljs-string">&#x27;fixConfig&#x27;</span>, <span class="hljs-string">&#x27;fpMouseLeftClickY&#x27;</span>, <span class="hljs-string">&#x27;./_object-gopn&#x27;</span>, <span class="hljs-string">&#x27;propertyIsEnumerable&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_input_rid&#x27;</span>, <span class="hljs-string">&#x27;getOwnPropertyNames&#x27;</span>, <span class="hljs-string">&#x27;/pr/v1.0.1/img/icon-close.png&#x27;</span>, <span class="hljs-string">&#x27;auto_slide&#x27;</span>, <span class="hljs-string">&#x27;fail&#x27;</span>, <span class="hljs-string">&#x27;outerWidth&#x27;</span>, <span class="hljs-string">&#x27;CSS资源加载失败&#x27;</span>, <span class="hljs-string">&#x27;__esModule&#x27;</span>, <span class="hljs-string">&#x27;DES&#x27;</span>, <span class="hljs-string">&#x27;_each&#x27;</span>, <span class="hljs-string">&#x27;/pr/v1.0.1/img/bg-loading.png&#x27;</span>, <span class="hljs-string">&#x27;loadImage&#x27;</span>, <span class="hljs-string">&#x27;input&#x27;</span>, <span class="hljs-string">&#x27;./_enum-keys&#x27;</span>, <span class="hljs-string">&#x27;touchmove&#x27;</span>, <span class="hljs-string">&#x27;https://&#x27;</span>, <span class="hljs-string">&#x27;&lt;font&gt;&#x27;</span>, <span class="hljs-string">&#x27;getMouseAction&#x27;</span>, <span class="hljs-string">&#x27;66549370&#x27;</span>, <span class="hljs-string">&#x27;clearEvent&#x27;</span>, <span class="hljs-string">&#x27;Firebug&#x27;</span>, <span class="hljs-string">&#x27;verify&#x27;</span>, <span class="hljs-string">&#x27;./_wks-define&#x27;</span>, <span class="hljs-string">&#x27;babel-runtime/helpers/classCallCheck&#x27;</span>, <span class="hljs-string">&#x27;/pr/v1.0.1/img/icon-popup-refresh.png&#x27;</span>, <span class="hljs-string">&#x27;registerApi&#x27;</span>, <span class="hljs-string">&#x27;insensitiveHandlerCallback&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_slide_btn\x22&gt;&lt;/div&gt;&#x27;</span>, <span class="hljs-string">&#x27;web_mobile&#x27;</span>, <span class="hljs-string">&#x27;slice&#x27;</span>, <span class="hljs-string">&#x27;selectSeqPlaceholder&#x27;</span>, <span class="hljs-string">&#x27;./_wks-ext&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_slide_process&#x27;</span>, <span class="hljs-string">&#x27;data&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_insensitive_tips_wrapper\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;left&#x27;</span>, <span class="hljs-string">&#x27;versions&#x27;</span>, <span class="hljs-string">&#x27;symbol-registry&#x27;</span>, <span class="hljs-string">&#x27;entries&#x27;</span>, <span class="hljs-string">&#x27;hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables&#x27;</span>, <span class="hljs-string">&#x27;Math&#x27;</span>, <span class="hljs-string">&#x27;./_uid&#x27;</span>, <span class="hljs-string">&#x27;6nkvOpS&#x27;</span>, <span class="hljs-string">&#x27;http&#x27;</span>, <span class="hljs-string">&#x27;imageEl&#x27;</span>, <span class="hljs-string">&#x27;网络请求异常&#x27;</span>, <span class="hljs-string">&#x27;relatedTarget&#x27;</span>, <span class="hljs-string">&#x27;toElement&#x27;</span>, <span class="hljs-string">&#x27;/pr/v1.0.1/img/icon-move.png&#x27;</span>, <span class="hljs-string">&#x27;constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf&#x27;</span>, <span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-string">&#x27;./_classof&#x27;</span>, <span class="hljs-string">&#x27;mouseStartX&#x27;</span>, <span class="hljs-string">&#x27;Arguments&#x27;</span>, <span class="hljs-string">&#x27;__webdriver_evaluate&#x27;</span>, <span class="hljs-string">&#x27;KEY&#x27;</span>, <span class="hljs-string">&#x27;findChild&#x27;</span>, <span class="hljs-string">&#x27;smDebounce&#x27;</span>, <span class="hljs-string">&#x27;external&#x27;</span>, <span class="hljs-string">&#x27;bindForm&#x27;</span>, <span class="hljs-string">&#x27;organization&#x27;</span>, <span class="hljs-string">&#x27;&lt;/div&gt;&#x27;</span>, <span class="hljs-string">&#x27;./_fails&#x27;</span>, <span class="hljs-string">&#x27;base64Encode&#x27;</span>, <span class="hljs-string">&#x27;charAt&#x27;</span>, <span class="hljs-string">&#x27;isIe678&#x27;</span>, <span class="hljs-string">&#x27;version&#x27;</span>, <span class="hljs-string">&#x27;charCodeAt&#x27;</span>, <span class="hljs-string">&#x27;点击完成验证&#x27;</span>, <span class="hljs-string">&#x27;keyboard&#x27;</span>, <span class="hljs-string">&#x27;virtual&#x27;</span>, <span class="hljs-string">&#x27;getMousePos&#x27;</span>, <span class="hljs-string">&#x27;CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,&#x27;</span>, <span class="hljs-string">&#x27;customData&#x27;</span>, <span class="hljs-string">&#x27;setRootDom&#x27;</span>, <span class="hljs-string">&#x27;removeChild&#x27;</span>, <span class="hljs-string">&#x27;answer_content&#x27;</span>, <span class="hljs-string">&#x27;BackCompat&#x27;</span>, <span class="hljs-string">&#x27;network&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_captcha_insensitive_tips\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;href&#x27;</span>, <span class="hljs-string">&#x27;mouseMoveY&#x27;</span>, <span class="hljs-string">&#x27;getElementByTagName&#x27;</span>, <span class="hljs-string">&#x27;Please\x20click\x20in\x20order&#x27;</span>, <span class="hljs-string">&#x27;bindEvent&#x27;</span>, <span class="hljs-string">&#x27;toUpperCase&#x27;</span>, <span class="hljs-string">&#x27;&lt;div\x20class=\x22shumei_catpcha_footer_wrapper\x22&gt;&#x27;</span>, <span class="hljs-string">&#x27;mousemoveData&#x27;</span>, <span class="hljs-string">&#x27;null&#x27;</span>, <span class="hljs-string">&#x27;sliderPlaceholder&#x27;</span>, <span class="hljs-string">&#x27;../../modules/_wks-ext&#x27;</span>, <span class="hljs-string">&#x27;insensitive_default&#x27;</span>, <span class="hljs-string">&#x27;42VkoqeL&#x27;</span>, <span class="hljs-string">&#x27;slide_success&#x27;</span>, <span class="hljs-string">&#x27;__driver_unwrapped&#x27;</span>, <span class="hljs-string">&#x27;Null&#x27;</span>, <span class="hljs-string">&#x27;[object\x20Window]&#x27;</span>, <span class="hljs-string">&#x27;Image\x20load\x20failure&#x27;</span>, <span class="hljs-string">&#x27;act.os&#x27;</span>, <span class="hljs-string">&#x27;status&#x27;</span>, <span class="hljs-string">&#x27;registerData&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_footer_refresh_btn&#x27;</span>, <span class="hljs-string">&#x27;754047TlLDzZ&#x27;</span>, <span class="hljs-string">&#x27;answer_&#x27;</span>, <span class="hljs-string">&#x27;https&#x27;</span>, <span class="hljs-string">&#x27;getFullPageData&#x27;</span>, <span class="hljs-string">&#x27;return&#x27;</span>, <span class="hljs-string">&#x27;panelEl&#x27;</span>, <span class="hljs-string">&#x27;resetForm&#x27;</span>, <span class="hljs-string">&#x27;insensitiveTipsTextEl&#x27;</span>, <span class="hljs-string">&#x27;addClass&#x27;</span>, <span class="hljs-string">&#x27;create&#x27;</span>, <span class="hljs-string">&#x27;a7cedc03&#x27;</span>, <span class="hljs-string">&#x27;clientHeight&#x27;</span>, <span class="hljs-string">&#x27;getPrototypeOf&#x27;</span>, <span class="hljs-string">&#x27;images&#x27;</span>, <span class="hljs-string">&#x27;/ca/v1/register&#x27;</span>, <span class="hljs-string">&#x27;DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,&#x27;</span>, <span class="hljs-string">&#x27;\x20is\x20not\x20an\x20object!&#x27;</span>, <span class="hljs-string">&#x27;,\x20&lt;/font&gt;&#x27;</span>, <span class="hljs-string">&#x27;/pr/v1.0.1/img/icon-fail-square.png&#x27;</span>, <span class="hljs-string">&#x27;fpMousemoveX&#x27;</span>, <span class="hljs-string">&#x27;lang&#x27;</span>, <span class="hljs-string">&#x27;normalizePath&#x27;</span>, <span class="hljs-string">&#x27;getSelectPopupHtml&#x27;</span>, <span class="hljs-string">&#x27;fVerifyUrl&#x27;</span>, <span class="hljs-string">&#x27;shumei_show&#x27;</span>, <span class="hljs-string">&#x27;slideTipsTextEl&#x27;</span>, <span class="hljs-string">&#x27;done&#x27;</span>, <span class="hljs-string">&#x27;isBoolean&#x27;</span>, <span class="hljs-string">&#x27;./_wks&#x27;</span>, <span class="hljs-string">&#x27;Symbol&#x27;</span>, <span class="hljs-string">&#x27;JS-SDK资源加载失败&#x27;</span>, <span class="hljs-string">&#x27;callee&#x27;</span>, <span class="hljs-string">&#x27;pass&#x27;</span>, <span class="hljs-string">&#x27;./es6.array.iterator&#x27;</span>, <span class="hljs-string">&#x27;constructor&#x27;</span>, <span class="hljs-string">&#x27;ostype&#x27;</span>, <span class="hljs-string">&#x27;select_success&#x27;</span>, <span class="hljs-string">&#x27;mouseover&#x27;</span>, <span class="hljs-string">&#x27;../../modules/web.dom.iterable&#x27;</span>, <span class="hljs-string">&#x27;normalizeDomain&#x27;</span>, <span class="hljs-string">&#x27;../../modules/_core&#x27;</span>, <span class="hljs-string">&#x27;floatOutTimer&#x27;</span>, <span class="hljs-string">&#x27;重置失败&#x27;</span>, <span class="hljs-string">&#x27;mouseEndY&#x27;</span>, <span class="hljs-string">&#x27;./_object-keys-internal&#x27;</span>, <span class="hljs-string">&#x27;%;\x22\x20data-index=\x22&#x27;</span>, <span class="hljs-string">&#x27;disableCaptcha&#x27;</span>, <span class="hljs-string">&#x27;style&#x27;</span>, <span class="hljs-string">&#x27;isPc&#x27;</span>, <span class="hljs-string">&#x27;domains&#x27;</span>, <span class="hljs-string">&#x27;./_global&#x27;</span>, <span class="hljs-string">&#x27;3927144pvTgHN&#x27;</span>, <span class="hljs-string">&#x27;target&#x27;</span>, <span class="hljs-string">&#x27;excuteCallback&#x27;</span>, <span class="hljs-string">&#x27;selectHandler&#x27;</span>, <span class="hljs-string">&#x27;bind&#x27;</span>, <span class="hljs-string">&#x27;shumei_captcha_loaded_img_fg&#x27;</span>, <span class="hljs-string">&#x27;./_object-create&#x27;</span>, <span class="hljs-string">&#x27;errMsg&#x27;</span>, <span class="hljs-string">&#x27;&lt;/span&gt;&#x27;</span>, <span class="hljs-string">&#x27;100%&#x27;</span>, <span class="hljs-string">&#x27;__webdriver_script_fn&#x27;</span>, <span class="hljs-string">&#x27;min&#x27;</span>, <span class="hljs-string">&#x27;debug&#x27;</span>, <span class="hljs-string">&#x27;sort&#x27;</span>, <span class="hljs-string">&#x27;toPrimitive&#x27;</span>, <span class="hljs-string">&#x27;selenium&#x27;</span>, <span class="hljs-string">&#x27;async&#x27;</span>, <span class="hljs-string">&#x27;floor&#x27;</span>, <span class="hljs-string">&#x27;captcha.fengkongcloud.cn&#x27;</span>, <span class="hljs-string">&#x27;©\x202019\x20Denis\x20Pushkarev\x20(zloirock.ru)&#x27;</span>, <span class="hljs-string">&#x27;load&#x27;</span>, <span class="hljs-string">&#x27;getAutoSlidePopupHtml&#x27;</span>, <span class="hljs-string">&#x27;prototype&#x27;</span>, <span class="hljs-string">&#x27;onreadystatechange&#x27;</span>, <span class="hljs-string">&#x27;clearClassStatus&#x27;</span>];<br>    _0x4f4f = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">return</span> _0x2f6ed0;<br>    &#125;<br>    ;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">_0x4f4f</span>();<br>&#125;<br><br><br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">_0x24c03b, _0x49a50a</span>) &#123;<br>    <span class="hljs-keyword">var</span> _0x578ce4 = _0x14cd<br>        , _0x5a633a = <span class="hljs-title function_">_0x24c03b</span>();<br>    <span class="hljs-keyword">while</span> (!![]) &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-keyword">var</span> _0x3d924b = -<span class="hljs-built_in">parseInt</span>(<span class="hljs-title function_">_0x578ce4</span>(<span class="hljs-number">0x170</span>)) / <span class="hljs-number">0x1</span> + <span class="hljs-built_in">parseInt</span>(<span class="hljs-title function_">_0x578ce4</span>(<span class="hljs-number">0x27b</span>)) / <span class="hljs-number">0x2</span> * (<span class="hljs-built_in">parseInt</span>(<span class="hljs-title function_">_0x578ce4</span>(<span class="hljs-number">0x1b3</span>)) / <span class="hljs-number">0x3</span>) + -<span class="hljs-built_in">parseInt</span>(<span class="hljs-title function_">_0x578ce4</span>(<span class="hljs-number">0x173</span>)) / <span class="hljs-number">0x4</span> * (<span class="hljs-built_in">parseInt</span>(<span class="hljs-title function_">_0x578ce4</span>(<span class="hljs-number">0xe7</span>)) / <span class="hljs-number">0x5</span>) + <span class="hljs-built_in">parseInt</span>(<span class="hljs-title function_">_0x578ce4</span>(<span class="hljs-number">0x146</span>)) / <span class="hljs-number">0x6</span> * (<span class="hljs-built_in">parseInt</span>(<span class="hljs-title function_">_0x578ce4</span>(<span class="hljs-number">0x167</span>)) / <span class="hljs-number">0x7</span>) + -<span class="hljs-built_in">parseInt</span>(<span class="hljs-title function_">_0x578ce4</span>(<span class="hljs-number">0x2b9</span>)) / <span class="hljs-number">0x8</span> + -<span class="hljs-built_in">parseInt</span>(<span class="hljs-title function_">_0x578ce4</span>(<span class="hljs-number">0xd7</span>)) / <span class="hljs-number">0x9</span> * (-<span class="hljs-built_in">parseInt</span>(<span class="hljs-title function_">_0x578ce4</span>(<span class="hljs-number">0x2e5</span>)) / <span class="hljs-number">0xa</span>) + <span class="hljs-built_in">parseInt</span>(<span class="hljs-title function_">_0x578ce4</span>(<span class="hljs-number">0x26d</span>)) / <span class="hljs-number">0xb</span>;<br>            <span class="hljs-keyword">if</span> (_0x3d924b === _0x49a50a)<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">else</span><br>                _0x5a633a[<span class="hljs-string">&#x27;push&#x27;</span>](_0x5a633a[<span class="hljs-string">&#x27;shift&#x27;</span>]());<br>        &#125; <span class="hljs-keyword">catch</span> (_0x551df3) &#123;<br>            _0x5a633a[<span class="hljs-string">&#x27;push&#x27;</span>](_0x5a633a[<span class="hljs-string">&#x27;shift&#x27;</span>]());<br>        &#125;<br>    &#125;<br>&#125;(_0x1da0, <span class="hljs-number">0x3c323</span>))<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">_0x2ed682</span>(<span class="hljs-params">_0x519771</span>) &#123;<br>    <span class="hljs-keyword">var</span> _0x6b9184 = _0x14cd;<br><br>    <span class="hljs-keyword">var</span> _0x256417 = _0x6b9184<br>        ,<br>        _0x5ad9e8 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x0</span>, <span class="hljs-number">0x4</span>, <span class="hljs-number">0x20000000</span>, <span class="hljs-number">0x20000004</span>, <span class="hljs-number">0x10000</span>, <span class="hljs-number">0x10004</span>, <span class="hljs-number">0x20010000</span>, <span class="hljs-number">0x20010004</span>, <span class="hljs-number">0x200</span>, <span class="hljs-number">0x204</span>, <span class="hljs-number">0x20000200</span>, <span class="hljs-number">0x20000204</span>, <span class="hljs-number">0x10200</span>, <span class="hljs-number">0x10204</span>, <span class="hljs-number">0x20010200</span>, <span class="hljs-number">0x20010204</span>)<br>        ,<br>        _0x5380f4 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x0</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x100000</span>, <span class="hljs-number">0x100001</span>, <span class="hljs-number">0x4000000</span>, <span class="hljs-number">0x4000001</span>, <span class="hljs-number">0x4100000</span>, <span class="hljs-number">0x4100001</span>, <span class="hljs-number">0x100</span>, <span class="hljs-number">0x101</span>, <span class="hljs-number">0x100100</span>, <span class="hljs-number">0x100101</span>, <span class="hljs-number">0x4000100</span>, <span class="hljs-number">0x4000101</span>, <span class="hljs-number">0x4100100</span>, <span class="hljs-number">0x4100101</span>)<br>        ,<br>        _0x304f22 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x0</span>, <span class="hljs-number">0x8</span>, <span class="hljs-number">0x800</span>, <span class="hljs-number">0x808</span>, <span class="hljs-number">0x1000000</span>, <span class="hljs-number">0x1000008</span>, <span class="hljs-number">0x1000800</span>, <span class="hljs-number">0x1000808</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x8</span>, <span class="hljs-number">0x800</span>, <span class="hljs-number">0x808</span>, <span class="hljs-number">0x1000000</span>, <span class="hljs-number">0x1000008</span>, <span class="hljs-number">0x1000800</span>, <span class="hljs-number">0x1000808</span>)<br>        ,<br>        _0x262026 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x0</span>, <span class="hljs-number">0x200000</span>, <span class="hljs-number">0x8000000</span>, <span class="hljs-number">0x8200000</span>, <span class="hljs-number">0x2000</span>, <span class="hljs-number">0x202000</span>, <span class="hljs-number">0x8002000</span>, <span class="hljs-number">0x8202000</span>, <span class="hljs-number">0x20000</span>, <span class="hljs-number">0x220000</span>, <span class="hljs-number">0x8020000</span>, <span class="hljs-number">0x8220000</span>, <span class="hljs-number">0x22000</span>, <span class="hljs-number">0x222000</span>, <span class="hljs-number">0x8022000</span>, <span class="hljs-number">0x8222000</span>)<br>        ,<br>        _0x519f68 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x0</span>, <span class="hljs-number">0x40000</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x40010</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x40000</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x40010</span>, <span class="hljs-number">0x1000</span>, <span class="hljs-number">0x41000</span>, <span class="hljs-number">0x1010</span>, <span class="hljs-number">0x41010</span>, <span class="hljs-number">0x1000</span>, <span class="hljs-number">0x41000</span>, <span class="hljs-number">0x1010</span>, <span class="hljs-number">0x41010</span>)<br>        ,<br>        _0x1bfcdc = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x0</span>, <span class="hljs-number">0x400</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x420</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x400</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x420</span>, <span class="hljs-number">0x2000000</span>, <span class="hljs-number">0x2000400</span>, <span class="hljs-number">0x2000020</span>, <span class="hljs-number">0x2000420</span>, <span class="hljs-number">0x2000000</span>, <span class="hljs-number">0x2000400</span>, <span class="hljs-number">0x2000020</span>, <span class="hljs-number">0x2000420</span>)<br>        ,<br>        _0x420d1b = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x0</span>, <span class="hljs-number">0x10000000</span>, <span class="hljs-number">0x80000</span>, <span class="hljs-number">0x10080000</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x10000002</span>, <span class="hljs-number">0x80002</span>, <span class="hljs-number">0x10080002</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x10000000</span>, <span class="hljs-number">0x80000</span>, <span class="hljs-number">0x10080000</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x10000002</span>, <span class="hljs-number">0x80002</span>, <span class="hljs-number">0x10080002</span>)<br>        ,<br>        _0x4f1d0d = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x0</span>, <span class="hljs-number">0x10000</span>, <span class="hljs-number">0x800</span>, <span class="hljs-number">0x10800</span>, <span class="hljs-number">0x20000000</span>, <span class="hljs-number">0x20010000</span>, <span class="hljs-number">0x20000800</span>, <span class="hljs-number">0x20010800</span>, <span class="hljs-number">0x20000</span>, <span class="hljs-number">0x30000</span>, <span class="hljs-number">0x20800</span>, <span class="hljs-number">0x30800</span>, <span class="hljs-number">0x20020000</span>, <span class="hljs-number">0x20030000</span>, <span class="hljs-number">0x20020800</span>, <span class="hljs-number">0x20030800</span>)<br>        ,<br>        _0x25b7a5 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x0</span>, <span class="hljs-number">0x40000</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x40000</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x40002</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x40002</span>, <span class="hljs-number">0x2000000</span>, <span class="hljs-number">0x2040000</span>, <span class="hljs-number">0x2000000</span>, <span class="hljs-number">0x2040000</span>, <span class="hljs-number">0x2000002</span>, <span class="hljs-number">0x2040002</span>, <span class="hljs-number">0x2000002</span>, <span class="hljs-number">0x2040002</span>)<br>        ,<br>        _0x238154 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x0</span>, <span class="hljs-number">0x10000000</span>, <span class="hljs-number">0x8</span>, <span class="hljs-number">0x10000008</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x10000000</span>, <span class="hljs-number">0x8</span>, <span class="hljs-number">0x10000008</span>, <span class="hljs-number">0x400</span>, <span class="hljs-number">0x10000400</span>, <span class="hljs-number">0x408</span>, <span class="hljs-number">0x10000408</span>, <span class="hljs-number">0x400</span>, <span class="hljs-number">0x10000400</span>, <span class="hljs-number">0x408</span>, <span class="hljs-number">0x10000408</span>)<br>        ,<br>        _0x5e478e = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x0</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x100000</span>, <span class="hljs-number">0x100020</span>, <span class="hljs-number">0x100000</span>, <span class="hljs-number">0x100020</span>, <span class="hljs-number">0x2000</span>, <span class="hljs-number">0x2020</span>, <span class="hljs-number">0x2000</span>, <span class="hljs-number">0x2020</span>, <span class="hljs-number">0x102000</span>, <span class="hljs-number">0x102020</span>, <span class="hljs-number">0x102000</span>, <span class="hljs-number">0x102020</span>)<br>        ,<br>        _0x598ad7 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x0</span>, <span class="hljs-number">0x1000000</span>, <span class="hljs-number">0x200</span>, <span class="hljs-number">0x1000200</span>, <span class="hljs-number">0x200000</span>, <span class="hljs-number">0x1200000</span>, <span class="hljs-number">0x200200</span>, <span class="hljs-number">0x1200200</span>, <span class="hljs-number">0x4000000</span>, <span class="hljs-number">0x5000000</span>, <span class="hljs-number">0x4000200</span>, <span class="hljs-number">0x5000200</span>, <span class="hljs-number">0x4200000</span>, <span class="hljs-number">0x5200000</span>, <span class="hljs-number">0x4200200</span>, <span class="hljs-number">0x5200200</span>)<br>        ,<br>        _0x3fc834 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x0</span>, <span class="hljs-number">0x1000</span>, <span class="hljs-number">0x8000000</span>, <span class="hljs-number">0x8001000</span>, <span class="hljs-number">0x80000</span>, <span class="hljs-number">0x81000</span>, <span class="hljs-number">0x8080000</span>, <span class="hljs-number">0x8081000</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x1010</span>, <span class="hljs-number">0x8000010</span>, <span class="hljs-number">0x8001010</span>, <span class="hljs-number">0x80010</span>, <span class="hljs-number">0x81010</span>, <span class="hljs-number">0x8080010</span>, <span class="hljs-number">0x8081010</span>)<br>        ,<br>        _0x230c12 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x0</span>, <span class="hljs-number">0x4</span>, <span class="hljs-number">0x100</span>, <span class="hljs-number">0x104</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x4</span>, <span class="hljs-number">0x100</span>, <span class="hljs-number">0x104</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x5</span>, <span class="hljs-number">0x101</span>, <span class="hljs-number">0x105</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x5</span>, <span class="hljs-number">0x101</span>, <span class="hljs-number">0x105</span>)<br>        , _0x474cf1 = _0x519771[<span class="hljs-title function_">_0x256417</span>(<span class="hljs-number">0x260</span>)] &gt; <span class="hljs-number">0x8</span> ? <span class="hljs-number">0x3</span> : <span class="hljs-number">0x1</span><br>        , _0x1a5b2b = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x20</span> * _0x474cf1)<br>        ,<br>        _0x2cbf39 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x0</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x0</span>)<br>        , _0x226e87 = <span class="hljs-keyword">void</span> <span class="hljs-number">0x0</span><br>        , _0x52ffe8 = <span class="hljs-keyword">void</span> <span class="hljs-number">0x0</span><br>        , _0x62d0e7 = <span class="hljs-number">0x0</span><br>        , _0x1760a9 = <span class="hljs-number">0x0</span><br>        , _0xde3da3 = <span class="hljs-keyword">void</span> <span class="hljs-number">0x0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> _0x38207e = <span class="hljs-number">0x0</span>; _0x38207e &lt; _0x474cf1; _0x38207e++) &#123;<br>        <span class="hljs-keyword">var</span> _0x4fca7d = _0x519771[<span class="hljs-title function_">_0x256417</span>(<span class="hljs-number">0xf7</span>)](_0x62d0e7++) &lt;&lt; <span class="hljs-number">0x18</span> | _0x519771[<span class="hljs-title function_">_0x256417</span>(<span class="hljs-number">0xf7</span>)](_0x62d0e7++) &lt;&lt; <span class="hljs-number">0x10</span> | _0x519771[<span class="hljs-title function_">_0x256417</span>(<span class="hljs-number">0xf7</span>)](_0x62d0e7++) &lt;&lt; <span class="hljs-number">0x8</span> | _0x519771[<span class="hljs-title function_">_0x256417</span>(<span class="hljs-number">0xf7</span>)](_0x62d0e7++)<br>            ,<br>            _0x1c0e6d = _0x519771[<span class="hljs-title function_">_0x256417</span>(<span class="hljs-number">0xf7</span>)](_0x62d0e7++) &lt;&lt; <span class="hljs-number">0x18</span> | _0x519771[<span class="hljs-string">&#x27;charCodeAt&#x27;</span>](_0x62d0e7++) &lt;&lt; <span class="hljs-number">0x10</span> | _0x519771[<span class="hljs-title function_">_0x256417</span>(<span class="hljs-number">0xf7</span>)](_0x62d0e7++) &lt;&lt; <span class="hljs-number">0x8</span> | _0x519771[<span class="hljs-title function_">_0x256417</span>(<span class="hljs-number">0xf7</span>)](_0x62d0e7++);<br>        _0xde3da3 = (_0x4fca7d &gt;&gt;&gt; <span class="hljs-number">0x4</span> ^ _0x1c0e6d) &amp; <span class="hljs-number">0xf0f0f0f</span>,<br>            _0x1c0e6d ^= _0xde3da3,<br>            _0x4fca7d ^= _0xde3da3 &lt;&lt; <span class="hljs-number">0x4</span>,<br>            _0xde3da3 = (_0x1c0e6d &gt;&gt;&gt; -<span class="hljs-number">0x10</span> ^ _0x4fca7d) &amp; <span class="hljs-number">0xffff</span>,<br>            _0x4fca7d ^= _0xde3da3,<br>            _0x1c0e6d ^= _0xde3da3 &lt;&lt; -<span class="hljs-number">0x10</span>,<br>            _0xde3da3 = (_0x4fca7d &gt;&gt;&gt; <span class="hljs-number">0x2</span> ^ _0x1c0e6d) &amp; <span class="hljs-number">0x33333333</span>,<br>            _0x1c0e6d ^= _0xde3da3,<br>            _0x4fca7d ^= _0xde3da3 &lt;&lt; <span class="hljs-number">0x2</span>,<br>            _0xde3da3 = (_0x1c0e6d &gt;&gt;&gt; -<span class="hljs-number">0x10</span> ^ _0x4fca7d) &amp; <span class="hljs-number">0xffff</span>,<br>            _0x4fca7d ^= _0xde3da3,<br>            _0x1c0e6d ^= _0xde3da3 &lt;&lt; -<span class="hljs-number">0x10</span>,<br>            _0xde3da3 = (_0x4fca7d &gt;&gt;&gt; <span class="hljs-number">0x1</span> ^ _0x1c0e6d) &amp; <span class="hljs-number">0x55555555</span>,<br>            _0x1c0e6d ^= _0xde3da3,<br>            _0x4fca7d ^= _0xde3da3 &lt;&lt; <span class="hljs-number">0x1</span>,<br>            _0xde3da3 = (_0x1c0e6d &gt;&gt;&gt; <span class="hljs-number">0x8</span> ^ _0x4fca7d) &amp; <span class="hljs-number">0xff00ff</span>,<br>            _0x4fca7d ^= _0xde3da3,<br>            _0x1c0e6d ^= _0xde3da3 &lt;&lt; <span class="hljs-number">0x8</span>,<br>            _0xde3da3 = (_0x4fca7d &gt;&gt;&gt; <span class="hljs-number">0x1</span> ^ _0x1c0e6d) &amp; <span class="hljs-number">0x55555555</span>,<br>            _0x1c0e6d ^= _0xde3da3,<br>            _0x4fca7d ^= _0xde3da3 &lt;&lt; <span class="hljs-number">0x1</span>,<br>            _0xde3da3 = _0x4fca7d &lt;&lt; <span class="hljs-number">0x8</span> | _0x1c0e6d &gt;&gt;&gt; <span class="hljs-number">0x14</span> &amp; <span class="hljs-number">0xf0</span>,<br>            _0x4fca7d = _0x1c0e6d &lt;&lt; <span class="hljs-number">0x18</span> | _0x1c0e6d &lt;&lt; <span class="hljs-number">0x8</span> &amp; <span class="hljs-number">0xff0000</span> | _0x1c0e6d &gt;&gt;&gt; <span class="hljs-number">0x8</span> &amp; <span class="hljs-number">0xff00</span> | _0x1c0e6d &gt;&gt;&gt; <span class="hljs-number">0x18</span> &amp; <span class="hljs-number">0xf0</span>,<br>            _0x1c0e6d = _0xde3da3;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> _0x1e537c = <span class="hljs-number">0x0</span>; _0x1e537c &lt; _0x2cbf39[<span class="hljs-title function_">_0x256417</span>(<span class="hljs-number">0x260</span>)]; _0x1e537c++) &#123;<br>            _0x2cbf39[_0x1e537c] ? (_0x4fca7d = _0x4fca7d &lt;&lt; <span class="hljs-number">0x2</span> | _0x4fca7d &gt;&gt;&gt; <span class="hljs-number">0x1a</span>,<br>                _0x1c0e6d = _0x1c0e6d &lt;&lt; <span class="hljs-number">0x2</span> | _0x1c0e6d &gt;&gt;&gt; <span class="hljs-number">0x1a</span>) : (_0x4fca7d = _0x4fca7d &lt;&lt; <span class="hljs-number">0x1</span> | _0x4fca7d &gt;&gt;&gt; <span class="hljs-number">0x1b</span>,<br>                _0x1c0e6d = _0x1c0e6d &lt;&lt; <span class="hljs-number">0x1</span> | _0x1c0e6d &gt;&gt;&gt; <span class="hljs-number">0x1b</span>),<br>                _0x4fca7d &amp;= -<span class="hljs-number">0xf</span>,<br>                _0x1c0e6d &amp;= -<span class="hljs-number">0xf</span>,<br>                _0x226e87 = _0x5ad9e8[_0x4fca7d &gt;&gt;&gt; <span class="hljs-number">0x1c</span>] | _0x5380f4[_0x4fca7d &gt;&gt;&gt; <span class="hljs-number">0x18</span> &amp; <span class="hljs-number">0xf</span>] | _0x304f22[_0x4fca7d &gt;&gt;&gt; <span class="hljs-number">0x14</span> &amp; <span class="hljs-number">0xf</span>] | _0x262026[_0x4fca7d &gt;&gt;&gt; <span class="hljs-number">0x10</span> &amp; <span class="hljs-number">0xf</span>] | _0x519f68[_0x4fca7d &gt;&gt;&gt; <span class="hljs-number">0xc</span> &amp; <span class="hljs-number">0xf</span>] | _0x1bfcdc[_0x4fca7d &gt;&gt;&gt; <span class="hljs-number">0x8</span> &amp; <span class="hljs-number">0xf</span>] | _0x420d1b[_0x4fca7d &gt;&gt;&gt; <span class="hljs-number">0x4</span> &amp; <span class="hljs-number">0xf</span>],<br>                _0x52ffe8 = _0x4f1d0d[_0x1c0e6d &gt;&gt;&gt; <span class="hljs-number">0x1c</span>] | _0x25b7a5[_0x1c0e6d &gt;&gt;&gt; <span class="hljs-number">0x18</span> &amp; <span class="hljs-number">0xf</span>] | _0x238154[_0x1c0e6d &gt;&gt;&gt; <span class="hljs-number">0x14</span> &amp; <span class="hljs-number">0xf</span>] | _0x5e478e[_0x1c0e6d &gt;&gt;&gt; <span class="hljs-number">0x10</span> &amp; <span class="hljs-number">0xf</span>] | _0x598ad7[_0x1c0e6d &gt;&gt;&gt; <span class="hljs-number">0xc</span> &amp; <span class="hljs-number">0xf</span>] | _0x3fc834[_0x1c0e6d &gt;&gt;&gt; <span class="hljs-number">0x8</span> &amp; <span class="hljs-number">0xf</span>] | _0x230c12[_0x1c0e6d &gt;&gt;&gt; <span class="hljs-number">0x4</span> &amp; <span class="hljs-number">0xf</span>],<br>                _0xde3da3 = (_0x52ffe8 &gt;&gt;&gt; <span class="hljs-number">0x10</span> ^ _0x226e87) &amp; <span class="hljs-number">0xffff</span>,<br>                _0x1a5b2b[_0x1760a9++] = _0x226e87 ^ _0xde3da3,<br>                _0x1a5b2b[_0x1760a9++] = _0x52ffe8 ^ _0xde3da3 &lt;&lt; <span class="hljs-number">0x10</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> _0x1a5b2b;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">_0x400098</span>(<span class="hljs-params">_0x302a65</span>) &#123;<br>    <span class="hljs-keyword">var</span> _0x6b9184 = _0x14cd;<br>    <span class="hljs-keyword">var</span> _0x33359b = _0x6b9184,<br>        _0x5328db = <span class="hljs-string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span>, _0x56778a,<br>        _0x102cef, _0x2fb6b4, _0xbe3f86, _0x244503, _0x166c03;<br>    _0x2fb6b4 = _0x302a65[<span class="hljs-title function_">_0x33359b</span>(<span class="hljs-number">0x260</span>)],<br>        _0x102cef = <span class="hljs-number">0x0</span>,<br>        _0x56778a = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">while</span> (_0x102cef &lt; _0x2fb6b4) &#123;<br>        _0xbe3f86 = _0x302a65[<span class="hljs-string">&#x27;charCodeAt&#x27;</span>](_0x102cef++) &amp; <span class="hljs-number">0xff</span>;<br>        <span class="hljs-keyword">if</span> (_0x102cef == _0x2fb6b4) &#123;<br>            _0x56778a += _0x5328db[<span class="hljs-title function_">_0x33359b</span>(<span class="hljs-number">0xdc</span>)](_0xbe3f86 &gt;&gt; <span class="hljs-number">0x2</span>),<br>                _0x56778a += _0x5328db[<span class="hljs-title function_">_0x33359b</span>(<span class="hljs-number">0xdc</span>)]((_0xbe3f86 &amp; <span class="hljs-number">0x3</span>) &lt;&lt; <span class="hljs-number">0x4</span>),<br>                _0x56778a += <span class="hljs-string">&#x27;==&#x27;</span>;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>        _0x244503 = _0x302a65[<span class="hljs-title function_">_0x33359b</span>(<span class="hljs-number">0xf7</span>)](_0x102cef++);<br>        <span class="hljs-keyword">if</span> (_0x102cef == _0x2fb6b4) &#123;<br>            _0x56778a += _0x5328db[<span class="hljs-title function_">_0x33359b</span>(<span class="hljs-number">0xdc</span>)](_0xbe3f86 &gt;&gt; <span class="hljs-number">0x2</span>),<br>                _0x56778a += _0x5328db[<span class="hljs-title function_">_0x33359b</span>(<span class="hljs-number">0xdc</span>)]((_0xbe3f86 &amp; <span class="hljs-number">0x3</span>) &lt;&lt; <span class="hljs-number">0x4</span> | (_0x244503 &amp; <span class="hljs-number">0xf0</span>) &gt;&gt; <span class="hljs-number">0x4</span>),<br>                _0x56778a += _0x5328db[<span class="hljs-string">&#x27;charAt&#x27;</span>]((_0x244503 &amp; <span class="hljs-number">0xf</span>) &lt;&lt; <span class="hljs-number">0x2</span>),<br>                _0x56778a += <span class="hljs-string">&#x27;=&#x27;</span>;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>        _0x166c03 = _0x302a65[<span class="hljs-title function_">_0x33359b</span>(<span class="hljs-number">0xf7</span>)](_0x102cef++),<br>            _0x56778a += _0x5328db[<span class="hljs-string">&#x27;charAt&#x27;</span>](_0xbe3f86 &gt;&gt; <span class="hljs-number">0x2</span>),<br>            _0x56778a += _0x5328db[<span class="hljs-title function_">_0x33359b</span>(<span class="hljs-number">0xdc</span>)]((_0xbe3f86 &amp; <span class="hljs-number">0x3</span>) &lt;&lt; <span class="hljs-number">0x4</span> | (_0x244503 &amp; <span class="hljs-number">0xf0</span>) &gt;&gt; <span class="hljs-number">0x4</span>),<br>            _0x56778a += _0x5328db[<span class="hljs-title function_">_0x33359b</span>(<span class="hljs-number">0xdc</span>)]((_0x244503 &amp; <span class="hljs-number">0xf</span>) &lt;&lt; <span class="hljs-number">0x2</span> | (_0x166c03 &amp; <span class="hljs-number">0xc0</span>) &gt;&gt; <span class="hljs-number">0x6</span>),<br>            _0x56778a += _0x5328db[<span class="hljs-title function_">_0x33359b</span>(<span class="hljs-number">0xdc</span>)](_0x166c03 &amp; <span class="hljs-number">0x3f</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> _0x56778a;<br>&#125;<br><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">_0x72dc4f</span>(<span class="hljs-params">_0x1bcf6c, _0x66c638, _0x4217ce, _0x32926f, _0x34e315, _0x31d048</span>) &#123;<br>    <span class="hljs-keyword">var</span> _0x6b9184 = _0x14cd;<br>    <span class="hljs-keyword">var</span> _0x56888a = _0x6b9184<br>        ,<br>        _0x3e38da = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x1010400</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x10000</span>, <span class="hljs-number">0x1010404</span>, <span class="hljs-number">0x1010004</span>, <span class="hljs-number">0x10404</span>, <span class="hljs-number">0x4</span>, <span class="hljs-number">0x10000</span>, <span class="hljs-number">0x400</span>, <span class="hljs-number">0x1010400</span>, <span class="hljs-number">0x1010404</span>, <span class="hljs-number">0x400</span>, <span class="hljs-number">0x1000404</span>, <span class="hljs-number">0x1010004</span>, <span class="hljs-number">0x1000000</span>, <span class="hljs-number">0x4</span>, <span class="hljs-number">0x404</span>, <span class="hljs-number">0x1000400</span>, <span class="hljs-number">0x1000400</span>, <span class="hljs-number">0x10400</span>, <span class="hljs-number">0x10400</span>, <span class="hljs-number">0x1010000</span>, <span class="hljs-number">0x1010000</span>, <span class="hljs-number">0x1000404</span>, <span class="hljs-number">0x10004</span>, <span class="hljs-number">0x1000004</span>, <span class="hljs-number">0x1000004</span>, <span class="hljs-number">0x10004</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x404</span>, <span class="hljs-number">0x10404</span>, <span class="hljs-number">0x1000000</span>, <span class="hljs-number">0x10000</span>, <span class="hljs-number">0x1010404</span>, <span class="hljs-number">0x4</span>, <span class="hljs-number">0x1010000</span>, <span class="hljs-number">0x1010400</span>, <span class="hljs-number">0x1000000</span>, <span class="hljs-number">0x1000000</span>, <span class="hljs-number">0x400</span>, <span class="hljs-number">0x1010004</span>, <span class="hljs-number">0x10000</span>, <span class="hljs-number">0x10400</span>, <span class="hljs-number">0x1000004</span>, <span class="hljs-number">0x400</span>, <span class="hljs-number">0x4</span>, <span class="hljs-number">0x1000404</span>, <span class="hljs-number">0x10404</span>, <span class="hljs-number">0x1010404</span>, <span class="hljs-number">0x10004</span>, <span class="hljs-number">0x1010000</span>, <span class="hljs-number">0x1000404</span>, <span class="hljs-number">0x1000004</span>, <span class="hljs-number">0x404</span>, <span class="hljs-number">0x10404</span>, <span class="hljs-number">0x1010400</span>, <span class="hljs-number">0x404</span>, <span class="hljs-number">0x1000400</span>, <span class="hljs-number">0x1000400</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x10004</span>, <span class="hljs-number">0x10400</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x1010004</span>)<br>        ,<br>        _0xf210cf = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(-<span class="hljs-number">0x7fef7fe0</span>, -<span class="hljs-number">0x7fff8000</span>, <span class="hljs-number">0x8000</span>, <span class="hljs-number">0x108020</span>, <span class="hljs-number">0x100000</span>, <span class="hljs-number">0x20</span>, -<span class="hljs-number">0x7fefffe0</span>, -<span class="hljs-number">0x7fff7fe0</span>, -<span class="hljs-number">0x7fffffe0</span>, -<span class="hljs-number">0x7fef7fe0</span>, -<span class="hljs-number">0x7fef8000</span>, -<span class="hljs-number">0x80000000</span>, -<span class="hljs-number">0x7fff8000</span>, <span class="hljs-number">0x100000</span>, <span class="hljs-number">0x20</span>, -<span class="hljs-number">0x7fefffe0</span>, <span class="hljs-number">0x108000</span>, <span class="hljs-number">0x100020</span>, -<span class="hljs-number">0x7fff7fe0</span>, <span class="hljs-number">0x0</span>, -<span class="hljs-number">0x80000000</span>, <span class="hljs-number">0x8000</span>, <span class="hljs-number">0x108020</span>, -<span class="hljs-number">0x7ff00000</span>, <span class="hljs-number">0x100020</span>, -<span class="hljs-number">0x7fffffe0</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x108000</span>, <span class="hljs-number">0x8020</span>, -<span class="hljs-number">0x7fef8000</span>, -<span class="hljs-number">0x7ff00000</span>, <span class="hljs-number">0x8020</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x108020</span>, -<span class="hljs-number">0x7fefffe0</span>, <span class="hljs-number">0x100000</span>, -<span class="hljs-number">0x7fff7fe0</span>, -<span class="hljs-number">0x7ff00000</span>, -<span class="hljs-number">0x7fef8000</span>, <span class="hljs-number">0x8000</span>, -<span class="hljs-number">0x7ff00000</span>, -<span class="hljs-number">0x7fff8000</span>, <span class="hljs-number">0x20</span>, -<span class="hljs-number">0x7fef7fe0</span>, <span class="hljs-number">0x108020</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x8000</span>, -<span class="hljs-number">0x80000000</span>, <span class="hljs-number">0x8020</span>, -<span class="hljs-number">0x7fef8000</span>, <span class="hljs-number">0x100000</span>, -<span class="hljs-number">0x7fffffe0</span>, <span class="hljs-number">0x100020</span>, -<span class="hljs-number">0x7fff7fe0</span>, -<span class="hljs-number">0x7fffffe0</span>, <span class="hljs-number">0x100020</span>, <span class="hljs-number">0x108000</span>, <span class="hljs-number">0x0</span>, -<span class="hljs-number">0x7fff8000</span>, <span class="hljs-number">0x8020</span>, -<span class="hljs-number">0x80000000</span>, -<span class="hljs-number">0x7fefffe0</span>, -<span class="hljs-number">0x7fef7fe0</span>, <span class="hljs-number">0x108000</span>)<br>        ,<br>        _0x3a5438 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x208</span>, <span class="hljs-number">0x8020200</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x8020008</span>, <span class="hljs-number">0x8000200</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x20208</span>, <span class="hljs-number">0x8000200</span>, <span class="hljs-number">0x20008</span>, <span class="hljs-number">0x8000008</span>, <span class="hljs-number">0x8000008</span>, <span class="hljs-number">0x20000</span>, <span class="hljs-number">0x8020208</span>, <span class="hljs-number">0x20008</span>, <span class="hljs-number">0x8020000</span>, <span class="hljs-number">0x208</span>, <span class="hljs-number">0x8000000</span>, <span class="hljs-number">0x8</span>, <span class="hljs-number">0x8020200</span>, <span class="hljs-number">0x200</span>, <span class="hljs-number">0x20200</span>, <span class="hljs-number">0x8020000</span>, <span class="hljs-number">0x8020008</span>, <span class="hljs-number">0x20208</span>, <span class="hljs-number">0x8000208</span>, <span class="hljs-number">0x20200</span>, <span class="hljs-number">0x20000</span>, <span class="hljs-number">0x8000208</span>, <span class="hljs-number">0x8</span>, <span class="hljs-number">0x8020208</span>, <span class="hljs-number">0x200</span>, <span class="hljs-number">0x8000000</span>, <span class="hljs-number">0x8020200</span>, <span class="hljs-number">0x8000000</span>, <span class="hljs-number">0x20008</span>, <span class="hljs-number">0x208</span>, <span class="hljs-number">0x20000</span>, <span class="hljs-number">0x8020200</span>, <span class="hljs-number">0x8000200</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x200</span>, <span class="hljs-number">0x20008</span>, <span class="hljs-number">0x8020208</span>, <span class="hljs-number">0x8000200</span>, <span class="hljs-number">0x8000008</span>, <span class="hljs-number">0x200</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x8020008</span>, <span class="hljs-number">0x8000208</span>, <span class="hljs-number">0x20000</span>, <span class="hljs-number">0x8000000</span>, <span class="hljs-number">0x8020208</span>, <span class="hljs-number">0x8</span>, <span class="hljs-number">0x20208</span>, <span class="hljs-number">0x20200</span>, <span class="hljs-number">0x8000008</span>, <span class="hljs-number">0x8020000</span>, <span class="hljs-number">0x8000208</span>, <span class="hljs-number">0x208</span>, <span class="hljs-number">0x8020000</span>, <span class="hljs-number">0x20208</span>, <span class="hljs-number">0x8</span>, <span class="hljs-number">0x8020008</span>, <span class="hljs-number">0x20200</span>)<br>        ,<br>        _0x1a37a6 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x802001</span>, <span class="hljs-number">0x2081</span>, <span class="hljs-number">0x2081</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0x802080</span>, <span class="hljs-number">0x800081</span>, <span class="hljs-number">0x800001</span>, <span class="hljs-number">0x2001</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x802000</span>, <span class="hljs-number">0x802000</span>, <span class="hljs-number">0x802081</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x800080</span>, <span class="hljs-number">0x800001</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x2000</span>, <span class="hljs-number">0x800000</span>, <span class="hljs-number">0x802001</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0x800000</span>, <span class="hljs-number">0x2001</span>, <span class="hljs-number">0x2080</span>, <span class="hljs-number">0x800081</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x2080</span>, <span class="hljs-number">0x800080</span>, <span class="hljs-number">0x2000</span>, <span class="hljs-number">0x802080</span>, <span class="hljs-number">0x802081</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0x800080</span>, <span class="hljs-number">0x800001</span>, <span class="hljs-number">0x802000</span>, <span class="hljs-number">0x802081</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x802000</span>, <span class="hljs-number">0x2080</span>, <span class="hljs-number">0x800080</span>, <span class="hljs-number">0x800081</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x802001</span>, <span class="hljs-number">0x2081</span>, <span class="hljs-number">0x2081</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0x802081</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x2000</span>, <span class="hljs-number">0x800001</span>, <span class="hljs-number">0x2001</span>, <span class="hljs-number">0x802080</span>, <span class="hljs-number">0x800081</span>, <span class="hljs-number">0x2001</span>, <span class="hljs-number">0x2080</span>, <span class="hljs-number">0x800000</span>, <span class="hljs-number">0x802001</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0x800000</span>, <span class="hljs-number">0x2000</span>, <span class="hljs-number">0x802080</span>)<br>        ,<br>        _0xd97264 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x100</span>, <span class="hljs-number">0x2080100</span>, <span class="hljs-number">0x2080000</span>, <span class="hljs-number">0x42000100</span>, <span class="hljs-number">0x80000</span>, <span class="hljs-number">0x100</span>, <span class="hljs-number">0x40000000</span>, <span class="hljs-number">0x2080000</span>, <span class="hljs-number">0x40080100</span>, <span class="hljs-number">0x80000</span>, <span class="hljs-number">0x2000100</span>, <span class="hljs-number">0x40080100</span>, <span class="hljs-number">0x42000100</span>, <span class="hljs-number">0x42080000</span>, <span class="hljs-number">0x80100</span>, <span class="hljs-number">0x40000000</span>, <span class="hljs-number">0x2000000</span>, <span class="hljs-number">0x40080000</span>, <span class="hljs-number">0x40080000</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x40000100</span>, <span class="hljs-number">0x42080100</span>, <span class="hljs-number">0x42080100</span>, <span class="hljs-number">0x2000100</span>, <span class="hljs-number">0x42080000</span>, <span class="hljs-number">0x40000100</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x42000000</span>, <span class="hljs-number">0x2080100</span>, <span class="hljs-number">0x2000000</span>, <span class="hljs-number">0x42000000</span>, <span class="hljs-number">0x80100</span>, <span class="hljs-number">0x80000</span>, <span class="hljs-number">0x42000100</span>, <span class="hljs-number">0x100</span>, <span class="hljs-number">0x2000000</span>, <span class="hljs-number">0x40000000</span>, <span class="hljs-number">0x2080000</span>, <span class="hljs-number">0x42000100</span>, <span class="hljs-number">0x40080100</span>, <span class="hljs-number">0x2000100</span>, <span class="hljs-number">0x40000000</span>, <span class="hljs-number">0x42080000</span>, <span class="hljs-number">0x2080100</span>, <span class="hljs-number">0x40080100</span>, <span class="hljs-number">0x100</span>, <span class="hljs-number">0x2000000</span>, <span class="hljs-number">0x42080000</span>, <span class="hljs-number">0x42080100</span>, <span class="hljs-number">0x80100</span>, <span class="hljs-number">0x42000000</span>, <span class="hljs-number">0x42080100</span>, <span class="hljs-number">0x2080000</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x40080000</span>, <span class="hljs-number">0x42000000</span>, <span class="hljs-number">0x80100</span>, <span class="hljs-number">0x2000100</span>, <span class="hljs-number">0x40000100</span>, <span class="hljs-number">0x80000</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x40080000</span>, <span class="hljs-number">0x2080100</span>, <span class="hljs-number">0x40000100</span>)<br>        ,<br>        _0x3ab280 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x20000010</span>, <span class="hljs-number">0x20400000</span>, <span class="hljs-number">0x4000</span>, <span class="hljs-number">0x20404010</span>, <span class="hljs-number">0x20400000</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x20404010</span>, <span class="hljs-number">0x400000</span>, <span class="hljs-number">0x20004000</span>, <span class="hljs-number">0x404010</span>, <span class="hljs-number">0x400000</span>, <span class="hljs-number">0x20000010</span>, <span class="hljs-number">0x400010</span>, <span class="hljs-number">0x20004000</span>, <span class="hljs-number">0x20000000</span>, <span class="hljs-number">0x4010</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x400010</span>, <span class="hljs-number">0x20004010</span>, <span class="hljs-number">0x4000</span>, <span class="hljs-number">0x404000</span>, <span class="hljs-number">0x20004010</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x20400010</span>, <span class="hljs-number">0x20400010</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x404010</span>, <span class="hljs-number">0x20404000</span>, <span class="hljs-number">0x4010</span>, <span class="hljs-number">0x404000</span>, <span class="hljs-number">0x20404000</span>, <span class="hljs-number">0x20000000</span>, <span class="hljs-number">0x20004000</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x20400010</span>, <span class="hljs-number">0x404000</span>, <span class="hljs-number">0x20404010</span>, <span class="hljs-number">0x400000</span>, <span class="hljs-number">0x4010</span>, <span class="hljs-number">0x20000010</span>, <span class="hljs-number">0x400000</span>, <span class="hljs-number">0x20004000</span>, <span class="hljs-number">0x20000000</span>, <span class="hljs-number">0x4010</span>, <span class="hljs-number">0x20000010</span>, <span class="hljs-number">0x20404010</span>, <span class="hljs-number">0x404000</span>, <span class="hljs-number">0x20400000</span>, <span class="hljs-number">0x404010</span>, <span class="hljs-number">0x20404000</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x20400010</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x4000</span>, <span class="hljs-number">0x20400000</span>, <span class="hljs-number">0x404010</span>, <span class="hljs-number">0x4000</span>, <span class="hljs-number">0x400010</span>, <span class="hljs-number">0x20004010</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x20404000</span>, <span class="hljs-number">0x20000000</span>, <span class="hljs-number">0x400010</span>, <span class="hljs-number">0x20004010</span>)<br>        ,<br>        _0x50989b = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x200000</span>, <span class="hljs-number">0x4200002</span>, <span class="hljs-number">0x4000802</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x800</span>, <span class="hljs-number">0x4000802</span>, <span class="hljs-number">0x200802</span>, <span class="hljs-number">0x4200800</span>, <span class="hljs-number">0x4200802</span>, <span class="hljs-number">0x200000</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x4000002</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x4000000</span>, <span class="hljs-number">0x4200002</span>, <span class="hljs-number">0x802</span>, <span class="hljs-number">0x4000800</span>, <span class="hljs-number">0x200802</span>, <span class="hljs-number">0x200002</span>, <span class="hljs-number">0x4000800</span>, <span class="hljs-number">0x4000002</span>, <span class="hljs-number">0x4200000</span>, <span class="hljs-number">0x4200800</span>, <span class="hljs-number">0x200002</span>, <span class="hljs-number">0x4200000</span>, <span class="hljs-number">0x800</span>, <span class="hljs-number">0x802</span>, <span class="hljs-number">0x4200802</span>, <span class="hljs-number">0x200800</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x4000000</span>, <span class="hljs-number">0x200800</span>, <span class="hljs-number">0x4000000</span>, <span class="hljs-number">0x200800</span>, <span class="hljs-number">0x200000</span>, <span class="hljs-number">0x4000802</span>, <span class="hljs-number">0x4000802</span>, <span class="hljs-number">0x4200002</span>, <span class="hljs-number">0x4200002</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x200002</span>, <span class="hljs-number">0x4000000</span>, <span class="hljs-number">0x4000800</span>, <span class="hljs-number">0x200000</span>, <span class="hljs-number">0x4200800</span>, <span class="hljs-number">0x802</span>, <span class="hljs-number">0x200802</span>, <span class="hljs-number">0x4200800</span>, <span class="hljs-number">0x802</span>, <span class="hljs-number">0x4000002</span>, <span class="hljs-number">0x4200802</span>, <span class="hljs-number">0x4200000</span>, <span class="hljs-number">0x200800</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x4200802</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x200802</span>, <span class="hljs-number">0x4200000</span>, <span class="hljs-number">0x800</span>, <span class="hljs-number">0x4000002</span>, <span class="hljs-number">0x4000800</span>, <span class="hljs-number">0x800</span>, <span class="hljs-number">0x200002</span>)<br>        ,<br>        _0x1af50c = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x10001040</span>, <span class="hljs-number">0x1000</span>, <span class="hljs-number">0x40000</span>, <span class="hljs-number">0x10041040</span>, <span class="hljs-number">0x10000000</span>, <span class="hljs-number">0x10001040</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x10000000</span>, <span class="hljs-number">0x40040</span>, <span class="hljs-number">0x10040000</span>, <span class="hljs-number">0x10041040</span>, <span class="hljs-number">0x41000</span>, <span class="hljs-number">0x10041000</span>, <span class="hljs-number">0x41040</span>, <span class="hljs-number">0x1000</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x10040000</span>, <span class="hljs-number">0x10000040</span>, <span class="hljs-number">0x10001000</span>, <span class="hljs-number">0x1040</span>, <span class="hljs-number">0x41000</span>, <span class="hljs-number">0x40040</span>, <span class="hljs-number">0x10040040</span>, <span class="hljs-number">0x10041000</span>, <span class="hljs-number">0x1040</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x10040040</span>, <span class="hljs-number">0x10000040</span>, <span class="hljs-number">0x10001000</span>, <span class="hljs-number">0x41040</span>, <span class="hljs-number">0x40000</span>, <span class="hljs-number">0x41040</span>, <span class="hljs-number">0x40000</span>, <span class="hljs-number">0x10041000</span>, <span class="hljs-number">0x1000</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x10040040</span>, <span class="hljs-number">0x1000</span>, <span class="hljs-number">0x41040</span>, <span class="hljs-number">0x10001000</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x10000040</span>, <span class="hljs-number">0x10040000</span>, <span class="hljs-number">0x10040040</span>, <span class="hljs-number">0x10000000</span>, <span class="hljs-number">0x40000</span>, <span class="hljs-number">0x10001040</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x10041040</span>, <span class="hljs-number">0x40040</span>, <span class="hljs-number">0x10000040</span>, <span class="hljs-number">0x10040000</span>, <span class="hljs-number">0x10001000</span>, <span class="hljs-number">0x10001040</span>, <span class="hljs-number">0x0</span>, <span class="hljs-number">0x10041040</span>, <span class="hljs-number">0x41000</span>, <span class="hljs-number">0x41000</span>, <span class="hljs-number">0x1040</span>, <span class="hljs-number">0x1040</span>, <span class="hljs-number">0x40040</span>, <span class="hljs-number">0x10000000</span>, <span class="hljs-number">0x10041000</span>)<br>        , _0x253234 = <span class="hljs-title function_">_0x2ed682</span>(_0x1bcf6c)<br>        , _0xd964b6 = <span class="hljs-number">0x0</span><br>        , _0x43ac15 = <span class="hljs-keyword">void</span> <span class="hljs-number">0x0</span><br>        , _0x124f4d = <span class="hljs-keyword">void</span> <span class="hljs-number">0x0</span><br>        , _0x312b77 = <span class="hljs-keyword">void</span> <span class="hljs-number">0x0</span><br>        , _0x3716b1 = <span class="hljs-keyword">void</span> <span class="hljs-number">0x0</span><br>        , _0x4f4b23 = <span class="hljs-keyword">void</span> <span class="hljs-number">0x0</span><br>        , _0xf9a9b0 = <span class="hljs-keyword">void</span> <span class="hljs-number">0x0</span><br>        , _0x484e92 = <span class="hljs-keyword">void</span> <span class="hljs-number">0x0</span><br>        , _0x4187f0 = <span class="hljs-keyword">void</span> <span class="hljs-number">0x0</span><br>        , _0x25273a = <span class="hljs-keyword">void</span> <span class="hljs-number">0x0</span><br>        , _0x25896a = <span class="hljs-keyword">void</span> <span class="hljs-number">0x0</span><br>        , _0x1a2605 = <span class="hljs-keyword">void</span> <span class="hljs-number">0x0</span><br>        , _0x5bfb52 = <span class="hljs-keyword">void</span> <span class="hljs-number">0x0</span><br>        , _0x492a31 = <span class="hljs-keyword">void</span> <span class="hljs-number">0x0</span><br>        , _0x367b34 = <span class="hljs-keyword">void</span> <span class="hljs-number">0x0</span><br>        , _0x2c835a = <span class="hljs-keyword">void</span> <span class="hljs-number">0x0</span><br>        , _0x5a1ea4 = _0x66c638[<span class="hljs-string">&#x27;length&#x27;</span>]<br>        , _0x26bffe = <span class="hljs-number">0x0</span><br>        , _0x30c30a = _0x253234[<span class="hljs-title function_">_0x56888a</span>(<span class="hljs-number">0x260</span>)] == <span class="hljs-number">0x20</span> ? <span class="hljs-number">0x3</span> : <span class="hljs-number">0x9</span>;<br>    _0x30c30a == <span class="hljs-number">0x3</span> ? _0x25273a = _0x4217ce ? <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x0</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x2</span>) : <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x1e</span>, -<span class="hljs-number">0x2</span>, -<span class="hljs-number">0x2</span>) : _0x25273a = _0x4217ce ? <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x0</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x3e</span>, <span class="hljs-number">0x1e</span>, -<span class="hljs-number">0x2</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0x2</span>) : <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">0x5e</span>, <span class="hljs-number">0x3e</span>, -<span class="hljs-number">0x2</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x1e</span>, -<span class="hljs-number">0x2</span>, -<span class="hljs-number">0x2</span>);<br>    <span class="hljs-keyword">if</span> (_0x31d048 == <span class="hljs-number">0x2</span>)<br>        _0x66c638 += <span class="hljs-title function_">_0x56888a</span>(<span class="hljs-number">0x271</span>);<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">if</span> (_0x31d048 == <span class="hljs-number">0x1</span>) &#123;<br>            _0x312b77 = <span class="hljs-number">0x8</span> - _0x5a1ea4 % <span class="hljs-number">0x8</span>,<br>                _0x66c638 += <span class="hljs-title class_">String</span>[<span class="hljs-title function_">_0x56888a</span>(<span class="hljs-number">0x25f</span>)](_0x312b77, _0x312b77, _0x312b77, _0x312b77, _0x312b77, _0x312b77, _0x312b77, _0x312b77);<br>            <span class="hljs-keyword">if</span> (_0x312b77 == <span class="hljs-number">0x8</span>)<br>                _0x5a1ea4 += <span class="hljs-number">0x8</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">if</span> (!_0x31d048)<br>                _0x66c638 += <span class="hljs-title function_">_0x56888a</span>(<span class="hljs-number">0x2a7</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">var</span> _0x5eb93a = <span class="hljs-string">&#x27;&#x27;</span><br>        , _0x5b076f = <span class="hljs-string">&#x27;&#x27;</span>;<br>    _0x32926f == <span class="hljs-number">0x1</span> &amp;&amp; (_0x25896a = _0x34e315[<span class="hljs-title function_">_0x56888a</span>(<span class="hljs-number">0xf7</span>)](_0xd964b6++) &lt;&lt; <span class="hljs-number">0x18</span> | _0x34e315[<span class="hljs-string">&#x27;charCodeAt&#x27;</span>](_0xd964b6++) &lt;&lt; <span class="hljs-number">0x10</span> | _0x34e315[<span class="hljs-string">&#x27;charCodeAt&#x27;</span>](_0xd964b6++) &lt;&lt; <span class="hljs-number">0x8</span> | _0x34e315[<span class="hljs-string">&#x27;charCodeAt&#x27;</span>](_0xd964b6++),<br>        _0x5bfb52 = _0x34e315[<span class="hljs-title function_">_0x56888a</span>(<span class="hljs-number">0xf7</span>)](_0xd964b6++) &lt;&lt; <span class="hljs-number">0x18</span> | _0x34e315[<span class="hljs-string">&#x27;charCodeAt&#x27;</span>](_0xd964b6++) &lt;&lt; <span class="hljs-number">0x10</span> | _0x34e315[<span class="hljs-title function_">_0x56888a</span>(<span class="hljs-number">0xf7</span>)](_0xd964b6++) &lt;&lt; <span class="hljs-number">0x8</span> | _0x34e315[<span class="hljs-title function_">_0x56888a</span>(<span class="hljs-number">0xf7</span>)](_0xd964b6++),<br>        _0xd964b6 = <span class="hljs-number">0x0</span>);<br>    <span class="hljs-keyword">while</span> (_0xd964b6 &lt; _0x5a1ea4) &#123;<br>        _0x484e92 = _0x66c638[<span class="hljs-title function_">_0x56888a</span>(<span class="hljs-number">0xf7</span>)](_0xd964b6++) &lt;&lt; <span class="hljs-number">0x18</span> | _0x66c638[<span class="hljs-title function_">_0x56888a</span>(<span class="hljs-number">0xf7</span>)](_0xd964b6++) &lt;&lt; <span class="hljs-number">0x10</span> | _0x66c638[<span class="hljs-title function_">_0x56888a</span>(<span class="hljs-number">0xf7</span>)](_0xd964b6++) &lt;&lt; <span class="hljs-number">0x8</span> | _0x66c638[<span class="hljs-title function_">_0x56888a</span>(<span class="hljs-number">0xf7</span>)](_0xd964b6++),<br>            _0x4187f0 = _0x66c638[<span class="hljs-title function_">_0x56888a</span>(<span class="hljs-number">0xf7</span>)](_0xd964b6++) &lt;&lt; <span class="hljs-number">0x18</span> | _0x66c638[<span class="hljs-title function_">_0x56888a</span>(<span class="hljs-number">0xf7</span>)](_0xd964b6++) &lt;&lt; <span class="hljs-number">0x10</span> | _0x66c638[<span class="hljs-title function_">_0x56888a</span>(<span class="hljs-number">0xf7</span>)](_0xd964b6++) &lt;&lt; <span class="hljs-number">0x8</span> | _0x66c638[<span class="hljs-title function_">_0x56888a</span>(<span class="hljs-number">0xf7</span>)](_0xd964b6++);<br>        _0x32926f == <span class="hljs-number">0x1</span> &amp;&amp; (_0x4217ce ? (_0x484e92 ^= _0x25896a,<br>            _0x4187f0 ^= _0x5bfb52) : (_0x1a2605 = _0x25896a,<br>            _0x492a31 = _0x5bfb52,<br>            _0x25896a = _0x484e92,<br>            _0x5bfb52 = _0x4187f0));<br>        _0x312b77 = (_0x484e92 &gt;&gt;&gt; <span class="hljs-number">0x4</span> ^ _0x4187f0) &amp; <span class="hljs-number">0xf0f0f0f</span>,<br>            _0x4187f0 ^= _0x312b77,<br>            _0x484e92 ^= _0x312b77 &lt;&lt; <span class="hljs-number">0x4</span>,<br>            _0x312b77 = (_0x484e92 &gt;&gt;&gt; <span class="hljs-number">0x10</span> ^ _0x4187f0) &amp; <span class="hljs-number">0xffff</span>,<br>            _0x4187f0 ^= _0x312b77,<br>            _0x484e92 ^= _0x312b77 &lt;&lt; <span class="hljs-number">0x10</span>,<br>            _0x312b77 = (_0x4187f0 &gt;&gt;&gt; <span class="hljs-number">0x2</span> ^ _0x484e92) &amp; <span class="hljs-number">0x33333333</span>,<br>            _0x484e92 ^= _0x312b77,<br>            _0x4187f0 ^= _0x312b77 &lt;&lt; <span class="hljs-number">0x2</span>,<br>            _0x312b77 = (_0x4187f0 &gt;&gt;&gt; <span class="hljs-number">0x8</span> ^ _0x484e92) &amp; <span class="hljs-number">0xff00ff</span>,<br>            _0x484e92 ^= _0x312b77,<br>            _0x4187f0 ^= _0x312b77 &lt;&lt; <span class="hljs-number">0x8</span>,<br>            _0x312b77 = (_0x484e92 &gt;&gt;&gt; <span class="hljs-number">0x1</span> ^ _0x4187f0) &amp; <span class="hljs-number">0x55555555</span>,<br>            _0x4187f0 ^= _0x312b77,<br>            _0x484e92 ^= _0x312b77 &lt;&lt; <span class="hljs-number">0x1</span>,<br>            _0x484e92 = _0x484e92 &lt;&lt; <span class="hljs-number">0x1</span> | _0x484e92 &gt;&gt;&gt; <span class="hljs-number">0x1f</span>,<br>            _0x4187f0 = _0x4187f0 &lt;&lt; <span class="hljs-number">0x1</span> | _0x4187f0 &gt;&gt;&gt; <span class="hljs-number">0x1f</span>;<br>        <span class="hljs-keyword">for</span> (_0x124f4d = <span class="hljs-number">0x0</span>; _0x124f4d &lt; _0x30c30a; _0x124f4d += <span class="hljs-number">0x3</span>) &#123;<br>            _0x367b34 = _0x25273a[_0x124f4d + <span class="hljs-number">0x1</span>],<br>                _0x2c835a = _0x25273a[_0x124f4d + <span class="hljs-number">0x2</span>];<br>            <span class="hljs-keyword">for</span> (_0x43ac15 = _0x25273a[_0x124f4d]; _0x43ac15 != _0x367b34; _0x43ac15 += _0x2c835a) &#123;<br>                _0x4f4b23 = _0x4187f0 ^ _0x253234[_0x43ac15],<br>                    _0xf9a9b0 = (_0x4187f0 &gt;&gt;&gt; <span class="hljs-number">0x4</span> | _0x4187f0 &lt;&lt; <span class="hljs-number">0x1c</span>) ^ _0x253234[_0x43ac15 + <span class="hljs-number">0x1</span>],<br>                    _0x312b77 = _0x484e92,<br>                    _0x484e92 = _0x4187f0,<br>                    _0x4187f0 = _0x312b77 ^ (_0xf210cf[_0x4f4b23 &gt;&gt;&gt; <span class="hljs-number">0x18</span> &amp; <span class="hljs-number">0x3f</span>] | _0x1a37a6[_0x4f4b23 &gt;&gt;&gt; <span class="hljs-number">0x10</span> &amp; <span class="hljs-number">0x3f</span>] | _0x3ab280[_0x4f4b23 &gt;&gt;&gt; <span class="hljs-number">0x8</span> &amp; <span class="hljs-number">0x3f</span>] | _0x1af50c[_0x4f4b23 &amp; <span class="hljs-number">0x3f</span>] | _0x3e38da[_0xf9a9b0 &gt;&gt;&gt; <span class="hljs-number">0x18</span> &amp; <span class="hljs-number">0x3f</span>] | _0x3a5438[_0xf9a9b0 &gt;&gt;&gt; <span class="hljs-number">0x10</span> &amp; <span class="hljs-number">0x3f</span>] | _0xd97264[_0xf9a9b0 &gt;&gt;&gt; <span class="hljs-number">0x8</span> &amp; <span class="hljs-number">0x3f</span>] | _0x50989b[_0xf9a9b0 &amp; <span class="hljs-number">0x3f</span>]);<br>            &#125;<br>            _0x312b77 = _0x484e92,<br>                _0x484e92 = _0x4187f0,<br>                _0x4187f0 = _0x312b77;<br>        &#125;<br>        _0x484e92 = _0x484e92 &gt;&gt;&gt; <span class="hljs-number">0x1</span> | _0x484e92 &lt;&lt; <span class="hljs-number">0x1f</span>,<br>            _0x4187f0 = _0x4187f0 &gt;&gt;&gt; <span class="hljs-number">0x1</span> | _0x4187f0 &lt;&lt; <span class="hljs-number">0x1f</span>,<br>            _0x312b77 = (_0x484e92 &gt;&gt;&gt; <span class="hljs-number">0x1</span> ^ _0x4187f0) &amp; <span class="hljs-number">0x55555555</span>,<br>            _0x4187f0 ^= _0x312b77,<br>            _0x484e92 ^= _0x312b77 &lt;&lt; <span class="hljs-number">0x1</span>,<br>            _0x312b77 = (_0x4187f0 &gt;&gt;&gt; <span class="hljs-number">0x8</span> ^ _0x484e92) &amp; <span class="hljs-number">0xff00ff</span>,<br>            _0x484e92 ^= _0x312b77,<br>            _0x4187f0 ^= _0x312b77 &lt;&lt; <span class="hljs-number">0x8</span>,<br>            _0x312b77 = (_0x4187f0 &gt;&gt;&gt; <span class="hljs-number">0x2</span> ^ _0x484e92) &amp; <span class="hljs-number">0x33333333</span>,<br>            _0x484e92 ^= _0x312b77,<br>            _0x4187f0 ^= _0x312b77 &lt;&lt; <span class="hljs-number">0x2</span>,<br>            _0x312b77 = (_0x484e92 &gt;&gt;&gt; <span class="hljs-number">0x10</span> ^ _0x4187f0) &amp; <span class="hljs-number">0xffff</span>,<br>            _0x4187f0 ^= _0x312b77,<br>            _0x484e92 ^= _0x312b77 &lt;&lt; <span class="hljs-number">0x10</span>,<br>            _0x312b77 = (_0x484e92 &gt;&gt;&gt; <span class="hljs-number">0x4</span> ^ _0x4187f0) &amp; <span class="hljs-number">0xf0f0f0f</span>,<br>            _0x4187f0 ^= _0x312b77,<br>            _0x484e92 ^= _0x312b77 &lt;&lt; <span class="hljs-number">0x4</span>,<br>        _0x32926f == <span class="hljs-number">0x1</span> &amp;&amp; (_0x4217ce ? (_0x25896a = _0x484e92,<br>            _0x5bfb52 = _0x4187f0) : (_0x484e92 ^= _0x1a2605,<br>            _0x4187f0 ^= _0x492a31)),<br>            _0x5b076f += <span class="hljs-title class_">String</span>[<span class="hljs-title function_">_0x56888a</span>(<span class="hljs-number">0x25f</span>)](_0x484e92 &gt;&gt;&gt; <span class="hljs-number">0x18</span>, _0x484e92 &gt;&gt;&gt; <span class="hljs-number">0x10</span> &amp; <span class="hljs-number">0xff</span>, _0x484e92 &gt;&gt;&gt; <span class="hljs-number">0x8</span> &amp; <span class="hljs-number">0xff</span>, _0x484e92 &amp; <span class="hljs-number">0xff</span>, _0x4187f0 &gt;&gt;&gt; <span class="hljs-number">0x18</span>, _0x4187f0 &gt;&gt;&gt; <span class="hljs-number">0x10</span> &amp; <span class="hljs-number">0xff</span>, _0x4187f0 &gt;&gt;&gt; <span class="hljs-number">0x8</span> &amp; <span class="hljs-number">0xff</span>, _0x4187f0 &amp; <span class="hljs-number">0xff</span>),<br>            _0x26bffe += <span class="hljs-number">0x8</span>,<br>        _0x26bffe == <span class="hljs-number">0x200</span> &amp;&amp; (_0x5eb93a += _0x5b076f,<br>            _0x5b076f = <span class="hljs-string">&#x27;&#x27;</span>,<br>            _0x26bffe = <span class="hljs-number">0x0</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> _0x5eb93a + _0x5b076f;<br>&#125;<br><br><span class="hljs-keyword">var</span> _0x102a16 = <span class="hljs-keyword">function</span> (<span class="hljs-params">_0x4ccc5c</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">typeof</span> _0x4ccc5c;<br>&#125;<br><span class="hljs-keyword">var</span> _0x1e5607 = <span class="hljs-keyword">function</span> (<span class="hljs-params">_0x1e5607</span>) &#123;<br>    <span class="hljs-keyword">var</span> _0x5538ba = _0x14cd;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">typeof</span> _0x1e5607 === <span class="hljs-string">&#x27;undefined&#x27;</span> ? <span class="hljs-title function_">_0x5538ba</span>(<span class="hljs-number">0x2d3</span>) : <span class="hljs-title function_">_0x102a16</span>(_0x1e5607);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">_0x3c1b9d</span>(<span class="hljs-params">_0x466c10, _0x270e24</span>) &#123;<br>    <span class="hljs-keyword">var</span> _0x470ac4 = _0x57607b;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> _0x27b4ff = <span class="hljs-number">0x0</span>; _0x27b4ff &lt; _0x466c10[<span class="hljs-title function_">_0x470ac4</span>(<span class="hljs-number">0x260</span>)]; _0x27b4ff++) &#123;<br>        <span class="hljs-keyword">if</span> (_0x466c10[_0x27b4ff] === _0x270e24)<br>            <span class="hljs-keyword">return</span> _0x27b4ff;<br>    &#125;<br>    <span class="hljs-keyword">return</span> -<span class="hljs-number">0x1</span>;<br>&#125;<br><br><span class="hljs-keyword">var</span> _0x57607b = _0x14cd;<br><br><span class="hljs-keyword">var</span> _0x3fe197 = [<span class="hljs-string">&#x27;number&#x27;</span>, <span class="hljs-title function_">_0x57607b</span>(<span class="hljs-number">0x304</span>), <span class="hljs-title function_">_0x57607b</span>(<span class="hljs-number">0x2d3</span>), <span class="hljs-title function_">_0x57607b</span>(<span class="hljs-number">0x223</span>), <span class="hljs-title function_">_0x57607b</span>(<span class="hljs-number">0x242</span>)];<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">_0x5ef06e</span>(<span class="hljs-params">_0x50fbfe</span>) &#123;<br>    <span class="hljs-keyword">var</span> _0x5c96a0 = _0x57607b<br>        , _0x164079 = <span class="hljs-keyword">typeof</span> _0x50fbfe === <span class="hljs-string">&#x27;undefined&#x27;</span> ? <span class="hljs-title function_">_0x5c96a0</span>(<span class="hljs-number">0x2d3</span>) : (<span class="hljs-number">0x0</span>,<br>        _0x1e5607)(_0x50fbfe);<br>    <span class="hljs-keyword">if</span> (_0x164079 == <span class="hljs-title function_">_0x5c96a0</span>(<span class="hljs-number">0x223</span>) || _0x164079 == <span class="hljs-title function_">_0x5c96a0</span>(<span class="hljs-number">0x242</span>))<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;\x22&#x27;</span> + _0x50fbfe[<span class="hljs-title function_">_0x5c96a0</span>(<span class="hljs-number">0x399</span>)]()[<span class="hljs-title function_">_0x5c96a0</span>(<span class="hljs-number">0x307</span>)](<span class="hljs-string">&#x27;\x22&#x27;</span>, <span class="hljs-string">&#x27;\x5c\x22&#x27;</span>) + <span class="hljs-string">&#x27;\x22&#x27;</span>;<br>    <span class="hljs-keyword">if</span> (_0x164079 == <span class="hljs-title function_">_0x5c96a0</span>(<span class="hljs-number">0x328</span>) || _0x164079 == <span class="hljs-title function_">_0x5c96a0</span>(<span class="hljs-number">0x304</span>))<br>        <span class="hljs-keyword">return</span> _0x50fbfe[<span class="hljs-string">&#x27;toString&#x27;</span>]();<br>    <span class="hljs-keyword">if</span> (_0x164079 == <span class="hljs-title function_">_0x5c96a0</span>(<span class="hljs-number">0x2d3</span>))<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;undefined&#x27;</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;\x22&#x27;</span> + _0x50fbfe[<span class="hljs-title function_">_0x5c96a0</span>(<span class="hljs-number">0x399</span>)]()[<span class="hljs-title function_">_0x5c96a0</span>(<span class="hljs-number">0x307</span>)](<span class="hljs-string">&#x27;\x22&#x27;</span>, <span class="hljs-string">&#x27;\x5c\x22&#x27;</span>) + <span class="hljs-string">&#x27;\x22&#x27;</span>;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">_0x3b78ad</span>(<span class="hljs-params">_0x5b6ce5</span>) &#123;<br>    <span class="hljs-keyword">var</span> _0x57607b = _0x14cd;<br>    <span class="hljs-keyword">var</span> _0x29b7ec = _0x57607b<br>        , _0x3f687b = <span class="hljs-keyword">typeof</span> _0x5b6ce5 === <span class="hljs-string">&#x27;undefined&#x27;</span> ? <span class="hljs-title function_">_0x29b7ec</span>(<span class="hljs-number">0x2d3</span>) : (<span class="hljs-number">0x0</span>,<br>        _0x1e5607)(_0x5b6ce5);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_">_0x3c1b9d</span>(_0x3fe197, _0x3f687b) &gt; -<span class="hljs-number">0x1</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">_0x5ef06e</span>(_0x5b6ce5);<br>    <span class="hljs-keyword">if</span> (_0x5b6ce5 <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">Array</span>) &#123;<br>        <span class="hljs-keyword">var</span> _0x5f3480 = _0x5b6ce5[<span class="hljs-title function_">_0x29b7ec</span>(<span class="hljs-number">0x260</span>)]<br>            , _0x3a749e = [];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> _0x4883d7 = <span class="hljs-number">0x0</span>; _0x4883d7 &lt; _0x5f3480; _0x4883d7++) &#123;<br>            <span class="hljs-keyword">var</span> _0x5d3655 = (<span class="hljs-number">0x0</span>,<br>                _0x1e5607)(_0x5b6ce5[_0x4883d7]);<br>            <span class="hljs-title function_">_0x3c1b9d</span>(_0x3fe197, _0x5d3655) &gt; -<span class="hljs-number">0x1</span> ? _0x5d3655 != <span class="hljs-title function_">_0x29b7ec</span>(<span class="hljs-number">0x2d3</span>) ? _0x3a749e[<span class="hljs-string">&#x27;push&#x27;</span>](<span class="hljs-title function_">_0x5ef06e</span>(_0x5b6ce5[_0x4883d7])) : _0x3a749e[<span class="hljs-title function_">_0x29b7ec</span>(<span class="hljs-number">0x221</span>)](<span class="hljs-title function_">_0x29b7ec</span>(<span class="hljs-number">0x30e</span>)) : _0x3a749e[<span class="hljs-title function_">_0x29b7ec</span>(<span class="hljs-number">0x221</span>)](<span class="hljs-title function_">_0x3b78ad</span>(_0x5b6ce5[_0x4883d7]));<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;[&#x27;</span> + _0x3a749e[<span class="hljs-title function_">_0x29b7ec</span>(<span class="hljs-number">0x195</span>)](<span class="hljs-string">&#x27;,&#x27;</span>) + <span class="hljs-string">&#x27;]&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (_0x5b6ce5 <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">Object</span>) &#123;<br>        <span class="hljs-keyword">if</span> (_0x5b6ce5 == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-title function_">_0x29b7ec</span>(<span class="hljs-number">0x30e</span>);<br>        <span class="hljs-keyword">var</span> _0x3a749e = [];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> _0xf5e482 <span class="hljs-keyword">in</span> _0x5b6ce5) &#123;<br>            <span class="hljs-keyword">var</span> _0x5d3655 = (<span class="hljs-number">0x0</span>,<br>                _0x4db097[<span class="hljs-title function_">_0x29b7ec</span>(<span class="hljs-number">0x394</span>)])(_0x5b6ce5[_0xf5e482]);<br>            <span class="hljs-title function_">_0x3c1b9d</span>(_0x3fe197, _0x5d3655) &gt; -<span class="hljs-number">0x1</span> ? _0x5d3655 != <span class="hljs-title function_">_0x29b7ec</span>(<span class="hljs-number">0x2d3</span>) &amp;&amp; _0x3a749e[<span class="hljs-title function_">_0x29b7ec</span>(<span class="hljs-number">0x221</span>)](<span class="hljs-string">&#x27;\x22&#x27;</span> + _0xf5e482 + <span class="hljs-string">&#x27;\x22:&#x27;</span> + <span class="hljs-title function_">_0x5ef06e</span>(_0x5b6ce5[_0xf5e482])) : _0x3a749e[<span class="hljs-title function_">_0x29b7ec</span>(<span class="hljs-number">0x221</span>)](<span class="hljs-string">&#x27;\x22&#x27;</span> + _0xf5e482 + <span class="hljs-string">&#x27;\x22:&#x27;</span> + <span class="hljs-title function_">_0x3b78ad</span>(_0x5b6ce5[_0xf5e482]));<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#123;&#x27;</span> + _0x3a749e[<span class="hljs-string">&#x27;join&#x27;</span>](<span class="hljs-string">&#x27;,&#x27;</span>) + <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">smStringify</span>(<span class="hljs-params">_0x40cb3a, _0x4de872</span>) &#123;<br>    <span class="hljs-keyword">var</span> _0x57607b = _0x14cd;<br>    <span class="hljs-keyword">var</span> _0x445aa6 = _0x57607b<br>        , _0x4de5c4 = <span class="hljs-title function_">_0x3b78ad</span>(_0x40cb3a);<br>    <span class="hljs-keyword">if</span> (_0x4de872) &#123;<br>        <span class="hljs-keyword">var</span> _0x1e53c9 = <span class="hljs-string">&#x27;&#x27;</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> _0x197d5e = <span class="hljs-number">0x0</span>; _0x197d5e &lt; _0x4de5c4[<span class="hljs-string">&#x27;length&#x27;</span>]; _0x197d5e++) &#123;<br>            _0x4de5c4[<span class="hljs-title function_">_0x445aa6</span>(<span class="hljs-number">0xf7</span>)](_0x197d5e) &lt; <span class="hljs-number">0xff</span> ? _0x1e53c9 += _0x4de5c4[_0x197d5e] : _0x1e53c9 += <span class="hljs-string">&#x27;\x5cu&#x27;</span> + _0x4de5c4[<span class="hljs-title function_">_0x445aa6</span>(<span class="hljs-number">0xf7</span>)](_0x197d5e)[<span class="hljs-title function_">_0x445aa6</span>(<span class="hljs-number">0x399</span>)](<span class="hljs-number">0x10</span>);<br>        &#125;<br>        _0x4de5c4 = _0x1e53c9;<br>    &#125;<br>    <span class="hljs-keyword">return</span> _0x4de5c4;<br>&#125;<br><br><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">_0x2afb45</span>(<span class="hljs-params">_0x57026a</span>) &#123;<br>    <span class="hljs-keyword">return</span> _0x57026a = <span class="hljs-title class_">String</span>(_0x57026a),<br>        _0x57026a[<span class="hljs-string">&#x27;replace&#x27;</span>](<span class="hljs-regexp">/^https?:\/\/|\/$/g</span>, <span class="hljs-string">&#x27;&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">_0x363735</span>(<span class="hljs-params">_0x143ddd</span>) &#123;<br>    <span class="hljs-keyword">var</span> _0x4666af = _0x14cd;<br>    <span class="hljs-keyword">var</span> _0x39ba45 = _0x4666af;<br>    <span class="hljs-keyword">return</span> _0x143ddd = <span class="hljs-title class_">String</span>(_0x143ddd),<br>        _0x143ddd = _0x143ddd[<span class="hljs-title function_">_0x39ba45</span>(<span class="hljs-number">0x307</span>)](<span class="hljs-regexp">/\/+/g</span>, <span class="hljs-string">&#x27;/&#x27;</span>),<br>    _0x143ddd[<span class="hljs-title function_">_0x39ba45</span>(<span class="hljs-number">0x209</span>)](<span class="hljs-string">&#x27;/&#x27;</span>) !== <span class="hljs-number">0x0</span> &amp;&amp; (_0x143ddd = <span class="hljs-string">&#x27;/&#x27;</span> + _0x143ddd),<br>        _0x143ddd;<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">_0x3b4fec</span>(<span class="hljs-params">_0x35455d</span>) &#123;<br>    <span class="hljs-keyword">var</span> _0x4666af = _0x14cd;<br>    <span class="hljs-keyword">var</span> _0x5e7e68 = _0x4666af;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">typeof</span> _0x35455d === <span class="hljs-title function_">_0x5e7e68</span>(<span class="hljs-number">0x223</span>);<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">_0x1a42b7</span>(<span class="hljs-params">_0x12e965</span>) &#123;<br>    <span class="hljs-keyword">var</span> _0x4666af = _0x14cd;<br>    <span class="hljs-keyword">var</span> _0x560569 = _0x4666af;<br>    <span class="hljs-keyword">if</span> (!_0x12e965)<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">var</span> _0x3ec664 = <span class="hljs-string">&#x27;?&#x27;</span><br>        , _0x47f478 = [];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> _0x2c194c <span class="hljs-keyword">in</span> _0x12e965) &#123;<br>        _0x47f478[<span class="hljs-title function_">_0x560569</span>(<span class="hljs-number">0x221</span>)](_0x2c194c);<br>    &#125;<br>    <span class="hljs-keyword">return</span> _0x47f478[<span class="hljs-title function_">_0x560569</span>(<span class="hljs-number">0x28c</span>)](<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">var</span> _0x4fcbbf = _0x560569;<br>        <span class="hljs-keyword">return</span> <span class="hljs-title class_">Math</span>[<span class="hljs-title function_">_0x4fcbbf</span>(<span class="hljs-number">0x331</span>)]() - <span class="hljs-number">0.5</span>;<br>    &#125;),<br>        _0x47f478[<span class="hljs-title function_">_0x560569</span>(<span class="hljs-number">0x1f1</span>)](<span class="hljs-keyword">function</span> (<span class="hljs-params">_0x43c62a</span>) &#123;<br>            <span class="hljs-keyword">var</span> _0x194cb0 = _0x560569<br>                , _0x339c4e = _0x12e965[_0x43c62a];<br>            (<span class="hljs-title function_">_0x3b4fec</span>(_0x339c4e) || _0xc2a6aa[<span class="hljs-string">&#x27;isNumber&#x27;</span>](_0x339c4e) || _0xc2a6aa[<span class="hljs-title function_">_0x194cb0</span>(<span class="hljs-number">0xe3</span>)](_0x339c4e)) &amp;&amp; (_0x3ec664 += <span class="hljs-built_in">encodeURIComponent</span>(_0x43c62a) + <span class="hljs-string">&#x27;=&#x27;</span> + <span class="hljs-built_in">encodeURIComponent</span>(_0x339c4e) + <span class="hljs-string">&#x27;&amp;&#x27;</span>);<br>        &#125;),<br>    _0x3ec664 === <span class="hljs-string">&#x27;?&#x27;</span> &amp;&amp; (_0x3ec664 = <span class="hljs-string">&#x27;&#x27;</span>),<br>        _0x3ec664[<span class="hljs-title function_">_0x560569</span>(<span class="hljs-number">0x307</span>)](<span class="hljs-regexp">/&amp;$/</span>, <span class="hljs-string">&#x27;&#x27;</span>);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">makeUrl</span>(<span class="hljs-params">_0x2cf2d2, _0x461a36, _0x36336d, _0x3c6fa9</span>) &#123;<br>    <span class="hljs-keyword">var</span> _0x4666af = _0x14cd;<br>    <span class="hljs-keyword">var</span> _0x4e05cc = _0x4666af;<br>    _0x461a36 = <span class="hljs-title function_">_0x2afb45</span>(_0x461a36);<br>    <span class="hljs-keyword">var</span> _0x28a604 = <span class="hljs-title function_">_0x363735</span>(_0x36336d) + <span class="hljs-title function_">_0x1a42b7</span>(_0x3c6fa9);<br>    <span class="hljs-keyword">return</span> _0x461a36 &amp;&amp; (_0x28a604 = _0x2cf2d2 + _0x461a36 + _0x28a604),<br>        _0x28a604;<br>&#125;<br><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getEncryptContent</span>(<span class="hljs-params">_0x189b7a, _0x55701f</span>) &#123;<br>    <span class="hljs-keyword">var</span> _0x59e37f = _0x14cd;<br>    <span class="hljs-keyword">var</span> _0x1c83d4 = _0x59e37f<br>        , _0x476bdd = <span class="hljs-string">&quot;ca2ccbef&quot;</span><br>        , _0x15ccc7 = _0x55701f || _0x476bdd<br>        , _0x29db2c = <span class="hljs-keyword">typeof</span> _0x189b7a === <span class="hljs-title function_">_0x1c83d4</span>(<span class="hljs-number">0x223</span>) ? !![] : ![]<br>        , _0x8f01e0 = _0x29db2c ? _0x189b7a : <span class="hljs-title function_">smStringify</span>(_0x189b7a)<br>        , _0x44539b = <span class="hljs-string">&#x27;&#x27;</span>;<br><br>    <span class="hljs-keyword">return</span> _0x44539b = <span class="hljs-title function_">_0x72dc4f</span>(_0x15ccc7, _0x8f01e0, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x0</span>),<br>        _0x44539b = <span class="hljs-title function_">_0x400098</span>(_0x44539b),<br>        _0x44539b;<br>&#125;<br><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">dc_en</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">getEncryptContent</span>(<span class="hljs-string">&quot;default&quot;</span>, <span class="hljs-title function_">_0x14cd</span>(<span class="hljs-number">0x365</span>));<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">jv_en</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">getEncryptContent</span>(<span class="hljs-string">&quot;web&quot;</span>, <span class="hljs-title function_">_0x14cd</span>(<span class="hljs-number">0x211</span>));<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">gr_en</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">getEncryptContent</span>(<span class="hljs-string">&quot;zh-cn&quot;</span>, <span class="hljs-title function_">_0x14cd</span>(<span class="hljs-number">0x1b2</span>));<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">io_en</span>(<span class="hljs-params">mouseEndX</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">getEncryptContent</span>(mouseEndX / <span class="hljs-number">400</span>, <span class="hljs-title function_">_0x14cd</span>(<span class="hljs-number">0x22d</span>));<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">on_en</span>(<span class="hljs-params">slideArray</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">getEncryptContent</span>(slideArray, <span class="hljs-title function_">_0x14cd</span>(<span class="hljs-number">0x363</span>));<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">am_en</span>(<span class="hljs-params">subTimestamp</span>)&#123;<br>    <span class="hljs-comment">// return getEncryptContent(endTime - startTime, _0x14cd(0x13d));</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">getEncryptContent</span>(subTimestamp, <span class="hljs-title function_">_0x14cd</span>(<span class="hljs-number">0x13d</span>));<br><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">lg_en</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">getEncryptContent</span>(<span class="hljs-number">400</span>, <span class="hljs-title function_">_0x14cd</span>(<span class="hljs-number">0x23a</span>));<br><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">ke_en</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">getEncryptContent</span>(<span class="hljs-number">200</span>, <span class="hljs-title function_">_0x14cd</span>(<span class="hljs-number">0x135</span>));<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">ak_en</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">getEncryptContent</span>(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;d949a6f5&quot;</span>);<br><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">bi_en</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">getEncryptContent</span>(<span class="hljs-number">0</span>, <span class="hljs-title function_">_0x14cd</span>(<span class="hljs-number">0x23e</span>));<br><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">lh_en</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">getEncryptContent</span>(-<span class="hljs-number">1</span>, <span class="hljs-string">&quot;90e8fd86&quot;</span>);<br><br>&#125;<br><br><span class="hljs-comment">// console.log(&quot;dc: &quot;, dc_en())</span><br><span class="hljs-comment">// console.log(&quot;jv: &quot;, jv_en())</span><br><span class="hljs-comment">// console.log(&quot;gr: &quot;, gr_en())</span><br><span class="hljs-comment">// console.log(&quot;io: &quot;, io_en(121))</span><br><span class="hljs-comment">// console.log(&quot;on: &quot;, on_en([[0, -16, 0], [39, 9, 105], [161, 22, 203]]))</span><br><span class="hljs-comment">// console.log(&quot;am: &quot;, am_en(1655191333041, 1655191332613))</span><br><span class="hljs-comment">// console.log(&quot;lg: &quot;, lg_en())</span><br><span class="hljs-comment">// console.log(&quot;ke: &quot;, ke_en())</span><br><span class="hljs-comment">// console.log(&quot;ak: &quot;, ak_en())</span><br><span class="hljs-comment">// console.log(&quot;bi: &quot;, bi_en())</span><br><span class="hljs-comment">// console.log(&quot;lh: &quot;, lh_en())</span><br><br><span class="hljs-keyword">let</span> params_obj = &#123;<br>    <span class="hljs-string">&quot;act.os&quot;</span>: <span class="hljs-string">&quot;web_pc&quot;</span>,<br>    <span class="hljs-attr">callback</span>: <span class="hljs-string">&quot;sm_1655198659984&quot;</span>,<br>    <span class="hljs-attr">gg</span>: <span class="hljs-string">&quot;dxDK311uXf8=&quot;</span>,<br>    <span class="hljs-attr">hc</span>: <span class="hljs-string">&quot;zTCy2VSiDTs=&quot;</span>,<br>    <span class="hljs-attr">jk</span>: <span class="hljs-string">&quot;3lo6ZHKgDbw=&quot;</span>,<br>    <span class="hljs-attr">mj</span>: <span class="hljs-string">&quot;v0m4FQJiJZM=&quot;</span>,<br>    <span class="hljs-attr">nw</span>: <span class="hljs-string">&quot;SnU1RrrUTgo=&quot;</span>,<br>    <span class="hljs-attr">organization</span>: <span class="hljs-string">&quot;eR46sBuqF0fdw7KWFLYa&quot;</span>,<br>    <span class="hljs-attr">ostype</span>: <span class="hljs-string">&quot;web&quot;</span>,<br>    <span class="hljs-attr">protocol</span>: <span class="hljs-string">&quot;157&quot;</span>,<br>    <span class="hljs-attr">rb</span>: <span class="hljs-string">&quot;iRzXEkUq3Qx5XlzVpstrSa0XOcbwCHY6KMNEv5A92v1yLcqh00ww9bvpx9D+aDxqC5Ose25uikoFNNSsv2NG1oZ/Lnikv00pEkzTVIU6UxPa0kzgHSQJduWsfOCe/LVsKv3Fmh4YW1g=&quot;</span>,<br>    <span class="hljs-attr">ri</span>: <span class="hljs-string">&quot;2wl3pxcDHA4=&quot;</span>,<br>    <span class="hljs-attr">rid</span>: <span class="hljs-string">&quot;20220614172348b609260385fac9e2e4&quot;</span>,<br>    <span class="hljs-attr">rversion</span>: <span class="hljs-string">&quot;1.0.1&quot;</span>,<br>    <span class="hljs-attr">sdkver</span>: <span class="hljs-string">&quot;1.1.3&quot;</span>,<br>    <span class="hljs-attr">up</span>: <span class="hljs-string">&quot;WNog3ObSmdE=&quot;</span>,<br>    <span class="hljs-attr">wr</span>: <span class="hljs-string">&quot;JzSBoH4tywA=&quot;</span>,<br>    <span class="hljs-attr">zc</span>: <span class="hljs-string">&quot;27YqZJ0sAng=&quot;</span>,<br>    <span class="hljs-attr">zj</span>: <span class="hljs-string">&quot;lKh+EJ0cm3A=&quot;</span>,<br>&#125;<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">makeUrl</span>(<span class="hljs-string">&quot;https://&quot;</span>, <span class="hljs-string">&quot;captcha.fengkongcloud.cn&quot;</span>, <span class="hljs-string">&quot;/ca/v2/fverify&quot;</span>, params_obj))<br><br><span class="hljs-comment">// console.log(_0x72dc4f(&quot;241ee979&quot;, &quot;0.565&quot;, 1, 0))</span><br><span class="hljs-comment">// console.log(_0x72dc4f(&quot;4372c1ba&quot;, &quot;default&quot;, 1, 0))</span><br><br><br><br><br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><p><strong>调用</strong></p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">organization:</span><br>    固定值<br><span class="hljs-symbol">dc:</span><br>    self.init_execjs_object.<span class="hljs-keyword">call</span>(<span class="hljs-string">&quot;dc_en&quot;</span>)<br><span class="hljs-symbol">am:</span><br>    self.init_execjs_object.<span class="hljs-keyword">call</span>(<span class="hljs-string">&quot;am_en&quot;</span>, sub_time_stamp)<br>    sub_time_stamp: 轨迹最后一位timestamp + 随机值<br><span class="hljs-symbol">jv:</span><br>    self.init_execjs_object.<span class="hljs-keyword">call</span>(<span class="hljs-string">&quot;jv_en&quot;</span>),  # web + _0x14cd(<span class="hljs-number">0</span>x211)<br><span class="hljs-symbol">protocol:</span><br>    <span class="hljs-number">158</span><br><span class="hljs-symbol">gr:</span><br>    self.init_execjs_object.<span class="hljs-keyword">call</span>(<span class="hljs-string">&quot;gr_en&quot;</span>),  # zh-cn + _0x14cd(<span class="hljs-number">0</span>x1b2)<br><span class="hljs-symbol">lh:</span><br>    self.init_execjs_object.<span class="hljs-keyword">call</span>(<span class="hljs-string">&quot;lh_en&quot;</span>),  # -<span class="hljs-number">1</span>, <span class="hljs-string">&quot;90e8fd86&quot;</span><br><span class="hljs-symbol">rid:</span><br>    self.captcha_rid 获取滑块配置接口中的 rid<br><span class="hljs-symbol">ke:</span><br>    self.init_execjs_object.<span class="hljs-keyword">call</span>(<span class="hljs-string">&quot;ke_en&quot;</span>),  # <span class="hljs-number">200</span>, _0x14cd(<span class="hljs-number">0</span>x135)<br><span class="hljs-symbol">rversion:</span><span class="hljs-comment">&#x27;</span><br>    <span class="hljs-number">1.0</span>.<span class="hljs-number">1</span><br><span class="hljs-symbol">io:</span><br>    self.init_execjs_object.<span class="hljs-keyword">call</span>(<span class="hljs-string">&quot;io_en&quot;</span>, end_x),  # mouseEndX / <span class="hljs-number">400</span>, _0x14cd(<span class="hljs-number">0</span>x22d)<br><span class="hljs-symbol">callback:</span><br>    f<span class="hljs-comment">&#x27;sm_&#123;str(int(time.time() * 1000))&#125;&#x27;,</span><br><span class="hljs-symbol">ak:</span><br>    self.init_execjs_object.<span class="hljs-keyword">call</span>(<span class="hljs-string">&quot;ak_en&quot;</span>),  # <span class="hljs-number">1</span>, <span class="hljs-string">&quot;d949a6f5&quot;</span><br><span class="hljs-symbol">lg:</span><br>    self.init_execjs_object.<span class="hljs-keyword">call</span>(<span class="hljs-string">&quot;lg_en&quot;</span>),  # <span class="hljs-number">400</span>, _0x14cd(<span class="hljs-number">0</span>x23a)<br><span class="hljs-symbol">sdkver:</span><br>    <span class="hljs-number">1.1</span>.<span class="hljs-number">3</span><br><span class="hljs-symbol">bi:</span><br>    self.init_execjs_object.<span class="hljs-keyword">call</span>(<span class="hljs-string">&quot;bi_en&quot;</span>),  # <span class="hljs-number">0</span>, _0x14cd(<span class="hljs-number">0</span>x23e)<br><span class="hljs-symbol">on:</span><br>    self.init_execjs_object.<span class="hljs-keyword">call</span>(<span class="hljs-string">&quot;on_en&quot;</span>, slide_array),  # slideArray, _0x14cd(<span class="hljs-number">0</span>x363)<br>    slideArray格式 [[<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">100</span>], [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">200</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">300</span>], ... [<span class="hljs-number">281</span>, <span class="hljs-number">28</span>, <span class="hljs-number">1700</span>] ...]<br><span class="hljs-symbol">ostype:</span><br>    web<br>act.os:<br>    web_pc<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>各类平台加密算法</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>爬虫-TLS对抗</title>
    <link href="/posts/695ca51d/"/>
    <url>/posts/695ca51d/</url>
    
    <content type="html"><![CDATA[<h2 id="针对TLS的对抗"><a href="#针对TLS的对抗" class="headerlink" title="针对TLS的对抗"></a>针对TLS的对抗</h2><p>方法一：<br>1.<a href="https://github.com/synodriver/pycurl/blob/master/special.markdown">https://github.com/synodriver/pycurl/blob/master/special.markdown</a></p><p>2.git clone <a href="https://github.com/ycq0125/pycurl.git">https://github.com/ycq0125/pycurl.git</a></p><p>3.cd pycurl搞定。可以把./pycurl/requests_curl 整个移动到site-package目录下，就可以全局使用了</p><p>方法二：<br><a href="https://pypi.org/project/requests-curl-antitls/">https://pypi.org/project/requests-curl-antitls/</a> 内有详细步骤</p><p>方法三：<br>镜像有点大，不过有完整的编译环境<br>docker pull geekbyte1/pyantitls:v1.0<br>docker run -it -d geekbyte1/pyantitls:v1.0</p><p>方法四：<br>Q佬的Dockerfile版<br><a href="https://mp.weixin.qq.com/s/UZlLuzlQZrI7w82HI7zGuw">https://mp.weixin.qq.com/s/UZlLuzlQZrI7w82HI7zGuw</a></p><p>方法五：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> random<br><br><span class="hljs-keyword">from</span> requests.adapters <span class="hljs-keyword">import</span> HTTPAdapter<br><span class="hljs-keyword">from</span> requests.packages.urllib3.util.ssl_ <span class="hljs-keyword">import</span> create_urllib3_context<br><br>ORIGIN_CIPHERS = (<span class="hljs-string">&#x27;ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+HIGH:&#x27;</span><br>                  <span class="hljs-string">&#x27;DH+HIGH:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+HIGH:RSA+3DES&#x27;</span>)<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">DESAdapter</span>(<span class="hljs-title class_ inherited__">HTTPAdapter</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, *args, **kwargs</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        A TransportAdapter that re-enables 3DES support in Requests.</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        CIPHERS = ORIGIN_CIPHERS.split(<span class="hljs-string">&#x27;:&#x27;</span>)<br>        random.shuffle(CIPHERS)<br>        CIPHERS = <span class="hljs-string">&#x27;:&#x27;</span>.join(CIPHERS)<br>        self.CIPHERS = CIPHERS + <span class="hljs-string">&#x27;:!aNULL:!eNULL:!MD5&#x27;</span><br>        <span class="hljs-built_in">super</span>().__init__(*args, **kwargs)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">init_poolmanager</span>(<span class="hljs-params">self, *args, **kwargs</span>):<br>        context = create_urllib3_context(ciphers=self.CIPHERS)<br>        kwargs[<span class="hljs-string">&#x27;ssl_context&#x27;</span>] = context<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">super</span>(DESAdapter, self).init_poolmanager(*args, **kwargs)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">proxy_manager_for</span>(<span class="hljs-params">self, *args, **kwargs</span>):<br>        context = create_urllib3_context(ciphers=self.CIPHERS)<br>        kwargs[<span class="hljs-string">&#x27;ssl_context&#x27;</span>] = context<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">super</span>(DESAdapter, self).proxy_manager_for(*args, **kwargs)<br><br><br><span class="hljs-keyword">import</span> requests<br><br>headers = &#123;<br>    <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36&#x27;</span>&#125;<br>s = requests.Session()<br>s.headers.update(headers)<br><br><span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):<br>    s.mount(<span class="hljs-string">&#x27;https://ja3er.com&#x27;</span>, DESAdapter())<br>    resp = s.get(<span class="hljs-string">&#x27;https://ja3er.com/json&#x27;</span>).json()<br>    <span class="hljs-built_in">print</span>(resp)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ja3_test</span>(<span class="hljs-params">session</span>):<br>    resp = session.get(<span class="hljs-string">&#x27;https://ja3er.com/json&#x27;</span>).json()<br>    <span class="hljs-keyword">return</span> resp<br><br><br></code></pre></td></tr></table></figure><p>另外下面这个是vmwear的镜像，已经编译好的环境，可以自己拿来玩玩<br>链接：<a href="https://pan.baidu.com/s/1_R02JKqvmA8Km4QNAKYfYg">https://pan.baidu.com/s/1_R02JKqvmA8Km4QNAKYfYg</a><br>提取码：curl</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>爬虫-基础</title>
    <link href="/posts/6b0f3821/"/>
    <url>/posts/6b0f3821/</url>
    
    <content type="html"><![CDATA[<h3 id="1-Python基础"><a href="#1-Python基础" class="headerlink" title="1. Python基础"></a>1. <a href="https://www.liaoxuefeng.com/wiki/1016959663602400">Python基础</a></h3><h3 id="2-requests库使用"><a href="#2-requests库使用" class="headerlink" title="2. requests库使用"></a>2. <a href="https://www.liaoxuefeng.com/wiki/1016959663602400/1183249464292448">requests库使用</a></h3><h3 id="3-Chrome抓包详解"><a href="#3-Chrome抓包详解" class="headerlink" title="3. Chrome抓包详解"></a>3. <a href="https://zhuanlan.zhihu.com/p/32825491">Chrome抓包详解</a></h3><h3 id="4-Fiddler抓包详解"><a href="#4-Fiddler抓包详解" class="headerlink" title="4. Fiddler抓包详解"></a>4. <a href="https://juejin.cn/post/6844904042422861831">Fiddler抓包详解</a></h3><h3 id="5-一键复制chrome包-转为Python代码-curlconverter"><a href="#5-一键复制chrome包-转为Python代码-curlconverter" class="headerlink" title="5. 一键复制chrome包,转为Python代码 curlconverter"></a>5. 一键复制chrome包,转为Python代码 <a href="https://curlconverter.com/">curlconverter</a></h3><p><img src="img_1.png" alt="复制curl-bash"><br><img src="img.png" alt="粘贴至curlconverter"></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>基础</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>某音PC加密算法</title>
    <link href="/posts/8c44cadd/"/>
    <url>/posts/8c44cadd/</url>
    
    <content type="html"><![CDATA[<h2 id="抖音PC加密算法"><a href="#抖音PC加密算法" class="headerlink" title="抖音PC加密算法"></a>抖音PC加密算法</h2><h3 id="signature"><a href="#signature" class="headerlink" title="_signature"></a>_signature</h3><h4 id="加密源码"><a href="#加密源码" class="headerlink" title="加密源码"></a>加密源码</h4><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_big_num</span>(<span class="hljs-params">time_stamp, href</span>) &#123;<br>    <span class="hljs-comment">// 获取最大数加密 根据时间戳和location.href 生成</span><br>    <span class="hljs-keyword">var</span> string_formcharcode = time_stamp + href;<br>    <span class="hljs-keyword">var</span> href_length = href.<span class="hljs-property">length</span>;<br>    <span class="hljs-keyword">var</span> start_num = <span class="hljs-number">0</span>;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> char <span class="hljs-keyword">of</span> string_formcharcode) &#123;<br>        <span class="hljs-keyword">var</span> num = char.<span class="hljs-title function_">charCodeAt</span>();<br>        <span class="hljs-keyword">var</span> num = start_num ^ num;<br>        <span class="hljs-keyword">var</span> num = num * <span class="hljs-number">65599</span>;<br>        <span class="hljs-keyword">var</span> start_num = num &gt;&gt;&gt; <span class="hljs-number">0</span>;<br>    &#125;<br>    start_num = start_num % <span class="hljs-number">65521</span>;<span class="hljs-comment">//这个就是num7</span><br>    <span class="hljs-keyword">var</span> num7 = start_num;<br>    start_num = start_num * <span class="hljs-number">65521</span>;<br>    start_num = time_stamp ^ start_num;<br>    start_num = start_num &gt;&gt;&gt; <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">var</span> add0_num = <span class="hljs-number">31</span> - start_num.<span class="hljs-title function_">toString</span>(<span class="hljs-number">2</span>).<span class="hljs-property">length</span>;<br>    <span class="hljs-keyword">if</span> (add0_num &gt;= <span class="hljs-number">0</span>) &#123;<br>        result = <span class="hljs-string">&quot;100000001100000&quot;</span> + <span class="hljs-string">&quot;0&quot;</span>.<span class="hljs-title function_">repeat</span>(add0_num) + start_num.<span class="hljs-title function_">toString</span>(<span class="hljs-number">2</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        result = <span class="hljs-string">&quot;100000001100000&quot;</span>.<span class="hljs-title function_">substr</span>(<span class="hljs-number">0</span>, <span class="hljs-string">&quot;100000001100000&quot;</span>.<span class="hljs-property">length</span> + add0_num) + start_num.<span class="hljs-title function_">toString</span>(<span class="hljs-number">2</span>);<br>    &#125;<br><br>    result = <span class="hljs-built_in">parseInt</span>(result, <span class="hljs-number">2</span>);<br>    <span class="hljs-keyword">return</span> &#123;<span class="hljs-attr">result</span>: result, <span class="hljs-attr">num7</span>: num7&#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_big_num_enc</span>(<span class="hljs-params">big_num</span>) &#123;<br>    <span class="hljs-comment">// 353数自身的加密</span><br>    <span class="hljs-keyword">var</span> start_num = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> char <span class="hljs-keyword">of</span> big_num.<span class="hljs-title function_">toString</span>()) &#123;<br>        <span class="hljs-keyword">var</span> num = char.<span class="hljs-title function_">charCodeAt</span>();<br>        <span class="hljs-keyword">var</span> num = start_num ^ num;<br>        <span class="hljs-keyword">var</span> num = num * <span class="hljs-number">65599</span>;<br>        <span class="hljs-keyword">var</span> start_num = num &gt;&gt;&gt; <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> start_num<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_ua_num</span>(<span class="hljs-params">ua_string, big_num_enc</span>) &#123;<br>    <span class="hljs-comment">// 根据ua获取的数</span><br>    <span class="hljs-keyword">var</span> start_num = big_num_enc;  <span class="hljs-comment">//根据大数获取的</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> char <span class="hljs-keyword">of</span> ua_string) &#123;<br>        <span class="hljs-keyword">var</span> num = char.<span class="hljs-title function_">charCodeAt</span>();<br>        <span class="hljs-keyword">var</span> num = start_num ^ num;<br>        <span class="hljs-keyword">var</span> num = num * <span class="hljs-number">65599</span>;<br>        <span class="hljs-keyword">var</span> start_num = num &gt;&gt;&gt; <span class="hljs-number">0</span>;<br>    &#125;<br>    num = start_num % <span class="hljs-number">65521</span>;<br>    ua_num = num &lt;&lt; <span class="hljs-number">16</span>;<br>    <span class="hljs-keyword">return</span> ua_num<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_num5</span>(<span class="hljs-params">data_string, ua_string, big_num</span>) &#123;<br>    <span class="hljs-comment">// 根据请求数据生成的</span><br>    <span class="hljs-keyword">var</span> big_num_enc = <span class="hljs-title function_">get_big_num_enc</span>(big_num);<br>    <span class="hljs-keyword">var</span> start_num = big_num_enc;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> char <span class="hljs-keyword">of</span> data_string) &#123;<br>        <span class="hljs-keyword">var</span> num = char.<span class="hljs-title function_">charCodeAt</span>();<br>        <span class="hljs-keyword">var</span> num = start_num ^ num;<br>        <span class="hljs-keyword">var</span> num = num * <span class="hljs-number">65599</span>;<br>        <span class="hljs-keyword">var</span> start_num = num &gt;&gt;&gt; <span class="hljs-number">0</span>;<br>    &#125;<br>    num = start_num % <span class="hljs-number">65521</span>;<br>    num = <span class="hljs-title function_">get_ua_num</span>(ua_string, big_num_enc) | num;<br>    <span class="hljs-keyword">return</span> num<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_num6</span>(<span class="hljs-params">big_num, num</span>) &#123;<br>    <span class="hljs-keyword">var</span> num1 = <span class="hljs-number">288</span> ^ big_num;<br>    num2 = num &lt;&lt; <span class="hljs-number">28</span>;<br>    num1 = num1 &gt;&gt;&gt; <span class="hljs-number">4</span>;<br>    <span class="hljs-keyword">var</span> result = num2 | num1<br>    <span class="hljs-keyword">return</span> result<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_all_num</span>(<span class="hljs-params">big_num, data_string, ua_string</span>) &#123;<br>    <span class="hljs-comment">// 根据最大数获取7组数</span><br>    <span class="hljs-keyword">var</span> num_7 = big_num[<span class="hljs-string">&quot;num7&quot;</span>];<br>    big_num = big_num[<span class="hljs-string">&quot;result&quot;</span>];<br>    <span class="hljs-keyword">var</span> num_1 = big_num &gt;&gt; <span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">var</span> num_2 = big_num &lt;&lt; <span class="hljs-number">28</span>;<br>    num_2 += <span class="hljs-number">515</span>;<br>    <span class="hljs-keyword">var</span> num_4 = big_num ^ <span class="hljs-number">3963386674</span>;<br>    <span class="hljs-keyword">var</span> num_3 = num_4 &gt;&gt;&gt; <span class="hljs-number">6</span>;<br>    num_3 = -<span class="hljs-number">1073741824</span> | num_3;<br>    <span class="hljs-keyword">var</span> num = <span class="hljs-title function_">get_num5</span>(data_string, ua_string, big_num);<br>    <span class="hljs-keyword">var</span> num_5 = num &gt;&gt; <span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">var</span> num_6 = <span class="hljs-title function_">get_num6</span>(big_num, num);<br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-attr">num_1</span>: num_1,<br>        <span class="hljs-attr">num_2</span>: num_2,<br>        <span class="hljs-attr">num_3</span>: num_3,<br>        <span class="hljs-attr">num_4</span>: num_4,<br>        <span class="hljs-attr">num_5</span>: num_5,<br>        <span class="hljs-attr">num_6</span>: num_6,<br>        <span class="hljs-attr">num_7</span>: num_7,<br><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_str</span>(<span class="hljs-params">all_num</span>) &#123;<br>    <span class="hljs-comment">//根据7个数生成字符</span><br>    <span class="hljs-keyword">var</span> _signature = <span class="hljs-string">&quot;_02B4Z6wo00f01&quot;</span>;<br>    <span class="hljs-keyword">for</span> (num <span class="hljs-keyword">in</span> all_num) &#123;<br>        <span class="hljs-keyword">if</span> (num != <span class="hljs-string">&quot;num_4&quot;</span>) &#123;<br>            <span class="hljs-keyword">var</span> str = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-keyword">for</span> (i <span class="hljs-keyword">of</span> [<span class="hljs-number">24</span>, <span class="hljs-number">18</span>, <span class="hljs-number">12</span>, <span class="hljs-number">6</span>, <span class="hljs-number">0</span>]) &#123;<br>                <span class="hljs-keyword">var</span> c_num = all_num[num] &gt;&gt; i;<br>                <span class="hljs-keyword">var</span> c_num = c_num &amp; <span class="hljs-number">63</span>;<br>                <span class="hljs-keyword">if</span> (c_num &lt; <span class="hljs-number">26</span>) &#123;<br>                    c_num += <span class="hljs-number">65</span>;<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (c_num &lt; <span class="hljs-number">52</span>) &#123;<br>                    c_num += <span class="hljs-number">71</span>;<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (c_num &lt; <span class="hljs-number">62</span>) &#123;<br>                    c_num -= <span class="hljs-number">4</span>;<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    c_num -= <span class="hljs-number">17</span>;<br>                &#125;<br>                str += <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(c_num);<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">var</span> str = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-keyword">var</span> c_num = all_num[num] &amp; <span class="hljs-number">63</span>;<br>            <span class="hljs-keyword">if</span> (c_num &lt; <span class="hljs-number">26</span>) &#123;<br>                c_num += <span class="hljs-number">65</span>;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (c_num &lt; <span class="hljs-number">52</span>) &#123;<br>                c_num += <span class="hljs-number">71</span>;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (c_num &lt; <span class="hljs-number">62</span>) &#123;<br>                c_num -= <span class="hljs-number">4</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                c_num -= <span class="hljs-number">17</span>;<br>            &#125;<br>            str = <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(c_num);<br>        &#125;<br>        _signature += str;<br>    &#125;<br>    <span class="hljs-keyword">return</span> _signature<br><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_last_two_char</span>(<span class="hljs-params">data_string</span>) &#123;<br>    <span class="hljs-comment">//最后两个字符是对前面的所有签名</span><br>    <span class="hljs-keyword">var</span> start_num = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> char <span class="hljs-keyword">of</span> data_string) &#123;<br>        <span class="hljs-keyword">var</span> num = char.<span class="hljs-title function_">charCodeAt</span>();<br>        <span class="hljs-keyword">var</span> start_num = start_num * <span class="hljs-number">65599</span>;<br>        <span class="hljs-keyword">var</span> start_num = start_num + num;<br>        <span class="hljs-keyword">var</span> start_num = start_num &gt;&gt;&gt; <span class="hljs-number">0</span>;<br>    &#125;<br>    start_num = <span class="hljs-built_in">parseInt</span>(start_num).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>);<br>    <span class="hljs-keyword">var</span> result = start_num.<span class="hljs-title function_">substr</span>(<span class="hljs-number">6</span>, <span class="hljs-number">2</span>);<br>    <span class="hljs-keyword">return</span> result<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_signature</span>(<span class="hljs-params">data_string, href, ua_string</span>) &#123;<br>    <span class="hljs-keyword">var</span> time_stamp = <span class="hljs-built_in">parseInt</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getTime</span>() / <span class="hljs-number">1000</span>);<br>    <span class="hljs-keyword">var</span> big_num = <span class="hljs-title function_">get_big_num</span>(time_stamp, href);<br>    <span class="hljs-keyword">var</span> all_num = <span class="hljs-title function_">get_all_num</span>(big_num, data_string, ua_string);<br>    <span class="hljs-keyword">var</span> _signature = <span class="hljs-title function_">get_str</span>(all_num);<br>    <span class="hljs-comment">// _signature = _signature + &quot;D-vHgXmfl2aFdBibpwz1kCMKr65GXN.VpRP4scONi9bV84YozH7mK5xODo-sqg2jd209&quot;;</span><br>    _signature = _signature + <span class="hljs-title function_">get_last_two_char</span>(_signature);<br>    <span class="hljs-keyword">return</span> _signature;<br><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_body_hash</span>(<span class="hljs-params">data_string</span>) &#123;<br>    <span class="hljs-comment">//data数据签名</span><br>    <span class="hljs-keyword">var</span> start_num = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> char <span class="hljs-keyword">of</span> data_string) &#123;<br>        <span class="hljs-keyword">var</span> num = char.<span class="hljs-title function_">charCodeAt</span>();<br>        <span class="hljs-keyword">var</span> start_num = start_num * <span class="hljs-number">65599</span>;<br>        <span class="hljs-keyword">var</span> start_num = start_num + num;<br>        <span class="hljs-keyword">var</span> start_num = start_num &gt;&gt;&gt; <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> start_num<br>&#125;<br><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">mobile_encrypt</span>(<span class="hljs-params">e</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t, n = e.<span class="hljs-title function_">toString</span>(), r = [], o = <span class="hljs-number">0</span>; o &lt; n.<span class="hljs-property">length</span>; o++)<br>        <span class="hljs-number">0</span> &lt;= (t = n.<span class="hljs-title function_">charCodeAt</span>(o)) &amp;&amp; t &lt;= <span class="hljs-number">127</span> ? r.<span class="hljs-title function_">push</span>(t) : <span class="hljs-number">128</span> &lt;= t &amp;&amp; t &lt;= <span class="hljs-number">2047</span> ? (r.<span class="hljs-title function_">push</span>(<span class="hljs-number">192</span> | <span class="hljs-number">31</span> &amp; t &gt;&gt; <span class="hljs-number">6</span>),<br>            r.<span class="hljs-title function_">push</span>(<span class="hljs-number">128</span> | <span class="hljs-number">63</span> &amp; t)) : (<span class="hljs-number">2048</span> &lt;= t &amp;&amp; t &lt;= <span class="hljs-number">55295</span> || <span class="hljs-number">57344</span> &lt;= t &amp;&amp; t &lt;= <span class="hljs-number">65535</span>) &amp;&amp; (r.<span class="hljs-title function_">push</span>(<span class="hljs-number">224</span> | <span class="hljs-number">15</span> &amp; t &gt;&gt; <span class="hljs-number">12</span>),<br>            r.<span class="hljs-title function_">push</span>(<span class="hljs-number">128</span> | <span class="hljs-number">63</span> &amp; t &gt;&gt; <span class="hljs-number">6</span>),<br>            r.<span class="hljs-title function_">push</span>(<span class="hljs-number">128</span> | <span class="hljs-number">63</span> &amp; t));<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; r.<span class="hljs-property">length</span>; i++)<br>        r[i] &amp;= <span class="hljs-number">255</span>;<br>    <span class="hljs-keyword">var</span> new_array = [];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>, o = r.<span class="hljs-property">length</span>; i &lt; o; ++i) &#123;<br>        new_array.<span class="hljs-title function_">push</span>((<span class="hljs-number">5</span> ^ r[i]).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>    &#125;<br>    <span class="hljs-keyword">return</span> new_array.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>&#125;<br><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">demo</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> post_data = <span class="hljs-string">&#x27;&#123;&quot;keyword_list&quot;:[&quot;联想&quot;],&quot;app_name&quot;:&quot;aweme&quot;,&quot;start_date&quot;:&quot;20211101&quot;,&quot;end_date&quot;:&quot;20211214&quot;&#125;&#x27;</span>;<br>    <span class="hljs-keyword">var</span> ua_string = <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4484.7 Safari/537.36&quot;</span>;<br>    <span class="hljs-keyword">var</span> body_hash = <span class="hljs-title function_">get_body_hash</span>(post_data);<br>    <span class="hljs-keyword">var</span> data_string = <span class="hljs-string">&quot;body_hash=&quot;</span> + body_hash + <span class="hljs-string">&quot;&amp;pathname=/api/open/index/get_multi_keyword_interpretation&quot;</span>;  <span class="hljs-comment">//需要排序</span><br>    <span class="hljs-keyword">var</span> href = <span class="hljs-string">&quot;trendinsight.oceanengine.com/api/open/index/get_multi_keyword_interpretation&quot;</span>;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;加密参数：&quot;</span> + <span class="hljs-title function_">get_signature</span>(data_string, href, ua_string));<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">get_signature</span>(data_string, href, ua_string);<br><br>&#125;<br><br><span class="hljs-comment">// demo();</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">post_signature</span>(<span class="hljs-params">post_data, href, path_name, ua_string</span>) &#123;<br>    <span class="hljs-keyword">var</span> body_hash = <span class="hljs-title function_">get_body_hash</span>(post_data);<br>    <span class="hljs-keyword">var</span> data_string = <span class="hljs-string">&quot;body_hash=&quot;</span> + body_hash + path_name;  <span class="hljs-comment">//需要排序</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">get_signature</span>(data_string, href, ua_string);<br><br>&#125;<br><br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">get_signature</span>(<span class="hljs-string">&quot;062761d1b00536b0e349e&quot;</span>, <span class="hljs-string">&quot;https://www.douyin.com/discover&quot;</span>, <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36&quot;</span>))<br><br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><h4 id="调用-GET"><a href="#调用-GET" class="headerlink" title="调用(GET)"></a>调用(GET)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> execjs<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getSignatureEncrypt</span>(<span class="hljs-params">js_path: <span class="hljs-built_in">str</span>, ac_nonce: <span class="hljs-built_in">str</span>, request_url: <span class="hljs-built_in">str</span>, user_agent: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    :param js_path 加密JS路径</span><br><span class="hljs-string">    :param ac_nonce 首页 www.douyin.com/, 响应headers中 set-cookie[&quot;__ac_nonce&quot;]</span><br><span class="hljs-string">    :param request_url 接口url, 去除msToken, X-Bogus, _signature</span><br><span class="hljs-string">    :param user_agent: 请求头</span><br><span class="hljs-string">    :return 返回signature加密字符串</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(js_path, <span class="hljs-string">&quot;r&quot;</span>, encoding=<span class="hljs-string">&quot;utf-8&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        res = f.read()<br>        ex_js = execjs.<span class="hljs-built_in">compile</span>(res)<br>    <span class="hljs-keyword">return</span> ex_js.call(<span class="hljs-string">&quot;get_signature&quot;</span>, ac_nonce, request_url, user_agent)<br></code></pre></td></tr></table></figure><h4 id="调用-POST"><a href="#调用-POST" class="headerlink" title="调用(POST)"></a>调用(POST)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> execjs<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">PostSignatureEncrypt</span>(<span class="hljs-params">js_path: <span class="hljs-built_in">str</span>, data_string: <span class="hljs-built_in">str</span>, href: <span class="hljs-built_in">str</span>, path_name:<span class="hljs-built_in">str</span>, user_agent: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    :param js_path 加密JS路径</span><br><span class="hljs-string">    :param data_string  类似 f&quot;mix_mode=1&amp;mobile=&#123;mobile_encrypt&#125;&amp;code=&#123;code_encrypt&#125;&amp;service=https%3A%2F%2Fwww.douyin.com&amp;fixed_mix_mode=1&quot;</span><br><span class="hljs-string">    :param href  类似 f&quot;sso.douyin.com/quick_login_only/?aid=&#123;AID&#125;&amp;account_sdk_source=sso&amp;language=zh&quot;</span><br><span class="hljs-string">    :param path_name 类似 &quot;&amp;pathname=/passport/sso/quick_login/v2/&amp;tt_webid=&amp;uuid=&quot;</span><br><span class="hljs-string">    :param user_agent: 请求头</span><br><span class="hljs-string">    :return 返回signature加密字符串</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(js_path, <span class="hljs-string">&quot;r&quot;</span>, encoding=<span class="hljs-string">&quot;utf-8&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        res = f.read()<br>        ex_js = execjs.<span class="hljs-built_in">compile</span>(res)<br>    <span class="hljs-keyword">return</span> ex_js.call(<span class="hljs-string">&quot;post_signature&quot;</span>, data_string, href, path_name, user_agent)<br><br></code></pre></td></tr></table></figure><h3 id="X-Bogus"><a href="#X-Bogus" class="headerlink" title="X-Bogus"></a>X-Bogus</h3><h4 id="加密源码-1"><a href="#加密源码-1" class="headerlink" title="加密源码"></a>加密源码</h4><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//抖音web弹幕xb算法  by xhs</span><br><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;crypto-js&#x27;</span>);<br><span class="hljs-keyword">var</span> <span class="hljs-title class_">MD5</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;crypto-js/md5&quot;</span>);<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">_0x237a87</span>(<span class="hljs-params">_0x5c3d2a</span>) &#123;<br>    <span class="hljs-comment">//获取列表</span><br>    <span class="hljs-keyword">var</span> _0x50ff23 = [<span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>]<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> _0x1204d6 = _0x5c3d2a[<span class="hljs-string">&#x27;length&#x27;</span>] &gt;&gt; <span class="hljs-number">0xa1e</span> * -<span class="hljs-number">0x2</span> + <span class="hljs-number">0x1937</span> + <span class="hljs-number">0x4fa</span> * -<span class="hljs-number">0x1</span>, _0x700552 = _0x1204d6 &lt;&lt; <span class="hljs-number">0x68</span> + -<span class="hljs-number">0xa29</span> + <span class="hljs-number">0x9c2</span>, _0x1673dd = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(_0x1204d6), _0x19eb71 = <span class="hljs-number">0xe9e</span> + -<span class="hljs-number">0x167</span> + -<span class="hljs-number">0xd37</span>, _0x249396 = <span class="hljs-number">0x1</span> * <span class="hljs-number">0x104a</span> + <span class="hljs-number">0xaa9</span> + <span class="hljs-number">0x1af3</span> * -<span class="hljs-number">0x1</span>; _0x249396 &lt; _0x700552;)<br>        _0x1673dd[_0x19eb71++] = _0x50ff23[_0x5c3d2a[<span class="hljs-string">&#x27;charCodeAt&#x27;</span>](_0x249396++)] &lt;&lt; -<span class="hljs-number">0x1938</span> + <span class="hljs-number">0x10c4</span> * -<span class="hljs-number">0x1</span> + <span class="hljs-number">0x2a00</span> | _0x50ff23[_0x5c3d2a[<span class="hljs-string">&#x27;charCodeAt&#x27;</span>](_0x249396++)];<br>    <span class="hljs-keyword">return</span> _0x1673dd;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">_0x238632</span>(<span class="hljs-params">_0x4cdef5, _0x268c9c</span>) &#123;<br>    <span class="hljs-comment">//签名ua</span><br>    <span class="hljs-keyword">let</span> _0x2b4641, _0xbb44d8 = [], _0x138ea3 = <span class="hljs-number">0x140</span> + -<span class="hljs-number">0x2038</span> + -<span class="hljs-number">0x7be</span> * -<span class="hljs-number">0x4</span>, _0xc9f8ff = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> _0x332e7e = <span class="hljs-number">0x17</span> * -<span class="hljs-number">0x8</span> + -<span class="hljs-number">0x910</span> + <span class="hljs-number">0x2</span> * <span class="hljs-number">0x4e4</span>; _0x332e7e &lt; <span class="hljs-number">0x24e</span> + -<span class="hljs-number">0x2533</span> + <span class="hljs-number">0xbf7</span> * <span class="hljs-number">0x3</span>; _0x332e7e++)<br>        _0xbb44d8[_0x332e7e] = _0x332e7e;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> _0x369701 = <span class="hljs-number">0x77a</span> * -<span class="hljs-number">0x5</span> + -<span class="hljs-number">0x3</span> * <span class="hljs-number">0x689</span> + -<span class="hljs-number">0x12ff</span> * -<span class="hljs-number">0x3</span>; _0x369701 &lt; <span class="hljs-number">0x1b3</span> * <span class="hljs-number">0x12</span> + -<span class="hljs-number">0x1e3</span> + <span class="hljs-number">0x3f5</span> * -<span class="hljs-number">0x7</span>; _0x369701++)<br>        _0x138ea3 = (_0x138ea3 + _0xbb44d8[_0x369701] + _0x4cdef5[<span class="hljs-string">&#x27;charCodeAt&#x27;</span>](_0x369701 % _0x4cdef5[<span class="hljs-string">&#x27;length&#x27;</span>])) % (<span class="hljs-number">0x16d0</span> + <span class="hljs-number">0x12</span> * -<span class="hljs-number">0xf4</span> + <span class="hljs-number">0x254</span> * -<span class="hljs-number">0x2</span>),<br>            _0x2b4641 = _0xbb44d8[_0x369701],<br>            _0xbb44d8[_0x369701] = _0xbb44d8[_0x138ea3],<br>            _0xbb44d8[_0x138ea3] = _0x2b4641;<br>    <span class="hljs-keyword">let</span> _0x1a0256 = <span class="hljs-number">0x1ca3</span> + <span class="hljs-number">0x1a34</span> + -<span class="hljs-number">0x36d7</span>;<br>    _0x138ea3 = <span class="hljs-number">0xdc</span> * <span class="hljs-number">0x28</span> + -<span class="hljs-number">0x15d</span> * <span class="hljs-number">0x1</span> + <span class="hljs-number">0x3ab</span> * -<span class="hljs-number">0x9</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> _0x1b288d = <span class="hljs-number">0x9</span> * <span class="hljs-number">0x349</span> + <span class="hljs-number">0x1e7f</span> + -<span class="hljs-number">0x3c10</span> * <span class="hljs-number">0x1</span>; _0x1b288d &lt; _0x268c9c[<span class="hljs-string">&#x27;length&#x27;</span>]; _0x1b288d++)<br>        _0x1a0256 = (_0x1a0256 + (<span class="hljs-number">0x14ef</span> * -<span class="hljs-number">0x1</span> + -<span class="hljs-number">0x1752</span> + -<span class="hljs-number">0x37</span> * -<span class="hljs-number">0xce</span>)) % (-<span class="hljs-number">0x312</span> + <span class="hljs-number">0x171d</span> + -<span class="hljs-number">0x130b</span>),<br>            _0x138ea3 = (_0x138ea3 + _0xbb44d8[_0x1a0256]) % (<span class="hljs-number">0x3</span> * <span class="hljs-number">0x66d</span> + -<span class="hljs-number">0x3</span> * -<span class="hljs-number">0x13d</span> + -<span class="hljs-number">0x15fe</span>),<br>            _0x2b4641 = _0xbb44d8[_0x1a0256],<br>            _0xbb44d8[_0x1a0256] = _0xbb44d8[_0x138ea3],<br>            _0xbb44d8[_0x138ea3] = _0x2b4641,<br>            _0xc9f8ff += <span class="hljs-title class_">String</span>[<span class="hljs-string">&#x27;fromCharCode&#x27;</span>](_0x268c9c[<span class="hljs-string">&#x27;charCodeAt&#x27;</span>](_0x1b288d) ^ _0xbb44d8[(_0xbb44d8[_0x1a0256] + _0xbb44d8[_0x138ea3]) % (-<span class="hljs-number">0x1db3</span> + <span class="hljs-number">0x1</span> * -<span class="hljs-number">0x733</span> + -<span class="hljs-number">0x15</span> * -<span class="hljs-number">0x1ce</span>)]);<br>    <span class="hljs-keyword">return</span> _0xc9f8ff;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">md5</span>(<span class="hljs-params">str</span>) &#123;<br>    <span class="hljs-keyword">var</span> str = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>.<span class="hljs-title function_">parse</span>(str);<br>    <span class="hljs-keyword">var</span> str = <span class="hljs-title class_">MD5</span>(str).<span class="hljs-title function_">toString</span>();<br>    <span class="hljs-keyword">return</span> str<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hex_md5</span>(<span class="hljs-params">str</span>) &#123;<br>    <span class="hljs-keyword">var</span> str = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">enc</span>.<span class="hljs-property">Hex</span>.<span class="hljs-title function_">parse</span>(str);<br>    <span class="hljs-keyword">var</span> str = <span class="hljs-title class_">MD5</span>(str).<span class="hljs-title function_">toString</span>();<br>    <span class="hljs-keyword">return</span> str<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_one_list</span>(<span class="hljs-params">url_para</span>) &#123;<br>    <span class="hljs-keyword">var</span> str_1 = <span class="hljs-title function_">md5</span>(url_para);<br>    str_1 = <span class="hljs-title function_">hex_md5</span>(str_1);<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">_0x237a87</span>(str_1)<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_two_list</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> str_2 = <span class="hljs-title function_">hex_md5</span>(<span class="hljs-string">&quot;d41d8cd98f00b204e9800998ecf8427e&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">_0x237a87</span>(str_2)<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_three_list</span>(<span class="hljs-params">ua</span>) &#123;<br>    <span class="hljs-keyword">var</span> str_3 = <span class="hljs-title function_">_0x238632</span>(<span class="hljs-string">&quot;\u0001\u0001\b&quot;</span>, ua);<br>    str_3 = <span class="hljs-title class_">Buffer</span>.<span class="hljs-title function_">from</span>(str_3, <span class="hljs-string">&#x27;ASCII&#x27;</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-string">&#x27;base64&#x27;</span>);<br>    str_3 = <span class="hljs-title function_">md5</span>(str_3);<br>    str_3 = <span class="hljs-title function_">_0x237a87</span>(str_3);<br>    <span class="hljs-keyword">return</span> str_3<br><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_time_sign</span>(<span class="hljs-params">time_now</span>) &#123;<br>    <span class="hljs-comment">//时间的签名</span><br>    <span class="hljs-keyword">var</span> list_time = [];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i <span class="hljs-keyword">of</span> [<span class="hljs-number">24</span>, <span class="hljs-number">16</span>, <span class="hljs-number">8</span>, <span class="hljs-number">0</span>]) &#123;<br>        <span class="hljs-keyword">var</span> num_1 = time_now &gt;&gt; i;<br>        list_time = list_time.<span class="hljs-title function_">concat</span>(num_1 &amp; <span class="hljs-number">255</span>)<br>    &#125;<br>    <span class="hljs-keyword">return</span> list_time<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_num_sign</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">//3963386674的签名</span><br>    <span class="hljs-keyword">var</span> num = <span class="hljs-number">3963386674</span>;<br>    <span class="hljs-keyword">var</span> list_time = [];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i <span class="hljs-keyword">of</span> [<span class="hljs-number">24</span>, <span class="hljs-number">16</span>, <span class="hljs-number">8</span>, <span class="hljs-number">0</span>]) &#123;<br>        <span class="hljs-keyword">var</span> num_1 = num &gt;&gt; i;<br>        list_time = list_time.<span class="hljs-title function_">concat</span>(num_1 &amp; <span class="hljs-number">255</span>)<br>    &#125;<br>    <span class="hljs-keyword">return</span> list_time<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_last_sign</span>(<span class="hljs-params">index_list</span>) &#123;<br>    <span class="hljs-comment">//最后一位数是对前面的签名</span><br>    <span class="hljs-keyword">var</span> num = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i <span class="hljs-keyword">of</span> index_list) &#123;<br>        <span class="hljs-keyword">if</span> (num == <span class="hljs-number">0</span>) &#123;<br>            num = i;<br>            <span class="hljs-keyword">continue</span><br>        &#125;<br>        num = num ^ i;<br>    &#125;<br>    <span class="hljs-keyword">return</span> num<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_index_str</span>(<span class="hljs-params">url_para, ua, time_now</span>) &#123;<br>    <span class="hljs-keyword">var</span> get_one_list_list = <span class="hljs-title function_">get_one_list</span>(url_para);<br>    <span class="hljs-keyword">var</span> get_two_list_list = <span class="hljs-title function_">get_two_list</span>();<br>    <span class="hljs-keyword">var</span> get_three_list_list = <span class="hljs-title function_">get_three_list</span>(ua);<br>    <span class="hljs-keyword">var</span> index_list_1 = [<span class="hljs-number">64</span>, <span class="hljs-number">1.00390625</span>, <span class="hljs-number">1</span>, <span class="hljs-number">8</span>, get_one_list_list[<span class="hljs-number">14</span>], get_one_list_list[<span class="hljs-number">15</span>], get_two_list_list[<span class="hljs-number">14</span>], get_two_list_list[<span class="hljs-number">15</span>], get_three_list_list[<span class="hljs-number">14</span>], get_three_list_list[<span class="hljs-number">15</span>]];<br>    <span class="hljs-keyword">var</span> index_list_2 = <span class="hljs-title function_">get_time_sign</span>(time_now);<br>    <span class="hljs-keyword">var</span> index_list_3 = <span class="hljs-title function_">get_num_sign</span>();<br>    <span class="hljs-keyword">var</span> index_list = index_list_1.<span class="hljs-title function_">concat</span>(index_list_2, index_list_3);<br>    <span class="hljs-keyword">var</span> index_list_last = <span class="hljs-title function_">get_last_sign</span>(index_list);<br>    index_list = index_list.<span class="hljs-title function_">concat</span>(index_list_last);<br>    <span class="hljs-keyword">var</span> last_str = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i <span class="hljs-keyword">of</span> index_list) &#123;<br>        last_str += <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(i);<br>    &#125;<br>    last_str = <span class="hljs-string">&quot;\u0002ÿ&quot;</span> + <span class="hljs-title function_">_0x238632</span>(<span class="hljs-string">&quot;ÿ&quot;</span>, last_str);<br>    <span class="hljs-keyword">return</span> last_str<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">all_num</span>(<span class="hljs-params">last_str</span>) &#123;<br>    <span class="hljs-comment">//根据last_str 获取所有的大数组</span><br>    <span class="hljs-keyword">var</span> num_list = [];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; last_str.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">var</span> num_list = num_list.<span class="hljs-title function_">concat</span>(last_str.<span class="hljs-title function_">charCodeAt</span>(i));<br>    &#125;<br>    <span class="hljs-keyword">var</span> result = [];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; num_list.<span class="hljs-property">length</span>; i += <span class="hljs-number">3</span>) &#123;<br>        result.<span class="hljs-title function_">push</span>(num_list.<span class="hljs-title function_">slice</span>(i, i + <span class="hljs-number">3</span>))<br>    &#125;<br>    <span class="hljs-keyword">var</span> result_list = [];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i <span class="hljs-keyword">of</span> result) &#123;<br>        <span class="hljs-keyword">var</span> num_1 = i[<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-number">16</span>;<br>        <span class="hljs-keyword">var</span> num_2 = i[<span class="hljs-number">1</span>] &lt;&lt; <span class="hljs-number">8</span>;<br>        <span class="hljs-keyword">var</span> num_3 = num_1 ^ num_2;<br>        <span class="hljs-keyword">var</span> num_4 = num_3 ^ i[<span class="hljs-number">2</span>];<br>        result_list.<span class="hljs-title function_">push</span>(num_4)<br>    &#125;<br>    <span class="hljs-keyword">return</span> result_list<br><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_xb</span>(<span class="hljs-params">all_num_list</span>) &#123;<br>    <span class="hljs-comment">//根据列表获取索引生成xb</span><br>    <span class="hljs-keyword">var</span> _str = <span class="hljs-string">&quot;Dkdpgh4ZKsQB80/Mfvw36XI1R25-WUAlEi7NLboqYTOPuzmFjJnryx9HVGcaStCe=&quot;</span>;<br>    <span class="hljs-keyword">var</span> result_str = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i <span class="hljs-keyword">of</span> all_num_list) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j <span class="hljs-keyword">of</span> [[<span class="hljs-number">16515072</span>, <span class="hljs-number">18</span>], [<span class="hljs-number">258048</span>, <span class="hljs-number">12</span>], [<span class="hljs-number">4032</span>, <span class="hljs-number">6</span>], [<span class="hljs-number">63</span>, <span class="hljs-number">0</span>]]) &#123;<br>            <span class="hljs-keyword">var</span> num_1 = i &amp; j[<span class="hljs-number">0</span>];<br>            <span class="hljs-keyword">var</span> num_2 = num_1 &gt;&gt; j[<span class="hljs-number">1</span>];<br>            result_str += _str[num_2];<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> result_str<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">xb_main</span>(<span class="hljs-params">url_para, ua, time_now</span>) &#123;<br>    <span class="hljs-keyword">var</span> last_str = <span class="hljs-title function_">get_index_str</span>(url_para, ua, time_now);<br>    <span class="hljs-keyword">var</span> all_num_list = <span class="hljs-title function_">all_num</span>(last_str);<br>    <span class="hljs-keyword">var</span> xb = <span class="hljs-title function_">get_xb</span>(all_num_list);<br>    <span class="hljs-keyword">return</span> xb<br>&#125;<br><br><br><span class="hljs-keyword">var</span> url_para = <span class="hljs-string">&quot;device_platform=webapp&amp;aid=6383&amp;channel=channel_pc_web&amp;module_id=11&amp;count=6&amp;version_code=170400&amp;version_name=17.4.0&amp;cookie_enabled=true&amp;screen_width=1920&amp;screen_height=1080&amp;browser_language=zh-CN&amp;browser_platform=Win32&amp;browser_name=Chrome&amp;browser_version=100.0.4896.127&amp;browser_online=true&amp;engine_name=Blink&amp;engine_version=100.0.4896.127&amp;os_name=Windows&amp;os_version=10&amp;cpu_core_num=8&amp;device_memory=8&amp;platform=PC&amp;downlink=10&amp;effective_type=4g&amp;round_trip_time=100&quot;</span>;<br><span class="hljs-keyword">var</span> ua = <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36&quot;</span>;<br><span class="hljs-keyword">var</span> time_now = (<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getTime</span>() / <span class="hljs-number">1000</span>).<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">3</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;x-b:&quot;</span>, <span class="hljs-title function_">xb_main</span>(url_para, ua, time_now));<br><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_xb_ret</span>(<span class="hljs-params">url_para, ua</span>) &#123;<br>    <span class="hljs-keyword">var</span> time_now = (<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getTime</span>() / <span class="hljs-number">1000</span>).<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">3</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">xb_main</span>(url_para, ua, time_now)<br><br>&#125;<br><br><br><br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><h4 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> execjs<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">XBogusEncrypt</span>(<span class="hljs-params">js_path: <span class="hljs-built_in">str</span>, url_param: <span class="hljs-built_in">str</span>, user_agent: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    :param js_path 加密JS路径</span><br><span class="hljs-string">    :param url_param url中需要附带params参数(`?`后面), 如没有`?`则请求需要附带`?`</span><br><span class="hljs-string">        exp: https://www.douyin.com?</span><br><span class="hljs-string">    :return 返回X-Bogus加密字符串</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(js_path, <span class="hljs-string">&quot;r&quot;</span>, encoding=<span class="hljs-string">&quot;utf-8&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        res = f.read()<br>        ex_js = execjs.<span class="hljs-built_in">compile</span>(res)<br>    <span class="hljs-keyword">return</span> ex_js.call(<span class="hljs-string">&quot;get_xb_ret&quot;</span>, url_param, user_agent)<br></code></pre></td></tr></table></figure><h3 id="MobileNumber"><a href="#MobileNumber" class="headerlink" title="MobileNumber"></a>MobileNumber</h3><h4 id="加密源码-2"><a href="#加密源码-2" class="headerlink" title="加密源码"></a>加密源码</h4><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">mobile_encrypt</span>(<span class="hljs-params">e</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t, n = e.<span class="hljs-title function_">toString</span>(), r = [], o = <span class="hljs-number">0</span>; o &lt; n.<span class="hljs-property">length</span>; o++)<br>        <span class="hljs-number">0</span> &lt;= (t = n.<span class="hljs-title function_">charCodeAt</span>(o)) &amp;&amp; t &lt;= <span class="hljs-number">127</span> ? r.<span class="hljs-title function_">push</span>(t) : <span class="hljs-number">128</span> &lt;= t &amp;&amp; t &lt;= <span class="hljs-number">2047</span> ? (r.<span class="hljs-title function_">push</span>(<span class="hljs-number">192</span> | <span class="hljs-number">31</span> &amp; t &gt;&gt; <span class="hljs-number">6</span>),<br>            r.<span class="hljs-title function_">push</span>(<span class="hljs-number">128</span> | <span class="hljs-number">63</span> &amp; t)) : (<span class="hljs-number">2048</span> &lt;= t &amp;&amp; t &lt;= <span class="hljs-number">55295</span> || <span class="hljs-number">57344</span> &lt;= t &amp;&amp; t &lt;= <span class="hljs-number">65535</span>) &amp;&amp; (r.<span class="hljs-title function_">push</span>(<span class="hljs-number">224</span> | <span class="hljs-number">15</span> &amp; t &gt;&gt; <span class="hljs-number">12</span>),<br>            r.<span class="hljs-title function_">push</span>(<span class="hljs-number">128</span> | <span class="hljs-number">63</span> &amp; t &gt;&gt; <span class="hljs-number">6</span>),<br>            r.<span class="hljs-title function_">push</span>(<span class="hljs-number">128</span> | <span class="hljs-number">63</span> &amp; t));<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; r.<span class="hljs-property">length</span>; i++)<br>        r[i] &amp;= <span class="hljs-number">255</span>;<br>    <span class="hljs-keyword">var</span> new_array = [];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>, o = r.<span class="hljs-property">length</span>; i &lt; o; ++i) &#123;<br>        new_array.<span class="hljs-title function_">push</span>((<span class="hljs-number">5</span> ^ r[i]).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>    &#125;<br>    <span class="hljs-keyword">return</span> new_array.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>&#125;<br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><h4 id="调用-1"><a href="#调用-1" class="headerlink" title="调用"></a>调用</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> execjs<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">MobileEncrypt</span>(<span class="hljs-params">js_path: <span class="hljs-built_in">str</span>, mobileNumber: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    :param js_path 加密JS路径</span><br><span class="hljs-string">    :param mobileNumber 手机号</span><br><span class="hljs-string">    :return 返回手机号加密</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(js_path, <span class="hljs-string">&quot;r&quot;</span>, encoding=<span class="hljs-string">&quot;utf-8&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        res = f.read()<br>        ex_js = execjs.<span class="hljs-built_in">compile</span>(res)<br>    <span class="hljs-keyword">return</span> ex_js.call(<span class="hljs-string">&quot;mobile_encrypt&quot;</span>, mobileNumber)<br></code></pre></td></tr></table></figure><h3 id="ac-nonce生成接口"><a href="#ac-nonce生成接口" class="headerlink" title="__ac_nonce生成接口"></a>__ac_nonce生成接口</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_ac_nonce</span>():<br>    index_url = <span class="hljs-string">&quot;https://www.douyin.com/&quot;</span><br>    set_cookie = requests.get(index_url).headers[<span class="hljs-string">&quot;set-cookie&quot;</span>]<br>    ac_nonce = re.findall(<span class="hljs-string">r&#x27;__ac_nonce=(.*?);&#x27;</span>, set_cookie)[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">return</span> ac_nonce<br></code></pre></td></tr></table></figure><h3 id="webid-tt-wid生成接口"><a href="#webid-tt-wid生成接口" class="headerlink" title="webid, tt_wid生成接口"></a>webid, tt_wid生成接口</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> unquote<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_user_id</span>(<span class="hljs-params">ac_nonce</span>):<br>    url = <span class="hljs-string">&quot;https://www.douyin.com/discover&quot;</span><br>    ac_signature = <span class="hljs-string">&quot;signature加密, 参数[url, user_agent]&quot;</span><br>    cookies = &#123;<br>        <span class="hljs-string">&quot;__ac_signature&quot;</span>: ac_signature,<br>        <span class="hljs-string">&quot;__ac_nonce&quot;</span>: ac_nonce,<br>    &#125;<br>    response = requests.get(url, cookies=cookies)<br>    res_str = re.findall(<span class="hljs-string">r&#x27;type=&quot;application/json&quot;&gt;(.*?)&lt;/script&gt;&#x27;</span>, response.text)[<span class="hljs-number">0</span>]<br>    json_res = json.loads(unquote(res_str))<br>    web_id = json_res.get(<span class="hljs-string">&quot;1&quot;</span>).get(<span class="hljs-string">&quot;odin&quot;</span>).get(<span class="hljs-string">&quot;user_unique_id&quot;</span>)<br>    tt_wid = re.findall(<span class="hljs-string">r&#x27;ttwid=(.*?);&#x27;</span>, response.headers[<span class="hljs-string">&quot;Set-Cookie&quot;</span>])[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">return</span> web_id, tt_wid<br></code></pre></td></tr></table></figure><h3 id="msToken生成接口"><a href="#msToken生成接口" class="headerlink" title="msToken生成接口"></a>msToken生成接口</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_ms_token</span>(<span class="hljs-params">ac_nonce, tt_wid, web_id</span>):<br>    request_url = <span class="hljs-string">f&quot;https://www.douyin.com/aweme/v1/web/module/feed/?&quot;</span> \<br>                  <span class="hljs-string">f&quot;device_platform=webapp&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;aid=6383&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;channel=channel_pc_web&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;module_id=6&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;count=12&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;version_code=170400&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;version_name=17.4.0&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;cookie_enabled=true&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;screen_width=1920&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;screen_height=1080&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;browser_language=zh-CN&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;browser_platform=Win32&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;browser_name=Chrome&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;browser_version=100.0.4896.127&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;browser_online=true&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;engine_name=Blink&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;engine_version=100.0.4896.127&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;os_name=window&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;os_version=10&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;cpu_core_num=8&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;device_memory=8&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;platform=PC&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;downlink=10&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;effective_type=4g&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;round_trip_time=150&quot;</span> \<br>                  <span class="hljs-string">f&quot;&amp;webid=<span class="hljs-subst">&#123;web_id&#125;</span>&quot;</span><br><br>    ac_signature = <span class="hljs-string">&quot;signature 加密 参数[request_url, user_agent]&quot;</span><br>    x_bogus = <span class="hljs-string">&quot;X-Bogus加密 参数[request_url]&quot;</span><br><br>    request_url += <span class="hljs-string">f&quot;msToken=&amp;X-Bogus=<span class="hljs-subst">&#123;x_bogus&#125;</span>&amp;_signature=<span class="hljs-subst">&#123;ac_signature&#125;</span>&quot;</span><br>    cookies = &#123;<br>        <span class="hljs-string">&quot;__ac_signature&quot;</span>: ac_signature,<br>        <span class="hljs-string">&quot;__ac_nonce&quot;</span>: ac_nonce,<br>        <span class="hljs-string">&quot;ttwid&quot;</span>: tt_wid<br>    &#125;<br>    response = requests.get(request_url, cookies=cookies)<br>    cookies = cookies<br>    ms_token = re.findall(<span class="hljs-string">r&#x27;msToken=(.*?);&#x27;</span>, response.headers[<span class="hljs-string">&quot;Set-Cookie&quot;</span>])[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">return</span> cookies, ms_token<br></code></pre></td></tr></table></figure><h3 id="滑块加密算法"><a href="#滑块加密算法" class="headerlink" title="滑块加密算法"></a>滑块加密算法</h3><h4 id="加密源码-3"><a href="#加密源码-3" class="headerlink" title="加密源码"></a>加密源码</h4><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">a, m</span>) &#123;<br>    <span class="hljs-keyword">var</span> r = &#123;&#125;, f = r.<span class="hljs-property">lib</span> = &#123;&#125;, g = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, l = f.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                g.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-keyword">new</span> g;<br>                a &amp;&amp; b.<span class="hljs-title function_">mixIn</span>(a);<br>                b.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (b.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    b.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                b.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = b;<br>                b.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> b<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                a.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(a, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b <span class="hljs-keyword">in</span> a) a.<span class="hljs-title function_">hasOwnProperty</span>(b) &amp;&amp; (<span class="hljs-variable language_">this</span>[b] = a[b]);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = a.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        p = f.<span class="hljs-property">WordArray</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>                a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = a || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = b != m ? b : <span class="hljs-number">4</span> * a.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> (a || q).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, d = a.<span class="hljs-property">words</span>, c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (c % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; a; j++) b[c + j &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (d[j &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((c + j) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; d.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; a; j += <span class="hljs-number">4</span>) b[c + j &gt;&gt;&gt; <span class="hljs-number">2</span>] = d[j &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> b.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(b, d);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += a;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> n = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                n[b &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (b % <span class="hljs-number">4</span>);<br>                n.<span class="hljs-property">length</span> = a.<span class="hljs-title function_">ceil</span>(b / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = l.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">n</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], d = <span class="hljs-number">0</span>; d &lt; n; d += <span class="hljs-number">4</span>) b.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * a.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(b, n)<br>            &#125;<br>        &#125;), y = r.<span class="hljs-property">enc</span> = &#123;&#125;, q = y.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = [], c = <span class="hljs-number">0</span>; c &lt; a; c++) &#123;<br>                    <span class="hljs-keyword">var</span> j = b[c &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (c % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    d.<span class="hljs-title function_">push</span>((j &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    d.<span class="hljs-title function_">push</span>((j &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> d.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = a.<span class="hljs-property">length</span>, d = [], c = <span class="hljs-number">0</span>; c &lt; b; c += <span class="hljs-number">2</span>) d[c &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(a.<span class="hljs-title function_">substr</span>(c,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (c % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(d, b / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, G = y.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = [], c = <span class="hljs-number">0</span>; c &lt; a; c++) d.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(b[c &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (c % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> d.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = a.<span class="hljs-property">length</span>, d = [], c = <span class="hljs-number">0</span>; c &lt; b; c++) d[c &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a.<span class="hljs-title function_">charCodeAt</span>(c) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (c % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(d, b)<br>            &#125;<br>        &#125;, fa = y.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(G.<span class="hljs-title function_">stringify</span>(a)))<br>                &#125; <span class="hljs-keyword">catch</span> (b) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> G.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(a)))<br>            &#125;<br>        &#125;,<br>        h = f.<span class="hljs-property">BufferedBlockAlgorithm</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> p.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = fa.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">n</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, d = b.<span class="hljs-property">words</span>, c = b.<span class="hljs-property">sigBytes</span>, j = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, l = c / (<span class="hljs-number">4</span> * j),<br>                    l = n ? a.<span class="hljs-title function_">ceil</span>(l) : a.<span class="hljs-title function_">max</span>((l | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                n = l * j;<br>                c = a.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * n, c);<br>                <span class="hljs-keyword">if</span> (n) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> h = <span class="hljs-number">0</span>; h &lt; n; h += j) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(d, h);<br>                    h = d.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, n);<br>                    b.<span class="hljs-property">sigBytes</span> -= c<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(h, c)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = l.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    f.<span class="hljs-property">Hasher</span> = h.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: l.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            h.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, d</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(d)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, d</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> ga.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    d)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> ga = r.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> r<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> m = <span class="hljs-title class_">CryptoJS</span>, r = m.<span class="hljs-property">lib</span>, f = r.<span class="hljs-property">Base</span>, g = r.<span class="hljs-property">WordArray</span>, m = m.<span class="hljs-property">x64</span> = &#123;&#125;;<br>    m.<span class="hljs-property">Word</span> = f.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, p</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">high</span> = a;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">low</span> = p<br>        &#125;<br>    &#125;);<br>    m.<span class="hljs-property">WordArray</span> = f.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">l, p</span>) &#123;<br>            l = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = l || [];<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = p != a ? p : <span class="hljs-number">8</span> * l.<span class="hljs-property">length</span><br>        &#125;, <span class="hljs-attr">toX32</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, p = a.<span class="hljs-property">length</span>, f = [], q = <span class="hljs-number">0</span>; q &lt; p; q++) &#123;<br>                <span class="hljs-keyword">var</span> G = a[q];<br>                f.<span class="hljs-title function_">push</span>(G.<span class="hljs-property">high</span>);<br>                f.<span class="hljs-title function_">push</span>(G.<span class="hljs-property">low</span>)<br>            &#125;<br>            <span class="hljs-keyword">return</span> g.<span class="hljs-title function_">create</span>(f, <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>)<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = f.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>), p = a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>), g = p.<span class="hljs-property">length</span>, q = <span class="hljs-number">0</span>; q &lt; g; q++) p[q] = p[q].<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> a<br>        &#125;<br>    &#125;)<br>&#125;)();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">a</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">return</span> g.<span class="hljs-property">create</span>.<span class="hljs-title function_">apply</span>(g, <span class="hljs-variable language_">arguments</span>)<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> m = <span class="hljs-title class_">CryptoJS</span>, r = m.<span class="hljs-property">lib</span>.<span class="hljs-property">Hasher</span>, f = m.<span class="hljs-property">x64</span>, g = f.<span class="hljs-property">Word</span>, l = f.<span class="hljs-property">WordArray</span>, f = m.<span class="hljs-property">algo</span>, p = [<span class="hljs-title function_">a</span>(<span class="hljs-number">1116352408</span>, <span class="hljs-number">3609767458</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1899447441</span>, <span class="hljs-number">602891725</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3049323471</span>, <span class="hljs-number">3964484399</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3921009573</span>, <span class="hljs-number">2173295548</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">961987163</span>, <span class="hljs-number">4081628472</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1508970993</span>, <span class="hljs-number">3053834265</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2453635748</span>, <span class="hljs-number">2937671579</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2870763221</span>, <span class="hljs-number">3664609560</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3624381080</span>, <span class="hljs-number">2734883394</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">310598401</span>, <span class="hljs-number">1164996542</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">607225278</span>, <span class="hljs-number">1323610764</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1426881987</span>, <span class="hljs-number">3590304994</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1925078388</span>, <span class="hljs-number">4068182383</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2162078206</span>, <span class="hljs-number">991336113</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2614888103</span>, <span class="hljs-number">633803317</span>),<br>        <span class="hljs-title function_">a</span>(<span class="hljs-number">3248222580</span>, <span class="hljs-number">3479774868</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3835390401</span>, <span class="hljs-number">2666613458</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">4022224774</span>, <span class="hljs-number">944711139</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">264347078</span>, <span class="hljs-number">2341262773</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">604807628</span>, <span class="hljs-number">2007800933</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">770255983</span>, <span class="hljs-number">1495990901</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1249150122</span>, <span class="hljs-number">1856431235</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1555081692</span>, <span class="hljs-number">3175218132</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1996064986</span>, <span class="hljs-number">2198950837</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2554220882</span>, <span class="hljs-number">3999719339</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2821834349</span>, <span class="hljs-number">766784016</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2952996808</span>, <span class="hljs-number">2566594879</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3210313671</span>, <span class="hljs-number">3203337956</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3336571891</span>, <span class="hljs-number">1034457026</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3584528711</span>, <span class="hljs-number">2466948901</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">113926993</span>, <span class="hljs-number">3758326383</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">338241895</span>, <span class="hljs-number">168717936</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">666307205</span>, <span class="hljs-number">1188179964</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">773529912</span>, <span class="hljs-number">1546045734</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1294757372</span>, <span class="hljs-number">1522805485</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1396182291</span>,<br>            <span class="hljs-number">2643833823</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1695183700</span>, <span class="hljs-number">2343527390</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1986661051</span>, <span class="hljs-number">1014477480</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2177026350</span>, <span class="hljs-number">1206759142</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2456956037</span>, <span class="hljs-number">344077627</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2730485921</span>, <span class="hljs-number">1290863460</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2820302411</span>, <span class="hljs-number">3158454273</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3259730800</span>, <span class="hljs-number">3505952657</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3345764771</span>, <span class="hljs-number">106217008</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3516065817</span>, <span class="hljs-number">3606008344</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3600352804</span>, <span class="hljs-number">1432725776</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">4094571909</span>, <span class="hljs-number">1467031594</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">275423344</span>, <span class="hljs-number">851169720</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">430227734</span>, <span class="hljs-number">3100823752</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">506948616</span>, <span class="hljs-number">1363258195</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">659060556</span>, <span class="hljs-number">3750685593</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">883997877</span>, <span class="hljs-number">3785050280</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">958139571</span>, <span class="hljs-number">3318307427</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1322822218</span>, <span class="hljs-number">3812723403</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1537002063</span>, <span class="hljs-number">2003034995</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1747873779</span>, <span class="hljs-number">3602036899</span>),<br>        <span class="hljs-title function_">a</span>(<span class="hljs-number">1955562222</span>, <span class="hljs-number">1575990012</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2024104815</span>, <span class="hljs-number">1125592928</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2227730452</span>, <span class="hljs-number">2716904306</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2361852424</span>, <span class="hljs-number">442776044</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2428436474</span>, <span class="hljs-number">593698344</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2756734187</span>, <span class="hljs-number">3733110249</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3204031479</span>, <span class="hljs-number">2999351573</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3329325298</span>, <span class="hljs-number">3815920427</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3391569614</span>, <span class="hljs-number">3928383900</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3515267271</span>, <span class="hljs-number">566280711</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3940187606</span>, <span class="hljs-number">3454069534</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">4118630271</span>, <span class="hljs-number">4000239992</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">116418474</span>, <span class="hljs-number">1914138554</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">174292421</span>, <span class="hljs-number">2731055270</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">289380356</span>, <span class="hljs-number">3203993006</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">460393269</span>, <span class="hljs-number">320620315</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">685471733</span>, <span class="hljs-number">587496836</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">852142971</span>, <span class="hljs-number">1086792851</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1017036298</span>, <span class="hljs-number">365543100</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1126000580</span>, <span class="hljs-number">2618297676</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1288033470</span>,<br>            <span class="hljs-number">3409855158</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1501505948</span>, <span class="hljs-number">4234509866</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1607167915</span>, <span class="hljs-number">987167468</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1816402316</span>, <span class="hljs-number">1246189591</span>)], y = [], q = <span class="hljs-number">0</span>; <span class="hljs-number">80</span> &gt; q; q++) y[q] = <span class="hljs-title function_">a</span>();<br>    f = f.<span class="hljs-property">SHA512</span> = r.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> l.<span class="hljs-title function_">init</span>([<span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">1779033703</span>, <span class="hljs-number">4089235720</span>), <span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">3144134277</span>, <span class="hljs-number">2227873595</span>), <span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">1013904242</span>, <span class="hljs-number">4271175723</span>), <span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">2773480762</span>, <span class="hljs-number">1595750129</span>), <span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">1359893119</span>, <span class="hljs-number">2917565137</span>), <span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">2600822924</span>, <span class="hljs-number">725511199</span>), <span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">528734635</span>, <span class="hljs-number">4215389547</span>), <span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">1541459225</span>, <span class="hljs-number">327033209</span>)])<br>        &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> h = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>,<br>                     g = h[<span class="hljs-number">0</span>], n = h[<span class="hljs-number">1</span>], b = h[<span class="hljs-number">2</span>], d = h[<span class="hljs-number">3</span>], c = h[<span class="hljs-number">4</span>], j = h[<span class="hljs-number">5</span>], l = h[<span class="hljs-number">6</span>], h = h[<span class="hljs-number">7</span>], q = g.<span class="hljs-property">high</span>, m = g.<span class="hljs-property">low</span>, r = n.<span class="hljs-property">high</span>, N = n.<span class="hljs-property">low</span>, Z = b.<span class="hljs-property">high</span>, O = b.<span class="hljs-property">low</span>, $ = d.<span class="hljs-property">high</span>, P = d.<span class="hljs-property">low</span>, aa = c.<span class="hljs-property">high</span>, Q = c.<span class="hljs-property">low</span>, ba = j.<span class="hljs-property">high</span>, R = j.<span class="hljs-property">low</span>, ca = l.<span class="hljs-property">high</span>, S = l.<span class="hljs-property">low</span>, da = h.<span class="hljs-property">high</span>, T = h.<span class="hljs-property">low</span>, v = q, s = m, H = r, E = N, I = Z, F = O, W = $, J = P, w = aa, t = Q, U = ba, K = R, V = ca, L = S, X = da, M = T, x = <span class="hljs-number">0</span>; <span class="hljs-number">80</span> &gt; x; x++) &#123;<br>                <span class="hljs-keyword">var</span> B = y[x];<br>                <span class="hljs-keyword">if</span> (<span class="hljs-number">16</span> &gt; x) <span class="hljs-keyword">var</span> u = B.<span class="hljs-property">high</span> = a[f + <span class="hljs-number">2</span> * x] | <span class="hljs-number">0</span>, e = B.<span class="hljs-property">low</span> = a[f + <span class="hljs-number">2</span> * x + <span class="hljs-number">1</span>] | <span class="hljs-number">0</span>; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">var</span> u = y[x - <span class="hljs-number">15</span>], e = u.<span class="hljs-property">high</span>, z = u.<span class="hljs-property">low</span>, u = (e &gt;&gt;&gt; <span class="hljs-number">1</span> | z &lt;&lt; <span class="hljs-number">31</span>) ^ (e &gt;&gt;&gt; <span class="hljs-number">8</span> | z &lt;&lt; <span class="hljs-number">24</span>) ^ e &gt;&gt;&gt; <span class="hljs-number">7</span>,<br>                        z = (z &gt;&gt;&gt; <span class="hljs-number">1</span> | e &lt;&lt; <span class="hljs-number">31</span>) ^ (z &gt;&gt;&gt; <span class="hljs-number">8</span> | e &lt;&lt; <span class="hljs-number">24</span>) ^ (z &gt;&gt;&gt; <span class="hljs-number">7</span> | e &lt;&lt; <span class="hljs-number">25</span>), D = y[x - <span class="hljs-number">2</span>], e = D.<span class="hljs-property">high</span>,<br>                        k = D.<span class="hljs-property">low</span>, D = (e &gt;&gt;&gt; <span class="hljs-number">19</span> | k &lt;&lt; <span class="hljs-number">13</span>) ^<br>                        (e &lt;&lt; <span class="hljs-number">3</span> | k &gt;&gt;&gt; <span class="hljs-number">29</span>) ^ e &gt;&gt;&gt; <span class="hljs-number">6</span>,<br>                        k = (k &gt;&gt;&gt; <span class="hljs-number">19</span> | e &lt;&lt; <span class="hljs-number">13</span>) ^ (k &lt;&lt; <span class="hljs-number">3</span> | e &gt;&gt;&gt; <span class="hljs-number">29</span>) ^ (k &gt;&gt;&gt; <span class="hljs-number">6</span> | e &lt;&lt; <span class="hljs-number">26</span>), e = y[x - <span class="hljs-number">7</span>], Y = e.<span class="hljs-property">high</span>,<br>                        C = y[x - <span class="hljs-number">16</span>], A = C.<span class="hljs-property">high</span>, C = C.<span class="hljs-property">low</span>, e = z + e.<span class="hljs-property">low</span>, u = u + Y + (e &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; z &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>),<br>                        e = e + k, u = u + D + (e &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; k &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), e = e + C,<br>                        u = u + A + (e &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; C &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>                    B.<span class="hljs-property">high</span> = u;<br>                    B.<span class="hljs-property">low</span> = e<br>                &#125;<br>                <span class="hljs-keyword">var</span> Y = w &amp; U ^ ~w &amp; V, C = t &amp; K ^ ~t &amp; L, B = v &amp; H ^ v &amp; I ^ H &amp; I, ha = s &amp; E ^ s &amp; F ^ E &amp; F,<br>                    z = (v &gt;&gt;&gt; <span class="hljs-number">28</span> | s &lt;&lt; <span class="hljs-number">4</span>) ^ (v &lt;&lt; <span class="hljs-number">30</span> | s &gt;&gt;&gt; <span class="hljs-number">2</span>) ^ (v &lt;&lt; <span class="hljs-number">25</span> | s &gt;&gt;&gt; <span class="hljs-number">7</span>),<br>                    D = (s &gt;&gt;&gt; <span class="hljs-number">28</span> | v &lt;&lt; <span class="hljs-number">4</span>) ^ (s &lt;&lt; <span class="hljs-number">30</span> | v &gt;&gt;&gt; <span class="hljs-number">2</span>) ^ (s &lt;&lt; <span class="hljs-number">25</span> | v &gt;&gt;&gt; <span class="hljs-number">7</span>), k = p[x], ia = k.<span class="hljs-property">high</span>,<br>                    ea = k.<span class="hljs-property">low</span>, k = M + ((t &gt;&gt;&gt; <span class="hljs-number">14</span> | w &lt;&lt; <span class="hljs-number">18</span>) ^ (t &gt;&gt;&gt; <span class="hljs-number">18</span> | w &lt;&lt; <span class="hljs-number">14</span>) ^ (t &lt;&lt; <span class="hljs-number">23</span> | w &gt;&gt;&gt; <span class="hljs-number">9</span>)),<br>                    A = X + ((w &gt;&gt;&gt; <span class="hljs-number">14</span> | t &lt;&lt; <span class="hljs-number">18</span>) ^ (w &gt;&gt;&gt; <span class="hljs-number">18</span> | t &lt;&lt; <span class="hljs-number">14</span>) ^ (w &lt;&lt; <span class="hljs-number">23</span> | t &gt;&gt;&gt; <span class="hljs-number">9</span>)) + (k &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; M &gt;&gt;&gt;<br>                    <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), k = k + C, A = A + Y + (k &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; C &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), k = k + ea,<br>                    A = A + ia + (k &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; ea &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), k = k + e, A = A + u + (k &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; e &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>),<br>                    e = D + ha, B = z + B + (e &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; D &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), X = V, M = L, V = U, L = K, U = w, K = t,<br>                    t = J + k | <span class="hljs-number">0</span>, w = W + A + (t &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; J &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>) | <span class="hljs-number">0</span>, W = I, J = F, I = H, F = E, H = v,<br>                    E = s, s = k + e | <span class="hljs-number">0</span>, v = A + B + (s &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; k &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>) | <span class="hljs-number">0</span><br>            &#125;<br>            m = g.<span class="hljs-property">low</span> = m + s;<br>            g.<span class="hljs-property">high</span> = q + v + (m &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; s &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            N = n.<span class="hljs-property">low</span> = N + E;<br>            n.<span class="hljs-property">high</span> = r + H + (N &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; E &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            O = b.<span class="hljs-property">low</span> = O + F;<br>            b.<span class="hljs-property">high</span> = Z + I + (O &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; F &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            P = d.<span class="hljs-property">low</span> = P + J;<br>            d.<span class="hljs-property">high</span> = $ + W + (P &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; J &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            Q = c.<span class="hljs-property">low</span> = Q + t;<br>            c.<span class="hljs-property">high</span> = aa + w + (Q &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; t &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            R = j.<span class="hljs-property">low</span> = R + K;<br>            j.<span class="hljs-property">high</span> = ba + U + (R &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; K &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            S = l.<span class="hljs-property">low</span> =<br>                S + L;<br>            l.<span class="hljs-property">high</span> = ca + V + (S &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; L &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            T = h.<span class="hljs-property">low</span> = T + M;<br>            h.<span class="hljs-property">high</span> = da + X + (T &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; M &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>)<br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, f = a.<span class="hljs-property">words</span>, h = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, g = <span class="hljs-number">8</span> * a.<span class="hljs-property">sigBytes</span>;<br>            f[g &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - g % <span class="hljs-number">32</span>;<br>            f[(g + <span class="hljs-number">128</span> &gt;&gt;&gt; <span class="hljs-number">10</span> &lt;&lt; <span class="hljs-number">5</span>) + <span class="hljs-number">30</span>] = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(h / <span class="hljs-number">4294967296</span>);<br>            f[(g + <span class="hljs-number">128</span> &gt;&gt;&gt; <span class="hljs-number">10</span> &lt;&lt; <span class="hljs-number">5</span>) + <span class="hljs-number">31</span>] = h;<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * f.<span class="hljs-property">length</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">toX32</span>()<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = r.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            a.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> a<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">32</span><br>    &#125;);<br>    m.<span class="hljs-property">SHA512</span> = r.<span class="hljs-title function_">_createHelper</span>(f);<br>    m.<span class="hljs-property">HmacSHA512</span> = r.<span class="hljs-title function_">_createHmacHelper</span>(f)<br>&#125;)();<br><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span>_AES = <span class="hljs-title class_">CryptoJS</span>_AES || <span class="hljs-keyword">function</span> (<span class="hljs-params">u, p</span>) &#123;<br>    <span class="hljs-keyword">var</span> d = &#123;&#125;, l = d.<span class="hljs-property">lib</span> = &#123;&#125;, s = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, t = l.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                s.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-keyword">new</span> s;<br>                a &amp;&amp; c.<span class="hljs-title function_">mixIn</span>(a);<br>                c.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (c.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    c.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                c.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = c;<br>                c.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> c<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                a.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(a, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c <span class="hljs-keyword">in</span> a) a.<span class="hljs-title function_">hasOwnProperty</span>(c) &amp;&amp; (<span class="hljs-variable language_">this</span>[c] = a[c]);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = a.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        r = l.<span class="hljs-property">WordArray</span> = t.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, c</span>) &#123;<br>                a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = a || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = c != p ? c : <span class="hljs-number">4</span> * a.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> (a || v).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, e = a.<span class="hljs-property">words</span>, j = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (j % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> k = <span class="hljs-number">0</span>; k &lt; a; k++) c[j + k &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (e[k &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (k % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((j + k) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; e.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (k = <span class="hljs-number">0</span>; k &lt; a; k += <span class="hljs-number">4</span>) c[j + k &gt;&gt;&gt; <span class="hljs-number">2</span>] = e[k &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> c.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(c, e);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += a;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a[c &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (c % <span class="hljs-number">4</span>);<br>                a.<span class="hljs-property">length</span> = u.<span class="hljs-title function_">ceil</span>(c / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = t.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = [], e = <span class="hljs-number">0</span>; e &lt; a; e += <span class="hljs-number">4</span>) c.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * u.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> r.<span class="hljs-title function_">init</span>(c, a)<br>            &#125;<br>        &#125;), w = d.<span class="hljs-property">enc</span> = &#123;&#125;,<br>        v = w.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = [], j = <span class="hljs-number">0</span>; j &lt; a; j++) &#123;<br>                    <span class="hljs-keyword">var</span> k = c[j &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    e.<span class="hljs-title function_">push</span>((k &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    e.<span class="hljs-title function_">push</span>((k &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> e.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">length</span>, e = [], j = <span class="hljs-number">0</span>; j &lt; c; j += <span class="hljs-number">2</span>) e[j &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(a.<span class="hljs-title function_">substr</span>(j,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (j % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> r.<span class="hljs-title function_">init</span>(e, c / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, b = w.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = [], j = <span class="hljs-number">0</span>; j &lt; a; j++) e.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(c[j &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> e.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">length</span>, e = [], j = <span class="hljs-number">0</span>; j &lt; c; j++) e[j &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a.<span class="hljs-title function_">charCodeAt</span>(j) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> r.<span class="hljs-title function_">init</span>(e, c)<br>            &#125;<br>        &#125;,<br>        x = w.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(b.<span class="hljs-title function_">stringify</span>(a)))<br>                &#125; <span class="hljs-keyword">catch</span> (c) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> b.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(a)))<br>            &#125;<br>        &#125;,<br>        q = l.<span class="hljs-property">BufferedBlockAlgorithm</span> = t.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> r.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = x.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, e = c.<span class="hljs-property">words</span>, j = c.<span class="hljs-property">sigBytes</span>, k = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, b = j / (<span class="hljs-number">4</span> * k),<br>                    b = a ? u.<span class="hljs-title function_">ceil</span>(b) : u.<span class="hljs-title function_">max</span>((b | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                a = b * k;<br>                j = u.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * a, j);<br>                <span class="hljs-keyword">if</span> (a) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> q = <span class="hljs-number">0</span>; q &lt; a; q += k) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(e, q);<br>                    q = e.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, a);<br>                    c.<span class="hljs-property">sigBytes</span> -= j<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> r.<span class="hljs-title function_">init</span>(q, j)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = t.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    l.<span class="hljs-property">Hasher</span> = q.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: t.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            q.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>,<br>        <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, e</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(e)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, e</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> n.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    e)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> n = d.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> d<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> u = <span class="hljs-title class_">CryptoJS</span>_AES, p = u.<span class="hljs-property">lib</span>.<span class="hljs-property">WordArray</span>;<br>    u.<span class="hljs-property">enc</span>.<span class="hljs-property">Base64</span> = &#123;<br>        <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">d</span>) &#123;<br>            <span class="hljs-keyword">var</span> l = d.<span class="hljs-property">words</span>, p = d.<span class="hljs-property">sigBytes</span>, t = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_map</span>;<br>            d.<span class="hljs-title function_">clamp</span>();<br>            d = [];<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> r = <span class="hljs-number">0</span>; r &lt; p; r += <span class="hljs-number">3</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> w = (l[r &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (r % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">16</span> | (l[r + <span class="hljs-number">1</span> &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((r + <span class="hljs-number">1</span>) % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">8</span> | l[r + <span class="hljs-number">2</span> &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((r + <span class="hljs-number">2</span>) % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>, v = <span class="hljs-number">0</span>; <span class="hljs-number">4</span> &gt; v &amp;&amp; r + <span class="hljs-number">0.75</span> * v &lt; p; v++) d.<span class="hljs-title function_">push</span>(t.<span class="hljs-title function_">charAt</span>(w &gt;&gt;&gt; <span class="hljs-number">6</span> * (<span class="hljs-number">3</span> - v) &amp; <span class="hljs-number">63</span>));<br>            <span class="hljs-keyword">if</span> (l = t.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">64</span>)) <span class="hljs-keyword">for</span> (; d.<span class="hljs-property">length</span> % <span class="hljs-number">4</span>;) d.<span class="hljs-title function_">push</span>(l);<br>            <span class="hljs-keyword">return</span> d.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>        &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">d</span>) &#123;<br>            <span class="hljs-keyword">var</span> l = d.<span class="hljs-property">length</span>, s = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_map</span>, t = s.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">64</span>);<br>            t &amp;&amp; (t = d.<span class="hljs-title function_">indexOf</span>(t), -<span class="hljs-number">1</span> != t &amp;&amp; (l = t));<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = [], r = <span class="hljs-number">0</span>, w = <span class="hljs-number">0</span>; w &lt;<br>            l; w++) <span class="hljs-keyword">if</span> (w % <span class="hljs-number">4</span>) &#123;<br>                <span class="hljs-keyword">var</span> v = s.<span class="hljs-title function_">indexOf</span>(d.<span class="hljs-title function_">charAt</span>(w - <span class="hljs-number">1</span>)) &lt;&lt; <span class="hljs-number">2</span> * (w % <span class="hljs-number">4</span>), b = s.<span class="hljs-title function_">indexOf</span>(d.<span class="hljs-title function_">charAt</span>(w)) &gt;&gt;&gt; <span class="hljs-number">6</span> - <span class="hljs-number">2</span> * (w % <span class="hljs-number">4</span>);<br>                t[r &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (v | b) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (r % <span class="hljs-number">4</span>);<br>                r++<br>            &#125;<br>            <span class="hljs-keyword">return</span> p.<span class="hljs-title function_">create</span>(t, r)<br>        &#125;, <span class="hljs-attr">_map</span>: <span class="hljs-string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span><br>    &#125;<br>&#125;)();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">u</span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">p</span>(<span class="hljs-params">b, n, a, c, e, j, k</span>) &#123;<br>        b = b + (n &amp; a | ~n &amp; c) + e + k;<br>        <span class="hljs-keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + n<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">d</span>(<span class="hljs-params">b, n, a, c, e, j, k</span>) &#123;<br>        b = b + (n &amp; c | a &amp; ~c) + e + k;<br>        <span class="hljs-keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + n<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">l</span>(<span class="hljs-params">b, n, a, c, e, j, k</span>) &#123;<br>        b = b + (n ^ a ^ c) + e + k;<br>        <span class="hljs-keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + n<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">s</span>(<span class="hljs-params">b, n, a, c, e, j, k</span>) &#123;<br>        b = b + (a ^ (n | ~c)) + e + k;<br>        <span class="hljs-keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + n<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = <span class="hljs-title class_">CryptoJS</span>_AES, r = t.<span class="hljs-property">lib</span>, w = r.<span class="hljs-property">WordArray</span>, v = r.<span class="hljs-property">Hasher</span>, r = t.<span class="hljs-property">algo</span>, b = [], x = <span class="hljs-number">0</span>; <span class="hljs-number">64</span> &gt; x; x++) b[x] = <span class="hljs-number">4294967296</span> * u.<span class="hljs-title function_">abs</span>(u.<span class="hljs-title function_">sin</span>(x + <span class="hljs-number">1</span>)) | <span class="hljs-number">0</span>;<br>    r = r.<span class="hljs-property">MD5</span> = v.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> w.<span class="hljs-title function_">init</span>([<span class="hljs-number">1732584193</span>, <span class="hljs-number">4023233417</span>, <span class="hljs-number">2562383102</span>, <span class="hljs-number">271733878</span>])<br>        &#125;,<br>        <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">q, n</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-number">0</span>; <span class="hljs-number">16</span> &gt; a; a++) &#123;<br>                <span class="hljs-keyword">var</span> c = n + a, e = q[c];<br>                q[c] = (e &lt;&lt; <span class="hljs-number">8</span> | e &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (e &lt;&lt; <span class="hljs-number">24</span> | e &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span><br>            &#125;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>, c = q[n + <span class="hljs-number">0</span>], e = q[n + <span class="hljs-number">1</span>], j = q[n + <span class="hljs-number">2</span>], k = q[n + <span class="hljs-number">3</span>], z = q[n + <span class="hljs-number">4</span>],<br>                r = q[n + <span class="hljs-number">5</span>], t = q[n + <span class="hljs-number">6</span>], w = q[n + <span class="hljs-number">7</span>], v = q[n + <span class="hljs-number">8</span>], A = q[n + <span class="hljs-number">9</span>], B = q[n + <span class="hljs-number">10</span>], C = q[n + <span class="hljs-number">11</span>],<br>                u = q[n + <span class="hljs-number">12</span>], D = q[n + <span class="hljs-number">13</span>], E = q[n + <span class="hljs-number">14</span>], x = q[n + <span class="hljs-number">15</span>], f = a[<span class="hljs-number">0</span>], m = a[<span class="hljs-number">1</span>], g = a[<span class="hljs-number">2</span>], h = a[<span class="hljs-number">3</span>],<br>                f = <span class="hljs-title function_">p</span>(f, m, g, h, c, <span class="hljs-number">7</span>, b[<span class="hljs-number">0</span>]), h = <span class="hljs-title function_">p</span>(h, f, m, g, e, <span class="hljs-number">12</span>, b[<span class="hljs-number">1</span>]), g = <span class="hljs-title function_">p</span>(g, h, f, m, j, <span class="hljs-number">17</span>, b[<span class="hljs-number">2</span>]),<br>                m = <span class="hljs-title function_">p</span>(m, g, h, f, k, <span class="hljs-number">22</span>, b[<span class="hljs-number">3</span>]), f = <span class="hljs-title function_">p</span>(f, m, g, h, z, <span class="hljs-number">7</span>, b[<span class="hljs-number">4</span>]), h = <span class="hljs-title function_">p</span>(h, f, m, g, r, <span class="hljs-number">12</span>, b[<span class="hljs-number">5</span>]),<br>                g = <span class="hljs-title function_">p</span>(g, h, f, m, t, <span class="hljs-number">17</span>, b[<span class="hljs-number">6</span>]), m = <span class="hljs-title function_">p</span>(m, g, h, f, w, <span class="hljs-number">22</span>, b[<span class="hljs-number">7</span>]),<br>                f = <span class="hljs-title function_">p</span>(f, m, g, h, v, <span class="hljs-number">7</span>, b[<span class="hljs-number">8</span>]), h = <span class="hljs-title function_">p</span>(h, f, m, g, A, <span class="hljs-number">12</span>, b[<span class="hljs-number">9</span>]), g = <span class="hljs-title function_">p</span>(g, h, f, m, B, <span class="hljs-number">17</span>, b[<span class="hljs-number">10</span>]),<br>                m = <span class="hljs-title function_">p</span>(m, g, h, f, C, <span class="hljs-number">22</span>, b[<span class="hljs-number">11</span>]), f = <span class="hljs-title function_">p</span>(f, m, g, h, u, <span class="hljs-number">7</span>, b[<span class="hljs-number">12</span>]), h = <span class="hljs-title function_">p</span>(h, f, m, g, D, <span class="hljs-number">12</span>, b[<span class="hljs-number">13</span>]),<br>                g = <span class="hljs-title function_">p</span>(g, h, f, m, E, <span class="hljs-number">17</span>, b[<span class="hljs-number">14</span>]), m = <span class="hljs-title function_">p</span>(m, g, h, f, x, <span class="hljs-number">22</span>, b[<span class="hljs-number">15</span>]), f = <span class="hljs-title function_">d</span>(f, m, g, h, e, <span class="hljs-number">5</span>, b[<span class="hljs-number">16</span>]),<br>                h = <span class="hljs-title function_">d</span>(h, f, m, g, t, <span class="hljs-number">9</span>, b[<span class="hljs-number">17</span>]), g = <span class="hljs-title function_">d</span>(g, h, f, m, C, <span class="hljs-number">14</span>, b[<span class="hljs-number">18</span>]), m = <span class="hljs-title function_">d</span>(m, g, h, f, c, <span class="hljs-number">20</span>, b[<span class="hljs-number">19</span>]),<br>                f = <span class="hljs-title function_">d</span>(f, m, g, h, r, <span class="hljs-number">5</span>, b[<span class="hljs-number">20</span>]), h = <span class="hljs-title function_">d</span>(h, f, m, g, B, <span class="hljs-number">9</span>, b[<span class="hljs-number">21</span>]), g = <span class="hljs-title function_">d</span>(g, h, f, m, x, <span class="hljs-number">14</span>, b[<span class="hljs-number">22</span>]),<br>                m = <span class="hljs-title function_">d</span>(m, g, h, f, z, <span class="hljs-number">20</span>, b[<span class="hljs-number">23</span>]), f = <span class="hljs-title function_">d</span>(f, m, g, h, A, <span class="hljs-number">5</span>, b[<span class="hljs-number">24</span>]), h = <span class="hljs-title function_">d</span>(h, f, m, g, E, <span class="hljs-number">9</span>, b[<span class="hljs-number">25</span>]),<br>                g = <span class="hljs-title function_">d</span>(g, h, f, m, k, <span class="hljs-number">14</span>, b[<span class="hljs-number">26</span>]), m = <span class="hljs-title function_">d</span>(m, g, h, f, v, <span class="hljs-number">20</span>, b[<span class="hljs-number">27</span>]), f = <span class="hljs-title function_">d</span>(f, m, g, h, D, <span class="hljs-number">5</span>, b[<span class="hljs-number">28</span>]),<br>                h = <span class="hljs-title function_">d</span>(h, f,<br>                    m, g, j, <span class="hljs-number">9</span>, b[<span class="hljs-number">29</span>]), g = <span class="hljs-title function_">d</span>(g, h, f, m, w, <span class="hljs-number">14</span>, b[<span class="hljs-number">30</span>]), m = <span class="hljs-title function_">d</span>(m, g, h, f, u, <span class="hljs-number">20</span>, b[<span class="hljs-number">31</span>]),<br>                f = <span class="hljs-title function_">l</span>(f, m, g, h, r, <span class="hljs-number">4</span>, b[<span class="hljs-number">32</span>]), h = <span class="hljs-title function_">l</span>(h, f, m, g, v, <span class="hljs-number">11</span>, b[<span class="hljs-number">33</span>]), g = <span class="hljs-title function_">l</span>(g, h, f, m, C, <span class="hljs-number">16</span>, b[<span class="hljs-number">34</span>]),<br>                m = <span class="hljs-title function_">l</span>(m, g, h, f, E, <span class="hljs-number">23</span>, b[<span class="hljs-number">35</span>]), f = <span class="hljs-title function_">l</span>(f, m, g, h, e, <span class="hljs-number">4</span>, b[<span class="hljs-number">36</span>]), h = <span class="hljs-title function_">l</span>(h, f, m, g, z, <span class="hljs-number">11</span>, b[<span class="hljs-number">37</span>]),<br>                g = <span class="hljs-title function_">l</span>(g, h, f, m, w, <span class="hljs-number">16</span>, b[<span class="hljs-number">38</span>]), m = <span class="hljs-title function_">l</span>(m, g, h, f, B, <span class="hljs-number">23</span>, b[<span class="hljs-number">39</span>]), f = <span class="hljs-title function_">l</span>(f, m, g, h, D, <span class="hljs-number">4</span>, b[<span class="hljs-number">40</span>]),<br>                h = <span class="hljs-title function_">l</span>(h, f, m, g, c, <span class="hljs-number">11</span>, b[<span class="hljs-number">41</span>]), g = <span class="hljs-title function_">l</span>(g, h, f, m, k, <span class="hljs-number">16</span>, b[<span class="hljs-number">42</span>]), m = <span class="hljs-title function_">l</span>(m, g, h, f, t, <span class="hljs-number">23</span>, b[<span class="hljs-number">43</span>]),<br>                f = <span class="hljs-title function_">l</span>(f, m, g, h, A, <span class="hljs-number">4</span>, b[<span class="hljs-number">44</span>]), h = <span class="hljs-title function_">l</span>(h, f, m, g, u, <span class="hljs-number">11</span>, b[<span class="hljs-number">45</span>]), g = <span class="hljs-title function_">l</span>(g, h, f, m, x, <span class="hljs-number">16</span>, b[<span class="hljs-number">46</span>]),<br>                m = <span class="hljs-title function_">l</span>(m, g, h, f, j, <span class="hljs-number">23</span>, b[<span class="hljs-number">47</span>]), f = <span class="hljs-title function_">s</span>(f, m, g, h, c, <span class="hljs-number">6</span>, b[<span class="hljs-number">48</span>]), h = <span class="hljs-title function_">s</span>(h, f, m, g, w, <span class="hljs-number">10</span>, b[<span class="hljs-number">49</span>]),<br>                g = <span class="hljs-title function_">s</span>(g, h, f, m,<br>                    E, <span class="hljs-number">15</span>, b[<span class="hljs-number">50</span>]), m = <span class="hljs-title function_">s</span>(m, g, h, f, r, <span class="hljs-number">21</span>, b[<span class="hljs-number">51</span>]), f = <span class="hljs-title function_">s</span>(f, m, g, h, u, <span class="hljs-number">6</span>, b[<span class="hljs-number">52</span>]),<br>                h = <span class="hljs-title function_">s</span>(h, f, m, g, k, <span class="hljs-number">10</span>, b[<span class="hljs-number">53</span>]), g = <span class="hljs-title function_">s</span>(g, h, f, m, B, <span class="hljs-number">15</span>, b[<span class="hljs-number">54</span>]), m = <span class="hljs-title function_">s</span>(m, g, h, f, e, <span class="hljs-number">21</span>, b[<span class="hljs-number">55</span>]),<br>                f = <span class="hljs-title function_">s</span>(f, m, g, h, v, <span class="hljs-number">6</span>, b[<span class="hljs-number">56</span>]), h = <span class="hljs-title function_">s</span>(h, f, m, g, x, <span class="hljs-number">10</span>, b[<span class="hljs-number">57</span>]), g = <span class="hljs-title function_">s</span>(g, h, f, m, t, <span class="hljs-number">15</span>, b[<span class="hljs-number">58</span>]),<br>                m = <span class="hljs-title function_">s</span>(m, g, h, f, D, <span class="hljs-number">21</span>, b[<span class="hljs-number">59</span>]), f = <span class="hljs-title function_">s</span>(f, m, g, h, z, <span class="hljs-number">6</span>, b[<span class="hljs-number">60</span>]), h = <span class="hljs-title function_">s</span>(h, f, m, g, C, <span class="hljs-number">10</span>, b[<span class="hljs-number">61</span>]),<br>                g = <span class="hljs-title function_">s</span>(g, h, f, m, j, <span class="hljs-number">15</span>, b[<span class="hljs-number">62</span>]), m = <span class="hljs-title function_">s</span>(m, g, h, f, A, <span class="hljs-number">21</span>, b[<span class="hljs-number">63</span>]);<br>            a[<span class="hljs-number">0</span>] = a[<span class="hljs-number">0</span>] + f | <span class="hljs-number">0</span>;<br>            a[<span class="hljs-number">1</span>] = a[<span class="hljs-number">1</span>] + m | <span class="hljs-number">0</span>;<br>            a[<span class="hljs-number">2</span>] = a[<span class="hljs-number">2</span>] + g | <span class="hljs-number">0</span>;<br>            a[<span class="hljs-number">3</span>] = a[<span class="hljs-number">3</span>] + h | <span class="hljs-number">0</span><br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, n = b.<span class="hljs-property">words</span>, a = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, c = <span class="hljs-number">8</span> * b.<span class="hljs-property">sigBytes</span>;<br>            n[c &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - c % <span class="hljs-number">32</span>;<br>            <span class="hljs-keyword">var</span> e = u.<span class="hljs-title function_">floor</span>(a /<br>                <span class="hljs-number">4294967296</span>);<br>            n[(c + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">15</span>] = (e &lt;&lt; <span class="hljs-number">8</span> | e &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (e &lt;&lt; <span class="hljs-number">24</span> | e &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            n[(c + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">14</span>] = (a &lt;&lt; <span class="hljs-number">8</span> | a &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (a &lt;&lt; <span class="hljs-number">24</span> | a &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            b.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * (n.<span class="hljs-property">length</span> + <span class="hljs-number">1</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>;<br>            n = b.<span class="hljs-property">words</span>;<br>            <span class="hljs-keyword">for</span> (a = <span class="hljs-number">0</span>; <span class="hljs-number">4</span> &gt; a; a++) c = n[a], n[a] = (c &lt;&lt; <span class="hljs-number">8</span> | c &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (c &lt;&lt; <span class="hljs-number">24</span> | c &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            <span class="hljs-keyword">return</span> b<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> b = v.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            b.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> b<br>        &#125;<br>    &#125;);<br>    t.<span class="hljs-property">MD5</span> = v.<span class="hljs-title function_">_createHelper</span>(r);<br>    t.<span class="hljs-property">HmacMD5</span> = v.<span class="hljs-title function_">_createHmacHelper</span>(r)<br>&#125;)(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> u = <span class="hljs-title class_">CryptoJS</span>_AES, p = u.<span class="hljs-property">lib</span>, d = p.<span class="hljs-property">Base</span>, l = p.<span class="hljs-property">WordArray</span>, p = u.<span class="hljs-property">algo</span>, s = p.<span class="hljs-property">EvpKDF</span> = d.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: d.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">keySize</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">hasher</span>: p.<span class="hljs-property">MD5</span>, <span class="hljs-attr">iterations</span>: <span class="hljs-number">1</span>&#125;), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">d</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(d)<br>        &#125;, <span class="hljs-attr">compute</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">d, r</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> p = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>, s = p.<span class="hljs-property">hasher</span>.<span class="hljs-title function_">create</span>(), b = l.<span class="hljs-title function_">create</span>(), u = b.<span class="hljs-property">words</span>, q = p.<span class="hljs-property">keySize</span>, p = p.<span class="hljs-property">iterations</span>; u.<span class="hljs-property">length</span> &lt; q;) &#123;<br>                n &amp;&amp; s.<span class="hljs-title function_">update</span>(n);<br>                <span class="hljs-keyword">var</span> n = s.<span class="hljs-title function_">update</span>(d).<span class="hljs-title function_">finalize</span>(r);<br>                s.<span class="hljs-title function_">reset</span>();<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-number">1</span>; a &lt; p; a++) n = s.<span class="hljs-title function_">finalize</span>(n), s.<span class="hljs-title function_">reset</span>();<br>                b.<span class="hljs-title function_">concat</span>(n)<br>            &#125;<br>            b.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * q;<br>            <span class="hljs-keyword">return</span> b<br>        &#125;<br>    &#125;);<br>    u.<span class="hljs-property">EvpKDF</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">d, l, p</span>) &#123;<br>        <span class="hljs-keyword">return</span> s.<span class="hljs-title function_">create</span>(p).<span class="hljs-title function_">compute</span>(d,<br>            l)<br>    &#125;<br>&#125;)();<br><span class="hljs-title class_">CryptoJS</span>_AES.<span class="hljs-property">lib</span>.<span class="hljs-property">Cipher</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">u</span>) &#123;<br>    <span class="hljs-keyword">var</span> p = <span class="hljs-title class_">CryptoJS</span>_AES, d = p.<span class="hljs-property">lib</span>, l = d.<span class="hljs-property">Base</span>, s = d.<span class="hljs-property">WordArray</span>, t = d.<span class="hljs-property">BufferedBlockAlgorithm</span>, r = p.<span class="hljs-property">enc</span>.<span class="hljs-property">Base64</span>,<br>        w = p.<span class="hljs-property">algo</span>.<span class="hljs-property">EvpKDF</span>, v = d.<span class="hljs-property">Cipher</span> = t.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">cfg</span>: l.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">createEncryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">create</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_ENC_XFORM_MODE</span>, e, a)<br>            &#125;, <span class="hljs-attr">createDecryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">create</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_DEC_XFORM_MODE</span>, e, a)<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a, b</span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(b);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_xformMode</span> = e;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_key</span> = a;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>            &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                t.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>            &#125;, <span class="hljs-attr">process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(e);<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>()<br>            &#125;,<br>            <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>                e &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(e);<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>            &#125;, <span class="hljs-attr">keySize</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">ivSize</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">_ENC_XFORM_MODE</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">_DEC_XFORM_MODE</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>                <span class="hljs-keyword">return</span> &#123;<br>                    <span class="hljs-attr">encrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, k, d</span>) &#123;<br>                        <span class="hljs-keyword">return</span> (<span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> k ? c : a).<span class="hljs-title function_">encrypt</span>(e, b, k, d)<br>                    &#125;, <span class="hljs-attr">decrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, k, d</span>) &#123;<br>                        <span class="hljs-keyword">return</span> (<span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> k ? c : a).<span class="hljs-title function_">decrypt</span>(e, b, k, d)<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;);<br>    d.<span class="hljs-property">StreamCipher</span> = v.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>(!<span class="hljs-number">0</span>)<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">1</span><br>    &#125;);<br>    <span class="hljs-keyword">var</span> b = p.<span class="hljs-property">mode</span> = &#123;&#125;, x = <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a, b</span>) &#123;<br>        <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iv</span>;<br>        c ? <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iv</span> = u : c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_prevBlock</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = <span class="hljs-number">0</span>; d &lt; b; d++) e[a + d] ^=<br>            c[d]<br>    &#125;, q = (d.<span class="hljs-property">BlockCipherMode</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">createEncryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">Encryptor</span>.<span class="hljs-title function_">create</span>(e, a)<br>        &#125;, <span class="hljs-attr">createDecryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">Decryptor</span>.<span class="hljs-title function_">create</span>(e, a)<br>        &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_cipher</span> = e;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iv</span> = a<br>        &#125;<br>    &#125;)).<span class="hljs-title function_">extend</span>();<br>    q.<span class="hljs-property">Encryptor</span> = q.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">processBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>            <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_cipher</span>, c = b.<span class="hljs-property">blockSize</span>;<br>            x.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, e, a, c);<br>            b.<span class="hljs-title function_">encryptBlock</span>(e, a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_prevBlock</span> = e.<span class="hljs-title function_">slice</span>(a, a + c)<br>        &#125;<br>    &#125;);<br>    q.<span class="hljs-property">Decryptor</span> = q.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">processBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>            <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_cipher</span>, c = b.<span class="hljs-property">blockSize</span>, d = e.<span class="hljs-title function_">slice</span>(a, a + c);<br>            b.<span class="hljs-title function_">decryptBlock</span>(e, a);<br>            x.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>,<br>                e, a, c);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_prevBlock</span> = d<br>        &#125;<br>    &#125;);<br>    b = b.<span class="hljs-property">CBC</span> = q;<br>    q = (p.<span class="hljs-property">pad</span> = &#123;&#125;).<span class="hljs-property">Pkcs7</span> = &#123;<br>        <span class="hljs-attr">pad</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = <span class="hljs-number">4</span> * b, c = c - a.<span class="hljs-property">sigBytes</span> % c, d = c &lt;&lt; <span class="hljs-number">24</span> | c &lt;&lt; <span class="hljs-number">16</span> | c &lt;&lt; <span class="hljs-number">8</span> | c, l = [], n = <span class="hljs-number">0</span>; n &lt; c; n += <span class="hljs-number">4</span>) l.<span class="hljs-title function_">push</span>(d);<br>            c = s.<span class="hljs-title function_">create</span>(l, c);<br>            a.<span class="hljs-title function_">concat</span>(c)<br>        &#125;, <span class="hljs-attr">unpad</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a.<span class="hljs-property">sigBytes</span> -= a.<span class="hljs-property">words</span>[a.<span class="hljs-property">sigBytes</span> - <span class="hljs-number">1</span> &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp; <span class="hljs-number">255</span><br>        &#125;<br>    &#125;;<br>    d.<span class="hljs-property">BlockCipher</span> = v.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: v.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">mode</span>: b, <span class="hljs-attr">padding</span>: q&#125;), <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            v.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>, b = a.<span class="hljs-property">iv</span>, a = a.<span class="hljs-property">mode</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">_xformMode</span> == <span class="hljs-variable language_">this</span>.<span class="hljs-property">_ENC_XFORM_MODE</span>) <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">createEncryptor</span>; <span class="hljs-keyword">else</span> c = a.<span class="hljs-property">createDecryptor</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span> = <span class="hljs-number">1</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_mode</span> = c.<span class="hljs-title function_">call</span>(a,<br>                <span class="hljs-variable language_">this</span>, b &amp;&amp; b.<span class="hljs-property">words</span>)<br>        &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_mode</span>.<span class="hljs-title function_">processBlock</span>(a, b)<br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-property">padding</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">_xformMode</span> == <span class="hljs-variable language_">this</span>.<span class="hljs-property">_ENC_XFORM_MODE</span>) &#123;<br>                a.<span class="hljs-title function_">pad</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>);<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>(!<span class="hljs-number">0</span>)<br>            &#125; <span class="hljs-keyword">else</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>(!<span class="hljs-number">0</span>), a.<span class="hljs-title function_">unpad</span>(b);<br>            <span class="hljs-keyword">return</span> b<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">4</span><br>    &#125;);<br>    <span class="hljs-keyword">var</span> n = d.<span class="hljs-property">CipherParams</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">mixIn</span>(a)<br>        &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> (a || <span class="hljs-variable language_">this</span>.<span class="hljs-property">formatter</span>).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>        &#125;<br>    &#125;), b = (p.<span class="hljs-property">format</span> = &#123;&#125;).<span class="hljs-property">OpenSSL</span> = &#123;<br>        <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">ciphertext</span>;<br>            a = a.<span class="hljs-property">salt</span>;<br>            <span class="hljs-keyword">return</span> (a ? s.<span class="hljs-title function_">create</span>([<span class="hljs-number">1398893684</span>,<br>                <span class="hljs-number">1701076831</span>]).<span class="hljs-title function_">concat</span>(a).<span class="hljs-title function_">concat</span>(b) : b).<span class="hljs-title function_">toString</span>(r)<br>        &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a = r.<span class="hljs-title function_">parse</span>(a);<br>            <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">words</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-number">1398893684</span> == b[<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-number">1701076831</span> == b[<span class="hljs-number">1</span>]) &#123;<br>                <span class="hljs-keyword">var</span> c = s.<span class="hljs-title function_">create</span>(b.<span class="hljs-title function_">slice</span>(<span class="hljs-number">2</span>, <span class="hljs-number">4</span>));<br>                b.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>);<br>                a.<span class="hljs-property">sigBytes</span> -= <span class="hljs-number">16</span><br>            &#125;<br>            <span class="hljs-keyword">return</span> n.<span class="hljs-title function_">create</span>(&#123;<span class="hljs-attr">ciphertext</span>: a, <span class="hljs-attr">salt</span>: c&#125;)<br>        &#125;<br>    &#125;, a = d.<span class="hljs-property">SerializableCipher</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: l.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">format</span>: b&#125;), <span class="hljs-attr">encrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, c, d</span>) &#123;<br>            d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(d);<br>            <span class="hljs-keyword">var</span> l = a.<span class="hljs-title function_">createEncryptor</span>(c, d);<br>            b = l.<span class="hljs-title function_">finalize</span>(b);<br>            l = l.<span class="hljs-property">cfg</span>;<br>            <span class="hljs-keyword">return</span> n.<span class="hljs-title function_">create</span>(&#123;<br>                <span class="hljs-attr">ciphertext</span>: b,<br>                <span class="hljs-attr">key</span>: c,<br>                <span class="hljs-attr">iv</span>: l.<span class="hljs-property">iv</span>,<br>                <span class="hljs-attr">algorithm</span>: a,<br>                <span class="hljs-attr">mode</span>: l.<span class="hljs-property">mode</span>,<br>                <span class="hljs-attr">padding</span>: l.<span class="hljs-property">padding</span>,<br>                <span class="hljs-attr">blockSize</span>: a.<span class="hljs-property">blockSize</span>,<br>                <span class="hljs-attr">formatter</span>: d.<span class="hljs-property">format</span><br>            &#125;)<br>        &#125;,<br>        <span class="hljs-attr">decrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, c, d</span>) &#123;<br>            d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(d);<br>            b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_parse</span>(b, d.<span class="hljs-property">format</span>);<br>            <span class="hljs-keyword">return</span> a.<span class="hljs-title function_">createDecryptor</span>(c, d).<span class="hljs-title function_">finalize</span>(b.<span class="hljs-property">ciphertext</span>)<br>        &#125;, <span class="hljs-attr">_parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a ? b.<span class="hljs-title function_">parse</span>(a, <span class="hljs-variable language_">this</span>) : a<br>        &#125;<br>    &#125;), p = (p.<span class="hljs-property">kdf</span> = &#123;&#125;).<span class="hljs-property">OpenSSL</span> = &#123;<br>        <span class="hljs-attr">execute</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, c, d</span>) &#123;<br>            d || (d = s.<span class="hljs-title function_">random</span>(<span class="hljs-number">8</span>));<br>            a = w.<span class="hljs-title function_">create</span>(&#123;<span class="hljs-attr">keySize</span>: b + c&#125;).<span class="hljs-title function_">compute</span>(a, d);<br>            c = s.<span class="hljs-title function_">create</span>(a.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(b), <span class="hljs-number">4</span> * c);<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * b;<br>            <span class="hljs-keyword">return</span> n.<span class="hljs-title function_">create</span>(&#123;<span class="hljs-attr">key</span>: a, <span class="hljs-attr">iv</span>: c, <span class="hljs-attr">salt</span>: d&#125;)<br>        &#125;<br>    &#125;, c = d.<span class="hljs-property">PasswordBasedCipher</span> = a.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: a.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">kdf</span>: p&#125;), <span class="hljs-attr">encrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, c, d, l</span>) &#123;<br>            l = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(l);<br>            d = l.<span class="hljs-property">kdf</span>.<span class="hljs-title function_">execute</span>(d,<br>                b.<span class="hljs-property">keySize</span>, b.<span class="hljs-property">ivSize</span>);<br>            l.<span class="hljs-property">iv</span> = d.<span class="hljs-property">iv</span>;<br>            b = a.<span class="hljs-property">encrypt</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, b, c, d.<span class="hljs-property">key</span>, l);<br>            b.<span class="hljs-title function_">mixIn</span>(d);<br>            <span class="hljs-keyword">return</span> b<br>        &#125;, <span class="hljs-attr">decrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, c, d, l</span>) &#123;<br>            l = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(l);<br>            c = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_parse</span>(c, l.<span class="hljs-property">format</span>);<br>            d = l.<span class="hljs-property">kdf</span>.<span class="hljs-title function_">execute</span>(d, b.<span class="hljs-property">keySize</span>, b.<span class="hljs-property">ivSize</span>, c.<span class="hljs-property">salt</span>);<br>            l.<span class="hljs-property">iv</span> = d.<span class="hljs-property">iv</span>;<br>            <span class="hljs-keyword">return</span> a.<span class="hljs-property">decrypt</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, b, c, d.<span class="hljs-property">key</span>, l)<br>        &#125;<br>    &#125;)<br>&#125;();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> u = <span class="hljs-title class_">CryptoJS</span>_AES, p = u.<span class="hljs-property">lib</span>.<span class="hljs-property">BlockCipher</span>, d = u.<span class="hljs-property">algo</span>, l = [], s = [], t = [], r = [], w = [], v = [], b = [], x = [], q = [], n = [], a = [], c = <span class="hljs-number">0</span>; <span class="hljs-number">256</span> &gt; c; c++) a[c] = <span class="hljs-number">128</span> &gt; c ? c &lt;&lt; <span class="hljs-number">1</span> : c &lt;&lt; <span class="hljs-number">1</span> ^ <span class="hljs-number">283</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = <span class="hljs-number">0</span>, j = <span class="hljs-number">0</span>, c = <span class="hljs-number">0</span>; <span class="hljs-number">256</span> &gt; c; c++) &#123;<br>        <span class="hljs-keyword">var</span> k = j ^ j &lt;&lt; <span class="hljs-number">1</span> ^ j &lt;&lt; <span class="hljs-number">2</span> ^ j &lt;&lt; <span class="hljs-number">3</span> ^ j &lt;&lt; <span class="hljs-number">4</span>, k = k &gt;&gt;&gt; <span class="hljs-number">8</span> ^ k &amp; <span class="hljs-number">255</span> ^ <span class="hljs-number">99</span>;<br>        l[e] = k;<br>        s[k] = e;<br>        <span class="hljs-keyword">var</span> z = a[e], F = a[z], G = a[F], y = <span class="hljs-number">257</span> * a[k] ^ <span class="hljs-number">16843008</span> * k;<br>        t[e] = y &lt;&lt; <span class="hljs-number">24</span> | y &gt;&gt;&gt; <span class="hljs-number">8</span>;<br>        r[e] = y &lt;&lt; <span class="hljs-number">16</span> | y &gt;&gt;&gt; <span class="hljs-number">16</span>;<br>        w[e] = y &lt;&lt; <span class="hljs-number">8</span> | y &gt;&gt;&gt; <span class="hljs-number">24</span>;<br>        v[e] = y;<br>        y = <span class="hljs-number">16843009</span> * G ^ <span class="hljs-number">65537</span> * F ^ <span class="hljs-number">257</span> * z ^ <span class="hljs-number">16843008</span> * e;<br>        b[k] = y &lt;&lt; <span class="hljs-number">24</span> | y &gt;&gt;&gt; <span class="hljs-number">8</span>;<br>        x[k] = y &lt;&lt; <span class="hljs-number">16</span> | y &gt;&gt;&gt; <span class="hljs-number">16</span>;<br>        q[k] = y &lt;&lt; <span class="hljs-number">8</span> | y &gt;&gt;&gt; <span class="hljs-number">24</span>;<br>        n[k] = y;<br>        e ? (e = z ^ a[a[a[G ^ z]]], j ^= a[a[j]]) : e = j = <span class="hljs-number">1</span><br>    &#125;<br>    <span class="hljs-keyword">var</span> H = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">8</span>,<br>        <span class="hljs-number">16</span>, <span class="hljs-number">32</span>, <span class="hljs-number">64</span>, <span class="hljs-number">128</span>, <span class="hljs-number">27</span>, <span class="hljs-number">54</span>], d = d.<span class="hljs-property">AES</span> = p.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_key</span>, c = a.<span class="hljs-property">words</span>, d = a.<span class="hljs-property">sigBytes</span> / <span class="hljs-number">4</span>, a = <span class="hljs-number">4</span> * ((<span class="hljs-variable language_">this</span>.<span class="hljs-property">_nRounds</span> = d + <span class="hljs-number">6</span>) + <span class="hljs-number">1</span>), e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_keySchedule</span> = [], j = <span class="hljs-number">0</span>; j &lt; a; j++) <span class="hljs-keyword">if</span> (j &lt; d) e[j] = c[j]; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">var</span> k = e[j - <span class="hljs-number">1</span>];<br>                j % d ? <span class="hljs-number">6</span> &lt; d &amp;&amp; <span class="hljs-number">4</span> == j % d &amp;&amp; (k = l[k &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | l[k &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | l[k &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | l[k &amp; <span class="hljs-number">255</span>]) : (k = k &lt;&lt; <span class="hljs-number">8</span> | k &gt;&gt;&gt; <span class="hljs-number">24</span>, k = l[k &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | l[k &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | l[k &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | l[k &amp; <span class="hljs-number">255</span>], k ^= H[j / d | <span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-number">24</span>);<br>                e[j] = e[j - d] ^ k<br>            &#125;<br>            c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_invKeySchedule</span> = [];<br>            <span class="hljs-keyword">for</span> (d = <span class="hljs-number">0</span>; d &lt; a; d++) j = a - d, k = d % <span class="hljs-number">4</span> ? e[j] : e[j - <span class="hljs-number">4</span>], c[d] = <span class="hljs-number">4</span> &gt; d || <span class="hljs-number">4</span> &gt;= j ? k : b[l[k &gt;&gt;&gt; <span class="hljs-number">24</span>]] ^ x[l[k &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>]] ^ q[l[k &gt;&gt;&gt;<br>            <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>]] ^ n[l[k &amp; <span class="hljs-number">255</span>]]<br>        &#125;, <span class="hljs-attr">encryptBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doCryptBlock</span>(a, b, <span class="hljs-variable language_">this</span>.<span class="hljs-property">_keySchedule</span>, t, r, w, v, l)<br>        &#125;, <span class="hljs-attr">decryptBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, c</span>) &#123;<br>            <span class="hljs-keyword">var</span> d = a[c + <span class="hljs-number">1</span>];<br>            a[c + <span class="hljs-number">1</span>] = a[c + <span class="hljs-number">3</span>];<br>            a[c + <span class="hljs-number">3</span>] = d;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doCryptBlock</span>(a, c, <span class="hljs-variable language_">this</span>.<span class="hljs-property">_invKeySchedule</span>, b, x, q, n, s);<br>            d = a[c + <span class="hljs-number">1</span>];<br>            a[c + <span class="hljs-number">1</span>] = a[c + <span class="hljs-number">3</span>];<br>            a[c + <span class="hljs-number">3</span>] = d<br>        &#125;, <span class="hljs-attr">_doCryptBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, c, d, e, j, l, f</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> m = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nRounds</span>, g = a[b] ^ c[<span class="hljs-number">0</span>], h = a[b + <span class="hljs-number">1</span>] ^ c[<span class="hljs-number">1</span>], k = a[b + <span class="hljs-number">2</span>] ^ c[<span class="hljs-number">2</span>], n = a[b + <span class="hljs-number">3</span>] ^ c[<span class="hljs-number">3</span>], p = <span class="hljs-number">4</span>, r = <span class="hljs-number">1</span>; r &lt; m; r++) <span class="hljs-keyword">var</span> q = d[g &gt;&gt;&gt; <span class="hljs-number">24</span>] ^ e[h &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] ^ j[k &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] ^ l[n &amp; <span class="hljs-number">255</span>] ^ c[p++], s = d[h &gt;&gt;&gt; <span class="hljs-number">24</span>] ^ e[k &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] ^ j[n &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] ^ l[g &amp; <span class="hljs-number">255</span>] ^ c[p++], t =<br>                d[k &gt;&gt;&gt; <span class="hljs-number">24</span>] ^ e[n &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] ^ j[g &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] ^ l[h &amp; <span class="hljs-number">255</span>] ^ c[p++], n = d[n &gt;&gt;&gt; <span class="hljs-number">24</span>] ^ e[g &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] ^ j[h &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] ^ l[k &amp; <span class="hljs-number">255</span>] ^ c[p++], g = q, h = s, k = t;<br>            q = (f[g &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | f[h &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | f[k &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | f[n &amp; <span class="hljs-number">255</span>]) ^ c[p++];<br>            s = (f[h &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | f[k &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | f[n &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | f[g &amp; <span class="hljs-number">255</span>]) ^ c[p++];<br>            t = (f[k &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | f[n &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | f[g &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | f[h &amp; <span class="hljs-number">255</span>]) ^ c[p++];<br>            n = (f[n &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | f[g &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | f[h &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | f[k &amp; <span class="hljs-number">255</span>]) ^ c[p++];<br>            a[b] = q;<br>            a[b + <span class="hljs-number">1</span>] = s;<br>            a[b + <span class="hljs-number">2</span>] = t;<br>            a[b + <span class="hljs-number">3</span>] = n<br>        &#125;, <span class="hljs-attr">keySize</span>: <span class="hljs-number">8</span><br>    &#125;);<br>    u.<span class="hljs-property">AES</span> = p.<span class="hljs-title function_">_createHelper</span>(d)<br>&#125;)();<br><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">random_string</span>(<span class="hljs-params">string_length = <span class="hljs-number">32</span></span>) &#123;<br>    <span class="hljs-keyword">var</span> en_str = <span class="hljs-string">&quot;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;<br>    <span class="hljs-keyword">var</span> key = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; string_length; i++) &#123;<br>        key += en_str.<span class="hljs-title function_">charAt</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * en_str.<span class="hljs-property">length</span>))<br>    &#125;<br>    <span class="hljs-keyword">return</span> key<br>&#125;<br><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">mobile_encrypt</span>(<span class="hljs-params">e</span>) &#123;<br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">    * 发送验证码手机号加密</span><br><span class="hljs-comment">    * */</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t, n = e.<span class="hljs-title function_">toString</span>(), r = [], o = <span class="hljs-number">0</span>; o &lt; n.<span class="hljs-property">length</span>; o++)<br>        <span class="hljs-number">0</span> &lt;= (t = n.<span class="hljs-title function_">charCodeAt</span>(o)) &amp;&amp; t &lt;= <span class="hljs-number">127</span> ? r.<span class="hljs-title function_">push</span>(t) : <span class="hljs-number">128</span> &lt;= t &amp;&amp; t &lt;= <span class="hljs-number">2047</span> ? (r.<span class="hljs-title function_">push</span>(<span class="hljs-number">192</span> | <span class="hljs-number">31</span> &amp; t &gt;&gt; <span class="hljs-number">6</span>),<br>            r.<span class="hljs-title function_">push</span>(<span class="hljs-number">128</span> | <span class="hljs-number">63</span> &amp; t)) : (<span class="hljs-number">2048</span> &lt;= t &amp;&amp; t &lt;= <span class="hljs-number">55295</span> || <span class="hljs-number">57344</span> &lt;= t &amp;&amp; t &lt;= <span class="hljs-number">65535</span>) &amp;&amp; (r.<span class="hljs-title function_">push</span>(<span class="hljs-number">224</span> | <span class="hljs-number">15</span> &amp; t &gt;&gt; <span class="hljs-number">12</span>),<br>            r.<span class="hljs-title function_">push</span>(<span class="hljs-number">128</span> | <span class="hljs-number">63</span> &amp; t &gt;&gt; <span class="hljs-number">6</span>),<br>            r.<span class="hljs-title function_">push</span>(<span class="hljs-number">128</span> | <span class="hljs-number">63</span> &amp; t));<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; r.<span class="hljs-property">length</span>; i++)<br>        r[i] &amp;= <span class="hljs-number">255</span>;<br>    <span class="hljs-keyword">var</span> new_array = [];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>, o = r.<span class="hljs-property">length</span>; i &lt; o; ++i) &#123;<br>        new_array.<span class="hljs-title function_">push</span>((<span class="hljs-number">5</span> ^ r[i]).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>    &#125;<br>    <span class="hljs-keyword">return</span> new_array.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">sliding_track_encrypt</span>(<span class="hljs-params">slide_str</span>) &#123;<br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">    滑动轨迹加密</span><br><span class="hljs-comment">    * */</span><br>    <span class="hljs-keyword">var</span> slide_sha512 = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-title class_">SHA512</span>(slide_str);<br>    <span class="hljs-comment">// var random_key = &quot;4MZdVQxhOYH8VCheSnu4LSPojXKHyCf7&quot;;</span><br>    <span class="hljs-keyword">var</span> random_key = <span class="hljs-title function_">random_string</span>();<br>    <span class="hljs-keyword">var</span> default_key_hex = <span class="hljs-string">&quot;4dd4c2e6b83162090e52b3c7a6733ba41cb2462b829ab58a196b39db57177524f49baf7f08e8d68d26a72e37c1a95a2f1f05a51892aef2949732b62a38aadd58&quot;</span>;<br>    <span class="hljs-keyword">var</span> random_key_sha512 = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-title class_">SHA512</span>(random_key).<span class="hljs-title function_">toString</span>();<br>    <span class="hljs-keyword">var</span> key2 = random_key_sha512 + default_key_hex;<br>    <span class="hljs-keyword">var</span> parse_key2 = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">enc</span>.<span class="hljs-property">Hex</span>.<span class="hljs-title function_">parse</span>(key2);<br>    <span class="hljs-keyword">var</span> last_key = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-title class_">SHA512</span>(parse_key2).<span class="hljs-title function_">toString</span>();<br>    <span class="hljs-keyword">var</span> aes_key = last_key.<span class="hljs-title function_">substring</span>(<span class="hljs-number">0</span>, <span class="hljs-number">32</span>);<br>    <span class="hljs-keyword">var</span> aes_iv = last_key.<span class="hljs-title function_">substring</span>(<span class="hljs-number">32</span>, <span class="hljs-number">64</span>);<br>    <span class="hljs-keyword">var</span> slide_word_array = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>.<span class="hljs-title function_">parse</span>(slide_str);<br>    <span class="hljs-comment">// 将slide_sha512  + slide_hex</span><br>    <span class="hljs-comment">// var new_array = CryptoJS.enc.Hex.parse(slide_sha512 + slide_word_array);</span><br>    <span class="hljs-comment">// AES加密</span><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">Encrypt</span>(<span class="hljs-params">word, key, iv</span>) &#123;<br>        <span class="hljs-keyword">let</span> hex_word = <span class="hljs-title class_">CryptoJS</span>_AES.<span class="hljs-property">enc</span>.<span class="hljs-property">Hex</span>.<span class="hljs-title function_">parse</span>(word);<br>        <span class="hljs-keyword">let</span> hex_key = <span class="hljs-title class_">CryptoJS</span>_AES.<span class="hljs-property">enc</span>.<span class="hljs-property">Hex</span>.<span class="hljs-title function_">parse</span>(key);<br>        <span class="hljs-keyword">let</span> hex_iv = <span class="hljs-title class_">CryptoJS</span>_AES.<span class="hljs-property">enc</span>.<span class="hljs-property">Hex</span>.<span class="hljs-title function_">parse</span>(iv);<br>        <span class="hljs-comment">// console.log(srcs)</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-title class_">CryptoJS</span>_AES.<span class="hljs-property">AES</span>.<span class="hljs-title function_">encrypt</span>(<br>            hex_word, hex_key, &#123;<br>                <span class="hljs-attr">iv</span>: hex_iv,<br>                <span class="hljs-attr">mode</span>: <span class="hljs-title class_">CryptoJS</span>_AES.<span class="hljs-property">mode</span>.<span class="hljs-property">CBC</span>,<br>                <span class="hljs-attr">padding</span>: <span class="hljs-title class_">CryptoJS</span>_AES.<span class="hljs-property">pad</span>.<span class="hljs-property">Pkcs7</span><br>            &#125;<br>        ).<span class="hljs-title function_">toString</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">var</span> word = slide_sha512 + slide_word_array;<br>    aes_encrypt_val = <span class="hljs-title class_">Encrypt</span>(word, aes_key, aes_iv);<br><br>    <span class="hljs-comment">// 随机key charCodeAt</span><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">uint8_array</span>(<span class="hljs-params">e</span>) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = e.<span class="hljs-property">length</span>, n = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(t), r = <span class="hljs-number">0</span>; r &lt; t; r++)<br>            n[r] = e.<span class="hljs-title function_">charCodeAt</span>(r);<br>        <span class="hljs-keyword">return</span> n<br>    &#125;<br><br>    <span class="hljs-comment">// Base64 解密</span><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">base64_decode</span>(<span class="hljs-params">val</span>) &#123;<br>        <span class="hljs-keyword">var</span> words = <span class="hljs-title class_">CryptoJS</span>_AES.<span class="hljs-property">enc</span>.<span class="hljs-property">Base64</span>.<span class="hljs-title function_">parse</span>(val);<br>        <span class="hljs-keyword">return</span> words.<span class="hljs-title function_">toString</span>(<span class="hljs-title class_">CryptoJS</span>_AES.<span class="hljs-property">enc</span>.<span class="hljs-property">Latin1</span>)<br>    &#125;<br><br>    <span class="hljs-comment">// Base64加密</span><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">base64_encode</span>(<span class="hljs-params">data_str</span>) &#123;<br>        <span class="hljs-keyword">let</span> words = <span class="hljs-title class_">CryptoJS</span>_AES.<span class="hljs-property">enc</span>.<span class="hljs-property">Latin1</span>.<span class="hljs-title function_">parse</span>(data_str);<br>        <span class="hljs-keyword">return</span> <span class="hljs-title class_">CryptoJS</span>_AES.<span class="hljs-property">enc</span>.<span class="hljs-property">Base64</span>.<span class="hljs-title function_">stringify</span>(words)<br>    &#125;<br><br>    <span class="hljs-keyword">var</span> random_key_uint8 = <span class="hljs-title function_">uint8_array</span>(random_key);<br>    <span class="hljs-keyword">var</span> random_key_uint8_length = random_key_uint8.<span class="hljs-property">length</span>;<br>    <span class="hljs-keyword">var</span> aes_val_uint8 = <span class="hljs-title function_">uint8_array</span>(<span class="hljs-title function_">base64_decode</span>(aes_encrypt_val));<br>    <span class="hljs-keyword">var</span> aes_val_uint8_length = aes_val_uint8.<span class="hljs-property">length</span>;<br>    <span class="hljs-keyword">var</span> start_array = [<span class="hljs-number">116</span>, <span class="hljs-number">99</span>, <span class="hljs-number">5</span>, <span class="hljs-number">16</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>];<br>    <span class="hljs-keyword">var</span> all_length = start_array.<span class="hljs-property">length</span> + random_key_uint8_length + aes_val_uint8_length;<br>    <span class="hljs-keyword">var</span> init_array = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(all_length);<br>    <span class="hljs-comment">// 放</span><br>    init_array.<span class="hljs-title function_">set</span>(start_array);<br>    init_array.<span class="hljs-title function_">set</span>(random_key_uint8, <span class="hljs-number">6</span>);<br>    init_array.<span class="hljs-title function_">set</span>(aes_val_uint8, <span class="hljs-number">38</span>);<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">last_val</span>(<span class="hljs-params">e</span>) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = <span class="hljs-string">&quot;&quot;</span>, n = e.<span class="hljs-property">byteLength</span>, r = <span class="hljs-number">0</span>; r &lt; n; r++)<br>            t += <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(e[r]);<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">base64_encode</span>(t)<br>    &#125;<br><br>    <span class="hljs-keyword">var</span> en_str = <span class="hljs-title function_">last_val</span>(init_array);<br>    <span class="hljs-comment">// return &#123;</span><br>    <span class="hljs-comment">//     &quot;key&quot;: random_key,</span><br>    <span class="hljs-comment">//     &quot;en_str&quot;: en_str,</span><br>    <span class="hljs-comment">// &#125;</span><br>    <span class="hljs-keyword">return</span> en_str<br><br>&#125;<br><br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><h4 id="调用-2"><a href="#调用-2" class="headerlink" title="调用"></a>调用</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs python"><br><br><span class="hljs-keyword">import</span> execjs<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">SlideEncrypt</span>(<span class="hljs-params">js_path, slide_settings, AID</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    :params </span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    tip_y = slide_settings.get(<span class="hljs-string">&quot;tip_y&quot;</span>)<br>    slide_id = slide_settings.get(<span class="hljs-string">&quot;id&quot;</span>)<br>    challenge_code = slide_settings.get(<span class="hljs-string">&quot;challenge_code&quot;</span>)<br>    fp = slide_settings.get(<span class="hljs-string">&quot;fp&quot;</span>)<br>    mouse_pos_list = [&#123;<br>        <span class="hljs-string">&quot;x&quot;</span>: <span class="hljs-number">12</span>,<br>        <span class="hljs-string">&quot;y&quot;</span>: <span class="hljs-number">13</span>,<br>        <span class="hljs-string">&quot;relative_time&quot;</span>:<span class="hljs-number">133</span>,<br>        ...<br>    &#125;]<br>    log_params_dict = &#123;<br>        <span class="hljs-string">&quot;aid&quot;</span>: AID,<br>        <span class="hljs-string">&quot;did&quot;</span>: <span class="hljs-string">&quot;0&quot;</span>,<br>        <span class="hljs-string">&quot;iid&quot;</span>: <span class="hljs-string">&quot;0&quot;</span>,<br>        <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-number">2</span>,<br>        <span class="hljs-string">&quot;h5_sdk_version&quot;</span>: <span class="hljs-string">&quot;2.26.10&quot;</span>,<br>        <span class="hljs-string">&quot;platform&quot;</span>: <span class="hljs-string">&quot;pc&quot;</span>,<br>        <span class="hljs-string">&quot;os_name&quot;</span>: <span class="hljs-string">&quot;window&quot;</span>,<br>        <span class="hljs-string">&quot;region&quot;</span>: <span class="hljs-string">&quot;cn&quot;</span>,<br>        <span class="hljs-string">&quot;fp&quot;</span>: fp,<br>        <span class="hljs-string">&quot;product_host&quot;</span>: <span class="hljs-string">&quot;www.douyin.com&quot;</span>,<br>        <span class="hljs-string">&quot;product_path&quot;</span>: <span class="hljs-string">&quot;/&quot;</span>,<br>        <span class="hljs-string">&quot;flag&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;key&quot;</span>: <span class="hljs-string">&quot;h5_action&quot;</span>,<br>        <span class="hljs-string">&quot;webdriver&quot;</span>: <span class="hljs-string">&quot;false&quot;</span>,<br>        <span class="hljs-string">&quot;drag_type&quot;</span>: <span class="hljs-string">&quot;btn&quot;</span>,<br>        <span class="hljs-string">&quot;challenge_code&quot;</span>: challenge_code,<br>        <span class="hljs-string">&quot;challenge_id&quot;</span>: slide_id,<br>        <span class="hljs-string">&quot;mode&quot;</span>: <span class="hljs-string">&quot;slide&quot;</span>,<br>        <span class="hljs-string">&quot;moveArr&quot;</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>        <span class="hljs-string">&quot;models&quot;</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>        <span class="hljs-string">&quot;moveArr2&quot;</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>        <span class="hljs-string">&quot;models2&quot;</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>        <span class="hljs-string">&quot;time&quot;</span>: <span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(time.time() * <span class="hljs-number">1000</span>))<br>    &#125;<br>    sliding_template = &#123;<br>        <span class="hljs-string">&quot;detRes&quot;</span>: <span class="hljs-number">520</span>,<br>        <span class="hljs-string">&quot;modified_img_width&quot;</span>: <span class="hljs-number">340</span>,<br>        <span class="hljs-string">&quot;mode&quot;</span>: <span class="hljs-string">&quot;slide&quot;</span>,<br>        <span class="hljs-string">&quot;id&quot;</span>: slide_id,<br>        <span class="hljs-string">&quot;reply&quot;</span>: mouse_pos_list,<br>        <span class="hljs-string">&quot;models&quot;</span>: &#123;&#125;,<br>        <span class="hljs-string">&quot;log_params&quot;</span>: json.dumps(log_params_dict),<br>        <span class="hljs-string">&quot;reply2&quot;</span>: [mouse_pos_list[i] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>, <span class="hljs-built_in">len</span>(mouse_pos_list), <span class="hljs-number">4</span>)],<br>        <span class="hljs-string">&quot;models2&quot;</span>: &#123;&#125;<br>    &#125;<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(js_path, <span class="hljs-string">&quot;r&quot;</span>, encoding=<span class="hljs-string">&quot;utf-8&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        res = f.read()<br>    slideEncrypt = execjs.<span class="hljs-built_in">compile</span>(res).call(<span class="hljs-string">&quot;sliding_track_encrypt&quot;</span>, json.dumps(sliding_template))<br>    <span class="hljs-keyword">return</span> slideEncrypt<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>各类平台加密算法</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>图片大小压缩</title>
    <link href="/posts/33abc40/"/>
    <url>/posts/33abc40/</url>
    
    <content type="html"><![CDATA[<h2 id="图片大小根据比例压缩"><a href="#图片大小根据比例压缩" class="headerlink" title="图片大小根据比例压缩"></a>图片大小根据比例压缩</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> os<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">reduceImage</span>(<span class="hljs-params">img_path: <span class="hljs-built_in">str</span>, reduce_radio: <span class="hljs-built_in">tuple</span></span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    :param img_path: 图片绝对路径</span><br><span class="hljs-string">    :param reduce_radio: 压缩比例 元组(width 0.3, height 0.5)</span><br><span class="hljs-string">    :return 压缩完成图片绝对路径</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-comment"># 将图片同比例压缩</span><br>    img = cv2.imread(img_path)<br>    height, width = img.shape[:<span class="hljs-number">2</span>]<br>    size = (<span class="hljs-built_in">int</span>(width * reduce_radio[<span class="hljs-number">0</span>]), <span class="hljs-built_in">int</span>(height * reduce_radio[<span class="hljs-number">1</span>]))<br>    re_img = cv2.resize(src=img, dsize=size, interpolation=cv2.INTER_AREA)<br>    <span class="hljs-comment"># 图片新路径</span><br>    od_path, od_name = os.path.split(img_path)<br>    reduce_path = os.path.join(od_path, <span class="hljs-string">f&quot;reduce_<span class="hljs-subst">&#123;od_name&#125;</span>&quot;</span>)<br>    cv2.imwrite(reduce_path, re_img)<br>    <span class="hljs-keyword">return</span> reduce_path<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>图片处理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cv2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>滑块缺口图片距离识别</title>
    <link href="/posts/fcc217f6/"/>
    <url>/posts/fcc217f6/</url>
    
    <content type="html"><![CDATA[<h2 id="缺口滑块识别距离"><a href="#缺口滑块识别距离" class="headerlink" title="缺口滑块识别距离"></a>缺口滑块识别距离</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">identify_gap</span>(<span class="hljs-params">bg: <span class="hljs-built_in">str</span>, tp: <span class="hljs-built_in">str</span>, out: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">tuple</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    :param bg: 背景图片 全路径</span><br><span class="hljs-string">    :param tp: 缺口图片 全路径</span><br><span class="hljs-string">    :param out:输出图片 全路径</span><br><span class="hljs-string">    :return x,y 坐标元组</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-comment"># 读取背景图片和缺口图片</span><br>    bg_img = cv2.imread(bg, <span class="hljs-number">0</span>)  <span class="hljs-comment"># 背景图片</span><br>    tp_img = cv2.imread(tp, <span class="hljs-number">0</span>)  <span class="hljs-comment"># 缺口图片</span><br>    <span class="hljs-comment"># 识别图片边缘</span><br>    bg_edge = cv2.Canny(bg_img, <span class="hljs-number">500</span>, <span class="hljs-number">800</span>)<br>    tp_edge = cv2.Canny(tp_img, <span class="hljs-number">500</span>, <span class="hljs-number">800</span>)<br>    <span class="hljs-comment"># 转换图片格式 RGB</span><br>    bg_pic = cv2.cvtColor(bg_edge, cv2.COLOR_GRAY2RGB)<br>    tp_pic = cv2.cvtColor(tp_edge, cv2.COLOR_GRAY2RGB)<br>    <span class="hljs-comment"># 缺口匹配</span><br>    res = cv2.matchTemplate(bg_pic, tp_pic, cv2.TM_CCOEFF_NORMED)<br>    min_val, max_val, min_loc, max_loc = cv2.minMaxLoc(res)  <span class="hljs-comment"># 寻找最优匹配</span><br>    <span class="hljs-comment"># max_loc = (max_loc[0] + 1, max_loc[1])</span><br>    <span class="hljs-comment"># 绘制方框</span><br>    th, tw = tp_pic.shape[:<span class="hljs-number">2</span>]<br>    tl = max_loc  <span class="hljs-comment"># 左上角点的坐标</span><br>    br = (tl[<span class="hljs-number">0</span>] + tw, tl[<span class="hljs-number">1</span>] + th)  <span class="hljs-comment"># 右下角点的坐标</span><br>    cv2.rectangle(bg_img, tl, br, (<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">255</span>), <span class="hljs-number">1</span>)  <span class="hljs-comment"># 绘制矩形</span><br>    cv2.imwrite(out, bg_img)  <span class="hljs-comment"># 保存在本地</span><br>    <span class="hljs-comment"># 返回缺口的X坐标,y坐标</span><br>    <span class="hljs-keyword">return</span> tl<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>图片处理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cv2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>鼠标轨迹生成</title>
    <link href="/posts/79e14e4c/"/>
    <url>/posts/79e14e4c/</url>
    
    <content type="html"><![CDATA[<h2 id="生成各类鼠标轨迹"><a href="#生成各类鼠标轨迹" class="headerlink" title="生成各类鼠标轨迹"></a>生成各类鼠标轨迹</h2><h3 id="1-极验鼠标轨迹"><a href="#1-极验鼠标轨迹" class="headerlink" title="1. 极验鼠标轨迹"></a>1. 极验鼠标轨迹</h3><p>适用平台:</p><pre><code class="hljs">- 某验- 某书PC</code></pre><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">GTrace</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        self.__pos_x = []<br>        self.__pos_y = []<br>        self.__pos_z = []<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__set_pt_time</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        设置各节点的时间</span><br><span class="hljs-string">        分析不同时间间隔中X坐标数量的占比</span><br><span class="hljs-string">        统计结果: 1. 80%~90%的X坐标在15~20毫秒之间</span><br><span class="hljs-string">                2. 10%~15%在20~200及以上，其中 [-a, 0, x, ...] 这里x只有一个，取值在110~200之间</span><br><span class="hljs-string">                    坐标集最后3~5个坐标取值再50~400之间，最后一个坐标数值最大</span><br><span class="hljs-string"></span><br><span class="hljs-string">        滑动总时间的取值规则: 图片宽度260，去掉滑块的宽度剩下200;</span><br><span class="hljs-string">                        如果距离小于100，则耗时1300~1900之间</span><br><span class="hljs-string">                        如果距离大于100，则耗时1700~2100之间</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        __end_pt_time = []<br>        __move_pt_time = []<br>        self.__pos_z = []<br><br>        total_move_time = self.__need_time * random.uniform(<span class="hljs-number">0.8</span>, <span class="hljs-number">0.9</span>)<br>        start_point_time = random.uniform(<span class="hljs-number">110</span>, <span class="hljs-number">200</span>)<br>        __start_pt_time = [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-built_in">int</span>(start_point_time)]<br><br>        sum_move_time = <span class="hljs-number">0</span><br><br>        _tmp_total_move_time = total_move_time<br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            delta_time = random.uniform(<span class="hljs-number">15</span>, <span class="hljs-number">20</span>)<br>            <span class="hljs-keyword">if</span> _tmp_total_move_time &lt; delta_time:<br>                <span class="hljs-keyword">break</span><br><br>            sum_move_time += delta_time<br>            _tmp_total_move_time -= delta_time<br>            __move_pt_time.append(<span class="hljs-built_in">int</span>(start_point_time+sum_move_time))<br><br>        last_pt_time = __move_pt_time[-<span class="hljs-number">1</span>]<br>        __move_pt_time.append(last_pt_time+_tmp_total_move_time)<br><br>        sum_end_time = start_point_time + total_move_time<br>        other_point_time = self.__need_time - sum_end_time<br>        end_first_ptime = other_point_time / <span class="hljs-number">2</span><br><br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            delta_time = random.uniform(<span class="hljs-number">110</span>, <span class="hljs-number">200</span>)<br>            <span class="hljs-keyword">if</span> end_first_ptime - delta_time &lt;= <span class="hljs-number">0</span>:<br>                <span class="hljs-keyword">break</span><br><br>            end_first_ptime -= delta_time<br>            sum_end_time += delta_time<br>            __end_pt_time.append(<span class="hljs-built_in">int</span>(sum_end_time))<br><br>        __end_pt_time.append(<span class="hljs-built_in">int</span>(sum_end_time + (other_point_time/<span class="hljs-number">2</span> + end_first_ptime)))<br>        self.__pos_z.extend(__start_pt_time)<br>        self.__pos_z.extend(__move_pt_time)<br>        self.__pos_z.extend(__end_pt_time)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__set_distance</span>(<span class="hljs-params">self, _dist</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        设置要生成的轨迹长度</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        self.__distance = _dist<br><br>        <span class="hljs-keyword">if</span> _dist &lt; <span class="hljs-number">100</span>:<br>            self.__need_time = <span class="hljs-built_in">int</span>(random.uniform(<span class="hljs-number">500</span>, <span class="hljs-number">1500</span>))<br>        <span class="hljs-keyword">else</span>:<br>            self.__need_time = <span class="hljs-built_in">int</span>(random.uniform(<span class="hljs-number">1000</span>, <span class="hljs-number">2000</span>))<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__get_pos_z</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> self.__pos_z<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__get_pos_y</span>(<span class="hljs-params">self</span>):<br>        _pos_y = [random.uniform(-<span class="hljs-number">40</span>, -<span class="hljs-number">18</span>), <span class="hljs-number">0</span>]<br>        point_count = <span class="hljs-built_in">len</span>(self.__pos_z)<br>        x = np.linspace(-<span class="hljs-number">10</span>, <span class="hljs-number">15</span>, point_count - <span class="hljs-built_in">len</span>(_pos_y))<br>        arct_y = np.arctan(x)<br><br>        <span class="hljs-keyword">for</span> _, val <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(arct_y):<br>            _pos_y.append(val)<br><br>        <span class="hljs-keyword">return</span> _pos_y<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__get_pos_x</span>(<span class="hljs-params">self, _distance</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        绘制标准的数学函数图像: 以 tanh 开始 以 arctan 结尾</span><br><span class="hljs-string">        根据此模型用等比时间差生成X坐标</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        <span class="hljs-comment"># first_val = random.uniform(-40, -18)</span><br>        <span class="hljs-comment"># _distance += first_val</span><br>        _pos_x = [random.uniform(-<span class="hljs-number">40</span>, -<span class="hljs-number">18</span>), <span class="hljs-number">0</span>]<br>        self.__set_distance(_distance)<br>        self.__set_pt_time()<br><br>        point_count = <span class="hljs-built_in">len</span>(self.__pos_z)<br>        x = np.linspace(-<span class="hljs-number">1</span>, <span class="hljs-number">19</span>, point_count-<span class="hljs-built_in">len</span>(_pos_x))<br>        ss = np.arctan(x)<br>        th = np.tanh(x)<br><br>        <span class="hljs-keyword">for</span> idx <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(th)):<br>            <span class="hljs-keyword">if</span> th[idx] &lt; ss[idx]:<br>                th[idx] = ss[idx]<br><br>        th += <span class="hljs-number">1</span><br>        th *= (_distance / <span class="hljs-number">2.5</span>)<br><br>        i = <span class="hljs-number">0</span><br>        start_idx = <span class="hljs-built_in">int</span>(point_count/<span class="hljs-number">10</span>)<br>        end_idx = <span class="hljs-built_in">int</span>(point_count/<span class="hljs-number">50</span>)<br>        delta_pt = <span class="hljs-built_in">abs</span>(np.random.normal(scale=<span class="hljs-number">1.1</span>, size=point_count-start_idx-end_idx))<br>        <span class="hljs-keyword">for</span> idx <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(start_idx, point_count):<br>            <span class="hljs-keyword">if</span> idx*<span class="hljs-number">1.3</span> &gt; <span class="hljs-built_in">len</span>(delta_pt):<br>                <span class="hljs-keyword">break</span><br><br>            th[idx] += delta_pt[i]<br>            i+=<span class="hljs-number">1</span><br><br>        _pos_x.extend(th)<br>        <span class="hljs-keyword">return</span> _pos_x[-<span class="hljs-number">1</span>], _pos_x<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_mouse_pos_path</span>(<span class="hljs-params">self, distance</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        获取滑动滑块鼠标的滑动轨迹坐标集合</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        result = []<br>        _distance, x = self.__get_pos_x(distance)<br>        y = self.__get_pos_y()<br>        z = self.__get_pos_z()<br><br>        <span class="hljs-keyword">for</span> idx <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(x)):<br>            result.append([<span class="hljs-built_in">int</span>(x[idx]), <span class="hljs-built_in">int</span>(y[idx]), <span class="hljs-built_in">int</span>(z[idx])])<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">int</span>(_distance), result<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    GTrace().get_mouse_pos_path(<span class="hljs-number">130</span>)<br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><p><strong><a href="https://www.52pojie.cn/thread-1162979-1-1.html">参考链接</a></strong></p><h3 id="2-贝塞尔曲线轨迹生成"><a href="#2-贝塞尔曲线轨迹生成" class="headerlink" title="2. 贝塞尔曲线轨迹生成"></a>2. 贝塞尔曲线轨迹生成</h3><p>适用平台:</p><pre><code class="hljs">- 某宝</code></pre><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> math<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">BSRSlide</span>:<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_bztsg</span>(<span class="hljs-params">self, dataTrajectory</span>):<br>        lengthOfdata = <span class="hljs-built_in">len</span>(dataTrajectory)<br><br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">staer</span>(<span class="hljs-params">x</span>):<br>            t = ((x - dataTrajectory[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]) / (dataTrajectory[-<span class="hljs-number">1</span>][<span class="hljs-number">0</span>] - dataTrajectory[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]))<br>            y = np.array([<span class="hljs-number">0</span>, <span class="hljs-number">0</span>], dtype=np.float64)<br>            <span class="hljs-keyword">for</span> s <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(dataTrajectory)):<br>                y += dataTrajectory[s] * ((math.factorial(lengthOfdata - <span class="hljs-number">1</span>) / (<br>                        math.factorial(s) * math.factorial(lengthOfdata - <span class="hljs-number">1</span> - s))) * math.<span class="hljs-built_in">pow</span>(t, s) * math.<span class="hljs-built_in">pow</span>(<br>                    (<span class="hljs-number">1</span> - t), lengthOfdata - <span class="hljs-number">1</span> - s))<br>            <span class="hljs-keyword">return</span> y[<span class="hljs-number">1</span>]<br><br>        <span class="hljs-keyword">return</span> staer<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_type</span>(<span class="hljs-params">self, <span class="hljs-built_in">type</span>, x, numberList</span>):<br>        numberListre = []<br>        pin = (x[<span class="hljs-number">1</span>] - x[<span class="hljs-number">0</span>]) / numberList<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">type</span> == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(numberList):<br>                numberListre.append(i * pin)<br>            <span class="hljs-keyword">if</span> pin &gt;= <span class="hljs-number">0</span>:<br>                numberListre = numberListre[::-<span class="hljs-number">1</span>]<br>        <span class="hljs-keyword">elif</span> <span class="hljs-built_in">type</span> == <span class="hljs-number">1</span>:<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(numberList):<br>                numberListre.append(<span class="hljs-number">1</span> * ((i * pin) ** <span class="hljs-number">2</span>))<br>            numberListre = numberListre[::-<span class="hljs-number">1</span>]<br>        <span class="hljs-keyword">elif</span> <span class="hljs-built_in">type</span> == <span class="hljs-number">2</span>:<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(numberList):<br>                numberListre.append(<span class="hljs-number">1</span> * ((i * pin - x[<span class="hljs-number">1</span>]) ** <span class="hljs-number">2</span>))<br><br>        <span class="hljs-keyword">elif</span> <span class="hljs-built_in">type</span> == <span class="hljs-number">3</span>:<br>            dataTrajectory = [np.array([<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]), np.array([(x[<span class="hljs-number">1</span>] - x[<span class="hljs-number">0</span>]) * <span class="hljs-number">0.8</span>, (x[<span class="hljs-number">1</span>] - x[<span class="hljs-number">0</span>]) * <span class="hljs-number">0.6</span>]),<br>                              np.array([x[<span class="hljs-number">1</span>] - x[<span class="hljs-number">0</span>], <span class="hljs-number">0</span>])]<br>            fun = self._bztsg(dataTrajectory)<br>            numberListre = [<span class="hljs-number">0</span>]<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, numberList):<br>                numberListre.append(fun(i * pin) + numberListre[-<span class="hljs-number">1</span>])<br>            <span class="hljs-keyword">if</span> pin &gt;= <span class="hljs-number">0</span>:<br>                numberListre = numberListre[::-<span class="hljs-number">1</span>]<br>        numberListre = np.<span class="hljs-built_in">abs</span>(np.array(numberListre) - <span class="hljs-built_in">max</span>(numberListre))<br>        biaoNumberList = ((numberListre - numberListre[numberListre.argmin()]) / (<br>                numberListre[numberListre.argmax()] - numberListre[numberListre.argmin()])) * (x[<span class="hljs-number">1</span>] - x[<span class="hljs-number">0</span>]) + x[<span class="hljs-number">0</span>]<br>        biaoNumberList[<span class="hljs-number">0</span>] = x[<span class="hljs-number">0</span>]<br>        biaoNumberList[-<span class="hljs-number">1</span>] = x[<span class="hljs-number">1</span>]<br>        <span class="hljs-keyword">return</span> biaoNumberList<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">getFun</span>(<span class="hljs-params">self, s</span>):<br>        <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">        :param s: 传入P点</span><br><span class="hljs-string">        :return: 返回公式</span><br><span class="hljs-string">        &#x27;&#x27;&#x27;</span><br>        dataTrajectory = []<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> s:<br>            dataTrajectory.append(np.array(i))<br>        <span class="hljs-keyword">return</span> self._bztsg(dataTrajectory)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">simulation</span>(<span class="hljs-params">self, start, end, le=<span class="hljs-number">1</span>, deviation=<span class="hljs-number">0</span>, bias=<span class="hljs-number">0.5</span></span>):<br>        <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">        :param start:开始点的坐标 如 start = [0, 0]</span><br><span class="hljs-string">        :param end:结束点的坐标 如 end = [100, 100]</span><br><span class="hljs-string">        :param le:几阶贝塞尔曲线，越大越复杂 如 le = 4</span><br><span class="hljs-string">        :param deviation:轨迹上下波动的范围 如 deviation = 10</span><br><span class="hljs-string">        :param bias:波动范围的分布位置 如 bias = 0.5</span><br><span class="hljs-string">        :return:返回一个字典equation对应该曲线的方程，P对应贝塞尔曲线的影响点</span><br><span class="hljs-string">        &#x27;&#x27;&#x27;</span><br>        start = np.array(start)<br>        end = np.array(end)<br>        cbb = []<br>        <span class="hljs-keyword">if</span> le != <span class="hljs-number">1</span>:<br>            e = (<span class="hljs-number">1</span> - bias) / (le - <span class="hljs-number">1</span>)<br>            cbb = [[bias + e * i, bias + e * (i + <span class="hljs-number">1</span>)] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(le - <span class="hljs-number">1</span>)]<br><br>        dataTrajectoryList = [start]<br><br>        t = random.choice([-<span class="hljs-number">1</span>, <span class="hljs-number">1</span>])<br>        w = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> cbb:<br>            px1 = start[<span class="hljs-number">0</span>] + (end[<span class="hljs-number">0</span>] - start[<span class="hljs-number">0</span>]) * (random.random() * (i[<span class="hljs-number">1</span>] - i[<span class="hljs-number">0</span>]) + (i[<span class="hljs-number">0</span>]))<br>            p = np.array([px1, self._bztsg([start, end])(px1) + t * deviation])<br>            dataTrajectoryList.append(p)<br>            w += <span class="hljs-number">1</span><br>            <span class="hljs-keyword">if</span> w &gt;= <span class="hljs-number">2</span>:<br>                w = <span class="hljs-number">0</span><br>                t = -<span class="hljs-number">1</span> * t<br><br>        dataTrajectoryList.append(end)<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;equation&quot;</span>: self._bztsg(dataTrajectoryList), <span class="hljs-string">&quot;P&quot;</span>: np.array(dataTrajectoryList)&#125;<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">trackArray</span>(<span class="hljs-params">self, start, end, numberList, le=<span class="hljs-number">2</span>, deviation=<span class="hljs-number">0</span>, bias=<span class="hljs-number">0.5</span>, <span class="hljs-built_in">type</span>=<span class="hljs-number">0</span>, cbb=<span class="hljs-number">0</span>, yhh=<span class="hljs-number">10</span></span>):<br>        <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">        :param start:开始点的坐标 如 start = [0, 0]</span><br><span class="hljs-string">        :param end:结束点的坐标 如 end = [100, 100]</span><br><span class="hljs-string">        :param numberList:返回的数组的轨迹点的数量 numberList = 150</span><br><span class="hljs-string">        :param le:几阶贝塞尔曲线，越大越复杂 如 le = 4</span><br><span class="hljs-string">        :param deviation:轨迹上下波动的范围 如 deviation = 10</span><br><span class="hljs-string">        :param bias:波动范围的分布位置 如 bias = 0.5</span><br><span class="hljs-string">        :param type:0表示均速滑动，1表示先慢后快，2表示先快后慢，3表示先慢中间快后慢 如 type = 1</span><br><span class="hljs-string">        :param cbb:在终点来回摆动的次数</span><br><span class="hljs-string">        :param yhh:在终点来回摆动的范围</span><br><span class="hljs-string">        :return:返回一个字典trackArray对应轨迹数组，P对应贝塞尔曲线的影响点</span><br><span class="hljs-string">        &#x27;&#x27;&#x27;</span><br>        s = []<br>        fun = self.simulation(start, end, le, deviation, bias)<br>        w = fun[<span class="hljs-string">&#x27;P&#x27;</span>]<br>        fun = fun[<span class="hljs-string">&quot;equation&quot;</span>]<br>        <span class="hljs-keyword">if</span> cbb != <span class="hljs-number">0</span>:<br>            numberListOfcbb = <span class="hljs-built_in">round</span>(numberList * <span class="hljs-number">0.2</span> / (cbb + <span class="hljs-number">1</span>))<br>            numberList -= (numberListOfcbb * (cbb + <span class="hljs-number">1</span>))<br><br>            xTrackArray = self._<span class="hljs-built_in">type</span>(<span class="hljs-built_in">type</span>, [start[<span class="hljs-number">0</span>], end[<span class="hljs-number">0</span>]], numberList)<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> xTrackArray:<br>                s.append([i, fun(i)])<br>            dq = yhh / cbb<br>            kg = <span class="hljs-number">0</span><br>            ends = np.copy(end)<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(cbb):<br>                <span class="hljs-keyword">if</span> kg == <span class="hljs-number">0</span>:<br>                    d = np.array([end[<span class="hljs-number">0</span>] + (yhh - dq * i),<br>                                  ((end[<span class="hljs-number">1</span>] - start[<span class="hljs-number">1</span>]) / (end[<span class="hljs-number">0</span>] - start[<span class="hljs-number">0</span>])) * (end[<span class="hljs-number">0</span>] + (yhh - dq * i)) + (<br>                                          end[<span class="hljs-number">1</span>] - ((end[<span class="hljs-number">1</span>] - start[<span class="hljs-number">1</span>]) / (end[<span class="hljs-number">0</span>] - start[<span class="hljs-number">0</span>])) * end[<span class="hljs-number">0</span>])])<br>                    kg = <span class="hljs-number">1</span><br>                <span class="hljs-keyword">else</span>:<br>                    d = np.array([end[<span class="hljs-number">0</span>] - (yhh - dq * i),<br>                                  ((end[<span class="hljs-number">1</span>] - start[<span class="hljs-number">1</span>]) / (end[<span class="hljs-number">0</span>] - start[<span class="hljs-number">0</span>])) * (end[<span class="hljs-number">0</span>] - (yhh - dq * i)) + (<br>                                          end[<span class="hljs-number">1</span>] - ((end[<span class="hljs-number">1</span>] - start[<span class="hljs-number">1</span>]) / (end[<span class="hljs-number">0</span>] - start[<span class="hljs-number">0</span>])) * end[<span class="hljs-number">0</span>])])<br>                    kg = <span class="hljs-number">0</span><br>                <span class="hljs-built_in">print</span>(d)<br>                y = self.trackArray(ends, d, numberListOfcbb, le=<span class="hljs-number">2</span>, deviation=<span class="hljs-number">0</span>, bias=<span class="hljs-number">0.5</span>, <span class="hljs-built_in">type</span>=<span class="hljs-number">0</span>, cbb=<span class="hljs-number">0</span>, yhh=<span class="hljs-number">10</span>)<br>                s += <span class="hljs-built_in">list</span>(y[<span class="hljs-string">&#x27;trackArray&#x27;</span>])<br>                ends = d<br>            y = self.trackArray(ends, end, numberListOfcbb, le=<span class="hljs-number">2</span>, deviation=<span class="hljs-number">0</span>, bias=<span class="hljs-number">0.5</span>, <span class="hljs-built_in">type</span>=<span class="hljs-number">0</span>, cbb=<span class="hljs-number">0</span>, yhh=<span class="hljs-number">10</span>)<br>            s += <span class="hljs-built_in">list</span>(y[<span class="hljs-string">&#x27;trackArray&#x27;</span>])<br><br>        <span class="hljs-keyword">else</span>:<br>            xTrackArray = self._<span class="hljs-built_in">type</span>(<span class="hljs-built_in">type</span>, [start[<span class="hljs-number">0</span>], end[<span class="hljs-number">0</span>]], numberList)<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> xTrackArray:<br>                s.append([i, fun(i)])<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;trackArray&quot;</span>: np.array(s), <span class="hljs-string">&quot;P&quot;</span>: w&#125;<br><br></code></pre></td></tr></table></figure><p><a href="https://github.com/2833844911/gurs">参考链接</a><br>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><h3 id="3-随机生成"><a href="#3-随机生成" class="headerlink" title="3. 随机生成"></a>3. 随机生成</h3><p>适用平台:</p><pre><code class="hljs">-某音PC-某书PC</code></pre><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">test_random_sliding_track</span>(<span class="hljs-params">distance, tip_y</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    随机生成滑动轨迹二维数组</span><br><span class="hljs-string">    :param distance: 距离</span><br><span class="hljs-string">    :param tip_y: 接口中 y参数</span><br><span class="hljs-string">    :return:</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    all_array = []<br>    time_random = <span class="hljs-built_in">int</span>(random.uniform(<span class="hljs-number">8</span>, <span class="hljs-number">15</span>))<br>    x_random = <span class="hljs-built_in">int</span>(random.uniform(<span class="hljs-number">1</span>, <span class="hljs-number">3</span>))<br>    start_time = <span class="hljs-built_in">int</span>(random.uniform(<span class="hljs-number">10</span>, <span class="hljs-number">15</span>))<br>    start_x = <span class="hljs-number">1</span><br>    start_array = [start_x, tip_y, start_time]<br>    <span class="hljs-comment"># 生成的长度</span><br>    <span class="hljs-comment"># arr_length = math.ceil(distance / 4) - 1</span><br>    all_array.append(start_array)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(distance):<br>        sec_x = start_x + x_random<br>        sec_time = start_time + time_random<br>        <span class="hljs-keyword">if</span> sec_x &gt; distance:<br>            <span class="hljs-keyword">break</span><br>        all_array.append([sec_x, tip_y, sec_time])<br>        start_x = sec_x<br>        start_time = sec_time<br>    <span class="hljs-comment"># 检查最后一位是否等于distance</span><br>    last_array = all_array[-<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">if</span> last_array[<span class="hljs-number">0</span>] != distance:<br>        all_array.append(<br>            [distance, tip_y, last_array[<span class="hljs-number">2</span>] + time_random]<br>        )<br>    <span class="hljs-comment"># 暂停成功率高</span><br>    <span class="hljs-comment"># time.sleep(last_array[-1] / 1000)</span><br>    <span class="hljs-keyword">return</span> all_array<br><br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>轨迹生成</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>去除控制流平坦化</title>
    <link href="/posts/110c381a/"/>
    <url>/posts/110c381a/</url>
    
    <content type="html"><![CDATA[<h2 id="AST去除控制流平坦化"><a href="#AST去除控制流平坦化" class="headerlink" title="AST去除控制流平坦化"></a>AST去除控制流平坦化</h2><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">const</span> parser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/parser&quot;</span>);<br><span class="hljs-keyword">const</span> traverse = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/traverse&quot;</span>).<span class="hljs-property">default</span>;<br><span class="hljs-keyword">const</span> t = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/types&quot;</span>);<br><span class="hljs-keyword">const</span> generator = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/generator&quot;</span>).<span class="hljs-property">default</span>;<br><br><br>encodeFile = <span class="hljs-string">&quot;./sourceCode.js&quot;</span>;<br>decodeFile = <span class="hljs-string">&quot;./result.js&quot;</span>;<br><br><span class="hljs-keyword">let</span> sourceCode = fs.<span class="hljs-title function_">readFileSync</span>(encodeFile, &#123;<span class="hljs-attr">encoding</span>: <span class="hljs-string">&quot;utf-8&quot;</span>&#125;);<br><br><span class="hljs-keyword">const</span> ast = parser.<span class="hljs-title function_">parse</span>(sourceCode);<br><br><span class="hljs-keyword">const</span> compactSwitch = &#123;<br><br>    <span class="hljs-title class_">ForStatement</span>(path) &#123;<br>        <span class="hljs-keyword">let</span> &#123;init, test, update, body&#125; = path.<span class="hljs-property">node</span>;<br>        <span class="hljs-keyword">if</span> (!t.<span class="hljs-title function_">isVariableDeclaration</span>(init) ||<br>            !t.<span class="hljs-title function_">isBinaryExpression</span>(test) ||<br>            update != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (!body.<span class="hljs-property">body</span> || body.<span class="hljs-property">body</span>.<span class="hljs-property">length</span> != <span class="hljs-number">2</span>) <span class="hljs-keyword">return</span>;<br><br>        <span class="hljs-keyword">if</span> (!t.<span class="hljs-title function_">isVariableDeclaration</span>(body.<span class="hljs-property">body</span>[<span class="hljs-number">0</span>]) ||<br>            !t.<span class="hljs-title function_">isSwitchStatement</span>(body.<span class="hljs-property">body</span>[<span class="hljs-number">1</span>])) &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">let</span> switchNode = [];<br><br>        <span class="hljs-keyword">let</span> switchId = init.<span class="hljs-property">declarations</span>[<span class="hljs-number">0</span>].<span class="hljs-property">id</span>;<br>        <span class="hljs-keyword">let</span> shiftValue = <span class="hljs-number">5</span>;<br>        <span class="hljs-keyword">let</span> cr = <span class="hljs-number">0</span>, kr = <span class="hljs-number">0</span>, or = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">let</span> cases = body.<span class="hljs-property">body</span>[<span class="hljs-number">1</span>].<span class="hljs-property">cases</span>;<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> <span class="hljs-title class_">SwitchCase</span> <span class="hljs-keyword">of</span> cases) &#123;<br>            <span class="hljs-keyword">let</span> &#123;test, consequent&#125; = <span class="hljs-title class_">SwitchCase</span>;<br>            cr = test.<span class="hljs-property">value</span>;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;cr&quot;</span>, cr)<br>            <span class="hljs-keyword">if</span> (consequent.<span class="hljs-property">length</span> == <span class="hljs-number">2</span> &amp;&amp; t.<span class="hljs-title function_">isSwitchStatement</span>(consequent[<span class="hljs-number">0</span>])) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> <span class="hljs-title class_">SwitchCase</span> <span class="hljs-keyword">of</span> consequent[<span class="hljs-number">0</span>].<span class="hljs-property">cases</span>) &#123;<br>                    <span class="hljs-keyword">let</span> &#123;test, consequent&#125; = <span class="hljs-title class_">SwitchCase</span>;<br>                    kr = test.<span class="hljs-property">value</span>;<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;kr&quot;</span>, kr)<br>                    <span class="hljs-keyword">let</span> value = cr + (kr &lt;&lt; shiftValue);<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;value&quot;</span>, value)<br>                    <span class="hljs-keyword">let</span> newNode = t.<span class="hljs-title class_">SwitchCase</span>(t.<span class="hljs-title function_">valueToNode</span>(value), consequent);<br>                    switchNode.<span class="hljs-title function_">push</span>(newNode);<br>                &#125;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">let</span> value = cr;<br>                <span class="hljs-keyword">let</span> newNode = t.<span class="hljs-title class_">SwitchCase</span>(t.<span class="hljs-title function_">valueToNode</span>(value), consequent);<br>                switchNode.<span class="hljs-title function_">push</span>(newNode);<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (switchNode.<span class="hljs-property">length</span> &gt; <span class="hljs-number">0</span>) &#123;<br>            switchNode = t.<span class="hljs-title class_">SwitchStatement</span>(switchId, switchNode);<br>            body.<span class="hljs-property">body</span> = [switchNode];<br>        &#125;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-title function_">traverse</span>(ast, compactSwitch);<br><br><br><span class="hljs-keyword">let</span> &#123;code&#125; = <span class="hljs-title function_">generator</span>(ast, opts = &#123;<span class="hljs-attr">jsescOption</span>: &#123;<span class="hljs-string">&quot;minimal&quot;</span>: <span class="hljs-literal">true</span>&#125;&#125;);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(code)<br>fs.<span class="hljs-title function_">writeFile</span>(decodeFile, code, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>&#125;);<br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>AST还原</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AST</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>去除逗号表达式</title>
    <link href="/posts/61524743/"/>
    <url>/posts/61524743/</url>
    
    <content type="html"><![CDATA[<h2 id="AST去除逗号表达式"><a href="#AST去除逗号表达式" class="headerlink" title="AST去除逗号表达式"></a>AST去除逗号表达式</h2><p><strong>exp</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">a=<span class="hljs-number">1</span>,<br>b=<span class="hljs-number">2</span>,<br>c=<span class="hljs-number">3</span>;<br><span class="hljs-comment">// 还原后</span><br>a=<span class="hljs-number">1</span>;<br>b=<span class="hljs-number">2</span>;<br>c=<span class="hljs-number">3</span>;<br></code></pre></td></tr></table></figure><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> parser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/parser&quot;</span>);<br><span class="hljs-keyword">const</span> traverse = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/traverse&quot;</span>).<span class="hljs-property">default</span>;<br><span class="hljs-keyword">const</span> t = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/types&quot;</span>);<br><span class="hljs-keyword">const</span> generator = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/generator&quot;</span>).<span class="hljs-property">default</span>;<br><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-comment">//将源代码解析为AST</span><br>encodeFile = <span class="hljs-string">&quot;./sourcrCode.js&quot;</span>;<br>decodeFile = <span class="hljs-string">&quot;./result.js&quot;</span>;<br><span class="hljs-keyword">let</span> sourceCode = fs.<span class="hljs-title function_">readFileSync</span>(encodeFile, &#123;<span class="hljs-attr">encoding</span>: <span class="hljs-string">&quot;utf-8&quot;</span>&#125;);<br><span class="hljs-keyword">const</span> ast = parser.<span class="hljs-title function_">parse</span>(sourceCode);<br><span class="hljs-title function_">traverse</span>(ast, &#123;<br>    <span class="hljs-title class_">ExpressionStatement</span>(path) &#123;<br>        <span class="hljs-keyword">let</span> &#123;expression&#125; = path.<span class="hljs-property">node</span>;<br>        <span class="hljs-keyword">if</span> (!t.<span class="hljs-title function_">isSequenceExpression</span>(expression)) <span class="hljs-keyword">return</span>;<br>        <span class="hljs-keyword">let</span> body = [];<br>        expression.<span class="hljs-property">expressions</span>.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">express</span> =&gt;</span> &#123;<br>            body.<span class="hljs-title function_">push</span>(t.<span class="hljs-title function_">expressionStatement</span>(express))<br>        &#125;)<br>        path.<span class="hljs-title function_">replaceInline</span>(body)<br>    &#125;<br>&#125;)<br><br><span class="hljs-keyword">let</span> &#123;code&#125; = <span class="hljs-title function_">generator</span>(ast, opts = &#123;<span class="hljs-string">&quot;compact&quot;</span>: <span class="hljs-literal">false</span>&#125;);<br><br>fs.<span class="hljs-title function_">writeFile</span>(decodeFile, code, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>&#125;);<br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>AST还原</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AST</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>三目运算符还原</title>
    <link href="/posts/79820d1b/"/>
    <url>/posts/79820d1b/</url>
    
    <content type="html"><![CDATA[<h2 id="AST三目运算符还原"><a href="#AST三目运算符还原" class="headerlink" title="AST三目运算符还原"></a>AST三目运算符还原</h2><p><strong>exp</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> a = m ? <span class="hljs-number">11</span>:<span class="hljs-number">12</span>;<br><span class="hljs-comment">// 还原后</span><br><span class="hljs-keyword">if</span> (m)&#123;<br>    a = <span class="hljs-number">11</span><br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    a = <span class="hljs-number">12</span><br>&#125;<br><br></code></pre></td></tr></table></figure><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">const</span> parser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/parser&quot;</span>);<br><span class="hljs-keyword">const</span> traverse = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/traverse&quot;</span>).<span class="hljs-property">default</span>;<br><span class="hljs-keyword">const</span> t = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/types&quot;</span>);<br><span class="hljs-keyword">const</span> generator = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@babel/generator&quot;</span>).<span class="hljs-property">default</span>;<br><span class="hljs-comment">//将源代码解析为AST</span><br>encodeFile = <span class="hljs-string">&quot;./sourcrCode.js&quot;</span>;<br>decodeFile = <span class="hljs-string">&quot;./result.js&quot;</span>;<br><br><span class="hljs-keyword">let</span> sourceCode = fs.<span class="hljs-title function_">readFileSync</span>(encodeFile, &#123;<span class="hljs-attr">encoding</span>: <span class="hljs-string">&quot;utf-8&quot;</span>&#125;);<br><span class="hljs-keyword">let</span> ast = parser.<span class="hljs-title function_">parse</span>(sourceCode);<br><span class="hljs-keyword">let</span> visitor = &#123;<br>    <span class="hljs-title class_">ConditionalExpression</span>(path) &#123;<br>        <span class="hljs-keyword">let</span> parentPath = path.<span class="hljs-property">parentPath</span>;<br>        <span class="hljs-keyword">if</span> (parentPath.<span class="hljs-title function_">isConditionalExpression</span>()) &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-comment">// a = m?12:11</span><br>        <span class="hljs-keyword">let</span> &#123;test, consequent, alternate&#125; = path.<span class="hljs-property">node</span>;<br><br>        <span class="hljs-keyword">if</span> (parentPath.<span class="hljs-title function_">isAssignmentExpression</span>()) &#123;<br>            <span class="hljs-comment">// let &#123;operator, left&#125; = parentPath.node;</span><br>            <span class="hljs-comment">// if (operator === &quot;=&quot;) &#123;</span><br>            <span class="hljs-comment">//     consequent = t.assignmentExpression(&quot;=&quot;, left, consequent);</span><br>            <span class="hljs-comment">//     alternate = t.assignmentExpression(&quot;=&quot;, left, alternate);</span><br>            <span class="hljs-comment">//     parentPath.replaceInline(t.conditionalExpression(test, consequent, alternate))</span><br>            <span class="hljs-comment">// &#125;</span><br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (!t.<span class="hljs-title function_">isExpressionStatement</span>(consequent)) &#123;<br>            consequent = t.<span class="hljs-title function_">expressionStatement</span>(consequent);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (!t.<span class="hljs-title function_">isExpressionStatement</span>(alternate)) &#123;<br>            alternate = t.<span class="hljs-title function_">expressionStatement</span>(alternate);<br>        &#125;<br>        <span class="hljs-keyword">const</span> ifStatement = t.<span class="hljs-title function_">ifStatement</span>(test, t.<span class="hljs-title function_">blockStatement</span>([consequent]), t.<span class="hljs-title function_">blockStatement</span>([alternate]))<br>        <span class="hljs-comment">// console.log(ifStatement)</span><br>        parentPath.<span class="hljs-title function_">replaceInline</span>(ifStatement);<br>    &#125;,<br>    <span class="hljs-title class_">StringLiteral</span>(path)&#123;<br>        <span class="hljs-keyword">let</span> extra = path.<span class="hljs-property">node</span>.<span class="hljs-property">extra</span><br>        <span class="hljs-keyword">if</span> (!extra)&#123;<br>            <span class="hljs-keyword">return</span><br>        &#125;<br>        <span class="hljs-keyword">let</span> value = extra.<span class="hljs-property">rawValue</span><br>        path.<span class="hljs-title function_">replaceInline</span>(t.<span class="hljs-title function_">stringLiteral</span>(value))<br>        <span class="hljs-comment">// path.replaceInline(t.stringLiteral(value.replace(/\&quot;/g, &quot;&quot;).replace(&quot;\\b&quot;, &quot;\b&quot;)</span><br>        <span class="hljs-comment">//     .replace(&quot;\\t&quot;, &quot;\t&quot;).replace(&quot;\\n&quot;, &quot;\n&quot;)</span><br>        <span class="hljs-comment">//     .replace(&quot;\\v&quot;, &quot;\v&quot;).replace(&quot;\\f&quot;, &quot;\f&quot;)</span><br>        <span class="hljs-comment">//     .replace(&quot;\\r&quot;, &quot;\r&quot;)))</span><br><br>    &#125;<br><br>&#125;<br><span class="hljs-title function_">traverse</span>(ast, visitor)<br><span class="hljs-keyword">let</span> &#123;code&#125; = <span class="hljs-title function_">generator</span>(ast, &#123; <span class="hljs-attr">jsescOption</span>: &#123; <span class="hljs-attr">sourceMaps</span>: <span class="hljs-literal">true</span> &#125; &#125;);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(code)<br>fs.<span class="hljs-title function_">writeFile</span>(decodeFile, code, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>&#125;);<br><br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>AST还原</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AST</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一键复制浏览器对象属性</title>
    <link href="/posts/88344df4/"/>
    <url>/posts/88344df4/</url>
    
    <content type="html"><![CDATA[<h2 id="一键复制浏览器对象属性"><a href="#一键复制浏览器对象属性" class="headerlink" title="一键复制浏览器对象属性"></a>一键复制浏览器对象属性</h2><p><code>**use: console运行如下代码**</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> getObjectValue = <span class="hljs-keyword">function</span> (<span class="hljs-params">obj</span>) &#123;<br>    <span class="hljs-keyword">let</span> newObj = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> key <span class="hljs-keyword">in</span> obj) &#123;<br>        <span class="hljs-keyword">if</span> (obj[key] == <span class="hljs-literal">null</span>) &#123;<br>            newObj[key] = <span class="hljs-literal">null</span>;<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> obj[key] == <span class="hljs-string">&quot;string&quot;</span> || <span class="hljs-keyword">typeof</span> obj[key] == <span class="hljs-string">&quot;number&quot;</span> || <span class="hljs-keyword">typeof</span> obj[key] == <span class="hljs-string">&quot;boolean&quot;</span>) &#123;<br>            newObj[key] = obj[key];<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> obj[key] == <span class="hljs-string">&quot;function&quot;</span>) &#123;<br>            newObj[key] = <span class="hljs-string">&quot;function&quot;</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(obj[key])) &#123;<br>            newObj[key] = obj[key];<br>        &#125;<br><br>    &#125;<br>    <span class="hljs-keyword">return</span> newObj;<br>&#125;<br><br><span class="hljs-comment">// obj -&gt; 指定浏览器对象 window/document/navigator</span><br><span class="hljs-keyword">let</span> newObj = <span class="hljs-title function_">getObjectValue</span>(navigator);<br><span class="hljs-title function_">copy</span>(newObj)<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>浏览器属性操作</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>浏览器环境补录</title>
    <link href="/posts/debddada/"/>
    <url>/posts/debddada/</url>
    
    <content type="html"><![CDATA[<h2 id="浏览器环境补录"><a href="#浏览器环境补录" class="headerlink" title="浏览器环境补录"></a>浏览器环境补录</h2><h3 id="1-JSDOM-模块"><a href="#1-JSDOM-模块" class="headerlink" title="1. JSDOM 模块"></a>1. JSDOM 模块</h3><p>安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">npm install jsdom -g<br></code></pre></td></tr></table></figure><p><strong>导入模块</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> jsdom = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;jsdom&quot;</span>);<br><span class="hljs-keyword">const</span> &#123;<span class="hljs-variable constant_">JSDOM</span>&#125; = jsdom;<br></code></pre></td></tr></table></figure><p><strong>基本用法</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> &#123;<span class="hljs-variable constant_">JSDOM</span>&#125; = jsdom;<br><span class="hljs-keyword">const</span> dom = <span class="hljs-keyword">new</span> <span class="hljs-title function_">JSDOM</span>(<span class="hljs-string">`&lt;!DOCTYPE html&gt;&lt;p&gt;Hello world&lt;/p&gt;&lt;script&gt;&lt;/script&gt;`</span>, &#123;<br>    <span class="hljs-attr">pretendToBeVisual</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-comment">// 隐藏</span><br>    <span class="hljs-attr">hidden</span>: <span class="hljs-literal">false</span>,<br>&#125;);<br><span class="hljs-keyword">var</span> dom_window = dom.<span class="hljs-property">window</span>;<br><span class="hljs-keyword">var</span> dom_document = dom_window.<span class="hljs-property">document</span>;<br><span class="hljs-keyword">var</span> dom_navigator = dom_window.<span class="hljs-property">navigator</span>;<br></code></pre></td></tr></table></figure><p><strong>自定义属性</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 设置document属性 自定义添加</span><br>dom_document[<span class="hljs-string">&quot;wasDiscarded&quot;</span>] = <span class="hljs-literal">false</span><br><span class="hljs-comment">// 构件JSDOM对象时自定义属性</span><br><span class="hljs-keyword">const</span> dom = <span class="hljs-keyword">new</span> <span class="hljs-title function_">JSDOM</span>(<span class="hljs-string">``</span>, &#123;<br>    <span class="hljs-attr">url</span>: <span class="hljs-string">&quot;https://example.org/&quot;</span>,<br>    <span class="hljs-attr">referrer</span>: <span class="hljs-string">&quot;https://example.com/&quot;</span>,<br>    <span class="hljs-attr">contentType</span>: <span class="hljs-string">&quot;text/html&quot;</span>,<br>    <span class="hljs-attr">includeNodeLocations</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">storageQuota</span>: <span class="hljs-number">10000000</span><br>&#125;);<br><span class="hljs-comment">//备注:</span><br><span class="hljs-comment">//url设置由window.location、document.URL和返回的值document.documentURI，并影响文档中相对 URL 的解析以及获取子资源时使用的同源限制和引用等内容。它默认为&quot;about:blank&quot;.</span><br><span class="hljs-comment">//referrer只影响从 读取的值document.referrer。它默认为没有引用者（反映为空字符串）。</span><br><span class="hljs-comment">//contentType影响从 读取的值document.contentType，以及文档的解析方式：作为 HTML 或作为 XML。不是HTML mime 类型或XML mime 类型的值将抛出。它默认为&quot;text/html&quot;. 如果存在charset参数，它会影响二进制数据处理。</span><br><span class="hljs-comment">//includeNodeLocations保留由 HTML 解析器生成的位置信息，允许您使用nodeLocation()方法（如下所述）检索它。它还确保在&lt;script&gt;元素内部运行的代码的异常堆栈跟踪中报告的行号是正确的。它默认false提供最佳性能，并且不能与 XML 内容类型一起使用，因为我们的 XML 解析器不支持位置信息。</span><br><span class="hljs-comment">//storageQuota是localStorage和使用的单独存储区域的最大代码单元大小sessionStorage。尝试存储大于此限制的数据将导致DOMException抛出 a。默认情况下，受 HTML 规范的启发，它设置为每个来源 5,000,000 个代码单元。</span><br></code></pre></td></tr></table></figure><h3 id="2-Proxy浏览器属性"><a href="#2-Proxy浏览器属性" class="headerlink" title="2. Proxy浏览器属性"></a>2. Proxy浏览器属性</h3><p>浏览器属性代理, 类似hook某个浏览器对象使用了哪个属性, 可将属性打印进行补录环境<br><code>备注: navigator, localStorage, location... 既可在浏览器中单独调用, 也可用window/document. ** 进行调用, 同样也需要加Proxy </code><br><strong>window</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">window</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(<span class="hljs-variable language_">window</span>, &#123;<br>    <span class="hljs-attr">get</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, receiver</span>) &#123;<br>        <span class="hljs-comment">// console.log(&quot;&#123;window&#125;Get&quot;, target, key, receiver)</span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;window&#125;Get&quot;</span>, <span class="hljs-string">&quot;key: &quot;</span>, key);<br>        <span class="hljs-keyword">if</span> (key === <span class="hljs-string">&quot;&quot;</span>) &#123;<br>            <span class="hljs-keyword">debugger</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> target[key];<br>    &#125;,<br>    <span class="hljs-attr">set</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, value, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;window&#125;Set&quot;</span>, <span class="hljs-string">&quot;key: &quot;</span>, key, <span class="hljs-string">&quot;value: &quot;</span>, value, <span class="hljs-string">&quot;receiver: &quot;</span>, receiver);<br>        <span class="hljs-comment">// debugger;</span><br>        target[key] = value;<br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p><strong>navigator</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">window</span>.<span class="hljs-property">navigator</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(<span class="hljs-variable language_">window</span>.<span class="hljs-property">navigator</span>, &#123;<br>    <span class="hljs-attr">get</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;navigator&#125;Get key: &quot;</span>, key)<br>        <span class="hljs-keyword">if</span> (key === <span class="hljs-string">&quot;hasOwnProperty&quot;</span>) &#123;<br>            <span class="hljs-keyword">debugger</span>;<br>        &#125;<br>        <span class="hljs-comment">// debugger;</span><br>        <span class="hljs-keyword">return</span> target[key];<br>    &#125;,<br>    <span class="hljs-attr">set</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, value, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;navigator&#125;Set key: &quot;</span>, key, target, value, receiver)<br>        <span class="hljs-comment">// debugger;</span><br>        target[key] = value;<br>    &#125;<br>&#125;);<br>navigator = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(navigator, &#123;<br>    <span class="hljs-attr">get</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;navigator&#125;Get key: &quot;</span>, key)<br>        <span class="hljs-keyword">if</span> (key === <span class="hljs-string">&quot;&quot;</span>) &#123;<br>            <span class="hljs-keyword">debugger</span>;<br>        &#125;<br>        <span class="hljs-comment">// debugger;</span><br>        <span class="hljs-keyword">return</span> target[key];<br>    &#125;,<br>    <span class="hljs-attr">set</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, value, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;navigator&#125;Set key: &quot;</span>, key, target, value, receiver)<br>        <span class="hljs-comment">// debugger;</span><br>        target[key] = value;<br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p><strong>document</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">document</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(<span class="hljs-variable language_">document</span>, &#123;<br>    <span class="hljs-attr">get</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;document&#125;Get key: &quot;</span>, key)<br>        <span class="hljs-keyword">if</span> (key === <span class="hljs-string">&quot;hasOwnProperty&quot;</span>) &#123;<br>            <span class="hljs-keyword">debugger</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> target[key];<br>    &#125;,<br>    <span class="hljs-attr">set</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, value, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;document&#125;Set key: &quot;</span>, key)<br>        <span class="hljs-comment">// debugger;</span><br>        target[key] = value;<br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p><strong>location</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(<span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>, &#123;<br>    <span class="hljs-attr">get</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;Location&#125;Get key: &quot;</span>, key)<br>        <span class="hljs-keyword">debugger</span>;<br>        <span class="hljs-keyword">return</span> target[key];<br>    &#125;,<br>    <span class="hljs-attr">set</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, value, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;Location&#125;Set key: &quot;</span>, key)<br>        <span class="hljs-comment">// debugger;</span><br>        target[key] = value;<br>    &#125;<br>&#125;);<br>location = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(location, &#123;<br>    <span class="hljs-attr">get</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;Location&#125;Get key: &quot;</span>, key)<br>        <span class="hljs-keyword">debugger</span>;<br>        <span class="hljs-keyword">return</span> target[key];<br>    &#125;,<br>    <span class="hljs-attr">set</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, value, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;Location&#125;Set key: &quot;</span>, key)<br>        <span class="hljs-comment">// debugger;</span><br>        target[key] = value;<br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p><strong>localStorage</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">window</span>.<span class="hljs-property">localStorage</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(<span class="hljs-variable language_">window</span>.<span class="hljs-property">localStorage</span>, &#123;<br>    <span class="hljs-attr">get</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;Location&#125;Get key: &quot;</span>, key)<br>        <span class="hljs-comment">// debugger;</span><br>        <span class="hljs-keyword">return</span> target[key];<br>    &#125;,<br>    <span class="hljs-attr">set</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, value, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;Location&#125;Set key: &quot;</span>, key)<br>        <span class="hljs-comment">// debugger;</span><br>        target[key] = value;<br>    &#125;<br>&#125;);<br><span class="hljs-variable language_">localStorage</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(<span class="hljs-variable language_">localStorage</span>, &#123;<br>    <span class="hljs-attr">get</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;Location&#125;Get key: &quot;</span>, key)<br>        <span class="hljs-comment">// debugger;</span><br>        <span class="hljs-keyword">return</span> target[key];<br>    &#125;,<br>    <span class="hljs-attr">set</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, value, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;Location&#125;Set key: &quot;</span>, key)<br>        <span class="hljs-comment">// debugger;</span><br>        target[key] = value;<br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p><strong>Object</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">window</span>.<span class="hljs-property">Object</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(<span class="hljs-variable language_">window</span>.<span class="hljs-property">Object</span>, &#123;<br>    <span class="hljs-attr">get</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;window.Object&#125;Get key: &quot;</span>, key)<br>        <span class="hljs-comment">// debugger;</span><br>        <span class="hljs-keyword">return</span> target[key];<br>    &#125;,<br>    <span class="hljs-attr">set</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, value, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;window.Object&#125;Set key: &quot;</span>, key)<br>        <span class="hljs-comment">// debugger;</span><br>        target[key] = value;<br>    &#125;<br>&#125;);<br><span class="hljs-title class_">Object</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(<span class="hljs-title class_">Object</span>, &#123;<br>    <span class="hljs-attr">get</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;Object&#125;Get key: &quot;</span>, key)<br>        <span class="hljs-comment">// debugger;</span><br>        <span class="hljs-keyword">return</span> target[key];<br>    &#125;,<br>    <span class="hljs-attr">set</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, key, value, receiver</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&#123;Object&#125;Set key: &quot;</span>, key)<br>        <span class="hljs-comment">// debugger;</span><br>        target[key] = value;<br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
      <category>JS逆向</category>
      
      <category>浏览器属性操作</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux基本命令</title>
    <link href="/posts/4b6ea061/"/>
    <url>/posts/4b6ea061/</url>
    
    <content type="html"><![CDATA[<h2 id="Linux-基本命令"><a href="#Linux-基本命令" class="headerlink" title="Linux 基本命令"></a>Linux 基本命令</h2><h3 id="1-关键词查询"><a href="#1-关键词查询" class="headerlink" title="1. 关键词查询"></a>1. 关键词查询</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">grep &quot;关键词&quot; 文件名称 |wc -l<br></code></pre></td></tr></table></figure><h3 id="2-查看进程"><a href="#2-查看进程" class="headerlink" title="2. 查看进程"></a>2. 查看进程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">ps -aux | grep `python3`<br></code></pre></td></tr></table></figure><h3 id="2-后台挂起启动python命令"><a href="#2-后台挂起启动python命令" class="headerlink" title="2. 后台挂起启动python命令"></a>2. 后台挂起启动python命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">nohup python3 text.py &gt; /dev/null 2&gt;&amp;1 &amp;<br></code></pre></td></tr></table></figure><h3 id="3-解压-压缩"><a href="#3-解压-压缩" class="headerlink" title="3. 解压 / 压缩"></a>3. 解压 / 压缩</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs commandline">zip:<br>    zip –r test.zip test // 将test压缩为test.zip<br>    unzip test.zip // 解压<br>tar:<br>    tar -czvf test.tar.gz test //将test压缩为test.tar.gz<br>    tar -xzvf test.tar.gz // 解压<br></code></pre></td></tr></table></figure><h3 id="4-文件操作"><a href="#4-文件操作" class="headerlink" title="4. 文件操作"></a>4. 文件操作</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs commandline">pwd //显示工作路径<br>ls -a //显示隐藏文件<br>mkdir 文件夹 // 创建文件夹<br>rm -rf 文件名 //删除文件<br>cp /dir1/ /dir2/  //复制文件到指定目录<br>touch newfile // 创建一个新空文件<br>cat|less|more // 查看文件<br>find  // 查找<br>    find . -name *.log 在当前目录查找以.log结尾的文件<br>    find / -name log 在根目录查找log命名的目录<br></code></pre></td></tr></table></figure><h3 id="5-查看日志"><a href="#5-查看日志" class="headerlink" title="5. 查看日志"></a>5. 查看日志</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs commandline">tail -f /data/.../***.log<br>```          <br><br>### 6. 查看网络状况<br>```commandline<br>netstat -apn // 查看所有端口<br>an //按一定顺序排列输出<br>p //表示显示哪个进程在调用<br></code></pre></td></tr></table></figure><h3 id="7-上传-下载"><a href="#7-上传-下载" class="headerlink" title="7. 上传 下载"></a>7. 上传 下载</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs commandline">rz // 上传<br>sz // 下载<br></code></pre></td></tr></table></figure><h2 id="8-防火墙"><a href="#8-防火墙" class="headerlink" title="8. 防火墙"></a>8. 防火墙</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs commandline">service iptables start // 开启防火墙<br>service iptables stop // 关闭防火墙<br><br>chkconfig iptables on // 永久开启<br>chkconfig iptables off // 永久关闭<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sha512</title>
    <link href="/posts/3a86036f/"/>
    <url>/posts/3a86036f/</url>
    
    <content type="html"><![CDATA[<h2 id="sha512加密源码"><a href="#sha512加密源码" class="headerlink" title="sha512加密源码"></a>sha512加密源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">a, m</span>) &#123;<br>    <span class="hljs-keyword">var</span> r = &#123;&#125;, f = r.<span class="hljs-property">lib</span> = &#123;&#125;, g = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, l = f.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                g.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-keyword">new</span> g;<br>                a &amp;&amp; b.<span class="hljs-title function_">mixIn</span>(a);<br>                b.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (b.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    b.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                b.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = b;<br>                b.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> b<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                a.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(a, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b <span class="hljs-keyword">in</span> a) a.<span class="hljs-title function_">hasOwnProperty</span>(b) &amp;&amp; (<span class="hljs-variable language_">this</span>[b] = a[b]);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = a.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        p = f.<span class="hljs-property">WordArray</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>                a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = a || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = b != m ? b : <span class="hljs-number">4</span> * a.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> (a || q).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, d = a.<span class="hljs-property">words</span>, c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (c % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; a; j++) b[c + j &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (d[j &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((c + j) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; d.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; a; j += <span class="hljs-number">4</span>) b[c + j &gt;&gt;&gt; <span class="hljs-number">2</span>] = d[j &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> b.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(b, d);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += a;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> n = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                n[b &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (b % <span class="hljs-number">4</span>);<br>                n.<span class="hljs-property">length</span> = a.<span class="hljs-title function_">ceil</span>(b / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = l.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">n</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], d = <span class="hljs-number">0</span>; d &lt; n; d += <span class="hljs-number">4</span>) b.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * a.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(b, n)<br>            &#125;<br>        &#125;), y = r.<span class="hljs-property">enc</span> = &#123;&#125;, q = y.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = [], c = <span class="hljs-number">0</span>; c &lt; a; c++) &#123;<br>                    <span class="hljs-keyword">var</span> j = b[c &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (c % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    d.<span class="hljs-title function_">push</span>((j &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    d.<span class="hljs-title function_">push</span>((j &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> d.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = a.<span class="hljs-property">length</span>, d = [], c = <span class="hljs-number">0</span>; c &lt; b; c += <span class="hljs-number">2</span>) d[c &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(a.<span class="hljs-title function_">substr</span>(c,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (c % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(d, b / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, G = y.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = [], c = <span class="hljs-number">0</span>; c &lt; a; c++) d.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(b[c &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (c % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> d.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = a.<span class="hljs-property">length</span>, d = [], c = <span class="hljs-number">0</span>; c &lt; b; c++) d[c &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a.<span class="hljs-title function_">charCodeAt</span>(c) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (c % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(d, b)<br>            &#125;<br>        &#125;, fa = y.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(G.<span class="hljs-title function_">stringify</span>(a)))<br>                &#125; <span class="hljs-keyword">catch</span> (b) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> G.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(a)))<br>            &#125;<br>        &#125;,<br>        h = f.<span class="hljs-property">BufferedBlockAlgorithm</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> p.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = fa.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">n</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, d = b.<span class="hljs-property">words</span>, c = b.<span class="hljs-property">sigBytes</span>, j = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, l = c / (<span class="hljs-number">4</span> * j),<br>                    l = n ? a.<span class="hljs-title function_">ceil</span>(l) : a.<span class="hljs-title function_">max</span>((l | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                n = l * j;<br>                c = a.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * n, c);<br>                <span class="hljs-keyword">if</span> (n) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> h = <span class="hljs-number">0</span>; h &lt; n; h += j) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(d, h);<br>                    h = d.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, n);<br>                    b.<span class="hljs-property">sigBytes</span> -= c<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(h, c)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = l.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    f.<span class="hljs-property">Hasher</span> = h.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: l.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            h.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, d</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(d)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, d</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> ga.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    d)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> ga = r.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> r<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> m = <span class="hljs-title class_">CryptoJS</span>, r = m.<span class="hljs-property">lib</span>, f = r.<span class="hljs-property">Base</span>, g = r.<span class="hljs-property">WordArray</span>, m = m.<span class="hljs-property">x64</span> = &#123;&#125;;<br>    m.<span class="hljs-property">Word</span> = f.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, p</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">high</span> = a;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">low</span> = p<br>        &#125;<br>    &#125;);<br>    m.<span class="hljs-property">WordArray</span> = f.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">l, p</span>) &#123;<br>            l = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = l || [];<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = p != a ? p : <span class="hljs-number">8</span> * l.<span class="hljs-property">length</span><br>        &#125;, <span class="hljs-attr">toX32</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, p = a.<span class="hljs-property">length</span>, f = [], q = <span class="hljs-number">0</span>; q &lt; p; q++) &#123;<br>                <span class="hljs-keyword">var</span> G = a[q];<br>                f.<span class="hljs-title function_">push</span>(G.<span class="hljs-property">high</span>);<br>                f.<span class="hljs-title function_">push</span>(G.<span class="hljs-property">low</span>)<br>            &#125;<br>            <span class="hljs-keyword">return</span> g.<span class="hljs-title function_">create</span>(f, <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>)<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = f.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>), p = a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>), g = p.<span class="hljs-property">length</span>, q = <span class="hljs-number">0</span>; q &lt; g; q++) p[q] = p[q].<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> a<br>        &#125;<br>    &#125;)<br>&#125;)();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">a</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">return</span> g.<span class="hljs-property">create</span>.<span class="hljs-title function_">apply</span>(g, <span class="hljs-variable language_">arguments</span>)<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> m = <span class="hljs-title class_">CryptoJS</span>, r = m.<span class="hljs-property">lib</span>.<span class="hljs-property">Hasher</span>, f = m.<span class="hljs-property">x64</span>, g = f.<span class="hljs-property">Word</span>, l = f.<span class="hljs-property">WordArray</span>, f = m.<span class="hljs-property">algo</span>, p = [<span class="hljs-title function_">a</span>(<span class="hljs-number">1116352408</span>, <span class="hljs-number">3609767458</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1899447441</span>, <span class="hljs-number">602891725</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3049323471</span>, <span class="hljs-number">3964484399</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3921009573</span>, <span class="hljs-number">2173295548</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">961987163</span>, <span class="hljs-number">4081628472</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1508970993</span>, <span class="hljs-number">3053834265</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2453635748</span>, <span class="hljs-number">2937671579</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2870763221</span>, <span class="hljs-number">3664609560</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3624381080</span>, <span class="hljs-number">2734883394</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">310598401</span>, <span class="hljs-number">1164996542</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">607225278</span>, <span class="hljs-number">1323610764</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1426881987</span>, <span class="hljs-number">3590304994</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1925078388</span>, <span class="hljs-number">4068182383</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2162078206</span>, <span class="hljs-number">991336113</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2614888103</span>, <span class="hljs-number">633803317</span>),<br>        <span class="hljs-title function_">a</span>(<span class="hljs-number">3248222580</span>, <span class="hljs-number">3479774868</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3835390401</span>, <span class="hljs-number">2666613458</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">4022224774</span>, <span class="hljs-number">944711139</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">264347078</span>, <span class="hljs-number">2341262773</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">604807628</span>, <span class="hljs-number">2007800933</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">770255983</span>, <span class="hljs-number">1495990901</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1249150122</span>, <span class="hljs-number">1856431235</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1555081692</span>, <span class="hljs-number">3175218132</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1996064986</span>, <span class="hljs-number">2198950837</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2554220882</span>, <span class="hljs-number">3999719339</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2821834349</span>, <span class="hljs-number">766784016</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2952996808</span>, <span class="hljs-number">2566594879</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3210313671</span>, <span class="hljs-number">3203337956</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3336571891</span>, <span class="hljs-number">1034457026</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3584528711</span>, <span class="hljs-number">2466948901</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">113926993</span>, <span class="hljs-number">3758326383</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">338241895</span>, <span class="hljs-number">168717936</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">666307205</span>, <span class="hljs-number">1188179964</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">773529912</span>, <span class="hljs-number">1546045734</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1294757372</span>, <span class="hljs-number">1522805485</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1396182291</span>,<br>            <span class="hljs-number">2643833823</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1695183700</span>, <span class="hljs-number">2343527390</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1986661051</span>, <span class="hljs-number">1014477480</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2177026350</span>, <span class="hljs-number">1206759142</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2456956037</span>, <span class="hljs-number">344077627</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2730485921</span>, <span class="hljs-number">1290863460</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2820302411</span>, <span class="hljs-number">3158454273</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3259730800</span>, <span class="hljs-number">3505952657</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3345764771</span>, <span class="hljs-number">106217008</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3516065817</span>, <span class="hljs-number">3606008344</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3600352804</span>, <span class="hljs-number">1432725776</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">4094571909</span>, <span class="hljs-number">1467031594</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">275423344</span>, <span class="hljs-number">851169720</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">430227734</span>, <span class="hljs-number">3100823752</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">506948616</span>, <span class="hljs-number">1363258195</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">659060556</span>, <span class="hljs-number">3750685593</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">883997877</span>, <span class="hljs-number">3785050280</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">958139571</span>, <span class="hljs-number">3318307427</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1322822218</span>, <span class="hljs-number">3812723403</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1537002063</span>, <span class="hljs-number">2003034995</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1747873779</span>, <span class="hljs-number">3602036899</span>),<br>        <span class="hljs-title function_">a</span>(<span class="hljs-number">1955562222</span>, <span class="hljs-number">1575990012</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2024104815</span>, <span class="hljs-number">1125592928</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2227730452</span>, <span class="hljs-number">2716904306</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2361852424</span>, <span class="hljs-number">442776044</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2428436474</span>, <span class="hljs-number">593698344</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2756734187</span>, <span class="hljs-number">3733110249</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3204031479</span>, <span class="hljs-number">2999351573</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3329325298</span>, <span class="hljs-number">3815920427</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3391569614</span>, <span class="hljs-number">3928383900</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3515267271</span>, <span class="hljs-number">566280711</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3940187606</span>, <span class="hljs-number">3454069534</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">4118630271</span>, <span class="hljs-number">4000239992</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">116418474</span>, <span class="hljs-number">1914138554</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">174292421</span>, <span class="hljs-number">2731055270</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">289380356</span>, <span class="hljs-number">3203993006</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">460393269</span>, <span class="hljs-number">320620315</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">685471733</span>, <span class="hljs-number">587496836</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">852142971</span>, <span class="hljs-number">1086792851</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1017036298</span>, <span class="hljs-number">365543100</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1126000580</span>, <span class="hljs-number">2618297676</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1288033470</span>,<br>            <span class="hljs-number">3409855158</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1501505948</span>, <span class="hljs-number">4234509866</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1607167915</span>, <span class="hljs-number">987167468</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1816402316</span>, <span class="hljs-number">1246189591</span>)], y = [], q = <span class="hljs-number">0</span>; <span class="hljs-number">80</span> &gt; q; q++) y[q] = <span class="hljs-title function_">a</span>();<br>    f = f.<span class="hljs-property">SHA512</span> = r.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> l.<span class="hljs-title function_">init</span>([<span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">1779033703</span>, <span class="hljs-number">4089235720</span>), <span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">3144134277</span>, <span class="hljs-number">2227873595</span>), <span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">1013904242</span>, <span class="hljs-number">4271175723</span>), <span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">2773480762</span>, <span class="hljs-number">1595750129</span>), <span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">1359893119</span>, <span class="hljs-number">2917565137</span>), <span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">2600822924</span>, <span class="hljs-number">725511199</span>), <span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">528734635</span>, <span class="hljs-number">4215389547</span>), <span class="hljs-keyword">new</span> g.<span class="hljs-title function_">init</span>(<span class="hljs-number">1541459225</span>, <span class="hljs-number">327033209</span>)])<br>        &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> h = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>,<br>                     g = h[<span class="hljs-number">0</span>], n = h[<span class="hljs-number">1</span>], b = h[<span class="hljs-number">2</span>], d = h[<span class="hljs-number">3</span>], c = h[<span class="hljs-number">4</span>], j = h[<span class="hljs-number">5</span>], l = h[<span class="hljs-number">6</span>], h = h[<span class="hljs-number">7</span>], q = g.<span class="hljs-property">high</span>, m = g.<span class="hljs-property">low</span>, r = n.<span class="hljs-property">high</span>, N = n.<span class="hljs-property">low</span>, Z = b.<span class="hljs-property">high</span>, O = b.<span class="hljs-property">low</span>, $ = d.<span class="hljs-property">high</span>, P = d.<span class="hljs-property">low</span>, aa = c.<span class="hljs-property">high</span>, Q = c.<span class="hljs-property">low</span>, ba = j.<span class="hljs-property">high</span>, R = j.<span class="hljs-property">low</span>, ca = l.<span class="hljs-property">high</span>, S = l.<span class="hljs-property">low</span>, da = h.<span class="hljs-property">high</span>, T = h.<span class="hljs-property">low</span>, v = q, s = m, H = r, E = N, I = Z, F = O, W = $, J = P, w = aa, t = Q, U = ba, K = R, V = ca, L = S, X = da, M = T, x = <span class="hljs-number">0</span>; <span class="hljs-number">80</span> &gt; x; x++) &#123;<br>                <span class="hljs-keyword">var</span> B = y[x];<br>                <span class="hljs-keyword">if</span> (<span class="hljs-number">16</span> &gt; x) <span class="hljs-keyword">var</span> u = B.<span class="hljs-property">high</span> = a[f + <span class="hljs-number">2</span> * x] | <span class="hljs-number">0</span>, e = B.<span class="hljs-property">low</span> = a[f + <span class="hljs-number">2</span> * x + <span class="hljs-number">1</span>] | <span class="hljs-number">0</span>; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">var</span> u = y[x - <span class="hljs-number">15</span>], e = u.<span class="hljs-property">high</span>, z = u.<span class="hljs-property">low</span>, u = (e &gt;&gt;&gt; <span class="hljs-number">1</span> | z &lt;&lt; <span class="hljs-number">31</span>) ^ (e &gt;&gt;&gt; <span class="hljs-number">8</span> | z &lt;&lt; <span class="hljs-number">24</span>) ^ e &gt;&gt;&gt; <span class="hljs-number">7</span>,<br>                        z = (z &gt;&gt;&gt; <span class="hljs-number">1</span> | e &lt;&lt; <span class="hljs-number">31</span>) ^ (z &gt;&gt;&gt; <span class="hljs-number">8</span> | e &lt;&lt; <span class="hljs-number">24</span>) ^ (z &gt;&gt;&gt; <span class="hljs-number">7</span> | e &lt;&lt; <span class="hljs-number">25</span>), D = y[x - <span class="hljs-number">2</span>], e = D.<span class="hljs-property">high</span>,<br>                        k = D.<span class="hljs-property">low</span>, D = (e &gt;&gt;&gt; <span class="hljs-number">19</span> | k &lt;&lt; <span class="hljs-number">13</span>) ^<br>                        (e &lt;&lt; <span class="hljs-number">3</span> | k &gt;&gt;&gt; <span class="hljs-number">29</span>) ^ e &gt;&gt;&gt; <span class="hljs-number">6</span>,<br>                        k = (k &gt;&gt;&gt; <span class="hljs-number">19</span> | e &lt;&lt; <span class="hljs-number">13</span>) ^ (k &lt;&lt; <span class="hljs-number">3</span> | e &gt;&gt;&gt; <span class="hljs-number">29</span>) ^ (k &gt;&gt;&gt; <span class="hljs-number">6</span> | e &lt;&lt; <span class="hljs-number">26</span>), e = y[x - <span class="hljs-number">7</span>], Y = e.<span class="hljs-property">high</span>,<br>                        C = y[x - <span class="hljs-number">16</span>], A = C.<span class="hljs-property">high</span>, C = C.<span class="hljs-property">low</span>, e = z + e.<span class="hljs-property">low</span>, u = u + Y + (e &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; z &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>),<br>                        e = e + k, u = u + D + (e &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; k &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), e = e + C,<br>                        u = u + A + (e &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; C &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>                    B.<span class="hljs-property">high</span> = u;<br>                    B.<span class="hljs-property">low</span> = e<br>                &#125;<br>                <span class="hljs-keyword">var</span> Y = w &amp; U ^ ~w &amp; V, C = t &amp; K ^ ~t &amp; L, B = v &amp; H ^ v &amp; I ^ H &amp; I, ha = s &amp; E ^ s &amp; F ^ E &amp; F,<br>                    z = (v &gt;&gt;&gt; <span class="hljs-number">28</span> | s &lt;&lt; <span class="hljs-number">4</span>) ^ (v &lt;&lt; <span class="hljs-number">30</span> | s &gt;&gt;&gt; <span class="hljs-number">2</span>) ^ (v &lt;&lt; <span class="hljs-number">25</span> | s &gt;&gt;&gt; <span class="hljs-number">7</span>),<br>                    D = (s &gt;&gt;&gt; <span class="hljs-number">28</span> | v &lt;&lt; <span class="hljs-number">4</span>) ^ (s &lt;&lt; <span class="hljs-number">30</span> | v &gt;&gt;&gt; <span class="hljs-number">2</span>) ^ (s &lt;&lt; <span class="hljs-number">25</span> | v &gt;&gt;&gt; <span class="hljs-number">7</span>), k = p[x], ia = k.<span class="hljs-property">high</span>,<br>                    ea = k.<span class="hljs-property">low</span>, k = M + ((t &gt;&gt;&gt; <span class="hljs-number">14</span> | w &lt;&lt; <span class="hljs-number">18</span>) ^ (t &gt;&gt;&gt; <span class="hljs-number">18</span> | w &lt;&lt; <span class="hljs-number">14</span>) ^ (t &lt;&lt; <span class="hljs-number">23</span> | w &gt;&gt;&gt; <span class="hljs-number">9</span>)),<br>                    A = X + ((w &gt;&gt;&gt; <span class="hljs-number">14</span> | t &lt;&lt; <span class="hljs-number">18</span>) ^ (w &gt;&gt;&gt; <span class="hljs-number">18</span> | t &lt;&lt; <span class="hljs-number">14</span>) ^ (w &lt;&lt; <span class="hljs-number">23</span> | t &gt;&gt;&gt; <span class="hljs-number">9</span>)) + (k &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; M &gt;&gt;&gt;<br>                    <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), k = k + C, A = A + Y + (k &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; C &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), k = k + ea,<br>                    A = A + ia + (k &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; ea &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), k = k + e, A = A + u + (k &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; e &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>),<br>                    e = D + ha, B = z + B + (e &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; D &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), X = V, M = L, V = U, L = K, U = w, K = t,<br>                    t = J + k | <span class="hljs-number">0</span>, w = W + A + (t &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; J &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>) | <span class="hljs-number">0</span>, W = I, J = F, I = H, F = E, H = v,<br>                    E = s, s = k + e | <span class="hljs-number">0</span>, v = A + B + (s &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; k &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>) | <span class="hljs-number">0</span><br>            &#125;<br>            m = g.<span class="hljs-property">low</span> = m + s;<br>            g.<span class="hljs-property">high</span> = q + v + (m &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; s &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            N = n.<span class="hljs-property">low</span> = N + E;<br>            n.<span class="hljs-property">high</span> = r + H + (N &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; E &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            O = b.<span class="hljs-property">low</span> = O + F;<br>            b.<span class="hljs-property">high</span> = Z + I + (O &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; F &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            P = d.<span class="hljs-property">low</span> = P + J;<br>            d.<span class="hljs-property">high</span> = $ + W + (P &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; J &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            Q = c.<span class="hljs-property">low</span> = Q + t;<br>            c.<span class="hljs-property">high</span> = aa + w + (Q &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; t &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            R = j.<span class="hljs-property">low</span> = R + K;<br>            j.<span class="hljs-property">high</span> = ba + U + (R &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; K &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            S = l.<span class="hljs-property">low</span> =<br>                S + L;<br>            l.<span class="hljs-property">high</span> = ca + V + (S &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; L &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            T = h.<span class="hljs-property">low</span> = T + M;<br>            h.<span class="hljs-property">high</span> = da + X + (T &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; M &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>)<br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, f = a.<span class="hljs-property">words</span>, h = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, g = <span class="hljs-number">8</span> * a.<span class="hljs-property">sigBytes</span>;<br>            f[g &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - g % <span class="hljs-number">32</span>;<br>            f[(g + <span class="hljs-number">128</span> &gt;&gt;&gt; <span class="hljs-number">10</span> &lt;&lt; <span class="hljs-number">5</span>) + <span class="hljs-number">30</span>] = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(h / <span class="hljs-number">4294967296</span>);<br>            f[(g + <span class="hljs-number">128</span> &gt;&gt;&gt; <span class="hljs-number">10</span> &lt;&lt; <span class="hljs-number">5</span>) + <span class="hljs-number">31</span>] = h;<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * f.<span class="hljs-property">length</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">toX32</span>()<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = r.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            a.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> a<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">32</span><br>    &#125;);<br>    m.<span class="hljs-property">SHA512</span> = r.<span class="hljs-title function_">_createHelper</span>(f);<br>    m.<span class="hljs-property">HmacSHA512</span> = r.<span class="hljs-title function_">_createHmacHelper</span>(f)<br>&#125;)();<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sha384</title>
    <link href="/posts/6aa61a1/"/>
    <url>/posts/6aa61a1/</url>
    
    <content type="html"><![CDATA[<h2 id="sha384加密源码"><a href="#sha384加密源码" class="headerlink" title="sha384加密源码"></a>sha384加密源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">a, c</span>) &#123;<br>    <span class="hljs-keyword">var</span> d = &#123;&#125;, j = d.<span class="hljs-property">lib</span> = &#123;&#125;, f = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, m = j.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                f.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-keyword">new</span> f;<br>                a &amp;&amp; b.<span class="hljs-title function_">mixIn</span>(a);<br>                b.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (b.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    b.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                b.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = b;<br>                b.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> b<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                a.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(a, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b <span class="hljs-keyword">in</span> a) a.<span class="hljs-title function_">hasOwnProperty</span>(b) &amp;&amp; (<span class="hljs-variable language_">this</span>[b] = a[b]);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = a.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        B = j.<span class="hljs-property">WordArray</span> = m.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>                a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = a || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = b != c ? b : <span class="hljs-number">4</span> * a.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> (a || y).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, g = a.<span class="hljs-property">words</span>, e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (e % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> k = <span class="hljs-number">0</span>; k &lt; a; k++) b[e + k &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (g[k &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (k % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((e + k) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; g.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (k = <span class="hljs-number">0</span>; k &lt; a; k += <span class="hljs-number">4</span>) b[e + k &gt;&gt;&gt; <span class="hljs-number">2</span>] = g[k &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> b.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(b, g);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += a;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> n = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                n[b &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (b % <span class="hljs-number">4</span>);<br>                n.<span class="hljs-property">length</span> = a.<span class="hljs-title function_">ceil</span>(b / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = m.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">n</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], g = <span class="hljs-number">0</span>; g &lt; n; g += <span class="hljs-number">4</span>) b.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * a.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> B.<span class="hljs-title function_">init</span>(b, n)<br>            &#125;<br>        &#125;), v = d.<span class="hljs-property">enc</span> = &#123;&#125;, y = v.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> g = [], e = <span class="hljs-number">0</span>; e &lt; a; e++) &#123;<br>                    <span class="hljs-keyword">var</span> k = b[e &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (e % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    g.<span class="hljs-title function_">push</span>((k &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    g.<span class="hljs-title function_">push</span>((k &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> g.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = a.<span class="hljs-property">length</span>, g = [], e = <span class="hljs-number">0</span>; e &lt; b; e += <span class="hljs-number">2</span>) g[e &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(a.<span class="hljs-title function_">substr</span>(e,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (e % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> B.<span class="hljs-title function_">init</span>(g, b / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, F = v.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> g = [], e = <span class="hljs-number">0</span>; e &lt; a; e++) g.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(b[e &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (e % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> g.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = a.<span class="hljs-property">length</span>, g = [], e = <span class="hljs-number">0</span>; e &lt; b; e++) g[e &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a.<span class="hljs-title function_">charCodeAt</span>(e) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (e % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> B.<span class="hljs-title function_">init</span>(g, b)<br>            &#125;<br>        &#125;, ha = v.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(F.<span class="hljs-title function_">stringify</span>(a)))<br>                &#125; <span class="hljs-keyword">catch</span> (b) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> F.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(a)))<br>            &#125;<br>        &#125;,<br>        Z = j.<span class="hljs-property">BufferedBlockAlgorithm</span> = m.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> B.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = ha.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">n</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, g = b.<span class="hljs-property">words</span>, e = b.<span class="hljs-property">sigBytes</span>, k = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, m = e / (<span class="hljs-number">4</span> * k),<br>                    m = n ? a.<span class="hljs-title function_">ceil</span>(m) : a.<span class="hljs-title function_">max</span>((m | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                n = m * k;<br>                e = a.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * n, e);<br>                <span class="hljs-keyword">if</span> (n) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = <span class="hljs-number">0</span>; c &lt; n; c += k) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(g, c);<br>                    c = g.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, n);<br>                    b.<span class="hljs-property">sigBytes</span> -= e<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> B.<span class="hljs-title function_">init</span>(c, e)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = m.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    j.<span class="hljs-property">Hasher</span> = Z.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: m.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            Z.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, g</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(g)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, g</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> ia.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    g)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> ia = d.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> d<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">var</span> c = <span class="hljs-title class_">CryptoJS</span>, d = c.<span class="hljs-property">lib</span>, j = d.<span class="hljs-property">Base</span>, f = d.<span class="hljs-property">WordArray</span>, c = c.<span class="hljs-property">x64</span> = &#123;&#125;;<br>    c.<span class="hljs-property">Word</span> = j.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, c</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">high</span> = a;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">low</span> = c<br>        &#125;<br>    &#125;);<br>    c.<span class="hljs-property">WordArray</span> = j.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c, d</span>) &#123;<br>            c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = c || [];<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = d != a ? d : <span class="hljs-number">8</span> * c.<span class="hljs-property">length</span><br>        &#125;, <span class="hljs-attr">toX32</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, c = a.<span class="hljs-property">length</span>, d = [], j = <span class="hljs-number">0</span>; j &lt; c; j++) &#123;<br>                <span class="hljs-keyword">var</span> F = a[j];<br>                d.<span class="hljs-title function_">push</span>(F.<span class="hljs-property">high</span>);<br>                d.<span class="hljs-title function_">push</span>(F.<span class="hljs-property">low</span>)<br>            &#125;<br>            <span class="hljs-keyword">return</span> f.<span class="hljs-title function_">create</span>(d, <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>)<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = j.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>), c = a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>), d = c.<span class="hljs-property">length</span>, f = <span class="hljs-number">0</span>; f &lt; d; f++) c[f] = c[f].<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> a<br>        &#125;<br>    &#125;)<br>&#125;)();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">a</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">return</span> f.<span class="hljs-property">create</span>.<span class="hljs-title function_">apply</span>(f, <span class="hljs-variable language_">arguments</span>)<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = <span class="hljs-title class_">CryptoJS</span>, d = c.<span class="hljs-property">lib</span>.<span class="hljs-property">Hasher</span>, j = c.<span class="hljs-property">x64</span>, f = j.<span class="hljs-property">Word</span>, m = j.<span class="hljs-property">WordArray</span>, j = c.<span class="hljs-property">algo</span>, B = [<span class="hljs-title function_">a</span>(<span class="hljs-number">1116352408</span>, <span class="hljs-number">3609767458</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1899447441</span>, <span class="hljs-number">602891725</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3049323471</span>, <span class="hljs-number">3964484399</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3921009573</span>, <span class="hljs-number">2173295548</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">961987163</span>, <span class="hljs-number">4081628472</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1508970993</span>, <span class="hljs-number">3053834265</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2453635748</span>, <span class="hljs-number">2937671579</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2870763221</span>, <span class="hljs-number">3664609560</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3624381080</span>, <span class="hljs-number">2734883394</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">310598401</span>, <span class="hljs-number">1164996542</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">607225278</span>, <span class="hljs-number">1323610764</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1426881987</span>, <span class="hljs-number">3590304994</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1925078388</span>, <span class="hljs-number">4068182383</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2162078206</span>, <span class="hljs-number">991336113</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2614888103</span>, <span class="hljs-number">633803317</span>),<br>        <span class="hljs-title function_">a</span>(<span class="hljs-number">3248222580</span>, <span class="hljs-number">3479774868</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3835390401</span>, <span class="hljs-number">2666613458</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">4022224774</span>, <span class="hljs-number">944711139</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">264347078</span>, <span class="hljs-number">2341262773</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">604807628</span>, <span class="hljs-number">2007800933</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">770255983</span>, <span class="hljs-number">1495990901</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1249150122</span>, <span class="hljs-number">1856431235</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1555081692</span>, <span class="hljs-number">3175218132</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1996064986</span>, <span class="hljs-number">2198950837</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2554220882</span>, <span class="hljs-number">3999719339</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2821834349</span>, <span class="hljs-number">766784016</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2952996808</span>, <span class="hljs-number">2566594879</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3210313671</span>, <span class="hljs-number">3203337956</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3336571891</span>, <span class="hljs-number">1034457026</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3584528711</span>, <span class="hljs-number">2466948901</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">113926993</span>, <span class="hljs-number">3758326383</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">338241895</span>, <span class="hljs-number">168717936</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">666307205</span>, <span class="hljs-number">1188179964</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">773529912</span>, <span class="hljs-number">1546045734</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1294757372</span>, <span class="hljs-number">1522805485</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1396182291</span>,<br>            <span class="hljs-number">2643833823</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1695183700</span>, <span class="hljs-number">2343527390</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1986661051</span>, <span class="hljs-number">1014477480</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2177026350</span>, <span class="hljs-number">1206759142</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2456956037</span>, <span class="hljs-number">344077627</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2730485921</span>, <span class="hljs-number">1290863460</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2820302411</span>, <span class="hljs-number">3158454273</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3259730800</span>, <span class="hljs-number">3505952657</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3345764771</span>, <span class="hljs-number">106217008</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3516065817</span>, <span class="hljs-number">3606008344</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3600352804</span>, <span class="hljs-number">1432725776</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">4094571909</span>, <span class="hljs-number">1467031594</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">275423344</span>, <span class="hljs-number">851169720</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">430227734</span>, <span class="hljs-number">3100823752</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">506948616</span>, <span class="hljs-number">1363258195</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">659060556</span>, <span class="hljs-number">3750685593</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">883997877</span>, <span class="hljs-number">3785050280</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">958139571</span>, <span class="hljs-number">3318307427</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1322822218</span>, <span class="hljs-number">3812723403</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1537002063</span>, <span class="hljs-number">2003034995</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1747873779</span>, <span class="hljs-number">3602036899</span>),<br>        <span class="hljs-title function_">a</span>(<span class="hljs-number">1955562222</span>, <span class="hljs-number">1575990012</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2024104815</span>, <span class="hljs-number">1125592928</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2227730452</span>, <span class="hljs-number">2716904306</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2361852424</span>, <span class="hljs-number">442776044</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2428436474</span>, <span class="hljs-number">593698344</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">2756734187</span>, <span class="hljs-number">3733110249</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3204031479</span>, <span class="hljs-number">2999351573</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3329325298</span>, <span class="hljs-number">3815920427</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3391569614</span>, <span class="hljs-number">3928383900</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3515267271</span>, <span class="hljs-number">566280711</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">3940187606</span>, <span class="hljs-number">3454069534</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">4118630271</span>, <span class="hljs-number">4000239992</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">116418474</span>, <span class="hljs-number">1914138554</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">174292421</span>, <span class="hljs-number">2731055270</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">289380356</span>, <span class="hljs-number">3203993006</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">460393269</span>, <span class="hljs-number">320620315</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">685471733</span>, <span class="hljs-number">587496836</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">852142971</span>, <span class="hljs-number">1086792851</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1017036298</span>, <span class="hljs-number">365543100</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1126000580</span>, <span class="hljs-number">2618297676</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1288033470</span>,<br>            <span class="hljs-number">3409855158</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1501505948</span>, <span class="hljs-number">4234509866</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1607167915</span>, <span class="hljs-number">987167468</span>), <span class="hljs-title function_">a</span>(<span class="hljs-number">1816402316</span>, <span class="hljs-number">1246189591</span>)], v = [], y = <span class="hljs-number">0</span>; <span class="hljs-number">80</span> &gt; y; y++) v[y] = <span class="hljs-title function_">a</span>();<br>    j = j.<span class="hljs-property">SHA512</span> = d.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> m.<span class="hljs-title function_">init</span>([<span class="hljs-keyword">new</span> f.<span class="hljs-title function_">init</span>(<span class="hljs-number">1779033703</span>, <span class="hljs-number">4089235720</span>), <span class="hljs-keyword">new</span> f.<span class="hljs-title function_">init</span>(<span class="hljs-number">3144134277</span>, <span class="hljs-number">2227873595</span>), <span class="hljs-keyword">new</span> f.<span class="hljs-title function_">init</span>(<span class="hljs-number">1013904242</span>, <span class="hljs-number">4271175723</span>), <span class="hljs-keyword">new</span> f.<span class="hljs-title function_">init</span>(<span class="hljs-number">2773480762</span>, <span class="hljs-number">1595750129</span>), <span class="hljs-keyword">new</span> f.<span class="hljs-title function_">init</span>(<span class="hljs-number">1359893119</span>, <span class="hljs-number">2917565137</span>), <span class="hljs-keyword">new</span> f.<span class="hljs-title function_">init</span>(<span class="hljs-number">2600822924</span>, <span class="hljs-number">725511199</span>), <span class="hljs-keyword">new</span> f.<span class="hljs-title function_">init</span>(<span class="hljs-number">528734635</span>, <span class="hljs-number">4215389547</span>), <span class="hljs-keyword">new</span> f.<span class="hljs-title function_">init</span>(<span class="hljs-number">1541459225</span>, <span class="hljs-number">327033209</span>)])<br>        &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, c</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>,<br>                     f = d[<span class="hljs-number">0</span>], j = d[<span class="hljs-number">1</span>], b = d[<span class="hljs-number">2</span>], g = d[<span class="hljs-number">3</span>], e = d[<span class="hljs-number">4</span>], k = d[<span class="hljs-number">5</span>], m = d[<span class="hljs-number">6</span>], d = d[<span class="hljs-number">7</span>], y = f.<span class="hljs-property">high</span>, M = f.<span class="hljs-property">low</span>, $ = j.<span class="hljs-property">high</span>, N = j.<span class="hljs-property">low</span>, aa = b.<span class="hljs-property">high</span>, O = b.<span class="hljs-property">low</span>, ba = g.<span class="hljs-property">high</span>, P = g.<span class="hljs-property">low</span>, ca = e.<span class="hljs-property">high</span>, Q = e.<span class="hljs-property">low</span>, da = k.<span class="hljs-property">high</span>, R = k.<span class="hljs-property">low</span>, ea = m.<span class="hljs-property">high</span>, S = m.<span class="hljs-property">low</span>, fa = d.<span class="hljs-property">high</span>, T = d.<span class="hljs-property">low</span>, s = y, p = M, G = $, D = N, H = aa, E = O, W = ba, I = P, t = ca, q = Q, U = da, J = R, V = ea, K = S, X = fa, L = T, u = <span class="hljs-number">0</span>; <span class="hljs-number">80</span> &gt; u; u++) &#123;<br>                <span class="hljs-keyword">var</span> z = v[u];<br>                <span class="hljs-keyword">if</span> (<span class="hljs-number">16</span> &gt; u) <span class="hljs-keyword">var</span> r = z.<span class="hljs-property">high</span> = a[c + <span class="hljs-number">2</span> * u] | <span class="hljs-number">0</span>, h = z.<span class="hljs-property">low</span> = a[c + <span class="hljs-number">2</span> * u + <span class="hljs-number">1</span>] | <span class="hljs-number">0</span>; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">var</span> r = v[u - <span class="hljs-number">15</span>], h = r.<span class="hljs-property">high</span>, w = r.<span class="hljs-property">low</span>, r = (h &gt;&gt;&gt; <span class="hljs-number">1</span> | w &lt;&lt; <span class="hljs-number">31</span>) ^ (h &gt;&gt;&gt; <span class="hljs-number">8</span> | w &lt;&lt; <span class="hljs-number">24</span>) ^ h &gt;&gt;&gt; <span class="hljs-number">7</span>,<br>                        w = (w &gt;&gt;&gt; <span class="hljs-number">1</span> | h &lt;&lt; <span class="hljs-number">31</span>) ^ (w &gt;&gt;&gt; <span class="hljs-number">8</span> | h &lt;&lt; <span class="hljs-number">24</span>) ^ (w &gt;&gt;&gt; <span class="hljs-number">7</span> | h &lt;&lt; <span class="hljs-number">25</span>), C = v[u - <span class="hljs-number">2</span>], h = C.<span class="hljs-property">high</span>,<br>                        l = C.<span class="hljs-property">low</span>, C = (h &gt;&gt;&gt; <span class="hljs-number">19</span> | l &lt;&lt;<br>                            <span class="hljs-number">13</span>) ^ (h &lt;&lt; <span class="hljs-number">3</span> | l &gt;&gt;&gt; <span class="hljs-number">29</span>) ^ h &gt;&gt;&gt; <span class="hljs-number">6</span>,<br>                        l = (l &gt;&gt;&gt; <span class="hljs-number">19</span> | h &lt;&lt; <span class="hljs-number">13</span>) ^ (l &lt;&lt; <span class="hljs-number">3</span> | h &gt;&gt;&gt; <span class="hljs-number">29</span>) ^ (l &gt;&gt;&gt; <span class="hljs-number">6</span> | h &lt;&lt; <span class="hljs-number">26</span>), h = v[u - <span class="hljs-number">7</span>], Y = h.<span class="hljs-property">high</span>,<br>                        A = v[u - <span class="hljs-number">16</span>], x = A.<span class="hljs-property">high</span>, A = A.<span class="hljs-property">low</span>, h = w + h.<span class="hljs-property">low</span>, r = r + Y + (h &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; w &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>),<br>                        h = h + l, r = r + C + (h &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; l &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), h = h + A,<br>                        r = r + x + (h &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; A &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>                    z.<span class="hljs-property">high</span> = r;<br>                    z.<span class="hljs-property">low</span> = h<br>                &#125;<br>                <span class="hljs-keyword">var</span> Y = t &amp; U ^ ~t &amp; V, A = q &amp; J ^ ~q &amp; K, z = s &amp; G ^ s &amp; H ^ G &amp; H, ja = p &amp; D ^ p &amp; E ^ D &amp; E,<br>                    w = (s &gt;&gt;&gt; <span class="hljs-number">28</span> | p &lt;&lt; <span class="hljs-number">4</span>) ^ (s &lt;&lt; <span class="hljs-number">30</span> | p &gt;&gt;&gt; <span class="hljs-number">2</span>) ^ (s &lt;&lt; <span class="hljs-number">25</span> | p &gt;&gt;&gt; <span class="hljs-number">7</span>),<br>                    C = (p &gt;&gt;&gt; <span class="hljs-number">28</span> | s &lt;&lt; <span class="hljs-number">4</span>) ^ (p &lt;&lt; <span class="hljs-number">30</span> | s &gt;&gt;&gt; <span class="hljs-number">2</span>) ^ (p &lt;&lt; <span class="hljs-number">25</span> | s &gt;&gt;&gt; <span class="hljs-number">7</span>), l = B[u], ka = l.<span class="hljs-property">high</span>,<br>                    ga = l.<span class="hljs-property">low</span>, l = L + ((q &gt;&gt;&gt; <span class="hljs-number">14</span> | t &lt;&lt; <span class="hljs-number">18</span>) ^ (q &gt;&gt;&gt; <span class="hljs-number">18</span> | t &lt;&lt; <span class="hljs-number">14</span>) ^ (q &lt;&lt; <span class="hljs-number">23</span> | t &gt;&gt;&gt; <span class="hljs-number">9</span>)),<br>                    x = X + ((t &gt;&gt;&gt; <span class="hljs-number">14</span> | q &lt;&lt; <span class="hljs-number">18</span>) ^ (t &gt;&gt;&gt; <span class="hljs-number">18</span> | q &lt;&lt; <span class="hljs-number">14</span>) ^ (t &lt;&lt; <span class="hljs-number">23</span> | q &gt;&gt;&gt; <span class="hljs-number">9</span>)) + (l &gt;&gt;&gt; <span class="hljs-number">0</span> &lt;<br>                    L &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), l = l + A, x = x + Y + (l &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; A &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), l = l + ga,<br>                    x = x + ka + (l &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; ga &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), l = l + h, x = x + r + (l &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; h &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>),<br>                    h = C + ja, z = w + z + (h &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; C &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>), X = V, L = K, V = U, K = J, U = t, J = q,<br>                    q = I + l | <span class="hljs-number">0</span>, t = W + x + (q &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; I &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>) | <span class="hljs-number">0</span>, W = H, I = E, H = G, E = D, G = s,<br>                    D = p, p = l + h | <span class="hljs-number">0</span>, s = x + z + (p &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; l &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>) | <span class="hljs-number">0</span><br>            &#125;<br>            M = f.<span class="hljs-property">low</span> = M + p;<br>            f.<span class="hljs-property">high</span> = y + s + (M &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; p &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            N = j.<span class="hljs-property">low</span> = N + D;<br>            j.<span class="hljs-property">high</span> = $ + G + (N &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; D &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            O = b.<span class="hljs-property">low</span> = O + E;<br>            b.<span class="hljs-property">high</span> = aa + H + (O &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; E &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            P = g.<span class="hljs-property">low</span> = P + I;<br>            g.<span class="hljs-property">high</span> = ba + W + (P &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; I &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            Q = e.<span class="hljs-property">low</span> = Q + q;<br>            e.<span class="hljs-property">high</span> = ca + t + (Q &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; q &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            R = k.<span class="hljs-property">low</span> = R + J;<br>            k.<span class="hljs-property">high</span> = da + U + (R &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; J &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            S = m.<span class="hljs-property">low</span> = S + K;<br>            m.<span class="hljs-property">high</span> = ea + V + (S &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; K &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>            T = d.<span class="hljs-property">low</span> = T + L;<br>            d.<span class="hljs-property">high</span> = fa + X + (T &gt;&gt;&gt; <span class="hljs-number">0</span> &lt; L &gt;&gt;&gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>)<br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, c = a.<span class="hljs-property">words</span>, d = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, f = <span class="hljs-number">8</span> * a.<span class="hljs-property">sigBytes</span>;<br>            c[f &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - f % <span class="hljs-number">32</span>;<br>            c[(f + <span class="hljs-number">128</span> &gt;&gt;&gt; <span class="hljs-number">10</span> &lt;&lt; <span class="hljs-number">5</span>) + <span class="hljs-number">30</span>] = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(d / <span class="hljs-number">4294967296</span>);<br>            c[(f + <span class="hljs-number">128</span> &gt;&gt;&gt; <span class="hljs-number">10</span> &lt;&lt; <span class="hljs-number">5</span>) + <span class="hljs-number">31</span>] = d;<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * c.<span class="hljs-property">length</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">toX32</span>()<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = d.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            a.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> a<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">32</span><br>    &#125;);<br>    c.<span class="hljs-property">SHA512</span> = d.<span class="hljs-title function_">_createHelper</span>(j);<br>    c.<span class="hljs-property">HmacSHA512</span> = d.<span class="hljs-title function_">_createHmacHelper</span>(j)<br>&#125;)();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> a = <span class="hljs-title class_">CryptoJS</span>, c = a.<span class="hljs-property">x64</span>, d = c.<span class="hljs-property">Word</span>, j = c.<span class="hljs-property">WordArray</span>, c = a.<span class="hljs-property">algo</span>, f = c.<span class="hljs-property">SHA512</span>, c = c.<span class="hljs-property">SHA384</span> = f.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> j.<span class="hljs-title function_">init</span>([<span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(<span class="hljs-number">3418070365</span>, <span class="hljs-number">3238371032</span>), <span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(<span class="hljs-number">1654270250</span>, <span class="hljs-number">914150663</span>), <span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(<span class="hljs-number">2438529370</span>, <span class="hljs-number">812702999</span>), <span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(<span class="hljs-number">355462360</span>, <span class="hljs-number">4144912697</span>), <span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(<span class="hljs-number">1731405415</span>, <span class="hljs-number">4290775857</span>), <span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(<span class="hljs-number">2394180231</span>, <span class="hljs-number">1750603025</span>), <span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(<span class="hljs-number">3675008525</span>, <span class="hljs-number">1694076839</span>), <span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(<span class="hljs-number">1203062813</span>, <span class="hljs-number">3204075428</span>)])<br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = f.<span class="hljs-property">_doFinalize</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            a.<span class="hljs-property">sigBytes</span> -= <span class="hljs-number">16</span>;<br>            <span class="hljs-keyword">return</span> a<br>        &#125;<br>    &#125;);<br>    a.<span class="hljs-property">SHA384</span> =<br>        f.<span class="hljs-title function_">_createHelper</span>(c);<br>    a.<span class="hljs-property">HmacSHA384</span> = f.<span class="hljs-title function_">_createHmacHelper</span>(c)<br>&#125;)();<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sha256</title>
    <link href="/posts/5cc814f7/"/>
    <url>/posts/5cc814f7/</url>
    
    <content type="html"><![CDATA[<h2 id="sha256加密源码"><a href="#sha256加密源码" class="headerlink" title="sha256加密源码"></a>sha256加密源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">h, s</span>) &#123;<br>    <span class="hljs-keyword">var</span> f = &#123;&#125;, t = f.<span class="hljs-property">lib</span> = &#123;&#125;, g = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, j = t.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                g.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-keyword">new</span> g;<br>                a &amp;&amp; c.<span class="hljs-title function_">mixIn</span>(a);<br>                c.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (c.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    c.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                c.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = c;<br>                c.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> c<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                a.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(a, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c <span class="hljs-keyword">in</span> a) a.<span class="hljs-title function_">hasOwnProperty</span>(c) &amp;&amp; (<span class="hljs-variable language_">this</span>[c] = a[c]);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = a.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        q = t.<span class="hljs-property">WordArray</span> = j.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, c</span>) &#123;<br>                a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = a || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = c != s ? c : <span class="hljs-number">4</span> * a.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> (a || u).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, d = a.<span class="hljs-property">words</span>, b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (b % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = <span class="hljs-number">0</span>; e &lt; a; e++) c[b + e &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (d[e &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (e % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((b + e) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; d.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (e = <span class="hljs-number">0</span>; e &lt; a; e += <span class="hljs-number">4</span>) c[b + e &gt;&gt;&gt; <span class="hljs-number">2</span>] = d[e &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> c.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(c, d);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += a;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a[c &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (c % <span class="hljs-number">4</span>);<br>                a.<span class="hljs-property">length</span> = h.<span class="hljs-title function_">ceil</span>(c / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = j.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = [], d = <span class="hljs-number">0</span>; d &lt; a; d += <span class="hljs-number">4</span>) c.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * h.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> q.<span class="hljs-title function_">init</span>(c, a)<br>            &#125;<br>        &#125;), v = f.<span class="hljs-property">enc</span> = &#123;&#125;, u = v.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = [], b = <span class="hljs-number">0</span>; b &lt; a; b++) &#123;<br>                    <span class="hljs-keyword">var</span> e = c[b &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (b % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    d.<span class="hljs-title function_">push</span>((e &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    d.<span class="hljs-title function_">push</span>((e &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> d.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">length</span>, d = [], b = <span class="hljs-number">0</span>; b &lt; c; b += <span class="hljs-number">2</span>) d[b &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(a.<span class="hljs-title function_">substr</span>(b,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (b % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> q.<span class="hljs-title function_">init</span>(d, c / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, k = v.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = [], b = <span class="hljs-number">0</span>; b &lt; a; b++) d.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(c[b &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (b % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> d.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">length</span>, d = [], b = <span class="hljs-number">0</span>; b &lt; c; b++) d[b &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a.<span class="hljs-title function_">charCodeAt</span>(b) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (b % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> q.<span class="hljs-title function_">init</span>(d, c)<br>            &#125;<br>        &#125;, l = v.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(k.<span class="hljs-title function_">stringify</span>(a)))<br>                &#125; <span class="hljs-keyword">catch</span> (c) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> k.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(a)))<br>            &#125;<br>        &#125;,<br>        x = t.<span class="hljs-property">BufferedBlockAlgorithm</span> = j.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> q.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = l.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, d = c.<span class="hljs-property">words</span>, b = c.<span class="hljs-property">sigBytes</span>, e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, f = b / (<span class="hljs-number">4</span> * e),<br>                    f = a ? h.<span class="hljs-title function_">ceil</span>(f) : h.<span class="hljs-title function_">max</span>((f | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                a = f * e;<br>                b = h.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * a, b);<br>                <span class="hljs-keyword">if</span> (a) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> m = <span class="hljs-number">0</span>; m &lt; a; m += e) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(d, m);<br>                    m = d.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, a);<br>                    c.<span class="hljs-property">sigBytes</span> -= b<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> q.<span class="hljs-title function_">init</span>(m, b)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = j.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    t.<span class="hljs-property">Hasher</span> = x.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: j.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            x.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">c, d</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(d)).<span class="hljs-title function_">finalize</span>(c)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">c, d</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> w.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    d)).<span class="hljs-title function_">finalize</span>(c)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> w = f.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> f<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">h</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> s = <span class="hljs-title class_">CryptoJS</span>, f = s.<span class="hljs-property">lib</span>, t = f.<span class="hljs-property">WordArray</span>, g = f.<span class="hljs-property">Hasher</span>, f = s.<span class="hljs-property">algo</span>, j = [], q = [], v = <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">4294967296</span> * (a - (a | <span class="hljs-number">0</span>)) | <span class="hljs-number">0</span><br>    &#125;, u = <span class="hljs-number">2</span>, k = <span class="hljs-number">0</span>; <span class="hljs-number">64</span> &gt; k;) &#123;<br>        <span class="hljs-keyword">var</span> l;<br>        <span class="hljs-attr">a</span>:&#123;<br>            l = u;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> x = h.<span class="hljs-title function_">sqrt</span>(l), w = <span class="hljs-number">2</span>; w &lt;= x; w++) <span class="hljs-keyword">if</span> (!(l % w)) &#123;<br>                l = !<span class="hljs-number">1</span>;<br>                <span class="hljs-keyword">break</span> a<br>            &#125;<br>            l = !<span class="hljs-number">0</span><br>        &#125;<br>        l &amp;&amp; (<span class="hljs-number">8</span> &gt; k &amp;&amp; (j[k] = <span class="hljs-title function_">v</span>(h.<span class="hljs-title function_">pow</span>(u, <span class="hljs-number">0.5</span>))), q[k] = <span class="hljs-title function_">v</span>(h.<span class="hljs-title function_">pow</span>(u, <span class="hljs-number">1</span> / <span class="hljs-number">3</span>)), k++);<br>        u++<br>    &#125;<br>    <span class="hljs-keyword">var</span> a = [], f = f.<span class="hljs-property">SHA256</span> = g.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> t.<span class="hljs-title function_">init</span>(j.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>))<br>        &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c, d</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>, e = b[<span class="hljs-number">0</span>], f = b[<span class="hljs-number">1</span>], m = b[<span class="hljs-number">2</span>], h = b[<span class="hljs-number">3</span>], p = b[<span class="hljs-number">4</span>], j = b[<span class="hljs-number">5</span>], k = b[<span class="hljs-number">6</span>], l = b[<span class="hljs-number">7</span>], n = <span class="hljs-number">0</span>; <span class="hljs-number">64</span> &gt; n; n++) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-number">16</span> &gt; n) a[n] =<br>                    c[d + n] | <span class="hljs-number">0</span>; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">var</span> r = a[n - <span class="hljs-number">15</span>], g = a[n - <span class="hljs-number">2</span>];<br>                    a[n] = ((r &lt;&lt; <span class="hljs-number">25</span> | r &gt;&gt;&gt; <span class="hljs-number">7</span>) ^ (r &lt;&lt; <span class="hljs-number">14</span> | r &gt;&gt;&gt; <span class="hljs-number">18</span>) ^ r &gt;&gt;&gt; <span class="hljs-number">3</span>) + a[n - <span class="hljs-number">7</span>] + ((g &lt;&lt; <span class="hljs-number">15</span> | g &gt;&gt;&gt; <span class="hljs-number">17</span>) ^ (g &lt;&lt; <span class="hljs-number">13</span> | g &gt;&gt;&gt; <span class="hljs-number">19</span>) ^ g &gt;&gt;&gt; <span class="hljs-number">10</span>) + a[n - <span class="hljs-number">16</span>]<br>                &#125;<br>                r = l + ((p &lt;&lt; <span class="hljs-number">26</span> | p &gt;&gt;&gt; <span class="hljs-number">6</span>) ^ (p &lt;&lt; <span class="hljs-number">21</span> | p &gt;&gt;&gt; <span class="hljs-number">11</span>) ^ (p &lt;&lt; <span class="hljs-number">7</span> | p &gt;&gt;&gt; <span class="hljs-number">25</span>)) + (p &amp; j ^ ~p &amp; k) + q[n] + a[n];<br>                g = ((e &lt;&lt; <span class="hljs-number">30</span> | e &gt;&gt;&gt; <span class="hljs-number">2</span>) ^ (e &lt;&lt; <span class="hljs-number">19</span> | e &gt;&gt;&gt; <span class="hljs-number">13</span>) ^ (e &lt;&lt; <span class="hljs-number">10</span> | e &gt;&gt;&gt; <span class="hljs-number">22</span>)) + (e &amp; f ^ e &amp; m ^ f &amp; m);<br>                l = k;<br>                k = j;<br>                j = p;<br>                p = h + r | <span class="hljs-number">0</span>;<br>                h = m;<br>                m = f;<br>                f = e;<br>                e = r + g | <span class="hljs-number">0</span><br>            &#125;<br>            b[<span class="hljs-number">0</span>] = b[<span class="hljs-number">0</span>] + e | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">1</span>] = b[<span class="hljs-number">1</span>] + f | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">2</span>] = b[<span class="hljs-number">2</span>] + m | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">3</span>] = b[<span class="hljs-number">3</span>] + h | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">4</span>] = b[<span class="hljs-number">4</span>] + p | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">5</span>] = b[<span class="hljs-number">5</span>] + j | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">6</span>] = b[<span class="hljs-number">6</span>] + k | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">7</span>] = b[<span class="hljs-number">7</span>] + l | <span class="hljs-number">0</span><br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, d = a.<span class="hljs-property">words</span>, b = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, e = <span class="hljs-number">8</span> * a.<span class="hljs-property">sigBytes</span>;<br>            d[e &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - e % <span class="hljs-number">32</span>;<br>            d[(e + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">14</span>] = h.<span class="hljs-title function_">floor</span>(b / <span class="hljs-number">4294967296</span>);<br>            d[(e + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">15</span>] = b;<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * d.<span class="hljs-property">length</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span><br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = g.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            a.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> a<br>        &#125;<br>    &#125;);<br>    s.<span class="hljs-property">SHA256</span> = g.<span class="hljs-title function_">_createHelper</span>(f);<br>    s.<span class="hljs-property">HmacSHA256</span> = g.<span class="hljs-title function_">_createHmacHelper</span>(f)<br>&#125;)(<span class="hljs-title class_">Math</span>);<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Sha3</title>
    <link href="/posts/7d0ede38/"/>
    <url>/posts/7d0ede38/</url>
    
    <content type="html"><![CDATA[<h2 id="Sha3加密源码"><a href="#Sha3加密源码" class="headerlink" title="Sha3加密源码"></a>Sha3加密源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">v, p</span>) &#123;<br>    <span class="hljs-keyword">var</span> d = &#123;&#125;, u = d.<span class="hljs-property">lib</span> = &#123;&#125;, r = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, f = u.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                r.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-keyword">new</span> r;<br>                a &amp;&amp; b.<span class="hljs-title function_">mixIn</span>(a);<br>                b.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (b.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    b.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                b.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = b;<br>                b.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> b<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                a.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(a, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b <span class="hljs-keyword">in</span> a) a.<span class="hljs-title function_">hasOwnProperty</span>(b) &amp;&amp; (<span class="hljs-variable language_">this</span>[b] = a[b]);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = a.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        s = u.<span class="hljs-property">WordArray</span> = f.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>                a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = a || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = b != p ? b : <span class="hljs-number">4</span> * a.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> (a || y).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, c = a.<span class="hljs-property">words</span>, j = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (j % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> n = <span class="hljs-number">0</span>; n &lt; a; n++) b[j + n &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (c[n &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (n % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((j + n) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; c.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (n = <span class="hljs-number">0</span>; n &lt; a; n += <span class="hljs-number">4</span>) b[j + n &gt;&gt;&gt; <span class="hljs-number">2</span>] = c[n &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> b.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(b, c);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += a;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a[b &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (b % <span class="hljs-number">4</span>);<br>                a.<span class="hljs-property">length</span> = v.<span class="hljs-title function_">ceil</span>(b / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = f.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], c = <span class="hljs-number">0</span>; c &lt; a; c += <span class="hljs-number">4</span>) b.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * v.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> s.<span class="hljs-title function_">init</span>(b, a)<br>            &#125;<br>        &#125;), x = d.<span class="hljs-property">enc</span> = &#123;&#125;, y = x.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = [], j = <span class="hljs-number">0</span>; j &lt; a; j++) &#123;<br>                    <span class="hljs-keyword">var</span> n = b[j &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    c.<span class="hljs-title function_">push</span>((n &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    c.<span class="hljs-title function_">push</span>((n &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> c.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = a.<span class="hljs-property">length</span>, c = [], j = <span class="hljs-number">0</span>; j &lt; b; j += <span class="hljs-number">2</span>) c[j &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(a.<span class="hljs-title function_">substr</span>(j,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (j % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> s.<span class="hljs-title function_">init</span>(c, b / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, e = x.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = [], j = <span class="hljs-number">0</span>; j &lt; a; j++) c.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(b[j &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> c.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = a.<span class="hljs-property">length</span>, c = [], j = <span class="hljs-number">0</span>; j &lt; b; j++) c[j &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a.<span class="hljs-title function_">charCodeAt</span>(j) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> s.<span class="hljs-title function_">init</span>(c, b)<br>            &#125;<br>        &#125;, q = x.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(e.<span class="hljs-title function_">stringify</span>(a)))<br>                &#125; <span class="hljs-keyword">catch</span> (b) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> e.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(a)))<br>            &#125;<br>        &#125;,<br>        t = u.<span class="hljs-property">BufferedBlockAlgorithm</span> = f.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> s.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = q.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, c = b.<span class="hljs-property">words</span>, j = b.<span class="hljs-property">sigBytes</span>, n = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, e = j / (<span class="hljs-number">4</span> * n),<br>                    e = a ? v.<span class="hljs-title function_">ceil</span>(e) : v.<span class="hljs-title function_">max</span>((e | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                a = e * n;<br>                j = v.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * a, j);<br>                <span class="hljs-keyword">if</span> (a) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> f = <span class="hljs-number">0</span>; f &lt; a; f += n) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(c, f);<br>                    f = c.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, a);<br>                    b.<span class="hljs-property">sigBytes</span> -= j<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> s.<span class="hljs-title function_">init</span>(f, j)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = f.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    u.<span class="hljs-property">Hasher</span> = t.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: f.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            t.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, c</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(c)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, c</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> w.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    c)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> w = d.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> d<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">v</span>) &#123;<br>    <span class="hljs-keyword">var</span> p = <span class="hljs-title class_">CryptoJS</span>, d = p.<span class="hljs-property">lib</span>, u = d.<span class="hljs-property">Base</span>, r = d.<span class="hljs-property">WordArray</span>, p = p.<span class="hljs-property">x64</span> = &#123;&#125;;<br>    p.<span class="hljs-property">Word</span> = u.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">f, s</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">high</span> = f;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">low</span> = s<br>        &#125;<br>    &#125;);<br>    p.<span class="hljs-property">WordArray</span> = u.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">f, s</span>) &#123;<br>            f = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = f || [];<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = s != v ? s : <span class="hljs-number">8</span> * f.<span class="hljs-property">length</span><br>        &#125;, <span class="hljs-attr">toX32</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> f = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, s = f.<span class="hljs-property">length</span>, d = [], p = <span class="hljs-number">0</span>; p &lt; s; p++) &#123;<br>                <span class="hljs-keyword">var</span> e = f[p];<br>                d.<span class="hljs-title function_">push</span>(e.<span class="hljs-property">high</span>);<br>                d.<span class="hljs-title function_">push</span>(e.<span class="hljs-property">low</span>)<br>            &#125;<br>            <span class="hljs-keyword">return</span> r.<span class="hljs-title function_">create</span>(d, <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>)<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> f = u.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>), d = f.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>), p = d.<span class="hljs-property">length</span>, r = <span class="hljs-number">0</span>; r &lt; p; r++) d[r] = d[r].<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> f<br>        &#125;<br>    &#125;)<br>&#125;)();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">v</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> p = <span class="hljs-title class_">CryptoJS</span>, d = p.<span class="hljs-property">lib</span>, u = d.<span class="hljs-property">WordArray</span>, r = d.<span class="hljs-property">Hasher</span>, f = p.<span class="hljs-property">x64</span>.<span class="hljs-property">Word</span>, d = p.<span class="hljs-property">algo</span>, s = [], x = [], y = [], e = <span class="hljs-number">1</span>, q = <span class="hljs-number">0</span>, t = <span class="hljs-number">0</span>; <span class="hljs-number">24</span> &gt; t; t++) &#123;<br>        s[e + <span class="hljs-number">5</span> * q] = (t + <span class="hljs-number">1</span>) * (t + <span class="hljs-number">2</span>) / <span class="hljs-number">2</span> % <span class="hljs-number">64</span>;<br>        <span class="hljs-keyword">var</span> w = (<span class="hljs-number">2</span> * e + <span class="hljs-number">3</span> * q) % <span class="hljs-number">5</span>, e = q % <span class="hljs-number">5</span>, q = w<br>    &#125;<br>    <span class="hljs-keyword">for</span> (e = <span class="hljs-number">0</span>; <span class="hljs-number">5</span> &gt; e; e++) <span class="hljs-keyword">for</span> (q = <span class="hljs-number">0</span>; <span class="hljs-number">5</span> &gt; q; q++) x[e + <span class="hljs-number">5</span> * q] = q + <span class="hljs-number">5</span> * ((<span class="hljs-number">2</span> * e + <span class="hljs-number">3</span> * q) % <span class="hljs-number">5</span>);<br>    e = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span> (q = <span class="hljs-number">0</span>; <span class="hljs-number">24</span> &gt; q; q++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = w = t = <span class="hljs-number">0</span>; <span class="hljs-number">7</span> &gt; a; a++) &#123;<br>            <span class="hljs-keyword">if</span> (e &amp; <span class="hljs-number">1</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = (<span class="hljs-number">1</span> &lt;&lt; a) - <span class="hljs-number">1</span>;<br>                <span class="hljs-number">32</span> &gt; b ? w ^= <span class="hljs-number">1</span> &lt;&lt; b : t ^= <span class="hljs-number">1</span> &lt;&lt; b - <span class="hljs-number">32</span><br>            &#125;<br>            e = e &amp; <span class="hljs-number">128</span> ? e &lt;&lt; <span class="hljs-number">1</span> ^ <span class="hljs-number">113</span> : e &lt;&lt; <span class="hljs-number">1</span><br>        &#125;<br>        y[q] = f.<span class="hljs-title function_">create</span>(t, w)<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = [], e = <span class="hljs-number">0</span>; <span class="hljs-number">25</span> &gt; e; e++) c[e] = f.<span class="hljs-title function_">create</span>();<br>    d = d.<span class="hljs-property">SHA3</span> = r.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: r.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">outputLength</span>: <span class="hljs-number">512</span>&#125;), <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_state</span> =<br>                [], b = <span class="hljs-number">0</span>; <span class="hljs-number">25</span> &gt; b; b++) a[b] = <span class="hljs-keyword">new</span> f.<span class="hljs-property">init</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span> = (<span class="hljs-number">1600</span> - <span class="hljs-number">2</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-property">outputLength</span>) / <span class="hljs-number">32</span><br>        &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_state</span>, f = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span> / <span class="hljs-number">2</span>, h = <span class="hljs-number">0</span>; h &lt; f; h++) &#123;<br>                <span class="hljs-keyword">var</span> l = a[b + <span class="hljs-number">2</span> * h], m = a[b + <span class="hljs-number">2</span> * h + <span class="hljs-number">1</span>],<br>                    l = (l &lt;&lt; <span class="hljs-number">8</span> | l &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (l &lt;&lt; <span class="hljs-number">24</span> | l &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>,<br>                    m = (m &lt;&lt; <span class="hljs-number">8</span> | m &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (m &lt;&lt; <span class="hljs-number">24</span> | m &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>, g = e[h];<br>                g.<span class="hljs-property">high</span> ^= m;<br>                g.<span class="hljs-property">low</span> ^= l<br>            &#125;<br>            <span class="hljs-keyword">for</span> (f = <span class="hljs-number">0</span>; <span class="hljs-number">24</span> &gt; f; f++) &#123;<br>                <span class="hljs-keyword">for</span> (h = <span class="hljs-number">0</span>; <span class="hljs-number">5</span> &gt; h; h++) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = l = <span class="hljs-number">0</span>, k = <span class="hljs-number">0</span>; <span class="hljs-number">5</span> &gt; k; k++) g = e[h + <span class="hljs-number">5</span> * k], l ^= g.<span class="hljs-property">high</span>, d ^= g.<span class="hljs-property">low</span>;<br>                    g = c[h];<br>                    g.<span class="hljs-property">high</span> = l;<br>                    g.<span class="hljs-property">low</span> = d<br>                &#125;<br>                <span class="hljs-keyword">for</span> (h = <span class="hljs-number">0</span>; <span class="hljs-number">5</span> &gt; h; h++) &#123;<br>                    g = c[(h + <span class="hljs-number">4</span>) % <span class="hljs-number">5</span>];<br>                    l = c[(h + <span class="hljs-number">1</span>) % <span class="hljs-number">5</span>];<br>                    m = l.<span class="hljs-property">high</span>;<br>                    k = l.<span class="hljs-property">low</span>;<br>                    l = g.<span class="hljs-property">high</span> ^<br>                        (m &lt;&lt; <span class="hljs-number">1</span> | k &gt;&gt;&gt; <span class="hljs-number">31</span>);<br>                    d = g.<span class="hljs-property">low</span> ^ (k &lt;&lt; <span class="hljs-number">1</span> | m &gt;&gt;&gt; <span class="hljs-number">31</span>);<br>                    <span class="hljs-keyword">for</span> (k = <span class="hljs-number">0</span>; <span class="hljs-number">5</span> &gt; k; k++) g = e[h + <span class="hljs-number">5</span> * k], g.<span class="hljs-property">high</span> ^= l, g.<span class="hljs-property">low</span> ^= d<br>                &#125;<br>                <span class="hljs-keyword">for</span> (m = <span class="hljs-number">1</span>; <span class="hljs-number">25</span> &gt; m; m++) g = e[m], h = g.<span class="hljs-property">high</span>, g = g.<span class="hljs-property">low</span>, k = s[m], <span class="hljs-number">32</span> &gt; k ? (l = h &lt;&lt; k | g &gt;&gt;&gt; <span class="hljs-number">32</span> - k, d = g &lt;&lt; k | h &gt;&gt;&gt; <span class="hljs-number">32</span> - k) : (l = g &lt;&lt; k - <span class="hljs-number">32</span> | h &gt;&gt;&gt; <span class="hljs-number">64</span> - k, d = h &lt;&lt; k - <span class="hljs-number">32</span> | g &gt;&gt;&gt; <span class="hljs-number">64</span> - k), g = c[x[m]], g.<span class="hljs-property">high</span> = l, g.<span class="hljs-property">low</span> = d;<br>                g = c[<span class="hljs-number">0</span>];<br>                h = e[<span class="hljs-number">0</span>];<br>                g.<span class="hljs-property">high</span> = h.<span class="hljs-property">high</span>;<br>                g.<span class="hljs-property">low</span> = h.<span class="hljs-property">low</span>;<br>                <span class="hljs-keyword">for</span> (h = <span class="hljs-number">0</span>; <span class="hljs-number">5</span> &gt; h; h++) <span class="hljs-keyword">for</span> (k = <span class="hljs-number">0</span>; <span class="hljs-number">5</span> &gt; k; k++) m = h + <span class="hljs-number">5</span> * k, g = e[m], l = c[m], m = c[(h + <span class="hljs-number">1</span>) % <span class="hljs-number">5</span> + <span class="hljs-number">5</span> * k], d = c[(h + <span class="hljs-number">2</span>) % <span class="hljs-number">5</span> + <span class="hljs-number">5</span> * k], g.<span class="hljs-property">high</span> = l.<span class="hljs-property">high</span> ^ ~m.<span class="hljs-property">high</span> &amp; d.<span class="hljs-property">high</span>, g.<span class="hljs-property">low</span> = l.<span class="hljs-property">low</span> ^ ~m.<span class="hljs-property">low</span> &amp; d.<span class="hljs-property">low</span>;<br>                g = e[<span class="hljs-number">0</span>];<br>                h = y[f];<br>                g.<span class="hljs-property">high</span> ^= h.<span class="hljs-property">high</span>;<br>                g.<span class="hljs-property">low</span> ^= h.<span class="hljs-property">low</span><br>            &#125;<br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>,<br>                b = a.<span class="hljs-property">words</span>, c = <span class="hljs-number">8</span> * a.<span class="hljs-property">sigBytes</span>, e = <span class="hljs-number">32</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>;<br>            b[c &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">24</span> - c % <span class="hljs-number">32</span>;<br>            b[(v.<span class="hljs-title function_">ceil</span>((c + <span class="hljs-number">1</span>) / e) * e &gt;&gt;&gt; <span class="hljs-number">5</span>) - <span class="hljs-number">1</span>] |= <span class="hljs-number">128</span>;<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * b.<span class="hljs-property">length</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_state</span>, b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-property">outputLength</span> / <span class="hljs-number">8</span>, c = b / <span class="hljs-number">8</span>, e = [], h = <span class="hljs-number">0</span>; h &lt; c; h++) &#123;<br>                <span class="hljs-keyword">var</span> d = a[h], f = d.<span class="hljs-property">high</span>, d = d.<span class="hljs-property">low</span>,<br>                    f = (f &lt;&lt; <span class="hljs-number">8</span> | f &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (f &lt;&lt; <span class="hljs-number">24</span> | f &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>,<br>                    d = (d &lt;&lt; <span class="hljs-number">8</span> | d &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (d &lt;&lt; <span class="hljs-number">24</span> | d &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>                e.<span class="hljs-title function_">push</span>(d);<br>                e.<span class="hljs-title function_">push</span>(f)<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> u.<span class="hljs-title function_">init</span>(e, b)<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = r.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>), b = a.<span class="hljs-property">_state</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_state</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>), c = <span class="hljs-number">0</span>; <span class="hljs-number">25</span> &gt; c; c++) b[c] = b[c].<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> a<br>        &#125;<br>    &#125;);<br>    p.<span class="hljs-property">SHA3</span> = r.<span class="hljs-title function_">_createHelper</span>(d);<br>    p.<span class="hljs-property">HmacSHA3</span> = r.<span class="hljs-title function_">_createHmacHelper</span>(d)<br>&#125;)(<span class="hljs-title class_">Math</span>);<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Sha1</title>
    <link href="/posts/9300bf14/"/>
    <url>/posts/9300bf14/</url>
    
    <content type="html"><![CDATA[<h2 id="Sha1加密源码"><a href="#Sha1加密源码" class="headerlink" title="Sha1加密源码"></a>Sha1加密源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">e, m</span>) &#123;<br>    <span class="hljs-keyword">var</span> p = &#123;&#125;, j = p.<span class="hljs-property">lib</span> = &#123;&#125;, l = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, f = j.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                l.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-keyword">new</span> l;<br>                a &amp;&amp; c.<span class="hljs-title function_">mixIn</span>(a);<br>                c.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (c.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    c.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                c.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = c;<br>                c.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> c<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                a.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(a, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c <span class="hljs-keyword">in</span> a) a.<span class="hljs-title function_">hasOwnProperty</span>(c) &amp;&amp; (<span class="hljs-variable language_">this</span>[c] = a[c]);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = a.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        n = j.<span class="hljs-property">WordArray</span> = f.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, c</span>) &#123;<br>                a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = a || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = c != m ? c : <span class="hljs-number">4</span> * a.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> (a || h).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, q = a.<span class="hljs-property">words</span>, d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (d % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">0</span>; b &lt; a; b++) c[d + b &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (q[b &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (b % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((d + b) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; q.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (b = <span class="hljs-number">0</span>; b &lt; a; b += <span class="hljs-number">4</span>) c[d + b &gt;&gt;&gt; <span class="hljs-number">2</span>] = q[b &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> c.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(c, q);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += a;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a[c &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (c % <span class="hljs-number">4</span>);<br>                a.<span class="hljs-property">length</span> = e.<span class="hljs-title function_">ceil</span>(c / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = f.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = [], b = <span class="hljs-number">0</span>; b &lt; a; b += <span class="hljs-number">4</span>) c.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * e.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> n.<span class="hljs-title function_">init</span>(c, a)<br>            &#125;<br>        &#125;), b = p.<span class="hljs-property">enc</span> = &#123;&#125;, h = b.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], d = <span class="hljs-number">0</span>; d &lt; a; d++) &#123;<br>                    <span class="hljs-keyword">var</span> f = c[d &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (d % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    b.<span class="hljs-title function_">push</span>((f &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    b.<span class="hljs-title function_">push</span>((f &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> b.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">length</span>, b = [], d = <span class="hljs-number">0</span>; d &lt; c; d += <span class="hljs-number">2</span>) b[d &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(a.<span class="hljs-title function_">substr</span>(d,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (d % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> n.<span class="hljs-title function_">init</span>(b, c / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, g = b.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], d = <span class="hljs-number">0</span>; d &lt; a; d++) b.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(c[d &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (d % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> b.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">length</span>, b = [], d = <span class="hljs-number">0</span>; d &lt; c; d++) b[d &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a.<span class="hljs-title function_">charCodeAt</span>(d) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (d % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> n.<span class="hljs-title function_">init</span>(b, c)<br>            &#125;<br>        &#125;, r = b.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(g.<span class="hljs-title function_">stringify</span>(a)))<br>                &#125; <span class="hljs-keyword">catch</span> (c) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> g.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(a)))<br>            &#125;<br>        &#125;,<br>        k = j.<span class="hljs-property">BufferedBlockAlgorithm</span> = f.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> n.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = r.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, b = c.<span class="hljs-property">words</span>, d = c.<span class="hljs-property">sigBytes</span>, f = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, h = d / (<span class="hljs-number">4</span> * f),<br>                    h = a ? e.<span class="hljs-title function_">ceil</span>(h) : e.<span class="hljs-title function_">max</span>((h | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                a = h * f;<br>                d = e.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * a, d);<br>                <span class="hljs-keyword">if</span> (a) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> g = <span class="hljs-number">0</span>; g &lt; a; g += f) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(b, g);<br>                    g = b.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, a);<br>                    c.<span class="hljs-property">sigBytes</span> -= d<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> n.<span class="hljs-title function_">init</span>(g, d)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = f.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    j.<span class="hljs-property">Hasher</span> = k.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: f.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            k.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">c, b</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(b)).<span class="hljs-title function_">finalize</span>(c)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, f</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> s.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    f)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> s = p.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> p<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> e = <span class="hljs-title class_">CryptoJS</span>, m = e.<span class="hljs-property">lib</span>, p = m.<span class="hljs-property">WordArray</span>, j = m.<span class="hljs-property">Hasher</span>, l = [], m = e.<span class="hljs-property">algo</span>.<span class="hljs-property">SHA1</span> = j.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>([<span class="hljs-number">1732584193</span>, <span class="hljs-number">4023233417</span>, <span class="hljs-number">2562383102</span>, <span class="hljs-number">271733878</span>, <span class="hljs-number">3285377520</span>])<br>        &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">f, n</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>, h = b[<span class="hljs-number">0</span>], g = b[<span class="hljs-number">1</span>], e = b[<span class="hljs-number">2</span>], k = b[<span class="hljs-number">3</span>], j = b[<span class="hljs-number">4</span>], a = <span class="hljs-number">0</span>; <span class="hljs-number">80</span> &gt; a; a++) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-number">16</span> &gt; a) l[a] = f[n + a] | <span class="hljs-number">0</span>; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">var</span> c = l[a - <span class="hljs-number">3</span>] ^ l[a - <span class="hljs-number">8</span>] ^ l[a - <span class="hljs-number">14</span>] ^ l[a - <span class="hljs-number">16</span>];<br>                    l[a] = c &lt;&lt; <span class="hljs-number">1</span> | c &gt;&gt;&gt; <span class="hljs-number">31</span><br>                &#125;<br>                c = (h &lt;&lt; <span class="hljs-number">5</span> | h &gt;&gt;&gt; <span class="hljs-number">27</span>) + j + l[a];<br>                c = <span class="hljs-number">20</span> &gt; a ? c + ((g &amp; e | ~g &amp; k) + <span class="hljs-number">1518500249</span>) : <span class="hljs-number">40</span> &gt; a ? c + ((g ^ e ^ k) + <span class="hljs-number">1859775393</span>) : <span class="hljs-number">60</span> &gt; a ? c + ((g &amp; e | g &amp; k | e &amp; k) - <span class="hljs-number">1894007588</span>) : c + ((g ^ e ^<br>                    k) - <span class="hljs-number">899497514</span>);<br>                j = k;<br>                k = e;<br>                e = g &lt;&lt; <span class="hljs-number">30</span> | g &gt;&gt;&gt; <span class="hljs-number">2</span>;<br>                g = h;<br>                h = c<br>            &#125;<br>            b[<span class="hljs-number">0</span>] = b[<span class="hljs-number">0</span>] + h | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">1</span>] = b[<span class="hljs-number">1</span>] + g | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">2</span>] = b[<span class="hljs-number">2</span>] + e | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">3</span>] = b[<span class="hljs-number">3</span>] + k | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">4</span>] = b[<span class="hljs-number">4</span>] + j | <span class="hljs-number">0</span><br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> f = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, e = f.<span class="hljs-property">words</span>, b = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, h = <span class="hljs-number">8</span> * f.<span class="hljs-property">sigBytes</span>;<br>            e[h &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - h % <span class="hljs-number">32</span>;<br>            e[(h + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">14</span>] = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(b / <span class="hljs-number">4294967296</span>);<br>            e[(h + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">15</span>] = b;<br>            f.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * e.<span class="hljs-property">length</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span><br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> e = j.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            e.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> e<br>        &#125;<br>    &#125;);<br>    e.<span class="hljs-property">SHA1</span> = j.<span class="hljs-title function_">_createHelper</span>(m);<br>    e.<span class="hljs-property">HmacSHA1</span> = j.<span class="hljs-title function_">_createHmacHelper</span>(m)<br>&#125;)();<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Rc4</title>
    <link href="/posts/ff1def1d/"/>
    <url>/posts/ff1def1d/</url>
    
    <content type="html"><![CDATA[<h2 id="Rc4加密源码"><a href="#Rc4加密源码" class="headerlink" title="Rc4加密源码"></a>Rc4加密源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">s, l</span>) &#123;<br>    <span class="hljs-keyword">var</span> e = &#123;&#125;, n = e.<span class="hljs-property">lib</span> = &#123;&#125;, p = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, b = n.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>                p.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-keyword">new</span> p;<br>                c &amp;&amp; a.<span class="hljs-title function_">mixIn</span>(c);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (a.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    a.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                a.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = a;<br>                a.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                c.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(c, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> c<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a <span class="hljs-keyword">in</span> c) c.<span class="hljs-title function_">hasOwnProperty</span>(a) &amp;&amp; (<span class="hljs-variable language_">this</span>[a] = c[a]);<br>                c.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = c.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        d = n.<span class="hljs-property">WordArray</span> = b.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c, a</span>) &#123;<br>                c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = c || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = a != l ? a : <span class="hljs-number">4</span> * c.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>                <span class="hljs-keyword">return</span> (c || q).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, m = c.<span class="hljs-property">words</span>, f = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                c = c.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (f % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> r = <span class="hljs-number">0</span>; r &lt; c; r++) a[f + r &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (m[r &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (r % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((f + r) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; m.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (r = <span class="hljs-number">0</span>; r &lt; c; r += <span class="hljs-number">4</span>) a[f + r &gt;&gt;&gt; <span class="hljs-number">2</span>] = m[r &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> a.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(a, m);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += c;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                c[a &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (a % <span class="hljs-number">4</span>);<br>                c.<span class="hljs-property">length</span> = s.<span class="hljs-title function_">ceil</span>(a / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> c = b.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                c.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> c<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = [], m = <span class="hljs-number">0</span>; m &lt; c; m += <span class="hljs-number">4</span>) a.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * s.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(a, c)<br>            &#125;<br>        &#125;), t = e.<span class="hljs-property">enc</span> = &#123;&#125;, q = t.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>                <span class="hljs-keyword">var</span> a = c.<span class="hljs-property">words</span>;<br>                c = c.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> m = [], f = <span class="hljs-number">0</span>; f &lt; c; f++) &#123;<br>                    <span class="hljs-keyword">var</span> r = a[f &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    m.<span class="hljs-title function_">push</span>((r &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    m.<span class="hljs-title function_">push</span>((r &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> m.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = c.<span class="hljs-property">length</span>, m = [], f = <span class="hljs-number">0</span>; f &lt; a; f += <span class="hljs-number">2</span>) m[f &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(c.<span class="hljs-title function_">substr</span>(f,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (f % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(m, a / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, a = t.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>                <span class="hljs-keyword">var</span> a = c.<span class="hljs-property">words</span>;<br>                c = c.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> m = [], f = <span class="hljs-number">0</span>; f &lt; c; f++) m.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(a[f &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> m.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = c.<span class="hljs-property">length</span>, m = [], f = <span class="hljs-number">0</span>; f &lt; a; f++) m[f &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (c.<span class="hljs-title function_">charCodeAt</span>(f) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(m, a)<br>            &#125;<br>        &#125;, v = t.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(a.<span class="hljs-title function_">stringify</span>(c)))<br>                &#125; <span class="hljs-keyword">catch</span> (u) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>                <span class="hljs-keyword">return</span> a.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(c)))<br>            &#125;<br>        &#125;,<br>        u = n.<span class="hljs-property">BufferedBlockAlgorithm</span> = b.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> d.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = v.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> u = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, m = u.<span class="hljs-property">words</span>, f = u.<span class="hljs-property">sigBytes</span>, r = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, e = f / (<span class="hljs-number">4</span> * r),<br>                    e = a ? s.<span class="hljs-title function_">ceil</span>(e) : s.<span class="hljs-title function_">max</span>((e | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                a = e * r;<br>                f = s.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * a, f);<br>                <span class="hljs-keyword">if</span> (a) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">0</span>; b &lt; a; b += r) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(m, b);<br>                    b = m.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, a);<br>                    u.<span class="hljs-property">sigBytes</span> -= f<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> d.<span class="hljs-title function_">init</span>(b, f)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = b.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    n.<span class="hljs-property">Hasher</span> = u.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: b.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            u.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">u, m</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(m)).<span class="hljs-title function_">finalize</span>(u)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">u, m</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> w.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    m)).<span class="hljs-title function_">finalize</span>(u)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> w = e.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> e<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> s = <span class="hljs-title class_">CryptoJS</span>, l = s.<span class="hljs-property">lib</span>.<span class="hljs-property">WordArray</span>;<br>    s.<span class="hljs-property">enc</span>.<span class="hljs-property">Base64</span> = &#123;<br>        <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>            <span class="hljs-keyword">var</span> n = e.<span class="hljs-property">words</span>, l = e.<span class="hljs-property">sigBytes</span>, b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_map</span>;<br>            e.<span class="hljs-title function_">clamp</span>();<br>            e = [];<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = <span class="hljs-number">0</span>; d &lt; l; d += <span class="hljs-number">3</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = (n[d &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (d % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">16</span> | (n[d + <span class="hljs-number">1</span> &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((d + <span class="hljs-number">1</span>) % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">8</span> | n[d + <span class="hljs-number">2</span> &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((d + <span class="hljs-number">2</span>) % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>, q = <span class="hljs-number">0</span>; <span class="hljs-number">4</span> &gt; q &amp;&amp; d + <span class="hljs-number">0.75</span> * q &lt; l; q++) e.<span class="hljs-title function_">push</span>(b.<span class="hljs-title function_">charAt</span>(t &gt;&gt;&gt; <span class="hljs-number">6</span> * (<span class="hljs-number">3</span> - q) &amp; <span class="hljs-number">63</span>));<br>            <span class="hljs-keyword">if</span> (n = b.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">64</span>)) <span class="hljs-keyword">for</span> (; e.<span class="hljs-property">length</span> % <span class="hljs-number">4</span>;) e.<span class="hljs-title function_">push</span>(n);<br>            <span class="hljs-keyword">return</span> e.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>        &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>            <span class="hljs-keyword">var</span> n = e.<span class="hljs-property">length</span>, p = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_map</span>, b = p.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">64</span>);<br>            b &amp;&amp; (b = e.<span class="hljs-title function_">indexOf</span>(b), -<span class="hljs-number">1</span> != b &amp;&amp; (n = b));<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], d = <span class="hljs-number">0</span>, t = <span class="hljs-number">0</span>; t &lt;<br>            n; t++) <span class="hljs-keyword">if</span> (t % <span class="hljs-number">4</span>) &#123;<br>                <span class="hljs-keyword">var</span> q = p.<span class="hljs-title function_">indexOf</span>(e.<span class="hljs-title function_">charAt</span>(t - <span class="hljs-number">1</span>)) &lt;&lt; <span class="hljs-number">2</span> * (t % <span class="hljs-number">4</span>), a = p.<span class="hljs-title function_">indexOf</span>(e.<span class="hljs-title function_">charAt</span>(t)) &gt;&gt;&gt; <span class="hljs-number">6</span> - <span class="hljs-number">2</span> * (t % <span class="hljs-number">4</span>);<br>                b[d &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (q | a) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (d % <span class="hljs-number">4</span>);<br>                d++<br>            &#125;<br>            <span class="hljs-keyword">return</span> l.<span class="hljs-title function_">create</span>(b, d)<br>        &#125;, <span class="hljs-attr">_map</span>: <span class="hljs-string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span><br>    &#125;<br>&#125;)();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">s</span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">l</span>(<span class="hljs-params">a, b, c, e, m, f, r</span>) &#123;<br>        a = a + (b &amp; c | ~b &amp; e) + m + r;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; f | a &gt;&gt;&gt; <span class="hljs-number">32</span> - f) + b<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">e</span>(<span class="hljs-params">a, b, c, e, m, f, r</span>) &#123;<br>        a = a + (b &amp; e | c &amp; ~e) + m + r;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; f | a &gt;&gt;&gt; <span class="hljs-number">32</span> - f) + b<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">n</span>(<span class="hljs-params">a, b, c, e, m, f, r</span>) &#123;<br>        a = a + (b ^ c ^ e) + m + r;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; f | a &gt;&gt;&gt; <span class="hljs-number">32</span> - f) + b<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">p</span>(<span class="hljs-params">a, b, c, e, m, f, r</span>) &#123;<br>        a = a + (c ^ (b | ~e)) + m + r;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; f | a &gt;&gt;&gt; <span class="hljs-number">32</span> - f) + b<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-title class_">CryptoJS</span>, d = b.<span class="hljs-property">lib</span>, t = d.<span class="hljs-property">WordArray</span>, q = d.<span class="hljs-property">Hasher</span>, d = b.<span class="hljs-property">algo</span>, a = [], v = <span class="hljs-number">0</span>; <span class="hljs-number">64</span> &gt; v; v++) a[v] = <span class="hljs-number">4294967296</span> * s.<span class="hljs-title function_">abs</span>(s.<span class="hljs-title function_">sin</span>(v + <span class="hljs-number">1</span>)) | <span class="hljs-number">0</span>;<br>    d = d.<span class="hljs-property">MD5</span> = q.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> t.<span class="hljs-title function_">init</span>([<span class="hljs-number">1732584193</span>, <span class="hljs-number">4023233417</span>, <span class="hljs-number">2562383102</span>, <span class="hljs-number">271733878</span>])<br>        &#125;,<br>        <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, d</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = <span class="hljs-number">0</span>; <span class="hljs-number">16</span> &gt; c; c++) &#123;<br>                <span class="hljs-keyword">var</span> q = d + c, m = b[q];<br>                b[q] = (m &lt;&lt; <span class="hljs-number">8</span> | m &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (m &lt;&lt; <span class="hljs-number">24</span> | m &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span><br>            &#125;<br>            <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>, q = b[d + <span class="hljs-number">0</span>], m = b[d + <span class="hljs-number">1</span>], f = b[d + <span class="hljs-number">2</span>], r = b[d + <span class="hljs-number">3</span>], x = b[d + <span class="hljs-number">4</span>],<br>                t = b[d + <span class="hljs-number">5</span>], s = b[d + <span class="hljs-number">6</span>], v = b[d + <span class="hljs-number">7</span>], y = b[d + <span class="hljs-number">8</span>], z = b[d + <span class="hljs-number">9</span>], A = b[d + <span class="hljs-number">10</span>], B = b[d + <span class="hljs-number">11</span>],<br>                C = b[d + <span class="hljs-number">12</span>], D = b[d + <span class="hljs-number">13</span>], E = b[d + <span class="hljs-number">14</span>], F = b[d + <span class="hljs-number">15</span>], g = c[<span class="hljs-number">0</span>], h = c[<span class="hljs-number">1</span>], j = c[<span class="hljs-number">2</span>], k = c[<span class="hljs-number">3</span>],<br>                g = <span class="hljs-title function_">l</span>(g, h, j, k, q, <span class="hljs-number">7</span>, a[<span class="hljs-number">0</span>]), k = <span class="hljs-title function_">l</span>(k, g, h, j, m, <span class="hljs-number">12</span>, a[<span class="hljs-number">1</span>]), j = <span class="hljs-title function_">l</span>(j, k, g, h, f, <span class="hljs-number">17</span>, a[<span class="hljs-number">2</span>]),<br>                h = <span class="hljs-title function_">l</span>(h, j, k, g, r, <span class="hljs-number">22</span>, a[<span class="hljs-number">3</span>]), g = <span class="hljs-title function_">l</span>(g, h, j, k, x, <span class="hljs-number">7</span>, a[<span class="hljs-number">4</span>]), k = <span class="hljs-title function_">l</span>(k, g, h, j, t, <span class="hljs-number">12</span>, a[<span class="hljs-number">5</span>]),<br>                j = <span class="hljs-title function_">l</span>(j, k, g, h, s, <span class="hljs-number">17</span>, a[<span class="hljs-number">6</span>]), h = <span class="hljs-title function_">l</span>(h, j, k, g, v, <span class="hljs-number">22</span>, a[<span class="hljs-number">7</span>]),<br>                g = <span class="hljs-title function_">l</span>(g, h, j, k, y, <span class="hljs-number">7</span>, a[<span class="hljs-number">8</span>]), k = <span class="hljs-title function_">l</span>(k, g, h, j, z, <span class="hljs-number">12</span>, a[<span class="hljs-number">9</span>]), j = <span class="hljs-title function_">l</span>(j, k, g, h, A, <span class="hljs-number">17</span>, a[<span class="hljs-number">10</span>]),<br>                h = <span class="hljs-title function_">l</span>(h, j, k, g, B, <span class="hljs-number">22</span>, a[<span class="hljs-number">11</span>]), g = <span class="hljs-title function_">l</span>(g, h, j, k, C, <span class="hljs-number">7</span>, a[<span class="hljs-number">12</span>]), k = <span class="hljs-title function_">l</span>(k, g, h, j, D, <span class="hljs-number">12</span>, a[<span class="hljs-number">13</span>]),<br>                j = <span class="hljs-title function_">l</span>(j, k, g, h, E, <span class="hljs-number">17</span>, a[<span class="hljs-number">14</span>]), h = <span class="hljs-title function_">l</span>(h, j, k, g, F, <span class="hljs-number">22</span>, a[<span class="hljs-number">15</span>]), g = <span class="hljs-title function_">e</span>(g, h, j, k, m, <span class="hljs-number">5</span>, a[<span class="hljs-number">16</span>]),<br>                k = <span class="hljs-title function_">e</span>(k, g, h, j, s, <span class="hljs-number">9</span>, a[<span class="hljs-number">17</span>]), j = <span class="hljs-title function_">e</span>(j, k, g, h, B, <span class="hljs-number">14</span>, a[<span class="hljs-number">18</span>]), h = <span class="hljs-title function_">e</span>(h, j, k, g, q, <span class="hljs-number">20</span>, a[<span class="hljs-number">19</span>]),<br>                g = <span class="hljs-title function_">e</span>(g, h, j, k, t, <span class="hljs-number">5</span>, a[<span class="hljs-number">20</span>]), k = <span class="hljs-title function_">e</span>(k, g, h, j, A, <span class="hljs-number">9</span>, a[<span class="hljs-number">21</span>]), j = <span class="hljs-title function_">e</span>(j, k, g, h, F, <span class="hljs-number">14</span>, a[<span class="hljs-number">22</span>]),<br>                h = <span class="hljs-title function_">e</span>(h, j, k, g, x, <span class="hljs-number">20</span>, a[<span class="hljs-number">23</span>]), g = <span class="hljs-title function_">e</span>(g, h, j, k, z, <span class="hljs-number">5</span>, a[<span class="hljs-number">24</span>]), k = <span class="hljs-title function_">e</span>(k, g, h, j, E, <span class="hljs-number">9</span>, a[<span class="hljs-number">25</span>]),<br>                j = <span class="hljs-title function_">e</span>(j, k, g, h, r, <span class="hljs-number">14</span>, a[<span class="hljs-number">26</span>]), h = <span class="hljs-title function_">e</span>(h, j, k, g, y, <span class="hljs-number">20</span>, a[<span class="hljs-number">27</span>]), g = <span class="hljs-title function_">e</span>(g, h, j, k, D, <span class="hljs-number">5</span>, a[<span class="hljs-number">28</span>]),<br>                k = <span class="hljs-title function_">e</span>(k, g,<br>                    h, j, f, <span class="hljs-number">9</span>, a[<span class="hljs-number">29</span>]), j = <span class="hljs-title function_">e</span>(j, k, g, h, v, <span class="hljs-number">14</span>, a[<span class="hljs-number">30</span>]), h = <span class="hljs-title function_">e</span>(h, j, k, g, C, <span class="hljs-number">20</span>, a[<span class="hljs-number">31</span>]),<br>                g = <span class="hljs-title function_">n</span>(g, h, j, k, t, <span class="hljs-number">4</span>, a[<span class="hljs-number">32</span>]), k = <span class="hljs-title function_">n</span>(k, g, h, j, y, <span class="hljs-number">11</span>, a[<span class="hljs-number">33</span>]), j = <span class="hljs-title function_">n</span>(j, k, g, h, B, <span class="hljs-number">16</span>, a[<span class="hljs-number">34</span>]),<br>                h = <span class="hljs-title function_">n</span>(h, j, k, g, E, <span class="hljs-number">23</span>, a[<span class="hljs-number">35</span>]), g = <span class="hljs-title function_">n</span>(g, h, j, k, m, <span class="hljs-number">4</span>, a[<span class="hljs-number">36</span>]), k = <span class="hljs-title function_">n</span>(k, g, h, j, x, <span class="hljs-number">11</span>, a[<span class="hljs-number">37</span>]),<br>                j = <span class="hljs-title function_">n</span>(j, k, g, h, v, <span class="hljs-number">16</span>, a[<span class="hljs-number">38</span>]), h = <span class="hljs-title function_">n</span>(h, j, k, g, A, <span class="hljs-number">23</span>, a[<span class="hljs-number">39</span>]), g = <span class="hljs-title function_">n</span>(g, h, j, k, D, <span class="hljs-number">4</span>, a[<span class="hljs-number">40</span>]),<br>                k = <span class="hljs-title function_">n</span>(k, g, h, j, q, <span class="hljs-number">11</span>, a[<span class="hljs-number">41</span>]), j = <span class="hljs-title function_">n</span>(j, k, g, h, r, <span class="hljs-number">16</span>, a[<span class="hljs-number">42</span>]), h = <span class="hljs-title function_">n</span>(h, j, k, g, s, <span class="hljs-number">23</span>, a[<span class="hljs-number">43</span>]),<br>                g = <span class="hljs-title function_">n</span>(g, h, j, k, z, <span class="hljs-number">4</span>, a[<span class="hljs-number">44</span>]), k = <span class="hljs-title function_">n</span>(k, g, h, j, C, <span class="hljs-number">11</span>, a[<span class="hljs-number">45</span>]), j = <span class="hljs-title function_">n</span>(j, k, g, h, F, <span class="hljs-number">16</span>, a[<span class="hljs-number">46</span>]),<br>                h = <span class="hljs-title function_">n</span>(h, j, k, g, f, <span class="hljs-number">23</span>, a[<span class="hljs-number">47</span>]), g = <span class="hljs-title function_">p</span>(g, h, j, k, q, <span class="hljs-number">6</span>, a[<span class="hljs-number">48</span>]), k = <span class="hljs-title function_">p</span>(k, g, h, j, v, <span class="hljs-number">10</span>, a[<span class="hljs-number">49</span>]),<br>                j = <span class="hljs-title function_">p</span>(j, k, g, h,<br>                    E, <span class="hljs-number">15</span>, a[<span class="hljs-number">50</span>]), h = <span class="hljs-title function_">p</span>(h, j, k, g, t, <span class="hljs-number">21</span>, a[<span class="hljs-number">51</span>]), g = <span class="hljs-title function_">p</span>(g, h, j, k, C, <span class="hljs-number">6</span>, a[<span class="hljs-number">52</span>]),<br>                k = <span class="hljs-title function_">p</span>(k, g, h, j, r, <span class="hljs-number">10</span>, a[<span class="hljs-number">53</span>]), j = <span class="hljs-title function_">p</span>(j, k, g, h, A, <span class="hljs-number">15</span>, a[<span class="hljs-number">54</span>]), h = <span class="hljs-title function_">p</span>(h, j, k, g, m, <span class="hljs-number">21</span>, a[<span class="hljs-number">55</span>]),<br>                g = <span class="hljs-title function_">p</span>(g, h, j, k, y, <span class="hljs-number">6</span>, a[<span class="hljs-number">56</span>]), k = <span class="hljs-title function_">p</span>(k, g, h, j, F, <span class="hljs-number">10</span>, a[<span class="hljs-number">57</span>]), j = <span class="hljs-title function_">p</span>(j, k, g, h, s, <span class="hljs-number">15</span>, a[<span class="hljs-number">58</span>]),<br>                h = <span class="hljs-title function_">p</span>(h, j, k, g, D, <span class="hljs-number">21</span>, a[<span class="hljs-number">59</span>]), g = <span class="hljs-title function_">p</span>(g, h, j, k, x, <span class="hljs-number">6</span>, a[<span class="hljs-number">60</span>]), k = <span class="hljs-title function_">p</span>(k, g, h, j, B, <span class="hljs-number">10</span>, a[<span class="hljs-number">61</span>]),<br>                j = <span class="hljs-title function_">p</span>(j, k, g, h, f, <span class="hljs-number">15</span>, a[<span class="hljs-number">62</span>]), h = <span class="hljs-title function_">p</span>(h, j, k, g, z, <span class="hljs-number">21</span>, a[<span class="hljs-number">63</span>]);<br>            c[<span class="hljs-number">0</span>] = c[<span class="hljs-number">0</span>] + g | <span class="hljs-number">0</span>;<br>            c[<span class="hljs-number">1</span>] = c[<span class="hljs-number">1</span>] + h | <span class="hljs-number">0</span>;<br>            c[<span class="hljs-number">2</span>] = c[<span class="hljs-number">2</span>] + j | <span class="hljs-number">0</span>;<br>            c[<span class="hljs-number">3</span>] = c[<span class="hljs-number">3</span>] + k | <span class="hljs-number">0</span><br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, b = a.<span class="hljs-property">words</span>, c = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, d = <span class="hljs-number">8</span> * a.<span class="hljs-property">sigBytes</span>;<br>            b[d &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - d % <span class="hljs-number">32</span>;<br>            <span class="hljs-keyword">var</span> m = s.<span class="hljs-title function_">floor</span>(c /<br>                <span class="hljs-number">4294967296</span>);<br>            b[(d + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">15</span>] = (m &lt;&lt; <span class="hljs-number">8</span> | m &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (m &lt;&lt; <span class="hljs-number">24</span> | m &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            b[(d + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">14</span>] = (c &lt;&lt; <span class="hljs-number">8</span> | c &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (c &lt;&lt; <span class="hljs-number">24</span> | c &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * (b.<span class="hljs-property">length</span> + <span class="hljs-number">1</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>;<br>            b = a.<span class="hljs-property">words</span>;<br>            <span class="hljs-keyword">for</span> (c = <span class="hljs-number">0</span>; <span class="hljs-number">4</span> &gt; c; c++) d = b[c], b[c] = (d &lt;&lt; <span class="hljs-number">8</span> | d &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (d &lt;&lt; <span class="hljs-number">24</span> | d &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            <span class="hljs-keyword">return</span> a<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = q.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            a.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> a<br>        &#125;<br>    &#125;);<br>    b.<span class="hljs-property">MD5</span> = q.<span class="hljs-title function_">_createHelper</span>(d);<br>    b.<span class="hljs-property">HmacMD5</span> = q.<span class="hljs-title function_">_createHmacHelper</span>(d)<br>&#125;)(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> s = <span class="hljs-title class_">CryptoJS</span>, l = s.<span class="hljs-property">lib</span>, e = l.<span class="hljs-property">Base</span>, n = l.<span class="hljs-property">WordArray</span>, l = s.<span class="hljs-property">algo</span>, p = l.<span class="hljs-property">EvpKDF</span> = e.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: e.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">keySize</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">hasher</span>: l.<span class="hljs-property">MD5</span>, <span class="hljs-attr">iterations</span>: <span class="hljs-number">1</span>&#125;), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(b)<br>        &#125;, <span class="hljs-attr">compute</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, d</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>, q = e.<span class="hljs-property">hasher</span>.<span class="hljs-title function_">create</span>(), a = n.<span class="hljs-title function_">create</span>(), l = a.<span class="hljs-property">words</span>, p = e.<span class="hljs-property">keySize</span>, e = e.<span class="hljs-property">iterations</span>; l.<span class="hljs-property">length</span> &lt; p;) &#123;<br>                s &amp;&amp; q.<span class="hljs-title function_">update</span>(s);<br>                <span class="hljs-keyword">var</span> s = q.<span class="hljs-title function_">update</span>(b).<span class="hljs-title function_">finalize</span>(d);<br>                q.<span class="hljs-title function_">reset</span>();<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = <span class="hljs-number">1</span>; c &lt; e; c++) s = q.<span class="hljs-title function_">finalize</span>(s), q.<span class="hljs-title function_">reset</span>();<br>                a.<span class="hljs-title function_">concat</span>(s)<br>            &#125;<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * p;<br>            <span class="hljs-keyword">return</span> a<br>        &#125;<br>    &#125;);<br>    s.<span class="hljs-property">EvpKDF</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">b, d, e</span>) &#123;<br>        <span class="hljs-keyword">return</span> p.<span class="hljs-title function_">create</span>(e).<span class="hljs-title function_">compute</span>(b,<br>            d)<br>    &#125;<br>&#125;)();<br><span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">lib</span>.<span class="hljs-property">Cipher</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">s</span>) &#123;<br>    <span class="hljs-keyword">var</span> l = <span class="hljs-title class_">CryptoJS</span>, e = l.<span class="hljs-property">lib</span>, n = e.<span class="hljs-property">Base</span>, p = e.<span class="hljs-property">WordArray</span>, b = e.<span class="hljs-property">BufferedBlockAlgorithm</span>, d = l.<span class="hljs-property">enc</span>.<span class="hljs-property">Base64</span>,<br>        t = l.<span class="hljs-property">algo</span>.<span class="hljs-property">EvpKDF</span>, q = e.<span class="hljs-property">Cipher</span> = b.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">cfg</span>: n.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">createEncryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f</span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">create</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_ENC_XFORM_MODE</span>, a, f)<br>            &#125;, <span class="hljs-attr">createDecryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f</span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">create</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_DEC_XFORM_MODE</span>, a, f)<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f, c</span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(c);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_xformMode</span> = a;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_key</span> = f;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>            &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                b.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>            &#125;, <span class="hljs-attr">process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>()<br>            &#125;,<br>            <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>            &#125;, <span class="hljs-attr">keySize</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">ivSize</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">_ENC_XFORM_MODE</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">_DEC_XFORM_MODE</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> &#123;<br>                    <span class="hljs-attr">encrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">f, b, d</span>) &#123;<br>                        <span class="hljs-keyword">return</span> (<span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> b ? G : c).<span class="hljs-title function_">encrypt</span>(a, f, b, d)<br>                    &#125;, <span class="hljs-attr">decrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">f, b, d</span>) &#123;<br>                        <span class="hljs-keyword">return</span> (<span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> b ? G : c).<span class="hljs-title function_">decrypt</span>(a, f, b, d)<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;);<br>    e.<span class="hljs-property">StreamCipher</span> = q.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>(!<span class="hljs-number">0</span>)<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">1</span><br>    &#125;);<br>    <span class="hljs-keyword">var</span> a = l.<span class="hljs-property">mode</span> = &#123;&#125;, v = <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f, b</span>) &#123;<br>        <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iv</span>;<br>        c ? <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iv</span> = s : c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_prevBlock</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = <span class="hljs-number">0</span>; d &lt; b; d++) a[f + d] ^=<br>            c[d]<br>    &#125;, u = (e.<span class="hljs-property">BlockCipherMode</span> = n.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">createEncryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">Encryptor</span>.<span class="hljs-title function_">create</span>(a, f)<br>        &#125;, <span class="hljs-attr">createDecryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">Decryptor</span>.<span class="hljs-title function_">create</span>(a, f)<br>        &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_cipher</span> = a;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iv</span> = f<br>        &#125;<br>    &#125;)).<span class="hljs-title function_">extend</span>();<br>    u.<span class="hljs-property">Encryptor</span> = u.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">processBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f</span>) &#123;<br>            <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_cipher</span>, c = b.<span class="hljs-property">blockSize</span>;<br>            v.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, a, f, c);<br>            b.<span class="hljs-title function_">encryptBlock</span>(a, f);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_prevBlock</span> = a.<span class="hljs-title function_">slice</span>(f, f + c)<br>        &#125;<br>    &#125;);<br>    u.<span class="hljs-property">Decryptor</span> = u.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">processBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f</span>) &#123;<br>            <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_cipher</span>, c = b.<span class="hljs-property">blockSize</span>, d = a.<span class="hljs-title function_">slice</span>(f, f + c);<br>            b.<span class="hljs-title function_">decryptBlock</span>(a, f);<br>            v.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>,<br>                a, f, c);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_prevBlock</span> = d<br>        &#125;<br>    &#125;);<br>    a = a.<span class="hljs-property">CBC</span> = u;<br>    u = (l.<span class="hljs-property">pad</span> = &#123;&#125;).<span class="hljs-property">Pkcs7</span> = &#123;<br>        <span class="hljs-attr">pad</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, f</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">4</span> * f, b = b - a.<span class="hljs-property">sigBytes</span> % b, c = b &lt;&lt; <span class="hljs-number">24</span> | b &lt;&lt; <span class="hljs-number">16</span> | b &lt;&lt; <span class="hljs-number">8</span> | b, d = [], e = <span class="hljs-number">0</span>; e &lt; b; e += <span class="hljs-number">4</span>) d.<span class="hljs-title function_">push</span>(c);<br>            b = p.<span class="hljs-title function_">create</span>(d, b);<br>            a.<span class="hljs-title function_">concat</span>(b)<br>        &#125;, <span class="hljs-attr">unpad</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a.<span class="hljs-property">sigBytes</span> -= a.<span class="hljs-property">words</span>[a.<span class="hljs-property">sigBytes</span> - <span class="hljs-number">1</span> &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp; <span class="hljs-number">255</span><br>        &#125;<br>    &#125;;<br>    e.<span class="hljs-property">BlockCipher</span> = q.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: q.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">mode</span>: a, <span class="hljs-attr">padding</span>: u&#125;), <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            q.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>, b = a.<span class="hljs-property">iv</span>, a = a.<span class="hljs-property">mode</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">_xformMode</span> == <span class="hljs-variable language_">this</span>.<span class="hljs-property">_ENC_XFORM_MODE</span>) <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">createEncryptor</span>; <span class="hljs-keyword">else</span> c = a.<span class="hljs-property">createDecryptor</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span> = <span class="hljs-number">1</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_mode</span> = c.<span class="hljs-title function_">call</span>(a,<br>                <span class="hljs-variable language_">this</span>, b &amp;&amp; b.<span class="hljs-property">words</span>)<br>        &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_mode</span>.<span class="hljs-title function_">processBlock</span>(a, b)<br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-property">padding</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">_xformMode</span> == <span class="hljs-variable language_">this</span>.<span class="hljs-property">_ENC_XFORM_MODE</span>) &#123;<br>                a.<span class="hljs-title function_">pad</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>);<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>(!<span class="hljs-number">0</span>)<br>            &#125; <span class="hljs-keyword">else</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>(!<span class="hljs-number">0</span>), a.<span class="hljs-title function_">unpad</span>(b);<br>            <span class="hljs-keyword">return</span> b<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">4</span><br>    &#125;);<br>    <span class="hljs-keyword">var</span> w = e.<span class="hljs-property">CipherParams</span> = n.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">mixIn</span>(a)<br>        &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> (a || <span class="hljs-variable language_">this</span>.<span class="hljs-property">formatter</span>).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>        &#125;<br>    &#125;), a = (l.<span class="hljs-property">format</span> = &#123;&#125;).<span class="hljs-property">OpenSSL</span> = &#123;<br>        <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">ciphertext</span>;<br>            a = a.<span class="hljs-property">salt</span>;<br>            <span class="hljs-keyword">return</span> (a ? p.<span class="hljs-title function_">create</span>([<span class="hljs-number">1398893684</span>,<br>                <span class="hljs-number">1701076831</span>]).<span class="hljs-title function_">concat</span>(a).<span class="hljs-title function_">concat</span>(b) : b).<span class="hljs-title function_">toString</span>(d)<br>        &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a = d.<span class="hljs-title function_">parse</span>(a);<br>            <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">words</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-number">1398893684</span> == b[<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-number">1701076831</span> == b[<span class="hljs-number">1</span>]) &#123;<br>                <span class="hljs-keyword">var</span> c = p.<span class="hljs-title function_">create</span>(b.<span class="hljs-title function_">slice</span>(<span class="hljs-number">2</span>, <span class="hljs-number">4</span>));<br>                b.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>);<br>                a.<span class="hljs-property">sigBytes</span> -= <span class="hljs-number">16</span><br>            &#125;<br>            <span class="hljs-keyword">return</span> w.<span class="hljs-title function_">create</span>(&#123;<span class="hljs-attr">ciphertext</span>: a, <span class="hljs-attr">salt</span>: c&#125;)<br>        &#125;<br>    &#125;, c = e.<span class="hljs-property">SerializableCipher</span> = n.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: n.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">format</span>: a&#125;), <span class="hljs-attr">encrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, c, d</span>) &#123;<br>            d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(d);<br>            <span class="hljs-keyword">var</span> e = a.<span class="hljs-title function_">createEncryptor</span>(c, d);<br>            b = e.<span class="hljs-title function_">finalize</span>(b);<br>            e = e.<span class="hljs-property">cfg</span>;<br>            <span class="hljs-keyword">return</span> w.<span class="hljs-title function_">create</span>(&#123;<br>                <span class="hljs-attr">ciphertext</span>: b,<br>                <span class="hljs-attr">key</span>: c,<br>                <span class="hljs-attr">iv</span>: e.<span class="hljs-property">iv</span>,<br>                <span class="hljs-attr">algorithm</span>: a,<br>                <span class="hljs-attr">mode</span>: e.<span class="hljs-property">mode</span>,<br>                <span class="hljs-attr">padding</span>: e.<span class="hljs-property">padding</span>,<br>                <span class="hljs-attr">blockSize</span>: a.<span class="hljs-property">blockSize</span>,<br>                <span class="hljs-attr">formatter</span>: d.<span class="hljs-property">format</span><br>            &#125;)<br>        &#125;,<br>        <span class="hljs-attr">decrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, c, d</span>) &#123;<br>            d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(d);<br>            b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_parse</span>(b, d.<span class="hljs-property">format</span>);<br>            <span class="hljs-keyword">return</span> a.<span class="hljs-title function_">createDecryptor</span>(c, d).<span class="hljs-title function_">finalize</span>(b.<span class="hljs-property">ciphertext</span>)<br>        &#125;, <span class="hljs-attr">_parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a ? b.<span class="hljs-title function_">parse</span>(a, <span class="hljs-variable language_">this</span>) : a<br>        &#125;<br>    &#125;), l = (l.<span class="hljs-property">kdf</span> = &#123;&#125;).<span class="hljs-property">OpenSSL</span> = &#123;<br>        <span class="hljs-attr">execute</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, c, d</span>) &#123;<br>            d || (d = p.<span class="hljs-title function_">random</span>(<span class="hljs-number">8</span>));<br>            a = t.<span class="hljs-title function_">create</span>(&#123;<span class="hljs-attr">keySize</span>: b + c&#125;).<span class="hljs-title function_">compute</span>(a, d);<br>            c = p.<span class="hljs-title function_">create</span>(a.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(b), <span class="hljs-number">4</span> * c);<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * b;<br>            <span class="hljs-keyword">return</span> w.<span class="hljs-title function_">create</span>(&#123;<span class="hljs-attr">key</span>: a, <span class="hljs-attr">iv</span>: c, <span class="hljs-attr">salt</span>: d&#125;)<br>        &#125;<br>    &#125;, G = e.<span class="hljs-property">PasswordBasedCipher</span> = c.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: c.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">kdf</span>: l&#125;), <span class="hljs-attr">encrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, d, e</span>) &#123;<br>            e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(e);<br>            d = e.<span class="hljs-property">kdf</span>.<span class="hljs-title function_">execute</span>(d,<br>                a.<span class="hljs-property">keySize</span>, a.<span class="hljs-property">ivSize</span>);<br>            e.<span class="hljs-property">iv</span> = d.<span class="hljs-property">iv</span>;<br>            a = c.<span class="hljs-property">encrypt</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, a, b, d.<span class="hljs-property">key</span>, e);<br>            a.<span class="hljs-title function_">mixIn</span>(d);<br>            <span class="hljs-keyword">return</span> a<br>        &#125;, <span class="hljs-attr">decrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, d, e</span>) &#123;<br>            e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(e);<br>            b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_parse</span>(b, e.<span class="hljs-property">format</span>);<br>            d = e.<span class="hljs-property">kdf</span>.<span class="hljs-title function_">execute</span>(d, a.<span class="hljs-property">keySize</span>, a.<span class="hljs-property">ivSize</span>, b.<span class="hljs-property">salt</span>);<br>            e.<span class="hljs-property">iv</span> = d.<span class="hljs-property">iv</span>;<br>            <span class="hljs-keyword">return</span> c.<span class="hljs-property">decrypt</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, a, b, d.<span class="hljs-property">key</span>, e)<br>        &#125;<br>    &#125;)<br>&#125;();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">s</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_S</span>, d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_i</span>, e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_j</span>, q = <span class="hljs-number">0</span>, a = <span class="hljs-number">0</span>; <span class="hljs-number">4</span> &gt; a; a++) &#123;<br>            <span class="hljs-keyword">var</span> d = (d + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span>, e = (e + b[d]) % <span class="hljs-number">256</span>, l = b[d];<br>            b[d] = b[e];<br>            b[e] = l;<br>            q |= b[(b[d] + b[e]) % <span class="hljs-number">256</span>] &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * a<br>        &#125;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">_i</span> = d;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">_j</span> = e;<br>        <span class="hljs-keyword">return</span> q<br>    &#125;<br><br>    <span class="hljs-keyword">var</span> l = <span class="hljs-title class_">CryptoJS</span>, e = l.<span class="hljs-property">lib</span>.<span class="hljs-property">StreamCipher</span>, n = l.<span class="hljs-property">algo</span>, p = n.<span class="hljs-property">RC4</span> = e.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_key</span>, d = b.<span class="hljs-property">words</span>, b = b.<span class="hljs-property">sigBytes</span>, e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_S</span> = [], l = <span class="hljs-number">0</span>; <span class="hljs-number">256</span> &gt; l; l++) e[l] = l;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = l = <span class="hljs-number">0</span>; <span class="hljs-number">256</span> &gt; l; l++) &#123;<br>                <span class="hljs-keyword">var</span> n = l % b, a = (a + e[l] + (d[n &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (n % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>)) % <span class="hljs-number">256</span>, n = e[l];<br>                e[l] = e[a];<br>                e[a] = n<br>            &#125;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_i</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_j</span> = <span class="hljs-number">0</span><br>        &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b,</span><br><span class="hljs-params">                                      d</span>) &#123;<br>            b[d] ^= s.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>)<br>        &#125;, <span class="hljs-attr">keySize</span>: <span class="hljs-number">8</span>, <span class="hljs-attr">ivSize</span>: <span class="hljs-number">0</span><br>    &#125;);<br>    l.<span class="hljs-property">RC4</span> = e.<span class="hljs-title function_">_createHelper</span>(p);<br>    n = n.<span class="hljs-property">RC4Drop</span> = p.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: p.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">drop</span>: <span class="hljs-number">192</span>&#125;), <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            p.<span class="hljs-property">_doReset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-property">drop</span>; <span class="hljs-number">0</span> &lt; b; b--) s.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>)<br>        &#125;<br>    &#125;);<br>    l.<span class="hljs-property">RC4Drop</span> = e.<span class="hljs-title function_">_createHelper</span>(n)<br>&#125;)();<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Md5</title>
    <link href="/posts/d021ad01/"/>
    <url>/posts/d021ad01/</url>
    
    <content type="html"><![CDATA[<h2 id="Md5源码"><a href="#Md5源码" class="headerlink" title="Md5源码"></a>Md5源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">s, p</span>) &#123;<br>    <span class="hljs-keyword">var</span> m = &#123;&#125;, l = m.<span class="hljs-property">lib</span> = &#123;&#125;, n = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, r = l.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                n.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> h = <span class="hljs-keyword">new</span> n;<br>                b &amp;&amp; h.<span class="hljs-title function_">mixIn</span>(b);<br>                h.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (h.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    h.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                h.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = h;<br>                h.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> h<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                b.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(b, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> b<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> h <span class="hljs-keyword">in</span> b) b.<span class="hljs-title function_">hasOwnProperty</span>(h) &amp;&amp; (<span class="hljs-variable language_">this</span>[h] = b[h]);<br>                b.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = b.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        q = l.<span class="hljs-property">WordArray</span> = r.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, h</span>) &#123;<br>                b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = b || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = h != p ? h : <span class="hljs-number">4</span> * b.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">return</span> (b || t).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">var</span> h = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, a = b.<span class="hljs-property">words</span>, j = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                b = b.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (j % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> g = <span class="hljs-number">0</span>; g &lt; b; g++) h[j + g &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a[g &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (g % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((j + g) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; a.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (g = <span class="hljs-number">0</span>; g &lt; b; g += <span class="hljs-number">4</span>) h[j + g &gt;&gt;&gt; <span class="hljs-number">2</span>] = a[g &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> h.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(h, a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += b;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, h = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                b[h &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (h % <span class="hljs-number">4</span>);<br>                b.<span class="hljs-property">length</span> = s.<span class="hljs-title function_">ceil</span>(h / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> b = r.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                b.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> b<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> h = [], a = <span class="hljs-number">0</span>; a &lt; b; a += <span class="hljs-number">4</span>) h.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * s.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> q.<span class="hljs-title function_">init</span>(h, b)<br>            &#125;<br>        &#125;), v = m.<span class="hljs-property">enc</span> = &#123;&#125;, t = v.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">var</span> a = b.<span class="hljs-property">words</span>;<br>                b = b.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> g = [], j = <span class="hljs-number">0</span>; j &lt; b; j++) &#123;<br>                    <span class="hljs-keyword">var</span> k = a[j &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    g.<span class="hljs-title function_">push</span>((k &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    g.<span class="hljs-title function_">push</span>((k &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> g.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = b.<span class="hljs-property">length</span>, g = [], j = <span class="hljs-number">0</span>; j &lt; a; j += <span class="hljs-number">2</span>) g[j &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(b.<span class="hljs-title function_">substr</span>(j,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (j % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> q.<span class="hljs-title function_">init</span>(g, a / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, a = v.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">var</span> a = b.<span class="hljs-property">words</span>;<br>                b = b.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> g = [], j = <span class="hljs-number">0</span>; j &lt; b; j++) g.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(a[j &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> g.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = b.<span class="hljs-property">length</span>, g = [], j = <span class="hljs-number">0</span>; j &lt; a; j++) g[j &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (b.<span class="hljs-title function_">charCodeAt</span>(j) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> q.<span class="hljs-title function_">init</span>(g, a)<br>            &#125;<br>        &#125;, u = v.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(a.<span class="hljs-title function_">stringify</span>(b)))<br>                &#125; <span class="hljs-keyword">catch</span> (g) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">return</span> a.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(b)))<br>            &#125;<br>        &#125;,<br>        g = l.<span class="hljs-property">BufferedBlockAlgorithm</span> = r.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> q.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> b &amp;&amp; (b = u.<span class="hljs-title function_">parse</span>(b));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(b);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += b.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, g = a.<span class="hljs-property">words</span>, j = a.<span class="hljs-property">sigBytes</span>, k = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, m = j / (<span class="hljs-number">4</span> * k),<br>                    m = b ? s.<span class="hljs-title function_">ceil</span>(m) : s.<span class="hljs-title function_">max</span>((m | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                b = m * k;<br>                j = s.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * b, j);<br>                <span class="hljs-keyword">if</span> (b) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> l = <span class="hljs-number">0</span>; l &lt; b; l += k) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(g, l);<br>                    l = g.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, b);<br>                    a.<span class="hljs-property">sigBytes</span> -= j<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> q.<span class="hljs-title function_">init</span>(l, j)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> b = r.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                b.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> b<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    l.<span class="hljs-property">Hasher</span> = g.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: r.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(b);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            g.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(b);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            b &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(b);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">a, g</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> b.<span class="hljs-title function_">init</span>(g)).<span class="hljs-title function_">finalize</span>(a)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">a, g</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> k.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(b,<br>                    g)).<span class="hljs-title function_">finalize</span>(a)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> k = m.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> m<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">s</span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">p</span>(<span class="hljs-params">a, k, b, h, l, j, m</span>) &#123;<br>        a = a + (k &amp; b | ~k &amp; h) + l + m;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; j | a &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + k<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">m</span>(<span class="hljs-params">a, k, b, h, l, j, m</span>) &#123;<br>        a = a + (k &amp; h | b &amp; ~h) + l + m;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; j | a &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + k<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">l</span>(<span class="hljs-params">a, k, b, h, l, j, m</span>) &#123;<br>        a = a + (k ^ b ^ h) + l + m;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; j | a &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + k<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">n</span>(<span class="hljs-params">a, k, b, h, l, j, m</span>) &#123;<br>        a = a + (b ^ (k | ~h)) + l + m;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; j | a &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + k<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> r = <span class="hljs-title class_">CryptoJS</span>, q = r.<span class="hljs-property">lib</span>, v = q.<span class="hljs-property">WordArray</span>, t = q.<span class="hljs-property">Hasher</span>, q = r.<span class="hljs-property">algo</span>, a = [], u = <span class="hljs-number">0</span>; <span class="hljs-number">64</span> &gt; u; u++) a[u] = <span class="hljs-number">4294967296</span> * s.<span class="hljs-title function_">abs</span>(s.<span class="hljs-title function_">sin</span>(u + <span class="hljs-number">1</span>)) | <span class="hljs-number">0</span>;<br>    q = q.<span class="hljs-property">MD5</span> = t.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> v.<span class="hljs-title function_">init</span>([<span class="hljs-number">1732584193</span>, <span class="hljs-number">4023233417</span>, <span class="hljs-number">2562383102</span>, <span class="hljs-number">271733878</span>])<br>        &#125;,<br>        <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">g, k</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">0</span>; <span class="hljs-number">16</span> &gt; b; b++) &#123;<br>                <span class="hljs-keyword">var</span> h = k + b, w = g[h];<br>                g[h] = (w &lt;&lt; <span class="hljs-number">8</span> | w &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (w &lt;&lt; <span class="hljs-number">24</span> | w &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span><br>            &#125;<br>            <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>, h = g[k + <span class="hljs-number">0</span>], w = g[k + <span class="hljs-number">1</span>], j = g[k + <span class="hljs-number">2</span>], q = g[k + <span class="hljs-number">3</span>], r = g[k + <span class="hljs-number">4</span>],<br>                s = g[k + <span class="hljs-number">5</span>], t = g[k + <span class="hljs-number">6</span>], u = g[k + <span class="hljs-number">7</span>], v = g[k + <span class="hljs-number">8</span>], x = g[k + <span class="hljs-number">9</span>], y = g[k + <span class="hljs-number">10</span>], z = g[k + <span class="hljs-number">11</span>],<br>                A = g[k + <span class="hljs-number">12</span>], B = g[k + <span class="hljs-number">13</span>], C = g[k + <span class="hljs-number">14</span>], D = g[k + <span class="hljs-number">15</span>], c = b[<span class="hljs-number">0</span>], d = b[<span class="hljs-number">1</span>], e = b[<span class="hljs-number">2</span>], f = b[<span class="hljs-number">3</span>],<br>                c = <span class="hljs-title function_">p</span>(c, d, e, f, h, <span class="hljs-number">7</span>, a[<span class="hljs-number">0</span>]), f = <span class="hljs-title function_">p</span>(f, c, d, e, w, <span class="hljs-number">12</span>, a[<span class="hljs-number">1</span>]), e = <span class="hljs-title function_">p</span>(e, f, c, d, j, <span class="hljs-number">17</span>, a[<span class="hljs-number">2</span>]),<br>                d = <span class="hljs-title function_">p</span>(d, e, f, c, q, <span class="hljs-number">22</span>, a[<span class="hljs-number">3</span>]), c = <span class="hljs-title function_">p</span>(c, d, e, f, r, <span class="hljs-number">7</span>, a[<span class="hljs-number">4</span>]), f = <span class="hljs-title function_">p</span>(f, c, d, e, s, <span class="hljs-number">12</span>, a[<span class="hljs-number">5</span>]),<br>                e = <span class="hljs-title function_">p</span>(e, f, c, d, t, <span class="hljs-number">17</span>, a[<span class="hljs-number">6</span>]), d = <span class="hljs-title function_">p</span>(d, e, f, c, u, <span class="hljs-number">22</span>, a[<span class="hljs-number">7</span>]),<br>                c = <span class="hljs-title function_">p</span>(c, d, e, f, v, <span class="hljs-number">7</span>, a[<span class="hljs-number">8</span>]), f = <span class="hljs-title function_">p</span>(f, c, d, e, x, <span class="hljs-number">12</span>, a[<span class="hljs-number">9</span>]), e = <span class="hljs-title function_">p</span>(e, f, c, d, y, <span class="hljs-number">17</span>, a[<span class="hljs-number">10</span>]),<br>                d = <span class="hljs-title function_">p</span>(d, e, f, c, z, <span class="hljs-number">22</span>, a[<span class="hljs-number">11</span>]), c = <span class="hljs-title function_">p</span>(c, d, e, f, A, <span class="hljs-number">7</span>, a[<span class="hljs-number">12</span>]), f = <span class="hljs-title function_">p</span>(f, c, d, e, B, <span class="hljs-number">12</span>, a[<span class="hljs-number">13</span>]),<br>                e = <span class="hljs-title function_">p</span>(e, f, c, d, C, <span class="hljs-number">17</span>, a[<span class="hljs-number">14</span>]), d = <span class="hljs-title function_">p</span>(d, e, f, c, D, <span class="hljs-number">22</span>, a[<span class="hljs-number">15</span>]), c = <span class="hljs-title function_">m</span>(c, d, e, f, w, <span class="hljs-number">5</span>, a[<span class="hljs-number">16</span>]),<br>                f = <span class="hljs-title function_">m</span>(f, c, d, e, t, <span class="hljs-number">9</span>, a[<span class="hljs-number">17</span>]), e = <span class="hljs-title function_">m</span>(e, f, c, d, z, <span class="hljs-number">14</span>, a[<span class="hljs-number">18</span>]), d = <span class="hljs-title function_">m</span>(d, e, f, c, h, <span class="hljs-number">20</span>, a[<span class="hljs-number">19</span>]),<br>                c = <span class="hljs-title function_">m</span>(c, d, e, f, s, <span class="hljs-number">5</span>, a[<span class="hljs-number">20</span>]), f = <span class="hljs-title function_">m</span>(f, c, d, e, y, <span class="hljs-number">9</span>, a[<span class="hljs-number">21</span>]), e = <span class="hljs-title function_">m</span>(e, f, c, d, D, <span class="hljs-number">14</span>, a[<span class="hljs-number">22</span>]),<br>                d = <span class="hljs-title function_">m</span>(d, e, f, c, r, <span class="hljs-number">20</span>, a[<span class="hljs-number">23</span>]), c = <span class="hljs-title function_">m</span>(c, d, e, f, x, <span class="hljs-number">5</span>, a[<span class="hljs-number">24</span>]), f = <span class="hljs-title function_">m</span>(f, c, d, e, C, <span class="hljs-number">9</span>, a[<span class="hljs-number">25</span>]),<br>                e = <span class="hljs-title function_">m</span>(e, f, c, d, q, <span class="hljs-number">14</span>, a[<span class="hljs-number">26</span>]), d = <span class="hljs-title function_">m</span>(d, e, f, c, v, <span class="hljs-number">20</span>, a[<span class="hljs-number">27</span>]), c = <span class="hljs-title function_">m</span>(c, d, e, f, B, <span class="hljs-number">5</span>, a[<span class="hljs-number">28</span>]),<br>                f = <span class="hljs-title function_">m</span>(f, c,<br>                    d, e, j, <span class="hljs-number">9</span>, a[<span class="hljs-number">29</span>]), e = <span class="hljs-title function_">m</span>(e, f, c, d, u, <span class="hljs-number">14</span>, a[<span class="hljs-number">30</span>]), d = <span class="hljs-title function_">m</span>(d, e, f, c, A, <span class="hljs-number">20</span>, a[<span class="hljs-number">31</span>]),<br>                c = <span class="hljs-title function_">l</span>(c, d, e, f, s, <span class="hljs-number">4</span>, a[<span class="hljs-number">32</span>]), f = <span class="hljs-title function_">l</span>(f, c, d, e, v, <span class="hljs-number">11</span>, a[<span class="hljs-number">33</span>]), e = <span class="hljs-title function_">l</span>(e, f, c, d, z, <span class="hljs-number">16</span>, a[<span class="hljs-number">34</span>]),<br>                d = <span class="hljs-title function_">l</span>(d, e, f, c, C, <span class="hljs-number">23</span>, a[<span class="hljs-number">35</span>]), c = <span class="hljs-title function_">l</span>(c, d, e, f, w, <span class="hljs-number">4</span>, a[<span class="hljs-number">36</span>]), f = <span class="hljs-title function_">l</span>(f, c, d, e, r, <span class="hljs-number">11</span>, a[<span class="hljs-number">37</span>]),<br>                e = <span class="hljs-title function_">l</span>(e, f, c, d, u, <span class="hljs-number">16</span>, a[<span class="hljs-number">38</span>]), d = <span class="hljs-title function_">l</span>(d, e, f, c, y, <span class="hljs-number">23</span>, a[<span class="hljs-number">39</span>]), c = <span class="hljs-title function_">l</span>(c, d, e, f, B, <span class="hljs-number">4</span>, a[<span class="hljs-number">40</span>]),<br>                f = <span class="hljs-title function_">l</span>(f, c, d, e, h, <span class="hljs-number">11</span>, a[<span class="hljs-number">41</span>]), e = <span class="hljs-title function_">l</span>(e, f, c, d, q, <span class="hljs-number">16</span>, a[<span class="hljs-number">42</span>]), d = <span class="hljs-title function_">l</span>(d, e, f, c, t, <span class="hljs-number">23</span>, a[<span class="hljs-number">43</span>]),<br>                c = <span class="hljs-title function_">l</span>(c, d, e, f, x, <span class="hljs-number">4</span>, a[<span class="hljs-number">44</span>]), f = <span class="hljs-title function_">l</span>(f, c, d, e, A, <span class="hljs-number">11</span>, a[<span class="hljs-number">45</span>]), e = <span class="hljs-title function_">l</span>(e, f, c, d, D, <span class="hljs-number">16</span>, a[<span class="hljs-number">46</span>]),<br>                d = <span class="hljs-title function_">l</span>(d, e, f, c, j, <span class="hljs-number">23</span>, a[<span class="hljs-number">47</span>]), c = <span class="hljs-title function_">n</span>(c, d, e, f, h, <span class="hljs-number">6</span>, a[<span class="hljs-number">48</span>]), f = <span class="hljs-title function_">n</span>(f, c, d, e, u, <span class="hljs-number">10</span>, a[<span class="hljs-number">49</span>]),<br>                e = <span class="hljs-title function_">n</span>(e, f, c, d,<br>                    C, <span class="hljs-number">15</span>, a[<span class="hljs-number">50</span>]), d = <span class="hljs-title function_">n</span>(d, e, f, c, s, <span class="hljs-number">21</span>, a[<span class="hljs-number">51</span>]), c = <span class="hljs-title function_">n</span>(c, d, e, f, A, <span class="hljs-number">6</span>, a[<span class="hljs-number">52</span>]),<br>                f = <span class="hljs-title function_">n</span>(f, c, d, e, q, <span class="hljs-number">10</span>, a[<span class="hljs-number">53</span>]), e = <span class="hljs-title function_">n</span>(e, f, c, d, y, <span class="hljs-number">15</span>, a[<span class="hljs-number">54</span>]), d = <span class="hljs-title function_">n</span>(d, e, f, c, w, <span class="hljs-number">21</span>, a[<span class="hljs-number">55</span>]),<br>                c = <span class="hljs-title function_">n</span>(c, d, e, f, v, <span class="hljs-number">6</span>, a[<span class="hljs-number">56</span>]), f = <span class="hljs-title function_">n</span>(f, c, d, e, D, <span class="hljs-number">10</span>, a[<span class="hljs-number">57</span>]), e = <span class="hljs-title function_">n</span>(e, f, c, d, t, <span class="hljs-number">15</span>, a[<span class="hljs-number">58</span>]),<br>                d = <span class="hljs-title function_">n</span>(d, e, f, c, B, <span class="hljs-number">21</span>, a[<span class="hljs-number">59</span>]), c = <span class="hljs-title function_">n</span>(c, d, e, f, r, <span class="hljs-number">6</span>, a[<span class="hljs-number">60</span>]), f = <span class="hljs-title function_">n</span>(f, c, d, e, z, <span class="hljs-number">10</span>, a[<span class="hljs-number">61</span>]),<br>                e = <span class="hljs-title function_">n</span>(e, f, c, d, j, <span class="hljs-number">15</span>, a[<span class="hljs-number">62</span>]), d = <span class="hljs-title function_">n</span>(d, e, f, c, x, <span class="hljs-number">21</span>, a[<span class="hljs-number">63</span>]);<br>            b[<span class="hljs-number">0</span>] = b[<span class="hljs-number">0</span>] + c | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">1</span>] = b[<span class="hljs-number">1</span>] + d | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">2</span>] = b[<span class="hljs-number">2</span>] + e | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">3</span>] = b[<span class="hljs-number">3</span>] + f | <span class="hljs-number">0</span><br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, k = a.<span class="hljs-property">words</span>, b = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, h = <span class="hljs-number">8</span> * a.<span class="hljs-property">sigBytes</span>;<br>            k[h &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - h % <span class="hljs-number">32</span>;<br>            <span class="hljs-keyword">var</span> l = s.<span class="hljs-title function_">floor</span>(b /<br>                <span class="hljs-number">4294967296</span>);<br>            k[(h + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">15</span>] = (l &lt;&lt; <span class="hljs-number">8</span> | l &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (l &lt;&lt; <span class="hljs-number">24</span> | l &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            k[(h + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">14</span>] = (b &lt;&lt; <span class="hljs-number">8</span> | b &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (b &lt;&lt; <span class="hljs-number">24</span> | b &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * (k.<span class="hljs-property">length</span> + <span class="hljs-number">1</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>;<br>            k = a.<span class="hljs-property">words</span>;<br>            <span class="hljs-keyword">for</span> (b = <span class="hljs-number">0</span>; <span class="hljs-number">4</span> &gt; b; b++) h = k[b], k[b] = (h &lt;&lt; <span class="hljs-number">8</span> | h &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (h &lt;&lt; <span class="hljs-number">24</span> | h &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            <span class="hljs-keyword">return</span> a<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = t.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            a.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> a<br>        &#125;<br>    &#125;);<br>    r.<span class="hljs-property">MD5</span> = t.<span class="hljs-title function_">_createHelper</span>(q);<br>    r.<span class="hljs-property">HmacMD5</span> = t.<span class="hljs-title function_">_createHmacHelper</span>(q)<br>&#125;)(<span class="hljs-title class_">Math</span>);<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hmac-Sha1</title>
    <link href="/posts/e019b1c3/"/>
    <url>/posts/e019b1c3/</url>
    
    <content type="html"><![CDATA[<h2 id="Hmac-Sha1加密源码"><a href="#Hmac-Sha1加密源码" class="headerlink" title="Hmac-Sha1加密源码"></a>Hmac-Sha1加密源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">g, l</span>) &#123;<br>    <span class="hljs-keyword">var</span> e = &#123;&#125;, d = e.<span class="hljs-property">lib</span> = &#123;&#125;, m = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, k = d.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                m.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-keyword">new</span> m;<br>                a &amp;&amp; c.<span class="hljs-title function_">mixIn</span>(a);<br>                c.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (c.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    c.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                c.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = c;<br>                c.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> c<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                a.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(a, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c <span class="hljs-keyword">in</span> a) a.<span class="hljs-title function_">hasOwnProperty</span>(c) &amp;&amp; (<span class="hljs-variable language_">this</span>[c] = a[c]);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = a.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        p = d.<span class="hljs-property">WordArray</span> = k.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, c</span>) &#123;<br>                a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = a || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = c != l ? c : <span class="hljs-number">4</span> * a.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> (a || n).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, q = a.<span class="hljs-property">words</span>, f = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (f % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">0</span>; b &lt; a; b++) c[f + b &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (q[b &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (b % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((f + b) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; q.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (b = <span class="hljs-number">0</span>; b &lt; a; b += <span class="hljs-number">4</span>) c[f + b &gt;&gt;&gt; <span class="hljs-number">2</span>] = q[b &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> c.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(c, q);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += a;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a[c &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (c % <span class="hljs-number">4</span>);<br>                a.<span class="hljs-property">length</span> = g.<span class="hljs-title function_">ceil</span>(c / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = k.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = [], b = <span class="hljs-number">0</span>; b &lt; a; b += <span class="hljs-number">4</span>) c.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * g.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(c, a)<br>            &#125;<br>        &#125;), b = e.<span class="hljs-property">enc</span> = &#123;&#125;, n = b.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], f = <span class="hljs-number">0</span>; f &lt; a; f++) &#123;<br>                    <span class="hljs-keyword">var</span> d = c[f &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    b.<span class="hljs-title function_">push</span>((d &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    b.<span class="hljs-title function_">push</span>((d &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> b.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">length</span>, b = [], f = <span class="hljs-number">0</span>; f &lt; c; f += <span class="hljs-number">2</span>) b[f &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(a.<span class="hljs-title function_">substr</span>(f,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (f % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(b, c / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, j = b.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], f = <span class="hljs-number">0</span>; f &lt; a; f++) b.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(c[f &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> b.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">length</span>, b = [], f = <span class="hljs-number">0</span>; f &lt; c; f++) b[f &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a.<span class="hljs-title function_">charCodeAt</span>(f) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(b, c)<br>            &#125;<br>        &#125;, h = b.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(j.<span class="hljs-title function_">stringify</span>(a)))<br>                &#125; <span class="hljs-keyword">catch</span> (c) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> j.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(a)))<br>            &#125;<br>        &#125;,<br>        r = d.<span class="hljs-property">BufferedBlockAlgorithm</span> = k.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> p.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = h.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, b = c.<span class="hljs-property">words</span>, f = c.<span class="hljs-property">sigBytes</span>, d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, e = f / (<span class="hljs-number">4</span> * d),<br>                    e = a ? g.<span class="hljs-title function_">ceil</span>(e) : g.<span class="hljs-title function_">max</span>((e | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                a = e * d;<br>                f = g.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * a, f);<br>                <span class="hljs-keyword">if</span> (a) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> k = <span class="hljs-number">0</span>; k &lt; a; k += d) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(b, k);<br>                    k = b.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, a);<br>                    c.<span class="hljs-property">sigBytes</span> -= f<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(k, f)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = k.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    d.<span class="hljs-property">Hasher</span> = r.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: k.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            r.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, d</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(d)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, d</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> s.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    d)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> s = e.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> e<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> g = <span class="hljs-title class_">CryptoJS</span>, l = g.<span class="hljs-property">lib</span>, e = l.<span class="hljs-property">WordArray</span>, d = l.<span class="hljs-property">Hasher</span>, m = [], l = g.<span class="hljs-property">algo</span>.<span class="hljs-property">SHA1</span> = d.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> e.<span class="hljs-title function_">init</span>([<span class="hljs-number">1732584193</span>, <span class="hljs-number">4023233417</span>, <span class="hljs-number">2562383102</span>, <span class="hljs-number">271733878</span>, <span class="hljs-number">3285377520</span>])<br>        &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">d, e</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>, n = b[<span class="hljs-number">0</span>], j = b[<span class="hljs-number">1</span>], h = b[<span class="hljs-number">2</span>], g = b[<span class="hljs-number">3</span>], l = b[<span class="hljs-number">4</span>], a = <span class="hljs-number">0</span>; <span class="hljs-number">80</span> &gt; a; a++) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-number">16</span> &gt; a) m[a] = d[e + a] | <span class="hljs-number">0</span>; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">var</span> c = m[a - <span class="hljs-number">3</span>] ^ m[a - <span class="hljs-number">8</span>] ^ m[a - <span class="hljs-number">14</span>] ^ m[a - <span class="hljs-number">16</span>];<br>                    m[a] = c &lt;&lt; <span class="hljs-number">1</span> | c &gt;&gt;&gt; <span class="hljs-number">31</span><br>                &#125;<br>                c = (n &lt;&lt; <span class="hljs-number">5</span> | n &gt;&gt;&gt; <span class="hljs-number">27</span>) + l + m[a];<br>                c = <span class="hljs-number">20</span> &gt; a ? c + ((j &amp; h | ~j &amp; g) + <span class="hljs-number">1518500249</span>) : <span class="hljs-number">40</span> &gt; a ? c + ((j ^ h ^ g) + <span class="hljs-number">1859775393</span>) : <span class="hljs-number">60</span> &gt; a ? c + ((j &amp; h | j &amp; g | h &amp; g) - <span class="hljs-number">1894007588</span>) : c + ((j ^ h ^<br>                    g) - <span class="hljs-number">899497514</span>);<br>                l = g;<br>                g = h;<br>                h = j &lt;&lt; <span class="hljs-number">30</span> | j &gt;&gt;&gt; <span class="hljs-number">2</span>;<br>                j = n;<br>                n = c<br>            &#125;<br>            b[<span class="hljs-number">0</span>] = b[<span class="hljs-number">0</span>] + n | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">1</span>] = b[<span class="hljs-number">1</span>] + j | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">2</span>] = b[<span class="hljs-number">2</span>] + h | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">3</span>] = b[<span class="hljs-number">3</span>] + g | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">4</span>] = b[<span class="hljs-number">4</span>] + l | <span class="hljs-number">0</span><br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, e = d.<span class="hljs-property">words</span>, b = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, g = <span class="hljs-number">8</span> * d.<span class="hljs-property">sigBytes</span>;<br>            e[g &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - g % <span class="hljs-number">32</span>;<br>            e[(g + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">14</span>] = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(b / <span class="hljs-number">4294967296</span>);<br>            e[(g + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">15</span>] = b;<br>            d.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * e.<span class="hljs-property">length</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span><br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> e = d.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            e.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> e<br>        &#125;<br>    &#125;);<br>    g.<span class="hljs-property">SHA1</span> = d.<span class="hljs-title function_">_createHelper</span>(l);<br>    g.<span class="hljs-property">HmacSHA1</span> = d.<span class="hljs-title function_">_createHmacHelper</span>(l)<br>&#125;)();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> g = <span class="hljs-title class_">CryptoJS</span>, l = g.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>;<br>    g.<span class="hljs-property">algo</span>.<span class="hljs-property">HMAC</span> = g.<span class="hljs-property">lib</span>.<span class="hljs-property">Base</span>.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, d</span>) &#123;<br>            e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span> = <span class="hljs-keyword">new</span> e.<span class="hljs-property">init</span>;<br>            <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> d &amp;&amp; (d = l.<span class="hljs-title function_">parse</span>(d));<br>            <span class="hljs-keyword">var</span> g = e.<span class="hljs-property">blockSize</span>, k = <span class="hljs-number">4</span> * g;<br>            d.<span class="hljs-property">sigBytes</span> &gt; k &amp;&amp; (d = e.<span class="hljs-title function_">finalize</span>(d));<br>            d.<span class="hljs-title function_">clamp</span>();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> p = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_oKey</span> = d.<span class="hljs-title function_">clone</span>(), b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iKey</span> = d.<span class="hljs-title function_">clone</span>(), n = p.<span class="hljs-property">words</span>, j = b.<span class="hljs-property">words</span>, h = <span class="hljs-number">0</span>; h &lt; g; h++) n[h] ^= <span class="hljs-number">1549556828</span>, j[h] ^= <span class="hljs-number">909522486</span>;<br>            p.<span class="hljs-property">sigBytes</span> = b.<span class="hljs-property">sigBytes</span> = k;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>;<br>            e.<span class="hljs-title function_">reset</span>();<br>            e.<span class="hljs-title function_">update</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_iKey</span>)<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>.<span class="hljs-title function_">update</span>(e);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>            <span class="hljs-keyword">var</span> d =<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>;<br>            e = d.<span class="hljs-title function_">finalize</span>(e);<br>            d.<span class="hljs-title function_">reset</span>();<br>            <span class="hljs-keyword">return</span> d.<span class="hljs-title function_">finalize</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_oKey</span>.<span class="hljs-title function_">clone</span>().<span class="hljs-title function_">concat</span>(e))<br>        &#125;<br>    &#125;)<br>&#125;)();<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hmac-Ripemd160</title>
    <link href="/posts/f418bd3e/"/>
    <url>/posts/f418bd3e/</url>
    
    <content type="html"><![CDATA[<h2 id="Hmac-Ripemd160加密源码"><a href="#Hmac-Ripemd160加密源码" class="headerlink" title="Hmac-Ripemd160加密源码"></a>Hmac-Ripemd160加密源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">(c) 2012 by C?dric Mesnil. All rights reserved.</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</span><br><span class="hljs-comment">    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">h, j</span>) &#123;<br>    <span class="hljs-keyword">var</span> c = &#123;&#125;, e = c.<span class="hljs-property">lib</span> = &#123;&#125;, A = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, l = e.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                A.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> d = <span class="hljs-keyword">new</span> A;<br>                a &amp;&amp; d.<span class="hljs-title function_">mixIn</span>(a);<br>                d.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (d.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    d.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                d.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = d;<br>                d.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> d<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                a.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(a, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d <span class="hljs-keyword">in</span> a) a.<span class="hljs-title function_">hasOwnProperty</span>(d) &amp;&amp; (<span class="hljs-variable language_">this</span>[d] = a[d]);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = a.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        m = e.<span class="hljs-property">WordArray</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, d</span>) &#123;<br>                a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = a || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = d != j ? d : <span class="hljs-number">4</span> * a.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> (a || x).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, B = a.<span class="hljs-property">words</span>, f = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (f % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">0</span>; b &lt; a; b++) d[f + b &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (B[b &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (b % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((f + b) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; B.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (b = <span class="hljs-number">0</span>; b &lt; a; b += <span class="hljs-number">4</span>) d[f + b &gt;&gt;&gt; <span class="hljs-number">2</span>] = B[b &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> d.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(d, B);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += a;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a[d &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (d % <span class="hljs-number">4</span>);<br>                a.<span class="hljs-property">length</span> = h.<span class="hljs-title function_">ceil</span>(d / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = l.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = [], b = <span class="hljs-number">0</span>; b &lt; a; b += <span class="hljs-number">4</span>) d.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * h.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> m.<span class="hljs-title function_">init</span>(d, a)<br>            &#125;<br>        &#125;), v = c.<span class="hljs-property">enc</span> = &#123;&#125;, x = v.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> d = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], f = <span class="hljs-number">0</span>; f &lt; a; f++) &#123;<br>                    <span class="hljs-keyword">var</span> c = d[f &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    b.<span class="hljs-title function_">push</span>((c &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    b.<span class="hljs-title function_">push</span>((c &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> b.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = a.<span class="hljs-property">length</span>, b = [], f = <span class="hljs-number">0</span>; f &lt; d; f += <span class="hljs-number">2</span>) b[f &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(a.<span class="hljs-title function_">substr</span>(f,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (f % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> m.<span class="hljs-title function_">init</span>(b, d / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, w = v.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> d = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], f = <span class="hljs-number">0</span>; f &lt; a; f++) b.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(d[f &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> b.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = a.<span class="hljs-property">length</span>, c = [], f = <span class="hljs-number">0</span>; f &lt; b; f++) c[f &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a.<span class="hljs-title function_">charCodeAt</span>(f) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> m.<span class="hljs-title function_">init</span>(c, b)<br>            &#125;<br>        &#125;, k = v.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(w.<span class="hljs-title function_">stringify</span>(a)))<br>                &#125; <span class="hljs-keyword">catch</span> (b) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> w.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(a)))<br>            &#125;<br>        &#125;,<br>        u = e.<span class="hljs-property">BufferedBlockAlgorithm</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> m.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = k.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, c = b.<span class="hljs-property">words</span>, f = b.<span class="hljs-property">sigBytes</span>, e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, k = f / (<span class="hljs-number">4</span> * e),<br>                    k = a ? h.<span class="hljs-title function_">ceil</span>(k) : h.<span class="hljs-title function_">max</span>((k | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                a = k * e;<br>                f = h.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * a, f);<br>                <span class="hljs-keyword">if</span> (a) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> u = <span class="hljs-number">0</span>; u &lt; a; u += e) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(c, u);<br>                    u = c.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, a);<br>                    b.<span class="hljs-property">sigBytes</span> -= f<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> m.<span class="hljs-title function_">init</span>(u, f)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = l.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    e.<span class="hljs-property">Hasher</span> = u.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: l.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            u.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, c</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(c)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">d, c</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> b.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    c)).<span class="hljs-title function_">finalize</span>(d)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> b = c.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> c<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> h = <span class="hljs-title class_">CryptoJS</span>, j = h.<span class="hljs-property">lib</span>, c = j.<span class="hljs-property">WordArray</span>, e = j.<span class="hljs-property">Hasher</span>, j = h.<span class="hljs-property">algo</span>,<br>        A = c.<span class="hljs-title function_">create</span>([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">7</span>, <span class="hljs-number">4</span>, <span class="hljs-number">13</span>, <span class="hljs-number">1</span>, <span class="hljs-number">10</span>, <span class="hljs-number">6</span>, <span class="hljs-number">15</span>, <span class="hljs-number">3</span>, <span class="hljs-number">12</span>, <span class="hljs-number">0</span>, <span class="hljs-number">9</span>, <span class="hljs-number">5</span>, <span class="hljs-number">2</span>, <span class="hljs-number">14</span>, <span class="hljs-number">11</span>, <span class="hljs-number">8</span>, <span class="hljs-number">3</span>, <span class="hljs-number">10</span>, <span class="hljs-number">14</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">15</span>, <span class="hljs-number">8</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0</span>, <span class="hljs-number">6</span>, <span class="hljs-number">13</span>, <span class="hljs-number">11</span>, <span class="hljs-number">5</span>, <span class="hljs-number">12</span>, <span class="hljs-number">1</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">10</span>, <span class="hljs-number">0</span>, <span class="hljs-number">8</span>, <span class="hljs-number">12</span>, <span class="hljs-number">4</span>, <span class="hljs-number">13</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>, <span class="hljs-number">15</span>, <span class="hljs-number">14</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">9</span>, <span class="hljs-number">7</span>, <span class="hljs-number">12</span>, <span class="hljs-number">2</span>, <span class="hljs-number">10</span>, <span class="hljs-number">14</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">8</span>, <span class="hljs-number">11</span>, <span class="hljs-number">6</span>, <span class="hljs-number">15</span>, <span class="hljs-number">13</span>]),<br>        l = c.<span class="hljs-title function_">create</span>([<span class="hljs-number">5</span>, <span class="hljs-number">14</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0</span>, <span class="hljs-number">9</span>, <span class="hljs-number">2</span>, <span class="hljs-number">11</span>, <span class="hljs-number">4</span>, <span class="hljs-number">13</span>, <span class="hljs-number">6</span>, <span class="hljs-number">15</span>, <span class="hljs-number">8</span>, <span class="hljs-number">1</span>, <span class="hljs-number">10</span>, <span class="hljs-number">3</span>, <span class="hljs-number">12</span>, <span class="hljs-number">6</span>, <span class="hljs-number">11</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0</span>, <span class="hljs-number">13</span>, <span class="hljs-number">5</span>, <span class="hljs-number">10</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">8</span>, <span class="hljs-number">12</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">15</span>, <span class="hljs-number">5</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>, <span class="hljs-number">14</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">8</span>, <span class="hljs-number">12</span>, <span class="hljs-number">2</span>, <span class="hljs-number">10</span>, <span class="hljs-number">0</span>, <span class="hljs-number">4</span>, <span class="hljs-number">13</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>, <span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">11</span>, <span class="hljs-number">15</span>, <span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">12</span>, <span class="hljs-number">2</span>, <span class="hljs-number">13</span>, <span class="hljs-number">9</span>, <span class="hljs-number">7</span>, <span class="hljs-number">10</span>, <span class="hljs-number">14</span>, <span class="hljs-number">12</span>, <span class="hljs-number">15</span>, <span class="hljs-number">10</span>, <span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>, <span class="hljs-number">6</span>, <span class="hljs-number">2</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>]),<br>        m = c.<span class="hljs-title function_">create</span>([<span class="hljs-number">11</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">12</span>,<br>            <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>, <span class="hljs-number">13</span>, <span class="hljs-number">11</span>, <span class="hljs-number">9</span>, <span class="hljs-number">7</span>, <span class="hljs-number">15</span>, <span class="hljs-number">7</span>, <span class="hljs-number">12</span>, <span class="hljs-number">15</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">7</span>, <span class="hljs-number">13</span>, <span class="hljs-number">12</span>, <span class="hljs-number">11</span>, <span class="hljs-number">13</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">14</span>, <span class="hljs-number">9</span>, <span class="hljs-number">13</span>, <span class="hljs-number">15</span>, <span class="hljs-number">14</span>, <span class="hljs-number">8</span>, <span class="hljs-number">13</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>, <span class="hljs-number">12</span>, <span class="hljs-number">7</span>, <span class="hljs-number">5</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">9</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">14</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>, <span class="hljs-number">12</span>, <span class="hljs-number">9</span>, <span class="hljs-number">15</span>, <span class="hljs-number">5</span>, <span class="hljs-number">11</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>, <span class="hljs-number">13</span>, <span class="hljs-number">12</span>, <span class="hljs-number">5</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">11</span>, <span class="hljs-number">8</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>]),<br>        v = c.<span class="hljs-title function_">create</span>([<span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">13</span>, <span class="hljs-number">15</span>, <span class="hljs-number">15</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">11</span>, <span class="hljs-number">14</span>, <span class="hljs-number">14</span>, <span class="hljs-number">12</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">13</span>, <span class="hljs-number">15</span>, <span class="hljs-number">7</span>, <span class="hljs-number">12</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">12</span>, <span class="hljs-number">7</span>, <span class="hljs-number">6</span>, <span class="hljs-number">15</span>, <span class="hljs-number">13</span>, <span class="hljs-number">11</span>, <span class="hljs-number">9</span>, <span class="hljs-number">7</span>, <span class="hljs-number">15</span>, <span class="hljs-number">11</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>, <span class="hljs-number">14</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">5</span>, <span class="hljs-number">14</span>, <span class="hljs-number">13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">7</span>, <span class="hljs-number">5</span>, <span class="hljs-number">15</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">11</span>, <span class="hljs-number">14</span>, <span class="hljs-number">14</span>, <span class="hljs-number">6</span>, <span class="hljs-number">14</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">12</span>, <span class="hljs-number">9</span>, <span class="hljs-number">12</span>, <span class="hljs-number">5</span>, <span class="hljs-number">15</span>, <span class="hljs-number">8</span>, <span class="hljs-number">8</span>, <span class="hljs-number">5</span>, <span class="hljs-number">12</span>, <span class="hljs-number">9</span>, <span class="hljs-number">12</span>, <span class="hljs-number">5</span>, <span class="hljs-number">14</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>, <span class="hljs-number">13</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>, <span class="hljs-number">15</span>, <span class="hljs-number">13</span>, <span class="hljs-number">11</span>, <span class="hljs-number">11</span>]),<br>        x = c.<span class="hljs-title function_">create</span>([<span class="hljs-number">0</span>, <span class="hljs-number">1518500249</span>, <span class="hljs-number">1859775393</span>, <span class="hljs-number">2400959708</span>, <span class="hljs-number">2840853838</span>]),<br>        w = c.<span class="hljs-title function_">create</span>([<span class="hljs-number">1352829926</span>, <span class="hljs-number">1548603684</span>, <span class="hljs-number">1836072691</span>,<br>            <span class="hljs-number">2053994217</span>, <span class="hljs-number">0</span>]), j = j.<span class="hljs-property">RIPEMD160</span> = e.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = c.<span class="hljs-title function_">create</span>([<span class="hljs-number">1732584193</span>, <span class="hljs-number">4023233417</span>, <span class="hljs-number">2562383102</span>, <span class="hljs-number">271733878</span>, <span class="hljs-number">3285377520</span>])<br>            &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c, e</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">0</span>; <span class="hljs-number">16</span> &gt; b; b++) &#123;<br>                    <span class="hljs-keyword">var</span> a = e + b, d = c[a];<br>                    c[a] = (d &lt;&lt; <span class="hljs-number">8</span> | d &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (d &lt;&lt; <span class="hljs-number">24</span> | d &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span><br>                &#125;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>, d = x.<span class="hljs-property">words</span>, h = w.<span class="hljs-property">words</span>, f = A.<span class="hljs-property">words</span>, j = l.<span class="hljs-property">words</span>, E = m.<span class="hljs-property">words</span>, F = v.<span class="hljs-property">words</span>, C,<br>                    n, p, q, y, D, r, s, t, z;<br>                D = C = a[<span class="hljs-number">0</span>];<br>                r = n = a[<span class="hljs-number">1</span>];<br>                s = p = a[<span class="hljs-number">2</span>];<br>                t = q = a[<span class="hljs-number">3</span>];<br>                z = y = a[<span class="hljs-number">4</span>];<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> g, b = <span class="hljs-number">0</span>; <span class="hljs-number">80</span> &gt; b; b += <span class="hljs-number">1</span>) g = C + c[e + f[b]] | <span class="hljs-number">0</span>, g = <span class="hljs-number">16</span> &gt; b ? g + ((n ^ p ^ q) + d[<span class="hljs-number">0</span>]) : <span class="hljs-number">32</span> &gt; b ? g + ((n &amp; p | ~n &amp; q) + d[<span class="hljs-number">1</span>]) : <span class="hljs-number">48</span> &gt; b ?<br>                    g + (((n | ~p) ^ q) + d[<span class="hljs-number">2</span>]) : <span class="hljs-number">64</span> &gt; b ? g + ((n &amp; q | p &amp; ~q) + d[<span class="hljs-number">3</span>]) : g + ((n ^ (p | ~q)) + d[<span class="hljs-number">4</span>]), g |= <span class="hljs-number">0</span>, g = g &lt;&lt; E[b] | g &gt;&gt;&gt; <span class="hljs-number">32</span> - E[b], g = g + y | <span class="hljs-number">0</span>, C = y, y = q, q = p &lt;&lt; <span class="hljs-number">10</span> | p &gt;&gt;&gt; <span class="hljs-number">22</span>, p = n, n = g, g = D + c[e + j[b]] | <span class="hljs-number">0</span>, g = <span class="hljs-number">16</span> &gt; b ? g + ((r ^ (s | ~t)) + h[<span class="hljs-number">0</span>]) : <span class="hljs-number">32</span> &gt; b ? g + ((r &amp; t | s &amp; ~t) + h[<span class="hljs-number">1</span>]) : <span class="hljs-number">48</span> &gt; b ? g + (((r | ~s) ^ t) + h[<span class="hljs-number">2</span>]) : <span class="hljs-number">64</span> &gt; b ? g + ((r &amp; s | ~r &amp; t) + h[<span class="hljs-number">3</span>]) : g + ((r ^ s ^ t) + h[<span class="hljs-number">4</span>]), g |= <span class="hljs-number">0</span>, g = g &lt;&lt; F[b] | g &gt;&gt;&gt; <span class="hljs-number">32</span> - F[b], g = g + z | <span class="hljs-number">0</span>, D = z, z = t, t = s &lt;&lt; <span class="hljs-number">10</span> | s &gt;&gt;&gt; <span class="hljs-number">22</span>, s = r, r = g;<br>                g = a[<span class="hljs-number">1</span>] + p + t | <span class="hljs-number">0</span>;<br>                a[<span class="hljs-number">1</span>] = a[<span class="hljs-number">2</span>] + q + z | <span class="hljs-number">0</span>;<br>                a[<span class="hljs-number">2</span>] = a[<span class="hljs-number">3</span>] + y + D | <span class="hljs-number">0</span>;<br>                a[<span class="hljs-number">3</span>] = a[<span class="hljs-number">4</span>] + C + r | <span class="hljs-number">0</span>;<br>                a[<span class="hljs-number">4</span>] = a[<span class="hljs-number">0</span>] + n + s | <span class="hljs-number">0</span>;<br>                a[<span class="hljs-number">0</span>] = g<br>            &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, e = c.<span class="hljs-property">words</span>, b = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, a = <span class="hljs-number">8</span> * c.<span class="hljs-property">sigBytes</span>;<br>                e[a &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - a % <span class="hljs-number">32</span>;<br>                e[(a + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">14</span>] = (b &lt;&lt; <span class="hljs-number">8</span> | b &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (b &lt;&lt; <span class="hljs-number">24</span> | b &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>                c.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * (e.<span class="hljs-property">length</span> + <span class="hljs-number">1</span>);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>                c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>;<br>                e = c.<span class="hljs-property">words</span>;<br>                <span class="hljs-keyword">for</span> (b = <span class="hljs-number">0</span>; <span class="hljs-number">5</span> &gt; b; b++) a = e[b], e[b] = (a &lt;&lt; <span class="hljs-number">8</span> | a &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (a &lt;&lt; <span class="hljs-number">24</span> | a &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>                <span class="hljs-keyword">return</span> c<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> c = e.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                c.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> c<br>            &#125;<br>        &#125;);<br>    h.<span class="hljs-property">RIPEMD160</span> = e.<span class="hljs-title function_">_createHelper</span>(j);<br>    h.<span class="hljs-property">HmacRIPEMD160</span> = e.<span class="hljs-title function_">_createHmacHelper</span>(j)<br>&#125;)(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> h = <span class="hljs-title class_">CryptoJS</span>, j = h.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>;<br>    h.<span class="hljs-property">algo</span>.<span class="hljs-property">HMAC</span> = h.<span class="hljs-property">lib</span>.<span class="hljs-property">Base</span>.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c, e</span>) &#123;<br>            c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span> = <span class="hljs-keyword">new</span> c.<span class="hljs-property">init</span>;<br>            <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> e &amp;&amp; (e = j.<span class="hljs-title function_">parse</span>(e));<br>            <span class="hljs-keyword">var</span> h = c.<span class="hljs-property">blockSize</span>, l = <span class="hljs-number">4</span> * h;<br>            e.<span class="hljs-property">sigBytes</span> &gt; l &amp;&amp; (e = c.<span class="hljs-title function_">finalize</span>(e));<br>            e.<span class="hljs-title function_">clamp</span>();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> m = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_oKey</span> = e.<span class="hljs-title function_">clone</span>(), v = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iKey</span> = e.<span class="hljs-title function_">clone</span>(), x = m.<span class="hljs-property">words</span>, w = v.<span class="hljs-property">words</span>, k = <span class="hljs-number">0</span>; k &lt; h; k++) x[k] ^= <span class="hljs-number">1549556828</span>, w[k] ^= <span class="hljs-number">909522486</span>;<br>            m.<span class="hljs-property">sigBytes</span> = v.<span class="hljs-property">sigBytes</span> = l;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>;<br>            c.<span class="hljs-title function_">reset</span>();<br>            c.<span class="hljs-title function_">update</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_iKey</span>)<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>.<span class="hljs-title function_">update</span>(c);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>            <span class="hljs-keyword">var</span> e =<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>;<br>            c = e.<span class="hljs-title function_">finalize</span>(c);<br>            e.<span class="hljs-title function_">reset</span>();<br>            <span class="hljs-keyword">return</span> e.<span class="hljs-title function_">finalize</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_oKey</span>.<span class="hljs-title function_">clone</span>().<span class="hljs-title function_">concat</span>(c))<br>        &#125;<br>    &#125;)<br>&#125;)();<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hmac-Md5</title>
    <link href="/posts/cf05c6c0/"/>
    <url>/posts/cf05c6c0/</url>
    
    <content type="html"><![CDATA[<h2 id="Hmac-Md5加密源码"><a href="#Hmac-Md5加密源码" class="headerlink" title="Hmac-Md5加密源码"></a>Hmac-Md5加密源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">q, r</span>) &#123;<br>    <span class="hljs-keyword">var</span> k = &#123;&#125;, g = k.<span class="hljs-property">lib</span> = &#123;&#125;, p = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, t = g.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                p.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> j = <span class="hljs-keyword">new</span> p;<br>                b &amp;&amp; j.<span class="hljs-title function_">mixIn</span>(b);<br>                j.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (j.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    j.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                j.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = j;<br>                j.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> j<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                b.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(b, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> b<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j <span class="hljs-keyword">in</span> b) b.<span class="hljs-title function_">hasOwnProperty</span>(j) &amp;&amp; (<span class="hljs-variable language_">this</span>[j] = b[j]);<br>                b.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = b.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        n = g.<span class="hljs-property">WordArray</span> = t.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, j</span>) &#123;<br>                b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = b || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = j != r ? j : <span class="hljs-number">4</span> * b.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">return</span> (b || u).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">var</span> j = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, a = b.<span class="hljs-property">words</span>, l = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                b = b.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (l % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> h = <span class="hljs-number">0</span>; h &lt; b; h++) j[l + h &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a[h &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (h % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((l + h) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; a.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (h = <span class="hljs-number">0</span>; h &lt; b; h += <span class="hljs-number">4</span>) j[l + h &gt;&gt;&gt; <span class="hljs-number">2</span>] = a[h &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> j.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(j, a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += b;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, j = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                b[j &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>);<br>                b.<span class="hljs-property">length</span> = q.<span class="hljs-title function_">ceil</span>(j / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> b = t.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                b.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> b<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = [], a = <span class="hljs-number">0</span>; a &lt; b; a += <span class="hljs-number">4</span>) j.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * q.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> n.<span class="hljs-title function_">init</span>(j, b)<br>            &#125;<br>        &#125;), v = k.<span class="hljs-property">enc</span> = &#123;&#125;, u = v.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">var</span> a = b.<span class="hljs-property">words</span>;<br>                b = b.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> h = [], l = <span class="hljs-number">0</span>; l &lt; b; l++) &#123;<br>                    <span class="hljs-keyword">var</span> m = a[l &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (l % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    h.<span class="hljs-title function_">push</span>((m &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    h.<span class="hljs-title function_">push</span>((m &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> h.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = b.<span class="hljs-property">length</span>, h = [], l = <span class="hljs-number">0</span>; l &lt; a; l += <span class="hljs-number">2</span>) h[l &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(b.<span class="hljs-title function_">substr</span>(l,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (l % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> n.<span class="hljs-title function_">init</span>(h, a / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, a = v.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">var</span> a = b.<span class="hljs-property">words</span>;<br>                b = b.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> h = [], l = <span class="hljs-number">0</span>; l &lt; b; l++) h.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(a[l &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (l % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> h.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = b.<span class="hljs-property">length</span>, h = [], l = <span class="hljs-number">0</span>; l &lt; a; l++) h[l &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (b.<span class="hljs-title function_">charCodeAt</span>(l) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (l % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> n.<span class="hljs-title function_">init</span>(h, a)<br>            &#125;<br>        &#125;, s = v.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(a.<span class="hljs-title function_">stringify</span>(b)))<br>                &#125; <span class="hljs-keyword">catch</span> (h) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">return</span> a.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(b)))<br>            &#125;<br>        &#125;,<br>        h = g.<span class="hljs-property">BufferedBlockAlgorithm</span> = t.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> n.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> b &amp;&amp; (b = s.<span class="hljs-title function_">parse</span>(b));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(b);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += b.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, h = a.<span class="hljs-property">words</span>, l = a.<span class="hljs-property">sigBytes</span>, m = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, k = l / (<span class="hljs-number">4</span> * m),<br>                    k = b ? q.<span class="hljs-title function_">ceil</span>(k) : q.<span class="hljs-title function_">max</span>((k | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                b = k * m;<br>                l = q.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * b, l);<br>                <span class="hljs-keyword">if</span> (b) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> g = <span class="hljs-number">0</span>; g &lt; b; g += m) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(h, g);<br>                    g = h.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, b);<br>                    a.<span class="hljs-property">sigBytes</span> -= l<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> n.<span class="hljs-title function_">init</span>(g, l)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> b = t.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                b.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> b<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    g.<span class="hljs-property">Hasher</span> = h.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: t.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(b);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            h.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(b);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            b &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(b);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">a, h</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> b.<span class="hljs-title function_">init</span>(h)).<span class="hljs-title function_">finalize</span>(a)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">a, h</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> m.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(b,<br>                    h)).<span class="hljs-title function_">finalize</span>(a)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> m = k.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> k<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">q</span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">r</span>(<span class="hljs-params">a, m, b, j, g, l, k</span>) &#123;<br>        a = a + (m &amp; b | ~m &amp; j) + g + k;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; l | a &gt;&gt;&gt; <span class="hljs-number">32</span> - l) + m<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">k</span>(<span class="hljs-params">a, m, b, j, g, l, k</span>) &#123;<br>        a = a + (m &amp; j | b &amp; ~j) + g + k;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; l | a &gt;&gt;&gt; <span class="hljs-number">32</span> - l) + m<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">g</span>(<span class="hljs-params">a, m, b, j, g, l, k</span>) &#123;<br>        a = a + (m ^ b ^ j) + g + k;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; l | a &gt;&gt;&gt; <span class="hljs-number">32</span> - l) + m<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">p</span>(<span class="hljs-params">a, g, b, j, k, l, p</span>) &#123;<br>        a = a + (b ^ (g | ~j)) + k + p;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; l | a &gt;&gt;&gt; <span class="hljs-number">32</span> - l) + g<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = <span class="hljs-title class_">CryptoJS</span>, n = t.<span class="hljs-property">lib</span>, v = n.<span class="hljs-property">WordArray</span>, u = n.<span class="hljs-property">Hasher</span>, n = t.<span class="hljs-property">algo</span>, a = [], s = <span class="hljs-number">0</span>; <span class="hljs-number">64</span> &gt; s; s++) a[s] = <span class="hljs-number">4294967296</span> * q.<span class="hljs-title function_">abs</span>(q.<span class="hljs-title function_">sin</span>(s + <span class="hljs-number">1</span>)) | <span class="hljs-number">0</span>;<br>    n = n.<span class="hljs-property">MD5</span> = u.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> v.<span class="hljs-title function_">init</span>([<span class="hljs-number">1732584193</span>, <span class="hljs-number">4023233417</span>, <span class="hljs-number">2562383102</span>, <span class="hljs-number">271733878</span>])<br>        &#125;,<br>        <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">h, m</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">0</span>; <span class="hljs-number">16</span> &gt; b; b++) &#123;<br>                <span class="hljs-keyword">var</span> j = m + b, n = h[j];<br>                h[j] = (n &lt;&lt; <span class="hljs-number">8</span> | n &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (n &lt;&lt; <span class="hljs-number">24</span> | n &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span><br>            &#125;<br>            <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>, j = h[m + <span class="hljs-number">0</span>], n = h[m + <span class="hljs-number">1</span>], l = h[m + <span class="hljs-number">2</span>], q = h[m + <span class="hljs-number">3</span>], t = h[m + <span class="hljs-number">4</span>],<br>                s = h[m + <span class="hljs-number">5</span>], u = h[m + <span class="hljs-number">6</span>], v = h[m + <span class="hljs-number">7</span>], w = h[m + <span class="hljs-number">8</span>], x = h[m + <span class="hljs-number">9</span>], y = h[m + <span class="hljs-number">10</span>], z = h[m + <span class="hljs-number">11</span>],<br>                A = h[m + <span class="hljs-number">12</span>], B = h[m + <span class="hljs-number">13</span>], C = h[m + <span class="hljs-number">14</span>], D = h[m + <span class="hljs-number">15</span>], c = b[<span class="hljs-number">0</span>], d = b[<span class="hljs-number">1</span>], e = b[<span class="hljs-number">2</span>], f = b[<span class="hljs-number">3</span>],<br>                c = <span class="hljs-title function_">r</span>(c, d, e, f, j, <span class="hljs-number">7</span>, a[<span class="hljs-number">0</span>]), f = <span class="hljs-title function_">r</span>(f, c, d, e, n, <span class="hljs-number">12</span>, a[<span class="hljs-number">1</span>]), e = <span class="hljs-title function_">r</span>(e, f, c, d, l, <span class="hljs-number">17</span>, a[<span class="hljs-number">2</span>]),<br>                d = <span class="hljs-title function_">r</span>(d, e, f, c, q, <span class="hljs-number">22</span>, a[<span class="hljs-number">3</span>]), c = <span class="hljs-title function_">r</span>(c, d, e, f, t, <span class="hljs-number">7</span>, a[<span class="hljs-number">4</span>]), f = <span class="hljs-title function_">r</span>(f, c, d, e, s, <span class="hljs-number">12</span>, a[<span class="hljs-number">5</span>]),<br>                e = <span class="hljs-title function_">r</span>(e, f, c, d, u, <span class="hljs-number">17</span>, a[<span class="hljs-number">6</span>]), d = <span class="hljs-title function_">r</span>(d, e, f, c, v, <span class="hljs-number">22</span>, a[<span class="hljs-number">7</span>]),<br>                c = <span class="hljs-title function_">r</span>(c, d, e, f, w, <span class="hljs-number">7</span>, a[<span class="hljs-number">8</span>]), f = <span class="hljs-title function_">r</span>(f, c, d, e, x, <span class="hljs-number">12</span>, a[<span class="hljs-number">9</span>]), e = <span class="hljs-title function_">r</span>(e, f, c, d, y, <span class="hljs-number">17</span>, a[<span class="hljs-number">10</span>]),<br>                d = <span class="hljs-title function_">r</span>(d, e, f, c, z, <span class="hljs-number">22</span>, a[<span class="hljs-number">11</span>]), c = <span class="hljs-title function_">r</span>(c, d, e, f, A, <span class="hljs-number">7</span>, a[<span class="hljs-number">12</span>]), f = <span class="hljs-title function_">r</span>(f, c, d, e, B, <span class="hljs-number">12</span>, a[<span class="hljs-number">13</span>]),<br>                e = <span class="hljs-title function_">r</span>(e, f, c, d, C, <span class="hljs-number">17</span>, a[<span class="hljs-number">14</span>]), d = <span class="hljs-title function_">r</span>(d, e, f, c, D, <span class="hljs-number">22</span>, a[<span class="hljs-number">15</span>]), c = <span class="hljs-title function_">k</span>(c, d, e, f, n, <span class="hljs-number">5</span>, a[<span class="hljs-number">16</span>]),<br>                f = <span class="hljs-title function_">k</span>(f, c, d, e, u, <span class="hljs-number">9</span>, a[<span class="hljs-number">17</span>]), e = <span class="hljs-title function_">k</span>(e, f, c, d, z, <span class="hljs-number">14</span>, a[<span class="hljs-number">18</span>]), d = <span class="hljs-title function_">k</span>(d, e, f, c, j, <span class="hljs-number">20</span>, a[<span class="hljs-number">19</span>]),<br>                c = <span class="hljs-title function_">k</span>(c, d, e, f, s, <span class="hljs-number">5</span>, a[<span class="hljs-number">20</span>]), f = <span class="hljs-title function_">k</span>(f, c, d, e, y, <span class="hljs-number">9</span>, a[<span class="hljs-number">21</span>]), e = <span class="hljs-title function_">k</span>(e, f, c, d, D, <span class="hljs-number">14</span>, a[<span class="hljs-number">22</span>]),<br>                d = <span class="hljs-title function_">k</span>(d, e, f, c, t, <span class="hljs-number">20</span>, a[<span class="hljs-number">23</span>]), c = <span class="hljs-title function_">k</span>(c, d, e, f, x, <span class="hljs-number">5</span>, a[<span class="hljs-number">24</span>]), f = <span class="hljs-title function_">k</span>(f, c, d, e, C, <span class="hljs-number">9</span>, a[<span class="hljs-number">25</span>]),<br>                e = <span class="hljs-title function_">k</span>(e, f, c, d, q, <span class="hljs-number">14</span>, a[<span class="hljs-number">26</span>]), d = <span class="hljs-title function_">k</span>(d, e, f, c, w, <span class="hljs-number">20</span>, a[<span class="hljs-number">27</span>]), c = <span class="hljs-title function_">k</span>(c, d, e, f, B, <span class="hljs-number">5</span>, a[<span class="hljs-number">28</span>]),<br>                f = <span class="hljs-title function_">k</span>(f, c,<br>                    d, e, l, <span class="hljs-number">9</span>, a[<span class="hljs-number">29</span>]), e = <span class="hljs-title function_">k</span>(e, f, c, d, v, <span class="hljs-number">14</span>, a[<span class="hljs-number">30</span>]), d = <span class="hljs-title function_">k</span>(d, e, f, c, A, <span class="hljs-number">20</span>, a[<span class="hljs-number">31</span>]),<br>                c = <span class="hljs-title function_">g</span>(c, d, e, f, s, <span class="hljs-number">4</span>, a[<span class="hljs-number">32</span>]), f = <span class="hljs-title function_">g</span>(f, c, d, e, w, <span class="hljs-number">11</span>, a[<span class="hljs-number">33</span>]), e = <span class="hljs-title function_">g</span>(e, f, c, d, z, <span class="hljs-number">16</span>, a[<span class="hljs-number">34</span>]),<br>                d = <span class="hljs-title function_">g</span>(d, e, f, c, C, <span class="hljs-number">23</span>, a[<span class="hljs-number">35</span>]), c = <span class="hljs-title function_">g</span>(c, d, e, f, n, <span class="hljs-number">4</span>, a[<span class="hljs-number">36</span>]), f = <span class="hljs-title function_">g</span>(f, c, d, e, t, <span class="hljs-number">11</span>, a[<span class="hljs-number">37</span>]),<br>                e = <span class="hljs-title function_">g</span>(e, f, c, d, v, <span class="hljs-number">16</span>, a[<span class="hljs-number">38</span>]), d = <span class="hljs-title function_">g</span>(d, e, f, c, y, <span class="hljs-number">23</span>, a[<span class="hljs-number">39</span>]), c = <span class="hljs-title function_">g</span>(c, d, e, f, B, <span class="hljs-number">4</span>, a[<span class="hljs-number">40</span>]),<br>                f = <span class="hljs-title function_">g</span>(f, c, d, e, j, <span class="hljs-number">11</span>, a[<span class="hljs-number">41</span>]), e = <span class="hljs-title function_">g</span>(e, f, c, d, q, <span class="hljs-number">16</span>, a[<span class="hljs-number">42</span>]), d = <span class="hljs-title function_">g</span>(d, e, f, c, u, <span class="hljs-number">23</span>, a[<span class="hljs-number">43</span>]),<br>                c = <span class="hljs-title function_">g</span>(c, d, e, f, x, <span class="hljs-number">4</span>, a[<span class="hljs-number">44</span>]), f = <span class="hljs-title function_">g</span>(f, c, d, e, A, <span class="hljs-number">11</span>, a[<span class="hljs-number">45</span>]), e = <span class="hljs-title function_">g</span>(e, f, c, d, D, <span class="hljs-number">16</span>, a[<span class="hljs-number">46</span>]),<br>                d = <span class="hljs-title function_">g</span>(d, e, f, c, l, <span class="hljs-number">23</span>, a[<span class="hljs-number">47</span>]), c = <span class="hljs-title function_">p</span>(c, d, e, f, j, <span class="hljs-number">6</span>, a[<span class="hljs-number">48</span>]), f = <span class="hljs-title function_">p</span>(f, c, d, e, v, <span class="hljs-number">10</span>, a[<span class="hljs-number">49</span>]),<br>                e = <span class="hljs-title function_">p</span>(e, f, c, d,<br>                    C, <span class="hljs-number">15</span>, a[<span class="hljs-number">50</span>]), d = <span class="hljs-title function_">p</span>(d, e, f, c, s, <span class="hljs-number">21</span>, a[<span class="hljs-number">51</span>]), c = <span class="hljs-title function_">p</span>(c, d, e, f, A, <span class="hljs-number">6</span>, a[<span class="hljs-number">52</span>]),<br>                f = <span class="hljs-title function_">p</span>(f, c, d, e, q, <span class="hljs-number">10</span>, a[<span class="hljs-number">53</span>]), e = <span class="hljs-title function_">p</span>(e, f, c, d, y, <span class="hljs-number">15</span>, a[<span class="hljs-number">54</span>]), d = <span class="hljs-title function_">p</span>(d, e, f, c, n, <span class="hljs-number">21</span>, a[<span class="hljs-number">55</span>]),<br>                c = <span class="hljs-title function_">p</span>(c, d, e, f, w, <span class="hljs-number">6</span>, a[<span class="hljs-number">56</span>]), f = <span class="hljs-title function_">p</span>(f, c, d, e, D, <span class="hljs-number">10</span>, a[<span class="hljs-number">57</span>]), e = <span class="hljs-title function_">p</span>(e, f, c, d, u, <span class="hljs-number">15</span>, a[<span class="hljs-number">58</span>]),<br>                d = <span class="hljs-title function_">p</span>(d, e, f, c, B, <span class="hljs-number">21</span>, a[<span class="hljs-number">59</span>]), c = <span class="hljs-title function_">p</span>(c, d, e, f, t, <span class="hljs-number">6</span>, a[<span class="hljs-number">60</span>]), f = <span class="hljs-title function_">p</span>(f, c, d, e, z, <span class="hljs-number">10</span>, a[<span class="hljs-number">61</span>]),<br>                e = <span class="hljs-title function_">p</span>(e, f, c, d, l, <span class="hljs-number">15</span>, a[<span class="hljs-number">62</span>]), d = <span class="hljs-title function_">p</span>(d, e, f, c, x, <span class="hljs-number">21</span>, a[<span class="hljs-number">63</span>]);<br>            b[<span class="hljs-number">0</span>] = b[<span class="hljs-number">0</span>] + c | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">1</span>] = b[<span class="hljs-number">1</span>] + d | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">2</span>] = b[<span class="hljs-number">2</span>] + e | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">3</span>] = b[<span class="hljs-number">3</span>] + f | <span class="hljs-number">0</span><br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, g = a.<span class="hljs-property">words</span>, b = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, j = <span class="hljs-number">8</span> * a.<span class="hljs-property">sigBytes</span>;<br>            g[j &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - j % <span class="hljs-number">32</span>;<br>            <span class="hljs-keyword">var</span> k = q.<span class="hljs-title function_">floor</span>(b /<br>                <span class="hljs-number">4294967296</span>);<br>            g[(j + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">15</span>] = (k &lt;&lt; <span class="hljs-number">8</span> | k &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (k &lt;&lt; <span class="hljs-number">24</span> | k &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            g[(j + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">14</span>] = (b &lt;&lt; <span class="hljs-number">8</span> | b &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (b &lt;&lt; <span class="hljs-number">24</span> | b &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * (g.<span class="hljs-property">length</span> + <span class="hljs-number">1</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>;<br>            g = a.<span class="hljs-property">words</span>;<br>            <span class="hljs-keyword">for</span> (b = <span class="hljs-number">0</span>; <span class="hljs-number">4</span> &gt; b; b++) j = g[b], g[b] = (j &lt;&lt; <span class="hljs-number">8</span> | j &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (j &lt;&lt; <span class="hljs-number">24</span> | j &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            <span class="hljs-keyword">return</span> a<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = u.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            a.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> a<br>        &#125;<br>    &#125;);<br>    t.<span class="hljs-property">MD5</span> = u.<span class="hljs-title function_">_createHelper</span>(n);<br>    t.<span class="hljs-property">HmacMD5</span> = u.<span class="hljs-title function_">_createHmacHelper</span>(n)<br>&#125;)(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> q = <span class="hljs-title class_">CryptoJS</span>, r = q.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>;<br>    q.<span class="hljs-property">algo</span>.<span class="hljs-property">HMAC</span> = q.<span class="hljs-property">lib</span>.<span class="hljs-property">Base</span>.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">k, g</span>) &#123;<br>            k = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span> = <span class="hljs-keyword">new</span> k.<span class="hljs-property">init</span>;<br>            <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> g &amp;&amp; (g = r.<span class="hljs-title function_">parse</span>(g));<br>            <span class="hljs-keyword">var</span> p = k.<span class="hljs-property">blockSize</span>, q = <span class="hljs-number">4</span> * p;<br>            g.<span class="hljs-property">sigBytes</span> &gt; q &amp;&amp; (g = k.<span class="hljs-title function_">finalize</span>(g));<br>            g.<span class="hljs-title function_">clamp</span>();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> n = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_oKey</span> = g.<span class="hljs-title function_">clone</span>(), v = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iKey</span> = g.<span class="hljs-title function_">clone</span>(), u = n.<span class="hljs-property">words</span>, a = v.<span class="hljs-property">words</span>, s = <span class="hljs-number">0</span>; s &lt; p; s++) u[s] ^= <span class="hljs-number">1549556828</span>, a[s] ^= <span class="hljs-number">909522486</span>;<br>            n.<span class="hljs-property">sigBytes</span> = v.<span class="hljs-property">sigBytes</span> = q;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> k = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>;<br>            k.<span class="hljs-title function_">reset</span>();<br>            k.<span class="hljs-title function_">update</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_iKey</span>)<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">k</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>.<span class="hljs-title function_">update</span>(k);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">k</span>) &#123;<br>            <span class="hljs-keyword">var</span> g =<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>;<br>            k = g.<span class="hljs-title function_">finalize</span>(k);<br>            g.<span class="hljs-title function_">reset</span>();<br>            <span class="hljs-keyword">return</span> g.<span class="hljs-title function_">finalize</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_oKey</span>.<span class="hljs-title function_">clone</span>().<span class="hljs-title function_">concat</span>(k))<br>        &#125;<br>    &#125;)<br>&#125;)();<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AES</title>
    <link href="/posts/6e9c5cdb/"/>
    <url>/posts/6e9c5cdb/</url>
    
    <content type="html"><![CDATA[<h3 id="AES加密源码"><a href="#AES加密源码" class="headerlink" title="AES加密源码"></a>AES加密源码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">u, p</span>) &#123;<br>    <span class="hljs-keyword">var</span> d = &#123;&#125;, l = d.<span class="hljs-property">lib</span> = &#123;&#125;, s = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, t = l.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                s.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-keyword">new</span> s;<br>                a &amp;&amp; c.<span class="hljs-title function_">mixIn</span>(a);<br>                c.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (c.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    c.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                c.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = c;<br>                c.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> c<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                a.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(a, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c <span class="hljs-keyword">in</span> a) a.<span class="hljs-title function_">hasOwnProperty</span>(c) &amp;&amp; (<span class="hljs-variable language_">this</span>[c] = a[c]);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = a.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        r = l.<span class="hljs-property">WordArray</span> = t.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, c</span>) &#123;<br>                a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = a || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = c != p ? c : <span class="hljs-number">4</span> * a.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> (a || v).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, e = a.<span class="hljs-property">words</span>, j = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (j % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> k = <span class="hljs-number">0</span>; k &lt; a; k++) c[j + k &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (e[k &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (k % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((j + k) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; e.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (k = <span class="hljs-number">0</span>; k &lt; a; k += <span class="hljs-number">4</span>) c[j + k &gt;&gt;&gt; <span class="hljs-number">2</span>] = e[k &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> c.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(c, e);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += a;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a[c &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (c % <span class="hljs-number">4</span>);<br>                a.<span class="hljs-property">length</span> = u.<span class="hljs-title function_">ceil</span>(c / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = t.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = [], e = <span class="hljs-number">0</span>; e &lt; a; e += <span class="hljs-number">4</span>) c.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * u.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> r.<span class="hljs-title function_">init</span>(c, a)<br>            &#125;<br>        &#125;), w = d.<span class="hljs-property">enc</span> = &#123;&#125;, v = w.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = [], j = <span class="hljs-number">0</span>; j &lt; a; j++) &#123;<br>                    <span class="hljs-keyword">var</span> k = c[j &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    e.<span class="hljs-title function_">push</span>((k &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    e.<span class="hljs-title function_">push</span>((k &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> e.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">length</span>, e = [], j = <span class="hljs-number">0</span>; j &lt; c; j += <span class="hljs-number">2</span>) e[j &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(a.<span class="hljs-title function_">substr</span>(j,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (j % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> r.<span class="hljs-title function_">init</span>(e, c / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, b = w.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = [], j = <span class="hljs-number">0</span>; j &lt; a; j++) e.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(c[j &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> e.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">length</span>, e = [], j = <span class="hljs-number">0</span>; j &lt; c; j++) e[j &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a.<span class="hljs-title function_">charCodeAt</span>(j) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> r.<span class="hljs-title function_">init</span>(e, c)<br>            &#125;<br>        &#125;, x = w.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(b.<span class="hljs-title function_">stringify</span>(a)))<br>                &#125; <span class="hljs-keyword">catch</span> (c) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> b.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(a)))<br>            &#125;<br>        &#125;,<br>        q = l.<span class="hljs-property">BufferedBlockAlgorithm</span> = t.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> r.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = x.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, e = c.<span class="hljs-property">words</span>, j = c.<span class="hljs-property">sigBytes</span>, k = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, b = j / (<span class="hljs-number">4</span> * k),<br>                    b = a ? u.<span class="hljs-title function_">ceil</span>(b) : u.<span class="hljs-title function_">max</span>((b | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                a = b * k;<br>                j = u.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * a, j);<br>                <span class="hljs-keyword">if</span> (a) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> q = <span class="hljs-number">0</span>; q &lt; a; q += k) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(e, q);<br>                    q = e.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, a);<br>                    c.<span class="hljs-property">sigBytes</span> -= j<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> r.<span class="hljs-title function_">init</span>(q, j)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = t.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    l.<span class="hljs-property">Hasher</span> = q.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: t.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            q.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, e</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(e)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, e</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> n.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    e)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> n = d.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> d<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> u = <span class="hljs-title class_">CryptoJS</span>, p = u.<span class="hljs-property">lib</span>.<span class="hljs-property">WordArray</span>;<br>    u.<span class="hljs-property">enc</span>.<span class="hljs-property">Base64</span> = &#123;<br>        <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">d</span>) &#123;<br>            <span class="hljs-keyword">var</span> l = d.<span class="hljs-property">words</span>, p = d.<span class="hljs-property">sigBytes</span>, t = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_map</span>;<br>            d.<span class="hljs-title function_">clamp</span>();<br>            d = [];<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> r = <span class="hljs-number">0</span>; r &lt; p; r += <span class="hljs-number">3</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> w = (l[r &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (r % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">16</span> | (l[r + <span class="hljs-number">1</span> &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((r + <span class="hljs-number">1</span>) % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">8</span> | l[r + <span class="hljs-number">2</span> &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((r + <span class="hljs-number">2</span>) % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>, v = <span class="hljs-number">0</span>; <span class="hljs-number">4</span> &gt; v &amp;&amp; r + <span class="hljs-number">0.75</span> * v &lt; p; v++) d.<span class="hljs-title function_">push</span>(t.<span class="hljs-title function_">charAt</span>(w &gt;&gt;&gt; <span class="hljs-number">6</span> * (<span class="hljs-number">3</span> - v) &amp; <span class="hljs-number">63</span>));<br>            <span class="hljs-keyword">if</span> (l = t.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">64</span>)) <span class="hljs-keyword">for</span> (; d.<span class="hljs-property">length</span> % <span class="hljs-number">4</span>;) d.<span class="hljs-title function_">push</span>(l);<br>            <span class="hljs-keyword">return</span> d.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>        &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">d</span>) &#123;<br>            <span class="hljs-keyword">var</span> l = d.<span class="hljs-property">length</span>, s = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_map</span>, t = s.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">64</span>);<br>            t &amp;&amp; (t = d.<span class="hljs-title function_">indexOf</span>(t), -<span class="hljs-number">1</span> != t &amp;&amp; (l = t));<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = [], r = <span class="hljs-number">0</span>, w = <span class="hljs-number">0</span>; w &lt;<br>            l; w++) <span class="hljs-keyword">if</span> (w % <span class="hljs-number">4</span>) &#123;<br>                <span class="hljs-keyword">var</span> v = s.<span class="hljs-title function_">indexOf</span>(d.<span class="hljs-title function_">charAt</span>(w - <span class="hljs-number">1</span>)) &lt;&lt; <span class="hljs-number">2</span> * (w % <span class="hljs-number">4</span>), b = s.<span class="hljs-title function_">indexOf</span>(d.<span class="hljs-title function_">charAt</span>(w)) &gt;&gt;&gt; <span class="hljs-number">6</span> - <span class="hljs-number">2</span> * (w % <span class="hljs-number">4</span>);<br>                t[r &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (v | b) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (r % <span class="hljs-number">4</span>);<br>                r++<br>            &#125;<br>            <span class="hljs-keyword">return</span> p.<span class="hljs-title function_">create</span>(t, r)<br>        &#125;, <span class="hljs-attr">_map</span>: <span class="hljs-string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span><br>    &#125;<br>&#125;)();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">u</span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">p</span>(<span class="hljs-params">b, n, a, c, e, j, k</span>) &#123;<br>        b = b + (n &amp; a | ~n &amp; c) + e + k;<br>        <span class="hljs-keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + n<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">d</span>(<span class="hljs-params">b, n, a, c, e, j, k</span>) &#123;<br>        b = b + (n &amp; c | a &amp; ~c) + e + k;<br>        <span class="hljs-keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + n<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">l</span>(<span class="hljs-params">b, n, a, c, e, j, k</span>) &#123;<br>        b = b + (n ^ a ^ c) + e + k;<br>        <span class="hljs-keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + n<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">s</span>(<span class="hljs-params">b, n, a, c, e, j, k</span>) &#123;<br>        b = b + (a ^ (n | ~c)) + e + k;<br>        <span class="hljs-keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + n<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = <span class="hljs-title class_">CryptoJS</span>, r = t.<span class="hljs-property">lib</span>, w = r.<span class="hljs-property">WordArray</span>, v = r.<span class="hljs-property">Hasher</span>, r = t.<span class="hljs-property">algo</span>, b = [], x = <span class="hljs-number">0</span>; <span class="hljs-number">64</span> &gt; x; x++) b[x] = <span class="hljs-number">4294967296</span> * u.<span class="hljs-title function_">abs</span>(u.<span class="hljs-title function_">sin</span>(x + <span class="hljs-number">1</span>)) | <span class="hljs-number">0</span>;<br>    r = r.<span class="hljs-property">MD5</span> = v.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> w.<span class="hljs-title function_">init</span>([<span class="hljs-number">1732584193</span>, <span class="hljs-number">4023233417</span>, <span class="hljs-number">2562383102</span>, <span class="hljs-number">271733878</span>])<br>        &#125;,<br>        <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">q, n</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-number">0</span>; <span class="hljs-number">16</span> &gt; a; a++) &#123;<br>                <span class="hljs-keyword">var</span> c = n + a, e = q[c];<br>                q[c] = (e &lt;&lt; <span class="hljs-number">8</span> | e &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (e &lt;&lt; <span class="hljs-number">24</span> | e &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span><br>            &#125;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>, c = q[n + <span class="hljs-number">0</span>], e = q[n + <span class="hljs-number">1</span>], j = q[n + <span class="hljs-number">2</span>], k = q[n + <span class="hljs-number">3</span>], z = q[n + <span class="hljs-number">4</span>],<br>                r = q[n + <span class="hljs-number">5</span>], t = q[n + <span class="hljs-number">6</span>], w = q[n + <span class="hljs-number">7</span>], v = q[n + <span class="hljs-number">8</span>], A = q[n + <span class="hljs-number">9</span>], B = q[n + <span class="hljs-number">10</span>], C = q[n + <span class="hljs-number">11</span>],<br>                u = q[n + <span class="hljs-number">12</span>], D = q[n + <span class="hljs-number">13</span>], E = q[n + <span class="hljs-number">14</span>], x = q[n + <span class="hljs-number">15</span>], f = a[<span class="hljs-number">0</span>], m = a[<span class="hljs-number">1</span>], g = a[<span class="hljs-number">2</span>], h = a[<span class="hljs-number">3</span>],<br>                f = <span class="hljs-title function_">p</span>(f, m, g, h, c, <span class="hljs-number">7</span>, b[<span class="hljs-number">0</span>]), h = <span class="hljs-title function_">p</span>(h, f, m, g, e, <span class="hljs-number">12</span>, b[<span class="hljs-number">1</span>]), g = <span class="hljs-title function_">p</span>(g, h, f, m, j, <span class="hljs-number">17</span>, b[<span class="hljs-number">2</span>]),<br>                m = <span class="hljs-title function_">p</span>(m, g, h, f, k, <span class="hljs-number">22</span>, b[<span class="hljs-number">3</span>]), f = <span class="hljs-title function_">p</span>(f, m, g, h, z, <span class="hljs-number">7</span>, b[<span class="hljs-number">4</span>]), h = <span class="hljs-title function_">p</span>(h, f, m, g, r, <span class="hljs-number">12</span>, b[<span class="hljs-number">5</span>]),<br>                g = <span class="hljs-title function_">p</span>(g, h, f, m, t, <span class="hljs-number">17</span>, b[<span class="hljs-number">6</span>]), m = <span class="hljs-title function_">p</span>(m, g, h, f, w, <span class="hljs-number">22</span>, b[<span class="hljs-number">7</span>]),<br>                f = <span class="hljs-title function_">p</span>(f, m, g, h, v, <span class="hljs-number">7</span>, b[<span class="hljs-number">8</span>]), h = <span class="hljs-title function_">p</span>(h, f, m, g, A, <span class="hljs-number">12</span>, b[<span class="hljs-number">9</span>]), g = <span class="hljs-title function_">p</span>(g, h, f, m, B, <span class="hljs-number">17</span>, b[<span class="hljs-number">10</span>]),<br>                m = <span class="hljs-title function_">p</span>(m, g, h, f, C, <span class="hljs-number">22</span>, b[<span class="hljs-number">11</span>]), f = <span class="hljs-title function_">p</span>(f, m, g, h, u, <span class="hljs-number">7</span>, b[<span class="hljs-number">12</span>]), h = <span class="hljs-title function_">p</span>(h, f, m, g, D, <span class="hljs-number">12</span>, b[<span class="hljs-number">13</span>]),<br>                g = <span class="hljs-title function_">p</span>(g, h, f, m, E, <span class="hljs-number">17</span>, b[<span class="hljs-number">14</span>]), m = <span class="hljs-title function_">p</span>(m, g, h, f, x, <span class="hljs-number">22</span>, b[<span class="hljs-number">15</span>]), f = <span class="hljs-title function_">d</span>(f, m, g, h, e, <span class="hljs-number">5</span>, b[<span class="hljs-number">16</span>]),<br>                h = <span class="hljs-title function_">d</span>(h, f, m, g, t, <span class="hljs-number">9</span>, b[<span class="hljs-number">17</span>]), g = <span class="hljs-title function_">d</span>(g, h, f, m, C, <span class="hljs-number">14</span>, b[<span class="hljs-number">18</span>]), m = <span class="hljs-title function_">d</span>(m, g, h, f, c, <span class="hljs-number">20</span>, b[<span class="hljs-number">19</span>]),<br>                f = <span class="hljs-title function_">d</span>(f, m, g, h, r, <span class="hljs-number">5</span>, b[<span class="hljs-number">20</span>]), h = <span class="hljs-title function_">d</span>(h, f, m, g, B, <span class="hljs-number">9</span>, b[<span class="hljs-number">21</span>]), g = <span class="hljs-title function_">d</span>(g, h, f, m, x, <span class="hljs-number">14</span>, b[<span class="hljs-number">22</span>]),<br>                m = <span class="hljs-title function_">d</span>(m, g, h, f, z, <span class="hljs-number">20</span>, b[<span class="hljs-number">23</span>]), f = <span class="hljs-title function_">d</span>(f, m, g, h, A, <span class="hljs-number">5</span>, b[<span class="hljs-number">24</span>]), h = <span class="hljs-title function_">d</span>(h, f, m, g, E, <span class="hljs-number">9</span>, b[<span class="hljs-number">25</span>]),<br>                g = <span class="hljs-title function_">d</span>(g, h, f, m, k, <span class="hljs-number">14</span>, b[<span class="hljs-number">26</span>]), m = <span class="hljs-title function_">d</span>(m, g, h, f, v, <span class="hljs-number">20</span>, b[<span class="hljs-number">27</span>]), f = <span class="hljs-title function_">d</span>(f, m, g, h, D, <span class="hljs-number">5</span>, b[<span class="hljs-number">28</span>]),<br>                h = <span class="hljs-title function_">d</span>(h, f,<br>                    m, g, j, <span class="hljs-number">9</span>, b[<span class="hljs-number">29</span>]), g = <span class="hljs-title function_">d</span>(g, h, f, m, w, <span class="hljs-number">14</span>, b[<span class="hljs-number">30</span>]), m = <span class="hljs-title function_">d</span>(m, g, h, f, u, <span class="hljs-number">20</span>, b[<span class="hljs-number">31</span>]),<br>                f = <span class="hljs-title function_">l</span>(f, m, g, h, r, <span class="hljs-number">4</span>, b[<span class="hljs-number">32</span>]), h = <span class="hljs-title function_">l</span>(h, f, m, g, v, <span class="hljs-number">11</span>, b[<span class="hljs-number">33</span>]), g = <span class="hljs-title function_">l</span>(g, h, f, m, C, <span class="hljs-number">16</span>, b[<span class="hljs-number">34</span>]),<br>                m = <span class="hljs-title function_">l</span>(m, g, h, f, E, <span class="hljs-number">23</span>, b[<span class="hljs-number">35</span>]), f = <span class="hljs-title function_">l</span>(f, m, g, h, e, <span class="hljs-number">4</span>, b[<span class="hljs-number">36</span>]), h = <span class="hljs-title function_">l</span>(h, f, m, g, z, <span class="hljs-number">11</span>, b[<span class="hljs-number">37</span>]),<br>                g = <span class="hljs-title function_">l</span>(g, h, f, m, w, <span class="hljs-number">16</span>, b[<span class="hljs-number">38</span>]), m = <span class="hljs-title function_">l</span>(m, g, h, f, B, <span class="hljs-number">23</span>, b[<span class="hljs-number">39</span>]), f = <span class="hljs-title function_">l</span>(f, m, g, h, D, <span class="hljs-number">4</span>, b[<span class="hljs-number">40</span>]),<br>                h = <span class="hljs-title function_">l</span>(h, f, m, g, c, <span class="hljs-number">11</span>, b[<span class="hljs-number">41</span>]), g = <span class="hljs-title function_">l</span>(g, h, f, m, k, <span class="hljs-number">16</span>, b[<span class="hljs-number">42</span>]), m = <span class="hljs-title function_">l</span>(m, g, h, f, t, <span class="hljs-number">23</span>, b[<span class="hljs-number">43</span>]),<br>                f = <span class="hljs-title function_">l</span>(f, m, g, h, A, <span class="hljs-number">4</span>, b[<span class="hljs-number">44</span>]), h = <span class="hljs-title function_">l</span>(h, f, m, g, u, <span class="hljs-number">11</span>, b[<span class="hljs-number">45</span>]), g = <span class="hljs-title function_">l</span>(g, h, f, m, x, <span class="hljs-number">16</span>, b[<span class="hljs-number">46</span>]),<br>                m = <span class="hljs-title function_">l</span>(m, g, h, f, j, <span class="hljs-number">23</span>, b[<span class="hljs-number">47</span>]), f = <span class="hljs-title function_">s</span>(f, m, g, h, c, <span class="hljs-number">6</span>, b[<span class="hljs-number">48</span>]), h = <span class="hljs-title function_">s</span>(h, f, m, g, w, <span class="hljs-number">10</span>, b[<span class="hljs-number">49</span>]),<br>                g = <span class="hljs-title function_">s</span>(g, h, f, m,<br>                    E, <span class="hljs-number">15</span>, b[<span class="hljs-number">50</span>]), m = <span class="hljs-title function_">s</span>(m, g, h, f, r, <span class="hljs-number">21</span>, b[<span class="hljs-number">51</span>]), f = <span class="hljs-title function_">s</span>(f, m, g, h, u, <span class="hljs-number">6</span>, b[<span class="hljs-number">52</span>]),<br>                h = <span class="hljs-title function_">s</span>(h, f, m, g, k, <span class="hljs-number">10</span>, b[<span class="hljs-number">53</span>]), g = <span class="hljs-title function_">s</span>(g, h, f, m, B, <span class="hljs-number">15</span>, b[<span class="hljs-number">54</span>]), m = <span class="hljs-title function_">s</span>(m, g, h, f, e, <span class="hljs-number">21</span>, b[<span class="hljs-number">55</span>]),<br>                f = <span class="hljs-title function_">s</span>(f, m, g, h, v, <span class="hljs-number">6</span>, b[<span class="hljs-number">56</span>]), h = <span class="hljs-title function_">s</span>(h, f, m, g, x, <span class="hljs-number">10</span>, b[<span class="hljs-number">57</span>]), g = <span class="hljs-title function_">s</span>(g, h, f, m, t, <span class="hljs-number">15</span>, b[<span class="hljs-number">58</span>]),<br>                m = <span class="hljs-title function_">s</span>(m, g, h, f, D, <span class="hljs-number">21</span>, b[<span class="hljs-number">59</span>]), f = <span class="hljs-title function_">s</span>(f, m, g, h, z, <span class="hljs-number">6</span>, b[<span class="hljs-number">60</span>]), h = <span class="hljs-title function_">s</span>(h, f, m, g, C, <span class="hljs-number">10</span>, b[<span class="hljs-number">61</span>]),<br>                g = <span class="hljs-title function_">s</span>(g, h, f, m, j, <span class="hljs-number">15</span>, b[<span class="hljs-number">62</span>]), m = <span class="hljs-title function_">s</span>(m, g, h, f, A, <span class="hljs-number">21</span>, b[<span class="hljs-number">63</span>]);<br>            a[<span class="hljs-number">0</span>] = a[<span class="hljs-number">0</span>] + f | <span class="hljs-number">0</span>;<br>            a[<span class="hljs-number">1</span>] = a[<span class="hljs-number">1</span>] + m | <span class="hljs-number">0</span>;<br>            a[<span class="hljs-number">2</span>] = a[<span class="hljs-number">2</span>] + g | <span class="hljs-number">0</span>;<br>            a[<span class="hljs-number">3</span>] = a[<span class="hljs-number">3</span>] + h | <span class="hljs-number">0</span><br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, n = b.<span class="hljs-property">words</span>, a = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, c = <span class="hljs-number">8</span> * b.<span class="hljs-property">sigBytes</span>;<br>            n[c &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - c % <span class="hljs-number">32</span>;<br>            <span class="hljs-keyword">var</span> e = u.<span class="hljs-title function_">floor</span>(a /<br>                <span class="hljs-number">4294967296</span>);<br>            n[(c + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">15</span>] = (e &lt;&lt; <span class="hljs-number">8</span> | e &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (e &lt;&lt; <span class="hljs-number">24</span> | e &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            n[(c + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">14</span>] = (a &lt;&lt; <span class="hljs-number">8</span> | a &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (a &lt;&lt; <span class="hljs-number">24</span> | a &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            b.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * (n.<span class="hljs-property">length</span> + <span class="hljs-number">1</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>;<br>            n = b.<span class="hljs-property">words</span>;<br>            <span class="hljs-keyword">for</span> (a = <span class="hljs-number">0</span>; <span class="hljs-number">4</span> &gt; a; a++) c = n[a], n[a] = (c &lt;&lt; <span class="hljs-number">8</span> | c &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (c &lt;&lt; <span class="hljs-number">24</span> | c &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            <span class="hljs-keyword">return</span> b<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> b = v.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            b.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> b<br>        &#125;<br>    &#125;);<br>    t.<span class="hljs-property">MD5</span> = v.<span class="hljs-title function_">_createHelper</span>(r);<br>    t.<span class="hljs-property">HmacMD5</span> = v.<span class="hljs-title function_">_createHmacHelper</span>(r)<br>&#125;)(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> u = <span class="hljs-title class_">CryptoJS</span>, p = u.<span class="hljs-property">lib</span>, d = p.<span class="hljs-property">Base</span>, l = p.<span class="hljs-property">WordArray</span>, p = u.<span class="hljs-property">algo</span>, s = p.<span class="hljs-property">EvpKDF</span> = d.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: d.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">keySize</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">hasher</span>: p.<span class="hljs-property">MD5</span>, <span class="hljs-attr">iterations</span>: <span class="hljs-number">1</span>&#125;), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">d</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(d)<br>        &#125;, <span class="hljs-attr">compute</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">d, r</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> p = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>, s = p.<span class="hljs-property">hasher</span>.<span class="hljs-title function_">create</span>(), b = l.<span class="hljs-title function_">create</span>(), u = b.<span class="hljs-property">words</span>, q = p.<span class="hljs-property">keySize</span>, p = p.<span class="hljs-property">iterations</span>; u.<span class="hljs-property">length</span> &lt; q;) &#123;<br>                n &amp;&amp; s.<span class="hljs-title function_">update</span>(n);<br>                <span class="hljs-keyword">var</span> n = s.<span class="hljs-title function_">update</span>(d).<span class="hljs-title function_">finalize</span>(r);<br>                s.<span class="hljs-title function_">reset</span>();<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-number">1</span>; a &lt; p; a++) n = s.<span class="hljs-title function_">finalize</span>(n), s.<span class="hljs-title function_">reset</span>();<br>                b.<span class="hljs-title function_">concat</span>(n)<br>            &#125;<br>            b.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * q;<br>            <span class="hljs-keyword">return</span> b<br>        &#125;<br>    &#125;);<br>    u.<span class="hljs-property">EvpKDF</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">d, l, p</span>) &#123;<br>        <span class="hljs-keyword">return</span> s.<span class="hljs-title function_">create</span>(p).<span class="hljs-title function_">compute</span>(d,<br>            l)<br>    &#125;<br>&#125;)();<br><span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">lib</span>.<span class="hljs-property">Cipher</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">u</span>) &#123;<br>    <span class="hljs-keyword">var</span> p = <span class="hljs-title class_">CryptoJS</span>, d = p.<span class="hljs-property">lib</span>, l = d.<span class="hljs-property">Base</span>, s = d.<span class="hljs-property">WordArray</span>, t = d.<span class="hljs-property">BufferedBlockAlgorithm</span>, r = p.<span class="hljs-property">enc</span>.<span class="hljs-property">Base64</span>,<br>        w = p.<span class="hljs-property">algo</span>.<span class="hljs-property">EvpKDF</span>, v = d.<span class="hljs-property">Cipher</span> = t.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">cfg</span>: l.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">createEncryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">create</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_ENC_XFORM_MODE</span>, e, a)<br>            &#125;, <span class="hljs-attr">createDecryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">create</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_DEC_XFORM_MODE</span>, e, a)<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a, b</span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(b);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_xformMode</span> = e;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_key</span> = a;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>            &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                t.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>            &#125;, <span class="hljs-attr">process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(e);<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>()<br>            &#125;,<br>            <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>                e &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(e);<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>            &#125;, <span class="hljs-attr">keySize</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">ivSize</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">_ENC_XFORM_MODE</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">_DEC_XFORM_MODE</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>                <span class="hljs-keyword">return</span> &#123;<br>                    <span class="hljs-attr">encrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, k, d</span>) &#123;<br>                        <span class="hljs-keyword">return</span> (<span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> k ? c : a).<span class="hljs-title function_">encrypt</span>(e, b, k, d)<br>                    &#125;, <span class="hljs-attr">decrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, k, d</span>) &#123;<br>                        <span class="hljs-keyword">return</span> (<span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> k ? c : a).<span class="hljs-title function_">decrypt</span>(e, b, k, d)<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;);<br>    d.<span class="hljs-property">StreamCipher</span> = v.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>(!<span class="hljs-number">0</span>)<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">1</span><br>    &#125;);<br>    <span class="hljs-keyword">var</span> b = p.<span class="hljs-property">mode</span> = &#123;&#125;, x = <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a, b</span>) &#123;<br>        <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iv</span>;<br>        c ? <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iv</span> = u : c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_prevBlock</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = <span class="hljs-number">0</span>; d &lt; b; d++) e[a + d] ^=<br>            c[d]<br>    &#125;, q = (d.<span class="hljs-property">BlockCipherMode</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">createEncryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">Encryptor</span>.<span class="hljs-title function_">create</span>(e, a)<br>        &#125;, <span class="hljs-attr">createDecryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">Decryptor</span>.<span class="hljs-title function_">create</span>(e, a)<br>        &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_cipher</span> = e;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iv</span> = a<br>        &#125;<br>    &#125;)).<span class="hljs-title function_">extend</span>();<br>    q.<span class="hljs-property">Encryptor</span> = q.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">processBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>            <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_cipher</span>, c = b.<span class="hljs-property">blockSize</span>;<br>            x.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, e, a, c);<br>            b.<span class="hljs-title function_">encryptBlock</span>(e, a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_prevBlock</span> = e.<span class="hljs-title function_">slice</span>(a, a + c)<br>        &#125;<br>    &#125;);<br>    q.<span class="hljs-property">Decryptor</span> = q.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">processBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>            <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_cipher</span>, c = b.<span class="hljs-property">blockSize</span>, d = e.<span class="hljs-title function_">slice</span>(a, a + c);<br>            b.<span class="hljs-title function_">decryptBlock</span>(e, a);<br>            x.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>,<br>                e, a, c);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_prevBlock</span> = d<br>        &#125;<br>    &#125;);<br>    b = b.<span class="hljs-property">CBC</span> = q;<br>    q = (p.<span class="hljs-property">pad</span> = &#123;&#125;).<span class="hljs-property">Pkcs7</span> = &#123;<br>        <span class="hljs-attr">pad</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = <span class="hljs-number">4</span> * b, c = c - a.<span class="hljs-property">sigBytes</span> % c, d = c &lt;&lt; <span class="hljs-number">24</span> | c &lt;&lt; <span class="hljs-number">16</span> | c &lt;&lt; <span class="hljs-number">8</span> | c, l = [], n = <span class="hljs-number">0</span>; n &lt; c; n += <span class="hljs-number">4</span>) l.<span class="hljs-title function_">push</span>(d);<br>            c = s.<span class="hljs-title function_">create</span>(l, c);<br>            a.<span class="hljs-title function_">concat</span>(c)<br>        &#125;, <span class="hljs-attr">unpad</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a.<span class="hljs-property">sigBytes</span> -= a.<span class="hljs-property">words</span>[a.<span class="hljs-property">sigBytes</span> - <span class="hljs-number">1</span> &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp; <span class="hljs-number">255</span><br>        &#125;<br>    &#125;;<br>    d.<span class="hljs-property">BlockCipher</span> = v.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: v.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">mode</span>: b, <span class="hljs-attr">padding</span>: q&#125;), <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            v.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>, b = a.<span class="hljs-property">iv</span>, a = a.<span class="hljs-property">mode</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">_xformMode</span> == <span class="hljs-variable language_">this</span>.<span class="hljs-property">_ENC_XFORM_MODE</span>) <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">createEncryptor</span>; <span class="hljs-keyword">else</span> c = a.<span class="hljs-property">createDecryptor</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span> = <span class="hljs-number">1</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_mode</span> = c.<span class="hljs-title function_">call</span>(a,<br>                <span class="hljs-variable language_">this</span>, b &amp;&amp; b.<span class="hljs-property">words</span>)<br>        &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_mode</span>.<span class="hljs-title function_">processBlock</span>(a, b)<br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-property">padding</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">_xformMode</span> == <span class="hljs-variable language_">this</span>.<span class="hljs-property">_ENC_XFORM_MODE</span>) &#123;<br>                a.<span class="hljs-title function_">pad</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>);<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>(!<span class="hljs-number">0</span>)<br>            &#125; <span class="hljs-keyword">else</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>(!<span class="hljs-number">0</span>), a.<span class="hljs-title function_">unpad</span>(b);<br>            <span class="hljs-keyword">return</span> b<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">4</span><br>    &#125;);<br>    <span class="hljs-keyword">var</span> n = d.<span class="hljs-property">CipherParams</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">mixIn</span>(a)<br>        &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> (a || <span class="hljs-variable language_">this</span>.<span class="hljs-property">formatter</span>).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>        &#125;<br>    &#125;), b = (p.<span class="hljs-property">format</span> = &#123;&#125;).<span class="hljs-property">OpenSSL</span> = &#123;<br>        <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">ciphertext</span>;<br>            a = a.<span class="hljs-property">salt</span>;<br>            <span class="hljs-keyword">return</span> (a ? s.<span class="hljs-title function_">create</span>([<span class="hljs-number">1398893684</span>,<br>                <span class="hljs-number">1701076831</span>]).<span class="hljs-title function_">concat</span>(a).<span class="hljs-title function_">concat</span>(b) : b).<span class="hljs-title function_">toString</span>(r)<br>        &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a = r.<span class="hljs-title function_">parse</span>(a);<br>            <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">words</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-number">1398893684</span> == b[<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-number">1701076831</span> == b[<span class="hljs-number">1</span>]) &#123;<br>                <span class="hljs-keyword">var</span> c = s.<span class="hljs-title function_">create</span>(b.<span class="hljs-title function_">slice</span>(<span class="hljs-number">2</span>, <span class="hljs-number">4</span>));<br>                b.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>);<br>                a.<span class="hljs-property">sigBytes</span> -= <span class="hljs-number">16</span><br>            &#125;<br>            <span class="hljs-keyword">return</span> n.<span class="hljs-title function_">create</span>(&#123;<span class="hljs-attr">ciphertext</span>: a, <span class="hljs-attr">salt</span>: c&#125;)<br>        &#125;<br>    &#125;, a = d.<span class="hljs-property">SerializableCipher</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: l.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">format</span>: b&#125;), <span class="hljs-attr">encrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, c, d</span>) &#123;<br>            d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(d);<br>            <span class="hljs-keyword">var</span> l = a.<span class="hljs-title function_">createEncryptor</span>(c, d);<br>            b = l.<span class="hljs-title function_">finalize</span>(b);<br>            l = l.<span class="hljs-property">cfg</span>;<br>            <span class="hljs-keyword">return</span> n.<span class="hljs-title function_">create</span>(&#123;<br>                <span class="hljs-attr">ciphertext</span>: b,<br>                <span class="hljs-attr">key</span>: c,<br>                <span class="hljs-attr">iv</span>: l.<span class="hljs-property">iv</span>,<br>                <span class="hljs-attr">algorithm</span>: a,<br>                <span class="hljs-attr">mode</span>: l.<span class="hljs-property">mode</span>,<br>                <span class="hljs-attr">padding</span>: l.<span class="hljs-property">padding</span>,<br>                <span class="hljs-attr">blockSize</span>: a.<span class="hljs-property">blockSize</span>,<br>                <span class="hljs-attr">formatter</span>: d.<span class="hljs-property">format</span><br>            &#125;)<br>        &#125;,<br>        <span class="hljs-attr">decrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, c, d</span>) &#123;<br>            d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(d);<br>            b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_parse</span>(b, d.<span class="hljs-property">format</span>);<br>            <span class="hljs-keyword">return</span> a.<span class="hljs-title function_">createDecryptor</span>(c, d).<span class="hljs-title function_">finalize</span>(b.<span class="hljs-property">ciphertext</span>)<br>        &#125;, <span class="hljs-attr">_parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a ? b.<span class="hljs-title function_">parse</span>(a, <span class="hljs-variable language_">this</span>) : a<br>        &#125;<br>    &#125;), p = (p.<span class="hljs-property">kdf</span> = &#123;&#125;).<span class="hljs-property">OpenSSL</span> = &#123;<br>        <span class="hljs-attr">execute</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, c, d</span>) &#123;<br>            d || (d = s.<span class="hljs-title function_">random</span>(<span class="hljs-number">8</span>));<br>            a = w.<span class="hljs-title function_">create</span>(&#123;<span class="hljs-attr">keySize</span>: b + c&#125;).<span class="hljs-title function_">compute</span>(a, d);<br>            c = s.<span class="hljs-title function_">create</span>(a.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(b), <span class="hljs-number">4</span> * c);<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * b;<br>            <span class="hljs-keyword">return</span> n.<span class="hljs-title function_">create</span>(&#123;<span class="hljs-attr">key</span>: a, <span class="hljs-attr">iv</span>: c, <span class="hljs-attr">salt</span>: d&#125;)<br>        &#125;<br>    &#125;, c = d.<span class="hljs-property">PasswordBasedCipher</span> = a.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: a.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">kdf</span>: p&#125;), <span class="hljs-attr">encrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, c, d, l</span>) &#123;<br>            l = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(l);<br>            d = l.<span class="hljs-property">kdf</span>.<span class="hljs-title function_">execute</span>(d,<br>                b.<span class="hljs-property">keySize</span>, b.<span class="hljs-property">ivSize</span>);<br>            l.<span class="hljs-property">iv</span> = d.<span class="hljs-property">iv</span>;<br>            b = a.<span class="hljs-property">encrypt</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, b, c, d.<span class="hljs-property">key</span>, l);<br>            b.<span class="hljs-title function_">mixIn</span>(d);<br>            <span class="hljs-keyword">return</span> b<br>        &#125;, <span class="hljs-attr">decrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, c, d, l</span>) &#123;<br>            l = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(l);<br>            c = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_parse</span>(c, l.<span class="hljs-property">format</span>);<br>            d = l.<span class="hljs-property">kdf</span>.<span class="hljs-title function_">execute</span>(d, b.<span class="hljs-property">keySize</span>, b.<span class="hljs-property">ivSize</span>, c.<span class="hljs-property">salt</span>);<br>            l.<span class="hljs-property">iv</span> = d.<span class="hljs-property">iv</span>;<br>            <span class="hljs-keyword">return</span> a.<span class="hljs-property">decrypt</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, b, c, d.<span class="hljs-property">key</span>, l)<br>        &#125;<br>    &#125;)<br>&#125;();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> u = <span class="hljs-title class_">CryptoJS</span>, p = u.<span class="hljs-property">lib</span>.<span class="hljs-property">BlockCipher</span>, d = u.<span class="hljs-property">algo</span>, l = [], s = [], t = [], r = [], w = [], v = [], b = [], x = [], q = [], n = [], a = [], c = <span class="hljs-number">0</span>; <span class="hljs-number">256</span> &gt; c; c++) a[c] = <span class="hljs-number">128</span> &gt; c ? c &lt;&lt; <span class="hljs-number">1</span> : c &lt;&lt; <span class="hljs-number">1</span> ^ <span class="hljs-number">283</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = <span class="hljs-number">0</span>, j = <span class="hljs-number">0</span>, c = <span class="hljs-number">0</span>; <span class="hljs-number">256</span> &gt; c; c++) &#123;<br>        <span class="hljs-keyword">var</span> k = j ^ j &lt;&lt; <span class="hljs-number">1</span> ^ j &lt;&lt; <span class="hljs-number">2</span> ^ j &lt;&lt; <span class="hljs-number">3</span> ^ j &lt;&lt; <span class="hljs-number">4</span>, k = k &gt;&gt;&gt; <span class="hljs-number">8</span> ^ k &amp; <span class="hljs-number">255</span> ^ <span class="hljs-number">99</span>;<br>        l[e] = k;<br>        s[k] = e;<br>        <span class="hljs-keyword">var</span> z = a[e], F = a[z], G = a[F], y = <span class="hljs-number">257</span> * a[k] ^ <span class="hljs-number">16843008</span> * k;<br>        t[e] = y &lt;&lt; <span class="hljs-number">24</span> | y &gt;&gt;&gt; <span class="hljs-number">8</span>;<br>        r[e] = y &lt;&lt; <span class="hljs-number">16</span> | y &gt;&gt;&gt; <span class="hljs-number">16</span>;<br>        w[e] = y &lt;&lt; <span class="hljs-number">8</span> | y &gt;&gt;&gt; <span class="hljs-number">24</span>;<br>        v[e] = y;<br>        y = <span class="hljs-number">16843009</span> * G ^ <span class="hljs-number">65537</span> * F ^ <span class="hljs-number">257</span> * z ^ <span class="hljs-number">16843008</span> * e;<br>        b[k] = y &lt;&lt; <span class="hljs-number">24</span> | y &gt;&gt;&gt; <span class="hljs-number">8</span>;<br>        x[k] = y &lt;&lt; <span class="hljs-number">16</span> | y &gt;&gt;&gt; <span class="hljs-number">16</span>;<br>        q[k] = y &lt;&lt; <span class="hljs-number">8</span> | y &gt;&gt;&gt; <span class="hljs-number">24</span>;<br>        n[k] = y;<br>        e ? (e = z ^ a[a[a[G ^ z]]], j ^= a[a[j]]) : e = j = <span class="hljs-number">1</span><br>    &#125;<br>    <span class="hljs-keyword">var</span> H = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">8</span>,<br>        <span class="hljs-number">16</span>, <span class="hljs-number">32</span>, <span class="hljs-number">64</span>, <span class="hljs-number">128</span>, <span class="hljs-number">27</span>, <span class="hljs-number">54</span>], d = d.<span class="hljs-property">AES</span> = p.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_key</span>, c = a.<span class="hljs-property">words</span>, d = a.<span class="hljs-property">sigBytes</span> / <span class="hljs-number">4</span>, a = <span class="hljs-number">4</span> * ((<span class="hljs-variable language_">this</span>.<span class="hljs-property">_nRounds</span> = d + <span class="hljs-number">6</span>) + <span class="hljs-number">1</span>), e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_keySchedule</span> = [], j = <span class="hljs-number">0</span>; j &lt; a; j++) <span class="hljs-keyword">if</span> (j &lt; d) e[j] = c[j]; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">var</span> k = e[j - <span class="hljs-number">1</span>];<br>                j % d ? <span class="hljs-number">6</span> &lt; d &amp;&amp; <span class="hljs-number">4</span> == j % d &amp;&amp; (k = l[k &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | l[k &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | l[k &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | l[k &amp; <span class="hljs-number">255</span>]) : (k = k &lt;&lt; <span class="hljs-number">8</span> | k &gt;&gt;&gt; <span class="hljs-number">24</span>, k = l[k &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | l[k &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | l[k &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | l[k &amp; <span class="hljs-number">255</span>], k ^= H[j / d | <span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-number">24</span>);<br>                e[j] = e[j - d] ^ k<br>            &#125;<br>            c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_invKeySchedule</span> = [];<br>            <span class="hljs-keyword">for</span> (d = <span class="hljs-number">0</span>; d &lt; a; d++) j = a - d, k = d % <span class="hljs-number">4</span> ? e[j] : e[j - <span class="hljs-number">4</span>], c[d] = <span class="hljs-number">4</span> &gt; d || <span class="hljs-number">4</span> &gt;= j ? k : b[l[k &gt;&gt;&gt; <span class="hljs-number">24</span>]] ^ x[l[k &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>]] ^ q[l[k &gt;&gt;&gt;<br>            <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>]] ^ n[l[k &amp; <span class="hljs-number">255</span>]]<br>        &#125;, <span class="hljs-attr">encryptBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doCryptBlock</span>(a, b, <span class="hljs-variable language_">this</span>.<span class="hljs-property">_keySchedule</span>, t, r, w, v, l)<br>        &#125;, <span class="hljs-attr">decryptBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, c</span>) &#123;<br>            <span class="hljs-keyword">var</span> d = a[c + <span class="hljs-number">1</span>];<br>            a[c + <span class="hljs-number">1</span>] = a[c + <span class="hljs-number">3</span>];<br>            a[c + <span class="hljs-number">3</span>] = d;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doCryptBlock</span>(a, c, <span class="hljs-variable language_">this</span>.<span class="hljs-property">_invKeySchedule</span>, b, x, q, n, s);<br>            d = a[c + <span class="hljs-number">1</span>];<br>            a[c + <span class="hljs-number">1</span>] = a[c + <span class="hljs-number">3</span>];<br>            a[c + <span class="hljs-number">3</span>] = d<br>        &#125;, <span class="hljs-attr">_doCryptBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, c, d, e, j, l, f</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> m = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nRounds</span>, g = a[b] ^ c[<span class="hljs-number">0</span>], h = a[b + <span class="hljs-number">1</span>] ^ c[<span class="hljs-number">1</span>], k = a[b + <span class="hljs-number">2</span>] ^ c[<span class="hljs-number">2</span>], n = a[b + <span class="hljs-number">3</span>] ^ c[<span class="hljs-number">3</span>], p = <span class="hljs-number">4</span>, r = <span class="hljs-number">1</span>; r &lt; m; r++) <span class="hljs-keyword">var</span> q = d[g &gt;&gt;&gt; <span class="hljs-number">24</span>] ^ e[h &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] ^ j[k &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] ^ l[n &amp; <span class="hljs-number">255</span>] ^ c[p++], s = d[h &gt;&gt;&gt; <span class="hljs-number">24</span>] ^ e[k &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] ^ j[n &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] ^ l[g &amp; <span class="hljs-number">255</span>] ^ c[p++], t =<br>                d[k &gt;&gt;&gt; <span class="hljs-number">24</span>] ^ e[n &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] ^ j[g &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] ^ l[h &amp; <span class="hljs-number">255</span>] ^ c[p++], n = d[n &gt;&gt;&gt; <span class="hljs-number">24</span>] ^ e[g &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] ^ j[h &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] ^ l[k &amp; <span class="hljs-number">255</span>] ^ c[p++], g = q, h = s, k = t;<br>            q = (f[g &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | f[h &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | f[k &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | f[n &amp; <span class="hljs-number">255</span>]) ^ c[p++];<br>            s = (f[h &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | f[k &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | f[n &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | f[g &amp; <span class="hljs-number">255</span>]) ^ c[p++];<br>            t = (f[k &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | f[n &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | f[g &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | f[h &amp; <span class="hljs-number">255</span>]) ^ c[p++];<br>            n = (f[n &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | f[g &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | f[h &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | f[k &amp; <span class="hljs-number">255</span>]) ^ c[p++];<br>            a[b] = q;<br>            a[b + <span class="hljs-number">1</span>] = s;<br>            a[b + <span class="hljs-number">2</span>] = t;<br>            a[b + <span class="hljs-number">3</span>] = n<br>        &#125;, <span class="hljs-attr">keySize</span>: <span class="hljs-number">8</span><br>    &#125;);<br>    u.<span class="hljs-property">AES</span> = p.<span class="hljs-title function_">_createHelper</span>(d)<br>&#125;)();<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>fiddler导入系统证书根目录</title>
    <link href="/posts/8e1f71aa/"/>
    <url>/posts/8e1f71aa/</url>
    
    <content type="html"><![CDATA[<h2 id="fiddler导入系统证书到根目录"><a href="#fiddler导入系统证书到根目录" class="headerlink" title="fiddler导入系统证书到根目录"></a>fiddler导入系统证书到根目录</h2><h3 id="1-将证书导入本地"><a href="#1-将证书导入本地" class="headerlink" title="1. 将证书导入本地"></a>1. 将证书导入本地</h3><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl"><span class="hljs-function"><span class="hljs-title">fiddler</span> -&gt;</span> <span class="hljs-function"><span class="hljs-title">options</span> -&gt;</span> Export root certificate to desktop <br></code></pre></td></tr></table></figure><h3 id="2-openssl命令"><a href="#2-openssl命令" class="headerlink" title="2. openssl命令"></a>2. openssl命令</h3><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livescript">openssl x509 -subject_hash_old -<span class="hljs-keyword">in</span> .<span class="hljs-string">\FiddlerRoot.cer</span> -inform der<br></code></pre></td></tr></table></figure><h3 id="3-更改证书名称"><a href="#3-更改证书名称" class="headerlink" title="3. 更改证书名称"></a>3. 更改证书名称</h3><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">拿到hash值 269953<span class="hljs-built_in">fb</span>, 修改FiddlerRoot.cer 为269953<span class="hljs-built_in">fb</span><span class="hljs-number">.0</span><br></code></pre></td></tr></table></figure><h3 id="4-上传到sdcard"><a href="#4-上传到sdcard" class="headerlink" title="4. 上传到sdcard"></a>4. 上传到sdcard</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb push ./269953fb.0 /sdcard<br></code></pre></td></tr></table></figure><h3 id="5-开启导入根目录权限"><a href="#5-开启导入根目录权限" class="headerlink" title="5. 开启导入根目录权限"></a>5. 开启导入根目录权限</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell <br>su <br>mount -o rw,remount /<br></code></pre></td></tr></table></figure><h3 id="6-复制证书到系统证书"><a href="#6-复制证书到系统证书" class="headerlink" title="6. 复制证书到系统证书"></a>6. 复制证书到系统证书</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">cp /sdcard/269953fb.0 /system/etc/security/cacerts/269953fb.0<br></code></pre></td></tr></table></figure><h3 id="7-重启手机"><a href="#7-重启手机" class="headerlink" title="7. 重启手机"></a>7. 重启手机</h3><h3 id="8-查看证书"><a href="#8-查看证书" class="headerlink" title="8. 查看证书"></a>8. 查看证书</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean">设置-&gt;搜索 加密-&gt; 加密与凭据 -&gt; 信任的凭据 -&gt; 系统 DO_NOT_TRUST_FiddlerRoot<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>证书相关</category>
      
    </categories>
    
    
    <tags>
      
      <tag>fiddler</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>adb语法</title>
    <link href="/posts/b01a1416/"/>
    <url>/posts/b01a1416/</url>
    
    <content type="html"><![CDATA[<h2 id="adb常用命令"><a href="#adb常用命令" class="headerlink" title="adb常用命令"></a>adb常用命令</h2><h3 id="1-显示连接到计算机设备"><a href="#1-显示连接到计算机设备" class="headerlink" title="1. 显示连接到计算机设备"></a>1. 显示连接到计算机设备</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb devices<br></code></pre></td></tr></table></figure><h3 id="2-连接设备"><a href="#2-连接设备" class="headerlink" title="2. 连接设备"></a>2. 连接设备</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb connect 127.0.0.1:7555 //雷电模拟器端口<br></code></pre></td></tr></table></figure><h3 id="3-重启设备"><a href="#3-重启设备" class="headerlink" title="3. 重启设备"></a>3. 重启设备</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb reboot<br></code></pre></td></tr></table></figure><h3 id="4-查看手机安装app包名"><a href="#4-查看手机安装app包名" class="headerlink" title="4. 查看手机安装app包名"></a>4. 查看手机安装app包名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell pm list packages // 查看所有应用列表<br>adb shell pm list packages -s // 查看系统应用列表<br>adb shell pm list packages -3 // 查看第三方应用列表<br></code></pre></td></tr></table></figure><h3 id="5-安装apk"><a href="#5-安装apk" class="headerlink" title="5. 安装apk"></a>5. 安装apk</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb install &#x27;path&#x27;<br>adb -s &quot;ip_port&quot; install -r &quot;app_path&quot; // 安装指定ip<br></code></pre></td></tr></table></figure><h3 id="6-卸载apk"><a href="#6-卸载apk" class="headerlink" title="6. 卸载apk"></a>6. 卸载apk</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb uninstall &#x27;packagename&#x27;<br></code></pre></td></tr></table></figure><h3 id="7-启动app"><a href="#7-启动app" class="headerlink" title="7. 启动app"></a>7. 启动app</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell am start -n &quot;package_name&quot;/.&quot;activity_class_name&quot;<br></code></pre></td></tr></table></figure><h3 id="8-查看进程列表"><a href="#8-查看进程列表" class="headerlink" title="8. 查看进程列表"></a>8. 查看进程列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell ps<br></code></pre></td></tr></table></figure><h3 id="9-杀死进程"><a href="#9-杀死进程" class="headerlink" title="9. 杀死进程"></a>9. 杀死进程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell kill pid<br></code></pre></td></tr></table></figure><h3 id="10-查看app版本号"><a href="#10-查看app版本号" class="headerlink" title="10. 查看app版本号"></a>10. 查看app版本号</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell pm dump com.ss.android.ugc.aweme | findstr &quot;version&quot;<br></code></pre></td></tr></table></figure><h3 id="11-查看手机cpu架构"><a href="#11-查看手机cpu架构" class="headerlink" title="11. 查看手机cpu架构"></a>11. 查看手机cpu架构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell getprop ro.product.cpu.abi<br></code></pre></td></tr></table></figure><hr><p><a href="https://blog.csdn.net/weixin_43927138/article/details/90477966">参考链接</a></p><hr><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Android</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Art/ArtMethod/RegisterNative</title>
    <link href="/posts/298c61fb/"/>
    <url>/posts/298c61fb/</url>
    
    <content type="html"><![CDATA[<h1 id="FridaHook指令集"><a href="#FridaHook指令集" class="headerlink" title="FridaHook指令集"></a>FridaHook指令集</h1><h2 id="1-HookArt"><a href="#1-HookArt" class="headerlink" title="1. HookArt"></a>1. <a href="https://github.com/lasting-yang/frida_hook_libart">HookArt</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">frida -U --no-pause -f package_name -l hook_art.js -o out.log<br></code></pre></td></tr></table></figure><p><strong>HookArtSourceCode</strong>:</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">STD_STRING_SIZE</span> = <span class="hljs-number">3</span> * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">StdString</span> &#123;<br>    <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">handle</span> = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">alloc</span>(<span class="hljs-variable constant_">STD_STRING_SIZE</span>);<br>    &#125;<br><br>    <span class="hljs-title function_">dispose</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> [data, isTiny] = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_getData</span>();<br>        <span class="hljs-keyword">if</span> (!isTiny) &#123;<br>            <span class="hljs-title class_">Java</span>.<span class="hljs-property">api</span>.$delete(data);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-title function_">disposeToString</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> result = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">toString</span>();<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">dispose</span>();<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-title function_">toString</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> [data] = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_getData</span>();<br>        <span class="hljs-keyword">return</span> data.<span class="hljs-title function_">readUtf8String</span>();<br>    &#125;<br><br>    <span class="hljs-title function_">_getData</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> str = <span class="hljs-variable language_">this</span>.<span class="hljs-property">handle</span>;<br>        <span class="hljs-keyword">const</span> isTiny = (str.<span class="hljs-title function_">readU8</span>() &amp; <span class="hljs-number">1</span>) === <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">const</span> data = isTiny ? str.<span class="hljs-title function_">add</span>(<span class="hljs-number">1</span>) : str.<span class="hljs-title function_">add</span>(<span class="hljs-number">2</span> * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>).<span class="hljs-title function_">readPointer</span>();<br>        <span class="hljs-keyword">return</span> [data, isTiny];<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">prettyMethod</span>(<span class="hljs-params">method_id, withSignature</span>) &#123;<br>    <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">new</span> <span class="hljs-title class_">StdString</span>();<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-property">api</span>[<span class="hljs-string">&#x27;art::ArtMethod::PrettyMethod&#x27;</span>](result, method_id, withSignature ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">return</span> result.<span class="hljs-title function_">disposeToString</span>();<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">GetFieldID is at  0xe39b87c5 _ZN3art3JNI10GetFieldIDEP7_JNIEnvP7_jclassPKcS6_</span><br><span class="hljs-comment">GetMethodID is at  0xe39a1a19 _ZN3art3JNI11GetMethodIDEP7_JNIEnvP7_jclassPKcS6_</span><br><span class="hljs-comment">NewStringUTF is at  0xe39cff25 _ZN3art3JNI12NewStringUTFEP7_JNIEnvPKc</span><br><span class="hljs-comment">RegisterNatives is at  0xe39e08fd _ZN3art3JNI15RegisterNativesEP7_JNIEnvP7_jclassPK15JNINativeMethodi</span><br><span class="hljs-comment">GetStaticFieldID is at  0xe39c9635 _ZN3art3JNI16GetStaticFieldIDEP7_JNIEnvP7_jclassPKcS6_</span><br><span class="hljs-comment">GetStaticMethodID is at  0xe39be0ed _ZN3art3JNI17GetStaticMethodIDEP7_JNIEnvP7_jclassPKcS6_</span><br><span class="hljs-comment">GetStringUTFChars is at  0xe39d06e5 _ZN3art3JNI17GetStringUTFCharsEP7_JNIEnvP8_jstringPh</span><br><span class="hljs-comment">FindClass is at  0xe399ae5d _ZN3art3JNI9FindClassEP7_JNIEnvPKc</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook_libart</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> symbols = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">enumerateSymbolsSync</span>(<span class="hljs-string">&quot;libart.so&quot;</span>);<br>    <span class="hljs-keyword">var</span> addrGetStringUTFChars = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrNewStringUTF = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrFindClass = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrGetMethodID = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrGetStaticMethodID = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrGetFieldID = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrGetStaticFieldID = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrRegisterNatives = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> so_name = <span class="hljs-string">&quot;libsmsdk&quot;</span>;      <span class="hljs-comment">//TODO 这里写需要过滤的so</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;symbols length:&quot;</span>, symbols.<span class="hljs-property">length</span>)<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; symbols.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">var</span> symbol = symbols[i];<br>        <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;art&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp;<br>            symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;JNI&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp;<br>            symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;CheckJNI&quot;</span>) &lt; <span class="hljs-number">0</span> &amp;&amp;<br>            <span class="hljs-comment">// symbol.name.indexOf(&quot;_ZN3art3JNIILb0&quot;) &gt;= 0</span><br>            symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;_ZN3art3JNI&quot;</span>) &gt;= <span class="hljs-number">0</span><br>        ) &#123;<br>            <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;GetStringUTFChars&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrGetStringUTFChars = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;GetStringUTFChars is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;NewStringUTF&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrNewStringUTF = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;NewStringUTF is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;FindClass&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrFindClass = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;FindClass is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;GetMethodID&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrGetMethodID = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;GetMethodID is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;GetStaticMethodID&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrGetStaticMethodID = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;GetStaticMethodID is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;GetFieldID&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrGetFieldID = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;GetFieldID is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;GetStaticFieldID&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrGetStaticFieldID = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;GetStaticFieldID is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;RegisterNatives&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrRegisterNatives = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;RegisterNatives is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;CallStatic&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;CallStatic is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>                <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(symbol.<span class="hljs-property">address</span>, &#123;<br>                    <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                        <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                            <span class="hljs-keyword">var</span> java_class = args[<span class="hljs-number">1</span>];<br>                            <span class="hljs-keyword">var</span> mid = args[<span class="hljs-number">2</span>];<br>                            <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(java_class);<br>                            <span class="hljs-keyword">if</span> (class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;java.&quot;</span>) == -<span class="hljs-number">1</span> &amp;&amp; class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;android.&quot;</span>) == -<span class="hljs-number">1</span>) &#123;<br>                                <span class="hljs-keyword">var</span> method_name = <span class="hljs-title function_">prettyMethod</span>(mid, <span class="hljs-number">1</span>);<br>                                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&lt;&gt;CallStatic:&quot;</span>, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>), class_name, method_name);<br>                            &#125;<br>                        &#125;<br>                    &#125;,<br>                    <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                    &#125;<br>                &#125;);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;CallNonvirtual&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;CallNonvirtual is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>                <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(symbol.<span class="hljs-property">address</span>, &#123;<br>                    <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                        <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                            <span class="hljs-keyword">var</span> jobject = args[<span class="hljs-number">1</span>];<br>                            <span class="hljs-keyword">var</span> jclass = args[<span class="hljs-number">2</span>];<br>                            <span class="hljs-keyword">var</span> jmethodID = args[<span class="hljs-number">3</span>];<br>                            <span class="hljs-keyword">var</span> obj_class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getObjectClassName</span>(jobject);<br>                            <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(jclass);<br>                            <span class="hljs-keyword">if</span> (class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;java.&quot;</span>) == -<span class="hljs-number">1</span> &amp;&amp; class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;android.&quot;</span>) == -<span class="hljs-number">1</span>) &#123;<br>                                <span class="hljs-keyword">var</span> method_name = <span class="hljs-title function_">prettyMethod</span>(jmethodID, <span class="hljs-number">1</span>);<br>                                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&lt;&gt;CallNonvirtual:&quot;</span>, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>), class_name, obj_class_name, method_name);<br>                            &#125;<br>                        &#125;<br>                    &#125;,<br>                    <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                    &#125;<br>                &#125;);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;Call&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp; symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;Method&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Call&lt;&gt;Method is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>                <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(symbol.<span class="hljs-property">address</span>, &#123;<br>                    <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                        <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                            <span class="hljs-keyword">var</span> java_class = args[<span class="hljs-number">1</span>];<br>                            <span class="hljs-keyword">var</span> mid = args[<span class="hljs-number">2</span>];<br>                            <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getObjectClassName</span>(java_class);<br>                            <span class="hljs-keyword">if</span> (class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;java.&quot;</span>) == -<span class="hljs-number">1</span> &amp;&amp; class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;android.&quot;</span>) == -<span class="hljs-number">1</span>) &#123;<br>                                <span class="hljs-keyword">var</span> method_name = <span class="hljs-title function_">prettyMethod</span>(mid, <span class="hljs-number">1</span>);<br>                                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&lt;&gt;Call&lt;&gt;Method:&quot;</span>, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>), class_name, method_name);<br>                            &#125;<br>                        &#125;<br>                    &#125;,<br>                    <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                    &#125;<br>                &#125;);<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (addrGetStringUTFChars != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrGetStringUTFChars, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                <span class="hljs-keyword">if</span> (retval != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> bytes = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(retval);<br>                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetStringUTFChars] result:&quot;</span> + bytes, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (addrNewStringUTF != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrNewStringUTF, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">1</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> string = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">1</span>]);<br>                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[NewStringUTF] bytes:&quot;</span> + string, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (addrFindClass != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrFindClass, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">1</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">1</span>]);<br>                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[FindClass] name:&quot;</span> + name, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (addrGetMethodID != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrGetMethodID, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">2</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> clazz = args[<span class="hljs-number">1</span>];<br>                    <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(clazz);<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">2</span>]);<br>                        <span class="hljs-keyword">if</span> (args[<span class="hljs-number">3</span>] != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">3</span>]);<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetMethodID] class_name:&quot;</span> + class_name + <span class="hljs-string">&quot; name:&quot;</span> + name + <span class="hljs-string">&quot;, sig:&quot;</span> + sig, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetMethodID] class_name:&quot;</span> + class_name + <span class="hljs-string">&quot; name:&quot;</span> + name, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (addrGetStaticMethodID != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrGetStaticMethodID, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">2</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> clazz = args[<span class="hljs-number">1</span>];<br>                    <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(clazz);<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">2</span>]);<br>                        <span class="hljs-keyword">if</span> (args[<span class="hljs-number">3</span>] != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">3</span>]);<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetStaticMethodID] class_name:&quot;</span> + class_name + <span class="hljs-string">&quot; name:&quot;</span> + name + <span class="hljs-string">&quot;, sig:&quot;</span> + sig, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetStaticMethodID] class_name:&quot;</span> + class_name + <span class="hljs-string">&quot; name:&quot;</span> + name, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (addrGetFieldID != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrGetFieldID, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">2</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">2</span>]);<br>                        <span class="hljs-keyword">if</span> (args[<span class="hljs-number">3</span>] != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">3</span>]);<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetFieldID] name:&quot;</span> + name + <span class="hljs-string">&quot;, sig:&quot;</span> + sig, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetFieldID] name:&quot;</span> + name, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (addrGetStaticFieldID != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrGetStaticFieldID, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">2</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">2</span>]);<br>                        <span class="hljs-keyword">if</span> (args[<span class="hljs-number">3</span>] != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">3</span>]);<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetStaticFieldID] name:&quot;</span> + name + <span class="hljs-string">&quot;, sig:&quot;</span> + sig, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetStaticFieldID] name:&quot;</span> + name, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (addrRegisterNatives != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrRegisterNatives, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[RegisterNatives] method_count:&quot;</span>, args[<span class="hljs-number">3</span>], <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                <span class="hljs-keyword">var</span> env = args[<span class="hljs-number">0</span>];<br>                <span class="hljs-keyword">var</span> java_class = args[<span class="hljs-number">1</span>];<br>                <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(java_class);<br>                <span class="hljs-keyword">var</span> methods_ptr = <span class="hljs-title function_">ptr</span>(args[<span class="hljs-number">2</span>]);<br>                <span class="hljs-keyword">var</span> method_count = <span class="hljs-built_in">parseInt</span>(args[<span class="hljs-number">3</span>]);<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; method_count; i++) &#123;<br>                    <span class="hljs-keyword">var</span> name_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span>));<br>                    <span class="hljs-keyword">var</span> sig_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span> + <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>));<br>                    <span class="hljs-keyword">var</span> fnPtr_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span> + <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">2</span>));<br><br>                    <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(name_ptr);<br>                    <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(sig_ptr);<br>                    <span class="hljs-keyword">var</span> find_module = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(fnPtr_ptr);<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[RegisterNatives] java_class:&quot;</span>, class_name, <span class="hljs-string">&quot;name:&quot;</span>, name, <span class="hljs-string">&quot;sig:&quot;</span>, sig, <span class="hljs-string">&quot;fnPtr:&quot;</span>, fnPtr_ptr, <span class="hljs-string">&quot;module_name:&quot;</span>, find_module.<span class="hljs-property">name</span>, <span class="hljs-string">&quot;module_base:&quot;</span>, find_module.<span class="hljs-property">base</span>, <span class="hljs-string">&quot;offset:&quot;</span>, <span class="hljs-title function_">ptr</span>(fnPtr_ptr).<span class="hljs-title function_">sub</span>(find_module.<span class="hljs-property">base</span>));<br><br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br>&#125;<br><br><span class="hljs-title function_">setImmediate</span>(hook_libart);<br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><h2 id="2-HookArtMethod"><a href="#2-HookArtMethod" class="headerlink" title="2. HookArtMethod"></a>2. <a href="https://github.com/lasting-yang/frida_hook_libart">HookArtMethod</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">frida -U --no-pause -f package_name -l hook_artmethod.js -o out.log<br></code></pre></td></tr></table></figure><p><strong>HookArtMethodSourceCode</strong>:</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">STD_STRING_SIZE</span> = <span class="hljs-number">3</span> * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">StdString</span> &#123;<br>    <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">handle</span> = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">alloc</span>(<span class="hljs-variable constant_">STD_STRING_SIZE</span>);<br>    &#125;<br><br>    <span class="hljs-title function_">dispose</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> [data, isTiny] = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_getData</span>();<br>        <span class="hljs-keyword">if</span> (!isTiny) &#123;<br>            <span class="hljs-title class_">Java</span>.<span class="hljs-property">api</span>.$delete(data);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-title function_">disposeToString</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> result = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">toString</span>();<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">dispose</span>();<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-title function_">toString</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> [data] = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_getData</span>();<br>        <span class="hljs-keyword">return</span> data.<span class="hljs-title function_">readUtf8String</span>();<br>    &#125;<br><br>    <span class="hljs-title function_">_getData</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> str = <span class="hljs-variable language_">this</span>.<span class="hljs-property">handle</span>;<br>        <span class="hljs-keyword">const</span> isTiny = (str.<span class="hljs-title function_">readU8</span>() &amp; <span class="hljs-number">1</span>) === <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">const</span> data = isTiny ? str.<span class="hljs-title function_">add</span>(<span class="hljs-number">1</span>) : str.<span class="hljs-title function_">add</span>(<span class="hljs-number">2</span> * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>).<span class="hljs-title function_">readPointer</span>();<br>        <span class="hljs-keyword">return</span> [data, isTiny];<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">prettyMethod</span>(<span class="hljs-params">method_id, withSignature</span>) &#123;<br>    <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">new</span> <span class="hljs-title class_">StdString</span>();<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-property">api</span>[<span class="hljs-string">&#x27;art::ArtMethod::PrettyMethod&#x27;</span>](result, method_id, withSignature ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">return</span> result.<span class="hljs-title function_">disposeToString</span>();<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook_dlopen</span>(<span class="hljs-params">module_name, fun</span>) &#123;<br>    <span class="hljs-keyword">var</span> android_dlopen_ext = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&quot;android_dlopen_ext&quot;</span>);<br><br>    <span class="hljs-keyword">if</span> (android_dlopen_ext) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(android_dlopen_ext, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">var</span> pathptr = args[<span class="hljs-number">0</span>];<br>                <span class="hljs-keyword">if</span> (pathptr) &#123;<br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span> = (pathptr).<span class="hljs-title function_">readCString</span>();<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span>.<span class="hljs-title function_">indexOf</span>(module_name) &gt;= <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-variable language_">this</span>.<span class="hljs-property">canhook</span> = <span class="hljs-literal">true</span>;<br>                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;android_dlopen_ext:&quot;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span>);<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">canhook</span>) &#123;<br>                    <span class="hljs-title function_">fun</span>();<br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">var</span> dlopen = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&quot;dlopen&quot;</span>);<br>    <span class="hljs-keyword">if</span> (dlopen) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(dlopen, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">var</span> pathptr = args[<span class="hljs-number">0</span>];<br>                <span class="hljs-keyword">if</span> (pathptr) &#123;<br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span> = (pathptr).<span class="hljs-title function_">readCString</span>();<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span>.<span class="hljs-title function_">indexOf</span>(module_name) &gt;= <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-variable language_">this</span>.<span class="hljs-property">canhook</span> = <span class="hljs-literal">true</span>;<br>                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;dlopen:&quot;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span>);<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">canhook</span>) &#123;<br>                    <span class="hljs-title function_">fun</span>();<br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;android_dlopen_ext:&quot;</span>, android_dlopen_ext, <span class="hljs-string">&quot;dlopen:&quot;</span>, dlopen);<br>&#125;<br><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook_native</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> module_libart = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByName</span>(<span class="hljs-string">&quot;libart.so&quot;</span>);<br>    <span class="hljs-keyword">var</span> symbols = module_libart.<span class="hljs-title function_">enumerateSymbols</span>();<br>    <span class="hljs-keyword">var</span> <span class="hljs-title class_">ArtMethod</span>_Invoke = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; symbols.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">var</span> symbol = symbols[i];<br>        <span class="hljs-keyword">var</span> address = symbol.<span class="hljs-property">address</span>;<br>        <span class="hljs-keyword">var</span> name = symbol.<span class="hljs-property">name</span>;<br>        <span class="hljs-keyword">var</span> indexArtMethod = name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;ArtMethod&quot;</span>);<br>        <span class="hljs-keyword">var</span> indexInvoke = name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;Invoke&quot;</span>);<br>        <span class="hljs-keyword">var</span> indexThread = name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;Thread&quot;</span>);<br>        <span class="hljs-keyword">if</span> (indexArtMethod &gt;= <span class="hljs-number">0</span><br>            &amp;&amp; indexInvoke &gt;= <span class="hljs-number">0</span><br>            &amp;&amp; indexThread &gt;= <span class="hljs-number">0</span><br>            &amp;&amp; indexArtMethod &lt; indexInvoke<br>            &amp;&amp; indexInvoke &lt; indexThread) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(name);<br>            <span class="hljs-title class_">ArtMethod</span>_Invoke = address;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title class_">ArtMethod</span>_Invoke) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(<span class="hljs-title class_">ArtMethod</span>_Invoke, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">var</span> method_name = <span class="hljs-title function_">prettyMethod</span>(args[<span class="hljs-number">0</span>], <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">if</span> (!(method_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;java.&quot;</span>) == <span class="hljs-number">0</span> || method_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;android.&quot;</span>) == <span class="hljs-number">0</span>)) &#123;<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;ArtMethod Invoke:&quot;</span> + method_name + <span class="hljs-string">&#x27;  called from:\n&#x27;</span> +<br>                        <span class="hljs-title class_">Thread</span>.<span class="hljs-title function_">backtrace</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">context</span>, <span class="hljs-title class_">Backtracer</span>.<span class="hljs-property">ACCURATE</span>)<br>                            .<span class="hljs-title function_">map</span>(<span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-property">fromAddress</span>).<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;\n&#x27;</span>) + <span class="hljs-string">&#x27;\n&#x27;</span>);<br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title function_">hook_dlopen</span>(<span class="hljs-string">&quot;libart.so&quot;</span>, hook_native);<br>    <span class="hljs-title function_">hook_native</span>();<br>&#125;<br><br><span class="hljs-title function_">setImmediate</span>(main);<br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><h2 id="3-HookRegisterNatives"><a href="#3-HookRegisterNatives" class="headerlink" title="3. HookRegisterNatives"></a>3. <a href="https://github.com/lasting-yang/frida_hook_libart">HookRegisterNatives</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">frida -U --no-pause -f package_name -l hook_RegisterNatives.js<br></code></pre></td></tr></table></figure><p><strong>HookRegisterNativesSourceCode</strong></p><div class='spoiler collapsed'>    <div class='spoiler-title'>        show/hide    </div>    <div class='spoiler-content'>        <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">find_RegisterNatives</span>(<span class="hljs-params">params</span>) &#123;<br>    <span class="hljs-keyword">var</span> symbols = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">enumerateSymbolsSync</span>(<span class="hljs-string">&quot;libart.so&quot;</span>);<br>    <span class="hljs-keyword">var</span> addrRegisterNatives = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; symbols.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">var</span> symbol = symbols[i];<br><br>        <span class="hljs-comment">//_ZN3art3JNI15RegisterNativesEP7_JNIEnvP7_jclassPK15JNINativeMethodi</span><br>        <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;art&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp;<br>                symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;JNI&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp;<br>                symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;RegisterNatives&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp;<br>                symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;CheckJNI&quot;</span>) &lt; <span class="hljs-number">0</span>) &#123;<br>            addrRegisterNatives = symbol.<span class="hljs-property">address</span>;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;RegisterNatives is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            <span class="hljs-title function_">hook_RegisterNatives</span>(addrRegisterNatives)<br>        &#125;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook_RegisterNatives</span>(<span class="hljs-params">addrRegisterNatives</span>) &#123;<br><br>    <span class="hljs-keyword">if</span> (addrRegisterNatives != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrRegisterNatives, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[RegisterNatives] method_count:&quot;</span>, args[<span class="hljs-number">3</span>]);<br>                <span class="hljs-keyword">var</span> env = args[<span class="hljs-number">0</span>];<br>                <span class="hljs-keyword">var</span> java_class = args[<span class="hljs-number">1</span>];<br>                <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(java_class);<br>                <span class="hljs-comment">//console.log(class_name);</span><br><br>                <span class="hljs-keyword">var</span> methods_ptr = <span class="hljs-title function_">ptr</span>(args[<span class="hljs-number">2</span>]);<br><br>                <span class="hljs-keyword">var</span> method_count = <span class="hljs-built_in">parseInt</span>(args[<span class="hljs-number">3</span>]);<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; method_count; i++) &#123;<br>                    <span class="hljs-keyword">var</span> name_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span>));<br>                    <span class="hljs-keyword">var</span> sig_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span> + <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>));<br>                    <span class="hljs-keyword">var</span> fnPtr_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span> + <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">2</span>));<br><br>                    <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(name_ptr);<br>                    <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(sig_ptr);<br>                    <span class="hljs-keyword">var</span> find_module = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(fnPtr_ptr);<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[RegisterNatives] java_class:&quot;</span>, class_name, <span class="hljs-string">&quot;name:&quot;</span>, name, <span class="hljs-string">&quot;sig:&quot;</span>, sig, <span class="hljs-string">&quot;fnPtr:&quot;</span>, fnPtr_ptr,  <span class="hljs-string">&quot; fnOffset:&quot;</span>, <span class="hljs-title function_">ptr</span>(fnPtr_ptr).<span class="hljs-title function_">sub</span>(find_module.<span class="hljs-property">base</span>), <span class="hljs-string">&quot; callee:&quot;</span>, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br><br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br>&#125;<br><br><span class="hljs-title function_">setImmediate</span>(find_RegisterNatives);<br></code></pre></td></tr></table></figure><p>$$<br>e^{ix} = cosx+isinx<br>$$</p>    </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Hook框架</category>
      
      <category>Frida</category>
      
      <category>Hook脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Frida Hook</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Frida基本hook</title>
    <link href="/posts/a9c3d13e/"/>
    <url>/posts/a9c3d13e/</url>
    
    <content type="html"><![CDATA[<p><img src="img.png" alt="静态方法"><br>``</p><h3 id="1、-静态方法"><a href="#1、-静态方法" class="headerlink" title="1、 静态方法"></a>1、 静态方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">let</span> example = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;com.sign.activity.specialClass.Example&quot;</span>)<br>    example.<span class="hljs-property">static_method</span>.<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>        <span class="hljs-keyword">let</span> res = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">static_method</span>(a, b)<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;a&quot;</span>, a, <span class="hljs-string">&quot;b&quot;</span>, b, <span class="hljs-string">&quot;res&quot;</span>, res)<br>        <span class="hljs-keyword">return</span> res<br>    &#125;<br>&#125;)<br><br></code></pre></td></tr></table></figure><h3 id="2、-实例方法"><a href="#2、-实例方法" class="headerlink" title="2、 实例方法"></a>2、 实例方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">choose</span>(<span class="hljs-string">&quot;com.sign.activity.specialClass.Example&quot;</span>, &#123;<br>        <span class="hljs-attr">onMatch</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">instance</span>) &#123;<br>            instance.<span class="hljs-title function_">instance_method</span>()<br>        &#125;,<br>        <span class="hljs-attr">onComplete</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;<br>    &#125;)<br>&#125;)<br></code></pre></td></tr></table></figure><h3 id="3、重载方法"><a href="#3、重载方法" class="headerlink" title="3、重载方法"></a>3、重载方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">let</span> example = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;com.sign.activity.specialClass.Example&quot;</span>)<br>    example.<span class="hljs-property">overload_method</span>.<span class="hljs-title function_">overload</span>(<span class="hljs-string">&quot;java.lang.String&quot;</span>).<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">str</span>)&#123;<br>        <span class="hljs-keyword">let</span> res = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">overload_method</span>(str);<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;str: &quot;</span>, str, <span class="hljs-string">&quot;res: &quot;</span>, res)<br>        <span class="hljs-keyword">return</span> res;<br>    &#125;<br>    example.<span class="hljs-property">overload_method</span>.<span class="hljs-title function_">overload</span>(<span class="hljs-string">&quot;int&quot;</span>).<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">arg</span>) &#123;<br>        <span class="hljs-keyword">let</span> res = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">overload_method</span>(<span class="hljs-number">2</span>)<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;arg: &quot;</span>, arg, <span class="hljs-string">&quot;res: &quot;</span>, res)<br>        <span class="hljs-keyword">return</span> res<br>    &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Hook框架</category>
      
      <category>Frida</category>
      
      <category>Hook脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Frida Hook</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Frida安装</title>
    <link href="/posts/96901429/"/>
    <url>/posts/96901429/</url>
    
    <content type="html"><![CDATA[<h2 id="1-本地安装"><a href="#1-本地安装" class="headerlink" title="1. 本地安装"></a>1. 本地安装</h2><p><strong>pip 安装</strong><br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs commandline">pip install frida <br>pip install frida-tools<br></code></pre></td></tr></table></figure><br><strong>node安装</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">npm install frida <br></code></pre></td></tr></table></figure><p>(注意，新版本的frida需要安装frida-tools)</p><h2 id="2-手机安装frida-🔺️安装版本和本地版本一致"><a href="#2-手机安装frida-🔺️安装版本和本地版本一致" class="headerlink" title="2. 手机安装frida(🔺️安装版本和本地版本一致)"></a>2. 手机安装frida(🔺️安装版本和本地版本一致)</h2><p>下载对应版本<a href="https://github.com/frida/frida/releases">frida-server</a>, 类似<strong>frida-server-15.1.27-android-arm.xz</strong>, 注意手机CPU架构, 上传手机/data/local/tmp 目录<br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell getprop ro.product.cpu.abi // 查看手机CPU架构<br>adb push ./frida-server-15.1.27-android-arm /data/local/tmp // 上传frida-server<br></code></pre></td></tr></table></figure></p><h2 id="3-启动服务"><a href="#3-启动服务" class="headerlink" title="3. 启动服务"></a>3. 启动服务</h2> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell <br>su <br>cd /data/local/tmp<br>chmod 777 frida-server-15.1.27-android-arm<br>./frida-server-15.1.27-android-arm<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Hook框架</category>
      
      <category>Frida</category>
      
      <category>基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Frida</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>创建虚拟环境pip无法升级</title>
    <link href="/posts/c6eca636/"/>
    <url>/posts/c6eca636/</url>
    
    <content type="html"><![CDATA[<h1 id="创建虚拟环境pip无法升级"><a href="#创建虚拟环境pip无法升级" class="headerlink" title="创建虚拟环境pip无法升级"></a>创建虚拟环境pip无法升级</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">python -m pip install -U --force-reinstall pip<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>虚拟环境</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo操作</title>
    <link href="/posts/7ab4e26f/"/>
    <url>/posts/7ab4e26f/</url>
    
    <content type="html"><![CDATA[<h2 id="Hexo-命令"><a href="#Hexo-命令" class="headerlink" title="Hexo 命令"></a>Hexo 命令</h2><ol><li><p>基本命令</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ hexo clean <span class="hljs-regexp">//</span> 清除缓存<br>$ hexo g <span class="hljs-regexp">//</span> 生成静态文件<br>$ hexo s <span class="hljs-regexp">//</span> 启动服务<br>$ hexo d <span class="hljs-regexp">//</span> 部署<br></code></pre></td></tr></table></figure></li><li><p>创建文章</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss">$ hexo <span class="hljs-keyword">new</span> &lt;<span class="hljs-built_in">title</span>&gt;<br></code></pre></td></tr></table></figure></li><li><p>创建指定布局 layout</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xl">$ hexo new [layout] &lt;<span class="hljs-built_in">title</span>&gt;<br><span class="hljs-function"><span class="hljs-title">layout</span> -&gt;</span> post(文章), draft（草稿）、<span class="hljs-built_in">page</span>（页面）<br></code></pre></td></tr></table></figure></li><li><p>添加文章分类和标签</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs subunit">categories:<br>   1. 单分类<br>     - 个人博客（第一层级）<br>     - Hexo博客（第二层级）<br>   2.多分类: <br>     - [日常, 生活]<br>     - [日常, 随想]<br>     - [日记]<br><span class="hljs-keyword">tags:</span><br>  - Hexo<br>  - 博客<br></code></pre></td></tr></table></figure></li><li><p>多命令(win11 暂不支持)</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$ </span>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s<br><span class="hljs-variable">$ </span>hexo d<br></code></pre></td></tr></table></figure></li><li><p>文章加密</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">password</span>: &lt;<span class="hljs-keyword">password</span>&gt;<br></code></pre></td></tr></table></figure></li><li><p>代码块折叠</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-sliding-spoiler --save<br></code></pre></td></tr></table></figure><p>在指定代码块内输入</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs gams">&#123;% spoiler <span class="hljs-string">&quot;show/hide&quot;</span> %&#125;<br>... 代码块<br>...<br><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><br>e^&#123;ix&#125; = cosx+isinx<br><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><br>&#123;% endspoiler %&#125;<br></code></pre></td></tr></table></figure></li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
