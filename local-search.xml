<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hmac-Sha1</title>
    <link href="/posts/e019b1c3/"/>
    <url>/posts/e019b1c3/</url>
    
    <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">g, l</span>) &#123;<br>    <span class="hljs-keyword">var</span> e = &#123;&#125;, d = e.<span class="hljs-property">lib</span> = &#123;&#125;, m = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, k = d.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                m.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-keyword">new</span> m;<br>                a &amp;&amp; c.<span class="hljs-title function_">mixIn</span>(a);<br>                c.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (c.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    c.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                c.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = c;<br>                c.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> c<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                a.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(a, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c <span class="hljs-keyword">in</span> a) a.<span class="hljs-title function_">hasOwnProperty</span>(c) &amp;&amp; (<span class="hljs-variable language_">this</span>[c] = a[c]);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = a.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        p = d.<span class="hljs-property">WordArray</span> = k.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, c</span>) &#123;<br>                a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = a || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = c != l ? c : <span class="hljs-number">4</span> * a.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> (a || n).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, q = a.<span class="hljs-property">words</span>, f = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (f % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">0</span>; b &lt; a; b++) c[f + b &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (q[b &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (b % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((f + b) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; q.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (b = <span class="hljs-number">0</span>; b &lt; a; b += <span class="hljs-number">4</span>) c[f + b &gt;&gt;&gt; <span class="hljs-number">2</span>] = q[b &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> c.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(c, q);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += a;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a[c &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (c % <span class="hljs-number">4</span>);<br>                a.<span class="hljs-property">length</span> = g.<span class="hljs-title function_">ceil</span>(c / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = k.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = [], b = <span class="hljs-number">0</span>; b &lt; a; b += <span class="hljs-number">4</span>) c.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * g.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(c, a)<br>            &#125;<br>        &#125;), b = e.<span class="hljs-property">enc</span> = &#123;&#125;, n = b.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], f = <span class="hljs-number">0</span>; f &lt; a; f++) &#123;<br>                    <span class="hljs-keyword">var</span> d = c[f &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    b.<span class="hljs-title function_">push</span>((d &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    b.<span class="hljs-title function_">push</span>((d &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> b.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">length</span>, b = [], f = <span class="hljs-number">0</span>; f &lt; c; f += <span class="hljs-number">2</span>) b[f &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(a.<span class="hljs-title function_">substr</span>(f,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (f % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(b, c / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, j = b.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], f = <span class="hljs-number">0</span>; f &lt; a; f++) b.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(c[f &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> b.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">length</span>, b = [], f = <span class="hljs-number">0</span>; f &lt; c; f++) b[f &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a.<span class="hljs-title function_">charCodeAt</span>(f) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(b, c)<br>            &#125;<br>        &#125;, h = b.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(j.<span class="hljs-title function_">stringify</span>(a)))<br>                &#125; <span class="hljs-keyword">catch</span> (c) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> j.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(a)))<br>            &#125;<br>        &#125;,<br>        r = d.<span class="hljs-property">BufferedBlockAlgorithm</span> = k.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> p.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = h.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, b = c.<span class="hljs-property">words</span>, f = c.<span class="hljs-property">sigBytes</span>, d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, e = f / (<span class="hljs-number">4</span> * d),<br>                    e = a ? g.<span class="hljs-title function_">ceil</span>(e) : g.<span class="hljs-title function_">max</span>((e | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                a = e * d;<br>                f = g.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * a, f);<br>                <span class="hljs-keyword">if</span> (a) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> k = <span class="hljs-number">0</span>; k &lt; a; k += d) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(b, k);<br>                    k = b.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, a);<br>                    c.<span class="hljs-property">sigBytes</span> -= f<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> p.<span class="hljs-title function_">init</span>(k, f)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = k.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    d.<span class="hljs-property">Hasher</span> = r.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: k.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            r.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, d</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(d)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, d</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> s.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    d)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> s = e.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> e<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> g = <span class="hljs-title class_">CryptoJS</span>, l = g.<span class="hljs-property">lib</span>, e = l.<span class="hljs-property">WordArray</span>, d = l.<span class="hljs-property">Hasher</span>, m = [], l = g.<span class="hljs-property">algo</span>.<span class="hljs-property">SHA1</span> = d.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> e.<span class="hljs-title function_">init</span>([<span class="hljs-number">1732584193</span>, <span class="hljs-number">4023233417</span>, <span class="hljs-number">2562383102</span>, <span class="hljs-number">271733878</span>, <span class="hljs-number">3285377520</span>])<br>        &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">d, e</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>, n = b[<span class="hljs-number">0</span>], j = b[<span class="hljs-number">1</span>], h = b[<span class="hljs-number">2</span>], g = b[<span class="hljs-number">3</span>], l = b[<span class="hljs-number">4</span>], a = <span class="hljs-number">0</span>; <span class="hljs-number">80</span> &gt; a; a++) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-number">16</span> &gt; a) m[a] = d[e + a] | <span class="hljs-number">0</span>; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">var</span> c = m[a - <span class="hljs-number">3</span>] ^ m[a - <span class="hljs-number">8</span>] ^ m[a - <span class="hljs-number">14</span>] ^ m[a - <span class="hljs-number">16</span>];<br>                    m[a] = c &lt;&lt; <span class="hljs-number">1</span> | c &gt;&gt;&gt; <span class="hljs-number">31</span><br>                &#125;<br>                c = (n &lt;&lt; <span class="hljs-number">5</span> | n &gt;&gt;&gt; <span class="hljs-number">27</span>) + l + m[a];<br>                c = <span class="hljs-number">20</span> &gt; a ? c + ((j &amp; h | ~j &amp; g) + <span class="hljs-number">1518500249</span>) : <span class="hljs-number">40</span> &gt; a ? c + ((j ^ h ^ g) + <span class="hljs-number">1859775393</span>) : <span class="hljs-number">60</span> &gt; a ? c + ((j &amp; h | j &amp; g | h &amp; g) - <span class="hljs-number">1894007588</span>) : c + ((j ^ h ^<br>                    g) - <span class="hljs-number">899497514</span>);<br>                l = g;<br>                g = h;<br>                h = j &lt;&lt; <span class="hljs-number">30</span> | j &gt;&gt;&gt; <span class="hljs-number">2</span>;<br>                j = n;<br>                n = c<br>            &#125;<br>            b[<span class="hljs-number">0</span>] = b[<span class="hljs-number">0</span>] + n | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">1</span>] = b[<span class="hljs-number">1</span>] + j | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">2</span>] = b[<span class="hljs-number">2</span>] + h | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">3</span>] = b[<span class="hljs-number">3</span>] + g | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">4</span>] = b[<span class="hljs-number">4</span>] + l | <span class="hljs-number">0</span><br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, e = d.<span class="hljs-property">words</span>, b = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, g = <span class="hljs-number">8</span> * d.<span class="hljs-property">sigBytes</span>;<br>            e[g &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - g % <span class="hljs-number">32</span>;<br>            e[(g + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">14</span>] = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(b / <span class="hljs-number">4294967296</span>);<br>            e[(g + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">15</span>] = b;<br>            d.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * e.<span class="hljs-property">length</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span><br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> e = d.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            e.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> e<br>        &#125;<br>    &#125;);<br>    g.<span class="hljs-property">SHA1</span> = d.<span class="hljs-title function_">_createHelper</span>(l);<br>    g.<span class="hljs-property">HmacSHA1</span> = d.<span class="hljs-title function_">_createHmacHelper</span>(l)<br>&#125;)();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> g = <span class="hljs-title class_">CryptoJS</span>, l = g.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>;<br>    g.<span class="hljs-property">algo</span>.<span class="hljs-property">HMAC</span> = g.<span class="hljs-property">lib</span>.<span class="hljs-property">Base</span>.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, d</span>) &#123;<br>            e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span> = <span class="hljs-keyword">new</span> e.<span class="hljs-property">init</span>;<br>            <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> d &amp;&amp; (d = l.<span class="hljs-title function_">parse</span>(d));<br>            <span class="hljs-keyword">var</span> g = e.<span class="hljs-property">blockSize</span>, k = <span class="hljs-number">4</span> * g;<br>            d.<span class="hljs-property">sigBytes</span> &gt; k &amp;&amp; (d = e.<span class="hljs-title function_">finalize</span>(d));<br>            d.<span class="hljs-title function_">clamp</span>();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> p = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_oKey</span> = d.<span class="hljs-title function_">clone</span>(), b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iKey</span> = d.<span class="hljs-title function_">clone</span>(), n = p.<span class="hljs-property">words</span>, j = b.<span class="hljs-property">words</span>, h = <span class="hljs-number">0</span>; h &lt; g; h++) n[h] ^= <span class="hljs-number">1549556828</span>, j[h] ^= <span class="hljs-number">909522486</span>;<br>            p.<span class="hljs-property">sigBytes</span> = b.<span class="hljs-property">sigBytes</span> = k;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>;<br>            e.<span class="hljs-title function_">reset</span>();<br>            e.<span class="hljs-title function_">update</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_iKey</span>)<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>.<span class="hljs-title function_">update</span>(e);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>            <span class="hljs-keyword">var</span> d =<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>;<br>            e = d.<span class="hljs-title function_">finalize</span>(e);<br>            d.<span class="hljs-title function_">reset</span>();<br>            <span class="hljs-keyword">return</span> d.<span class="hljs-title function_">finalize</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_oKey</span>.<span class="hljs-title function_">clone</span>().<span class="hljs-title function_">concat</span>(e))<br>        &#125;<br>    &#125;)<br>&#125;)();<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hmac-Ripemd160</title>
    <link href="/posts/f418bd3e/"/>
    <url>/posts/f418bd3e/</url>
    
    <content type="html"><![CDATA[<h2 id="Hmac-Ripemd160加密源码"><a href="#Hmac-Ripemd160加密源码" class="headerlink" title="Hmac-Ripemd160加密源码"></a>Hmac-Ripemd160加密源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">(c) 2012 by C?dric Mesnil. All rights reserved.</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</span><br><span class="hljs-comment">    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">h, j</span>) &#123;<br>    <span class="hljs-keyword">var</span> c = &#123;&#125;, e = c.<span class="hljs-property">lib</span> = &#123;&#125;, A = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, l = e.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                A.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> d = <span class="hljs-keyword">new</span> A;<br>                a &amp;&amp; d.<span class="hljs-title function_">mixIn</span>(a);<br>                d.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (d.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    d.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                d.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = d;<br>                d.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> d<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                a.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(a, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d <span class="hljs-keyword">in</span> a) a.<span class="hljs-title function_">hasOwnProperty</span>(d) &amp;&amp; (<span class="hljs-variable language_">this</span>[d] = a[d]);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = a.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        m = e.<span class="hljs-property">WordArray</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, d</span>) &#123;<br>                a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = a || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = d != j ? d : <span class="hljs-number">4</span> * a.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> (a || x).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, B = a.<span class="hljs-property">words</span>, f = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (f % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">0</span>; b &lt; a; b++) d[f + b &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (B[b &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (b % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((f + b) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; B.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (b = <span class="hljs-number">0</span>; b &lt; a; b += <span class="hljs-number">4</span>) d[f + b &gt;&gt;&gt; <span class="hljs-number">2</span>] = B[b &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> d.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(d, B);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += a;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a[d &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (d % <span class="hljs-number">4</span>);<br>                a.<span class="hljs-property">length</span> = h.<span class="hljs-title function_">ceil</span>(d / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = l.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = [], b = <span class="hljs-number">0</span>; b &lt; a; b += <span class="hljs-number">4</span>) d.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * h.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> m.<span class="hljs-title function_">init</span>(d, a)<br>            &#125;<br>        &#125;), v = c.<span class="hljs-property">enc</span> = &#123;&#125;, x = v.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> d = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], f = <span class="hljs-number">0</span>; f &lt; a; f++) &#123;<br>                    <span class="hljs-keyword">var</span> c = d[f &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    b.<span class="hljs-title function_">push</span>((c &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    b.<span class="hljs-title function_">push</span>((c &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> b.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = a.<span class="hljs-property">length</span>, b = [], f = <span class="hljs-number">0</span>; f &lt; d; f += <span class="hljs-number">2</span>) b[f &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(a.<span class="hljs-title function_">substr</span>(f,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (f % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> m.<span class="hljs-title function_">init</span>(b, d / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, w = v.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> d = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = [], f = <span class="hljs-number">0</span>; f &lt; a; f++) b.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(d[f &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> b.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = a.<span class="hljs-property">length</span>, c = [], f = <span class="hljs-number">0</span>; f &lt; b; f++) c[f &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a.<span class="hljs-title function_">charCodeAt</span>(f) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (f % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> m.<span class="hljs-title function_">init</span>(c, b)<br>            &#125;<br>        &#125;, k = v.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(w.<span class="hljs-title function_">stringify</span>(a)))<br>                &#125; <span class="hljs-keyword">catch</span> (b) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> w.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(a)))<br>            &#125;<br>        &#125;,<br>        u = e.<span class="hljs-property">BufferedBlockAlgorithm</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> m.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = k.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, c = b.<span class="hljs-property">words</span>, f = b.<span class="hljs-property">sigBytes</span>, e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, k = f / (<span class="hljs-number">4</span> * e),<br>                    k = a ? h.<span class="hljs-title function_">ceil</span>(k) : h.<span class="hljs-title function_">max</span>((k | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                a = k * e;<br>                f = h.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * a, f);<br>                <span class="hljs-keyword">if</span> (a) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> u = <span class="hljs-number">0</span>; u &lt; a; u += e) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(c, u);<br>                    u = c.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, a);<br>                    b.<span class="hljs-property">sigBytes</span> -= f<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> m.<span class="hljs-title function_">init</span>(u, f)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = l.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    e.<span class="hljs-property">Hasher</span> = u.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: l.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            u.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, c</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(c)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">d, c</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> b.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    c)).<span class="hljs-title function_">finalize</span>(d)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> b = c.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> c<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> h = <span class="hljs-title class_">CryptoJS</span>, j = h.<span class="hljs-property">lib</span>, c = j.<span class="hljs-property">WordArray</span>, e = j.<span class="hljs-property">Hasher</span>, j = h.<span class="hljs-property">algo</span>,<br>        A = c.<span class="hljs-title function_">create</span>([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">7</span>, <span class="hljs-number">4</span>, <span class="hljs-number">13</span>, <span class="hljs-number">1</span>, <span class="hljs-number">10</span>, <span class="hljs-number">6</span>, <span class="hljs-number">15</span>, <span class="hljs-number">3</span>, <span class="hljs-number">12</span>, <span class="hljs-number">0</span>, <span class="hljs-number">9</span>, <span class="hljs-number">5</span>, <span class="hljs-number">2</span>, <span class="hljs-number">14</span>, <span class="hljs-number">11</span>, <span class="hljs-number">8</span>, <span class="hljs-number">3</span>, <span class="hljs-number">10</span>, <span class="hljs-number">14</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">15</span>, <span class="hljs-number">8</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0</span>, <span class="hljs-number">6</span>, <span class="hljs-number">13</span>, <span class="hljs-number">11</span>, <span class="hljs-number">5</span>, <span class="hljs-number">12</span>, <span class="hljs-number">1</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">10</span>, <span class="hljs-number">0</span>, <span class="hljs-number">8</span>, <span class="hljs-number">12</span>, <span class="hljs-number">4</span>, <span class="hljs-number">13</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>, <span class="hljs-number">15</span>, <span class="hljs-number">14</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">9</span>, <span class="hljs-number">7</span>, <span class="hljs-number">12</span>, <span class="hljs-number">2</span>, <span class="hljs-number">10</span>, <span class="hljs-number">14</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">8</span>, <span class="hljs-number">11</span>, <span class="hljs-number">6</span>, <span class="hljs-number">15</span>, <span class="hljs-number">13</span>]),<br>        l = c.<span class="hljs-title function_">create</span>([<span class="hljs-number">5</span>, <span class="hljs-number">14</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0</span>, <span class="hljs-number">9</span>, <span class="hljs-number">2</span>, <span class="hljs-number">11</span>, <span class="hljs-number">4</span>, <span class="hljs-number">13</span>, <span class="hljs-number">6</span>, <span class="hljs-number">15</span>, <span class="hljs-number">8</span>, <span class="hljs-number">1</span>, <span class="hljs-number">10</span>, <span class="hljs-number">3</span>, <span class="hljs-number">12</span>, <span class="hljs-number">6</span>, <span class="hljs-number">11</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0</span>, <span class="hljs-number">13</span>, <span class="hljs-number">5</span>, <span class="hljs-number">10</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">8</span>, <span class="hljs-number">12</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">15</span>, <span class="hljs-number">5</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>, <span class="hljs-number">14</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">8</span>, <span class="hljs-number">12</span>, <span class="hljs-number">2</span>, <span class="hljs-number">10</span>, <span class="hljs-number">0</span>, <span class="hljs-number">4</span>, <span class="hljs-number">13</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>, <span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">11</span>, <span class="hljs-number">15</span>, <span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">12</span>, <span class="hljs-number">2</span>, <span class="hljs-number">13</span>, <span class="hljs-number">9</span>, <span class="hljs-number">7</span>, <span class="hljs-number">10</span>, <span class="hljs-number">14</span>, <span class="hljs-number">12</span>, <span class="hljs-number">15</span>, <span class="hljs-number">10</span>, <span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>, <span class="hljs-number">6</span>, <span class="hljs-number">2</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>]),<br>        m = c.<span class="hljs-title function_">create</span>([<span class="hljs-number">11</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">12</span>,<br>            <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>, <span class="hljs-number">13</span>, <span class="hljs-number">11</span>, <span class="hljs-number">9</span>, <span class="hljs-number">7</span>, <span class="hljs-number">15</span>, <span class="hljs-number">7</span>, <span class="hljs-number">12</span>, <span class="hljs-number">15</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">7</span>, <span class="hljs-number">13</span>, <span class="hljs-number">12</span>, <span class="hljs-number">11</span>, <span class="hljs-number">13</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">14</span>, <span class="hljs-number">9</span>, <span class="hljs-number">13</span>, <span class="hljs-number">15</span>, <span class="hljs-number">14</span>, <span class="hljs-number">8</span>, <span class="hljs-number">13</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>, <span class="hljs-number">12</span>, <span class="hljs-number">7</span>, <span class="hljs-number">5</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">9</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">14</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>, <span class="hljs-number">12</span>, <span class="hljs-number">9</span>, <span class="hljs-number">15</span>, <span class="hljs-number">5</span>, <span class="hljs-number">11</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>, <span class="hljs-number">13</span>, <span class="hljs-number">12</span>, <span class="hljs-number">5</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">11</span>, <span class="hljs-number">8</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>]),<br>        v = c.<span class="hljs-title function_">create</span>([<span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">13</span>, <span class="hljs-number">15</span>, <span class="hljs-number">15</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">11</span>, <span class="hljs-number">14</span>, <span class="hljs-number">14</span>, <span class="hljs-number">12</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">13</span>, <span class="hljs-number">15</span>, <span class="hljs-number">7</span>, <span class="hljs-number">12</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">12</span>, <span class="hljs-number">7</span>, <span class="hljs-number">6</span>, <span class="hljs-number">15</span>, <span class="hljs-number">13</span>, <span class="hljs-number">11</span>, <span class="hljs-number">9</span>, <span class="hljs-number">7</span>, <span class="hljs-number">15</span>, <span class="hljs-number">11</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>, <span class="hljs-number">14</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">5</span>, <span class="hljs-number">14</span>, <span class="hljs-number">13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">7</span>, <span class="hljs-number">5</span>, <span class="hljs-number">15</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">11</span>, <span class="hljs-number">14</span>, <span class="hljs-number">14</span>, <span class="hljs-number">6</span>, <span class="hljs-number">14</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">12</span>, <span class="hljs-number">9</span>, <span class="hljs-number">12</span>, <span class="hljs-number">5</span>, <span class="hljs-number">15</span>, <span class="hljs-number">8</span>, <span class="hljs-number">8</span>, <span class="hljs-number">5</span>, <span class="hljs-number">12</span>, <span class="hljs-number">9</span>, <span class="hljs-number">12</span>, <span class="hljs-number">5</span>, <span class="hljs-number">14</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>, <span class="hljs-number">13</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>, <span class="hljs-number">15</span>, <span class="hljs-number">13</span>, <span class="hljs-number">11</span>, <span class="hljs-number">11</span>]),<br>        x = c.<span class="hljs-title function_">create</span>([<span class="hljs-number">0</span>, <span class="hljs-number">1518500249</span>, <span class="hljs-number">1859775393</span>, <span class="hljs-number">2400959708</span>, <span class="hljs-number">2840853838</span>]),<br>        w = c.<span class="hljs-title function_">create</span>([<span class="hljs-number">1352829926</span>, <span class="hljs-number">1548603684</span>, <span class="hljs-number">1836072691</span>,<br>            <span class="hljs-number">2053994217</span>, <span class="hljs-number">0</span>]), j = j.<span class="hljs-property">RIPEMD160</span> = e.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = c.<span class="hljs-title function_">create</span>([<span class="hljs-number">1732584193</span>, <span class="hljs-number">4023233417</span>, <span class="hljs-number">2562383102</span>, <span class="hljs-number">271733878</span>, <span class="hljs-number">3285377520</span>])<br>            &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c, e</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">0</span>; <span class="hljs-number">16</span> &gt; b; b++) &#123;<br>                    <span class="hljs-keyword">var</span> a = e + b, d = c[a];<br>                    c[a] = (d &lt;&lt; <span class="hljs-number">8</span> | d &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (d &lt;&lt; <span class="hljs-number">24</span> | d &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span><br>                &#125;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>, d = x.<span class="hljs-property">words</span>, h = w.<span class="hljs-property">words</span>, f = A.<span class="hljs-property">words</span>, j = l.<span class="hljs-property">words</span>, E = m.<span class="hljs-property">words</span>, F = v.<span class="hljs-property">words</span>, C,<br>                    n, p, q, y, D, r, s, t, z;<br>                D = C = a[<span class="hljs-number">0</span>];<br>                r = n = a[<span class="hljs-number">1</span>];<br>                s = p = a[<span class="hljs-number">2</span>];<br>                t = q = a[<span class="hljs-number">3</span>];<br>                z = y = a[<span class="hljs-number">4</span>];<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> g, b = <span class="hljs-number">0</span>; <span class="hljs-number">80</span> &gt; b; b += <span class="hljs-number">1</span>) g = C + c[e + f[b]] | <span class="hljs-number">0</span>, g = <span class="hljs-number">16</span> &gt; b ? g + ((n ^ p ^ q) + d[<span class="hljs-number">0</span>]) : <span class="hljs-number">32</span> &gt; b ? g + ((n &amp; p | ~n &amp; q) + d[<span class="hljs-number">1</span>]) : <span class="hljs-number">48</span> &gt; b ?<br>                    g + (((n | ~p) ^ q) + d[<span class="hljs-number">2</span>]) : <span class="hljs-number">64</span> &gt; b ? g + ((n &amp; q | p &amp; ~q) + d[<span class="hljs-number">3</span>]) : g + ((n ^ (p | ~q)) + d[<span class="hljs-number">4</span>]), g |= <span class="hljs-number">0</span>, g = g &lt;&lt; E[b] | g &gt;&gt;&gt; <span class="hljs-number">32</span> - E[b], g = g + y | <span class="hljs-number">0</span>, C = y, y = q, q = p &lt;&lt; <span class="hljs-number">10</span> | p &gt;&gt;&gt; <span class="hljs-number">22</span>, p = n, n = g, g = D + c[e + j[b]] | <span class="hljs-number">0</span>, g = <span class="hljs-number">16</span> &gt; b ? g + ((r ^ (s | ~t)) + h[<span class="hljs-number">0</span>]) : <span class="hljs-number">32</span> &gt; b ? g + ((r &amp; t | s &amp; ~t) + h[<span class="hljs-number">1</span>]) : <span class="hljs-number">48</span> &gt; b ? g + (((r | ~s) ^ t) + h[<span class="hljs-number">2</span>]) : <span class="hljs-number">64</span> &gt; b ? g + ((r &amp; s | ~r &amp; t) + h[<span class="hljs-number">3</span>]) : g + ((r ^ s ^ t) + h[<span class="hljs-number">4</span>]), g |= <span class="hljs-number">0</span>, g = g &lt;&lt; F[b] | g &gt;&gt;&gt; <span class="hljs-number">32</span> - F[b], g = g + z | <span class="hljs-number">0</span>, D = z, z = t, t = s &lt;&lt; <span class="hljs-number">10</span> | s &gt;&gt;&gt; <span class="hljs-number">22</span>, s = r, r = g;<br>                g = a[<span class="hljs-number">1</span>] + p + t | <span class="hljs-number">0</span>;<br>                a[<span class="hljs-number">1</span>] = a[<span class="hljs-number">2</span>] + q + z | <span class="hljs-number">0</span>;<br>                a[<span class="hljs-number">2</span>] = a[<span class="hljs-number">3</span>] + y + D | <span class="hljs-number">0</span>;<br>                a[<span class="hljs-number">3</span>] = a[<span class="hljs-number">4</span>] + C + r | <span class="hljs-number">0</span>;<br>                a[<span class="hljs-number">4</span>] = a[<span class="hljs-number">0</span>] + n + s | <span class="hljs-number">0</span>;<br>                a[<span class="hljs-number">0</span>] = g<br>            &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, e = c.<span class="hljs-property">words</span>, b = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, a = <span class="hljs-number">8</span> * c.<span class="hljs-property">sigBytes</span>;<br>                e[a &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - a % <span class="hljs-number">32</span>;<br>                e[(a + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">14</span>] = (b &lt;&lt; <span class="hljs-number">8</span> | b &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (b &lt;&lt; <span class="hljs-number">24</span> | b &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>                c.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * (e.<span class="hljs-property">length</span> + <span class="hljs-number">1</span>);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>                c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>;<br>                e = c.<span class="hljs-property">words</span>;<br>                <span class="hljs-keyword">for</span> (b = <span class="hljs-number">0</span>; <span class="hljs-number">5</span> &gt; b; b++) a = e[b], e[b] = (a &lt;&lt; <span class="hljs-number">8</span> | a &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (a &lt;&lt; <span class="hljs-number">24</span> | a &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>                <span class="hljs-keyword">return</span> c<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> c = e.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                c.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> c<br>            &#125;<br>        &#125;);<br>    h.<span class="hljs-property">RIPEMD160</span> = e.<span class="hljs-title function_">_createHelper</span>(j);<br>    h.<span class="hljs-property">HmacRIPEMD160</span> = e.<span class="hljs-title function_">_createHmacHelper</span>(j)<br>&#125;)(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> h = <span class="hljs-title class_">CryptoJS</span>, j = h.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>;<br>    h.<span class="hljs-property">algo</span>.<span class="hljs-property">HMAC</span> = h.<span class="hljs-property">lib</span>.<span class="hljs-property">Base</span>.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c, e</span>) &#123;<br>            c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span> = <span class="hljs-keyword">new</span> c.<span class="hljs-property">init</span>;<br>            <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> e &amp;&amp; (e = j.<span class="hljs-title function_">parse</span>(e));<br>            <span class="hljs-keyword">var</span> h = c.<span class="hljs-property">blockSize</span>, l = <span class="hljs-number">4</span> * h;<br>            e.<span class="hljs-property">sigBytes</span> &gt; l &amp;&amp; (e = c.<span class="hljs-title function_">finalize</span>(e));<br>            e.<span class="hljs-title function_">clamp</span>();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> m = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_oKey</span> = e.<span class="hljs-title function_">clone</span>(), v = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iKey</span> = e.<span class="hljs-title function_">clone</span>(), x = m.<span class="hljs-property">words</span>, w = v.<span class="hljs-property">words</span>, k = <span class="hljs-number">0</span>; k &lt; h; k++) x[k] ^= <span class="hljs-number">1549556828</span>, w[k] ^= <span class="hljs-number">909522486</span>;<br>            m.<span class="hljs-property">sigBytes</span> = v.<span class="hljs-property">sigBytes</span> = l;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>;<br>            c.<span class="hljs-title function_">reset</span>();<br>            c.<span class="hljs-title function_">update</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_iKey</span>)<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>.<span class="hljs-title function_">update</span>(c);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>            <span class="hljs-keyword">var</span> e =<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>;<br>            c = e.<span class="hljs-title function_">finalize</span>(c);<br>            e.<span class="hljs-title function_">reset</span>();<br>            <span class="hljs-keyword">return</span> e.<span class="hljs-title function_">finalize</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_oKey</span>.<span class="hljs-title function_">clone</span>().<span class="hljs-title function_">concat</span>(c))<br>        &#125;<br>    &#125;)<br>&#125;)();<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hmac-Md5</title>
    <link href="/posts/cf05c6c0/"/>
    <url>/posts/cf05c6c0/</url>
    
    <content type="html"><![CDATA[<h2 id="Hmac-Md5加密源码"><a href="#Hmac-Md5加密源码" class="headerlink" title="Hmac-Md5加密源码"></a>Hmac-Md5加密源码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">q, r</span>) &#123;<br>    <span class="hljs-keyword">var</span> k = &#123;&#125;, g = k.<span class="hljs-property">lib</span> = &#123;&#125;, p = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, t = g.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                p.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> j = <span class="hljs-keyword">new</span> p;<br>                b &amp;&amp; j.<span class="hljs-title function_">mixIn</span>(b);<br>                j.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (j.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    j.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                j.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = j;<br>                j.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> j<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                b.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(b, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> b<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j <span class="hljs-keyword">in</span> b) b.<span class="hljs-title function_">hasOwnProperty</span>(j) &amp;&amp; (<span class="hljs-variable language_">this</span>[j] = b[j]);<br>                b.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = b.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        n = g.<span class="hljs-property">WordArray</span> = t.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, j</span>) &#123;<br>                b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = b || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = j != r ? j : <span class="hljs-number">4</span> * b.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">return</span> (b || u).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">var</span> j = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, a = b.<span class="hljs-property">words</span>, l = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                b = b.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (l % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> h = <span class="hljs-number">0</span>; h &lt; b; h++) j[l + h &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a[h &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (h % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((l + h) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; a.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (h = <span class="hljs-number">0</span>; h &lt; b; h += <span class="hljs-number">4</span>) j[l + h &gt;&gt;&gt; <span class="hljs-number">2</span>] = a[h &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> j.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(j, a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += b;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, j = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                b[j &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>);<br>                b.<span class="hljs-property">length</span> = q.<span class="hljs-title function_">ceil</span>(j / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> b = t.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                b.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> b<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = [], a = <span class="hljs-number">0</span>; a &lt; b; a += <span class="hljs-number">4</span>) j.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * q.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> n.<span class="hljs-title function_">init</span>(j, b)<br>            &#125;<br>        &#125;), v = k.<span class="hljs-property">enc</span> = &#123;&#125;, u = v.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">var</span> a = b.<span class="hljs-property">words</span>;<br>                b = b.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> h = [], l = <span class="hljs-number">0</span>; l &lt; b; l++) &#123;<br>                    <span class="hljs-keyword">var</span> m = a[l &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (l % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    h.<span class="hljs-title function_">push</span>((m &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    h.<span class="hljs-title function_">push</span>((m &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> h.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = b.<span class="hljs-property">length</span>, h = [], l = <span class="hljs-number">0</span>; l &lt; a; l += <span class="hljs-number">2</span>) h[l &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(b.<span class="hljs-title function_">substr</span>(l,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (l % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> n.<span class="hljs-title function_">init</span>(h, a / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, a = v.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">var</span> a = b.<span class="hljs-property">words</span>;<br>                b = b.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> h = [], l = <span class="hljs-number">0</span>; l &lt; b; l++) h.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(a[l &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (l % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> h.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = b.<span class="hljs-property">length</span>, h = [], l = <span class="hljs-number">0</span>; l &lt; a; l++) h[l &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (b.<span class="hljs-title function_">charCodeAt</span>(l) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (l % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> n.<span class="hljs-title function_">init</span>(h, a)<br>            &#125;<br>        &#125;, s = v.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(a.<span class="hljs-title function_">stringify</span>(b)))<br>                &#125; <span class="hljs-keyword">catch</span> (h) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">return</span> a.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(b)))<br>            &#125;<br>        &#125;,<br>        h = g.<span class="hljs-property">BufferedBlockAlgorithm</span> = t.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> n.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> b &amp;&amp; (b = s.<span class="hljs-title function_">parse</span>(b));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(b);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += b.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, h = a.<span class="hljs-property">words</span>, l = a.<span class="hljs-property">sigBytes</span>, m = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, k = l / (<span class="hljs-number">4</span> * m),<br>                    k = b ? q.<span class="hljs-title function_">ceil</span>(k) : q.<span class="hljs-title function_">max</span>((k | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                b = k * m;<br>                l = q.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * b, l);<br>                <span class="hljs-keyword">if</span> (b) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> g = <span class="hljs-number">0</span>; g &lt; b; g += m) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(h, g);<br>                    g = h.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, b);<br>                    a.<span class="hljs-property">sigBytes</span> -= l<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> n.<span class="hljs-title function_">init</span>(g, l)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> b = t.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                b.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> b<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    g.<span class="hljs-property">Hasher</span> = h.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: t.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(b);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            h.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(b);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            b &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(b);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">a, h</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> b.<span class="hljs-title function_">init</span>(h)).<span class="hljs-title function_">finalize</span>(a)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">a, h</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> m.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(b,<br>                    h)).<span class="hljs-title function_">finalize</span>(a)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> m = k.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> k<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">q</span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">r</span>(<span class="hljs-params">a, m, b, j, g, l, k</span>) &#123;<br>        a = a + (m &amp; b | ~m &amp; j) + g + k;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; l | a &gt;&gt;&gt; <span class="hljs-number">32</span> - l) + m<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">k</span>(<span class="hljs-params">a, m, b, j, g, l, k</span>) &#123;<br>        a = a + (m &amp; j | b &amp; ~j) + g + k;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; l | a &gt;&gt;&gt; <span class="hljs-number">32</span> - l) + m<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">g</span>(<span class="hljs-params">a, m, b, j, g, l, k</span>) &#123;<br>        a = a + (m ^ b ^ j) + g + k;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; l | a &gt;&gt;&gt; <span class="hljs-number">32</span> - l) + m<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">p</span>(<span class="hljs-params">a, g, b, j, k, l, p</span>) &#123;<br>        a = a + (b ^ (g | ~j)) + k + p;<br>        <span class="hljs-keyword">return</span> (a &lt;&lt; l | a &gt;&gt;&gt; <span class="hljs-number">32</span> - l) + g<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = <span class="hljs-title class_">CryptoJS</span>, n = t.<span class="hljs-property">lib</span>, v = n.<span class="hljs-property">WordArray</span>, u = n.<span class="hljs-property">Hasher</span>, n = t.<span class="hljs-property">algo</span>, a = [], s = <span class="hljs-number">0</span>; <span class="hljs-number">64</span> &gt; s; s++) a[s] = <span class="hljs-number">4294967296</span> * q.<span class="hljs-title function_">abs</span>(q.<span class="hljs-title function_">sin</span>(s + <span class="hljs-number">1</span>)) | <span class="hljs-number">0</span>;<br>    n = n.<span class="hljs-property">MD5</span> = u.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> v.<span class="hljs-title function_">init</span>([<span class="hljs-number">1732584193</span>, <span class="hljs-number">4023233417</span>, <span class="hljs-number">2562383102</span>, <span class="hljs-number">271733878</span>])<br>        &#125;,<br>        <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">h, m</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> b = <span class="hljs-number">0</span>; <span class="hljs-number">16</span> &gt; b; b++) &#123;<br>                <span class="hljs-keyword">var</span> j = m + b, n = h[j];<br>                h[j] = (n &lt;&lt; <span class="hljs-number">8</span> | n &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (n &lt;&lt; <span class="hljs-number">24</span> | n &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span><br>            &#125;<br>            <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>, j = h[m + <span class="hljs-number">0</span>], n = h[m + <span class="hljs-number">1</span>], l = h[m + <span class="hljs-number">2</span>], q = h[m + <span class="hljs-number">3</span>], t = h[m + <span class="hljs-number">4</span>],<br>                s = h[m + <span class="hljs-number">5</span>], u = h[m + <span class="hljs-number">6</span>], v = h[m + <span class="hljs-number">7</span>], w = h[m + <span class="hljs-number">8</span>], x = h[m + <span class="hljs-number">9</span>], y = h[m + <span class="hljs-number">10</span>], z = h[m + <span class="hljs-number">11</span>],<br>                A = h[m + <span class="hljs-number">12</span>], B = h[m + <span class="hljs-number">13</span>], C = h[m + <span class="hljs-number">14</span>], D = h[m + <span class="hljs-number">15</span>], c = b[<span class="hljs-number">0</span>], d = b[<span class="hljs-number">1</span>], e = b[<span class="hljs-number">2</span>], f = b[<span class="hljs-number">3</span>],<br>                c = <span class="hljs-title function_">r</span>(c, d, e, f, j, <span class="hljs-number">7</span>, a[<span class="hljs-number">0</span>]), f = <span class="hljs-title function_">r</span>(f, c, d, e, n, <span class="hljs-number">12</span>, a[<span class="hljs-number">1</span>]), e = <span class="hljs-title function_">r</span>(e, f, c, d, l, <span class="hljs-number">17</span>, a[<span class="hljs-number">2</span>]),<br>                d = <span class="hljs-title function_">r</span>(d, e, f, c, q, <span class="hljs-number">22</span>, a[<span class="hljs-number">3</span>]), c = <span class="hljs-title function_">r</span>(c, d, e, f, t, <span class="hljs-number">7</span>, a[<span class="hljs-number">4</span>]), f = <span class="hljs-title function_">r</span>(f, c, d, e, s, <span class="hljs-number">12</span>, a[<span class="hljs-number">5</span>]),<br>                e = <span class="hljs-title function_">r</span>(e, f, c, d, u, <span class="hljs-number">17</span>, a[<span class="hljs-number">6</span>]), d = <span class="hljs-title function_">r</span>(d, e, f, c, v, <span class="hljs-number">22</span>, a[<span class="hljs-number">7</span>]),<br>                c = <span class="hljs-title function_">r</span>(c, d, e, f, w, <span class="hljs-number">7</span>, a[<span class="hljs-number">8</span>]), f = <span class="hljs-title function_">r</span>(f, c, d, e, x, <span class="hljs-number">12</span>, a[<span class="hljs-number">9</span>]), e = <span class="hljs-title function_">r</span>(e, f, c, d, y, <span class="hljs-number">17</span>, a[<span class="hljs-number">10</span>]),<br>                d = <span class="hljs-title function_">r</span>(d, e, f, c, z, <span class="hljs-number">22</span>, a[<span class="hljs-number">11</span>]), c = <span class="hljs-title function_">r</span>(c, d, e, f, A, <span class="hljs-number">7</span>, a[<span class="hljs-number">12</span>]), f = <span class="hljs-title function_">r</span>(f, c, d, e, B, <span class="hljs-number">12</span>, a[<span class="hljs-number">13</span>]),<br>                e = <span class="hljs-title function_">r</span>(e, f, c, d, C, <span class="hljs-number">17</span>, a[<span class="hljs-number">14</span>]), d = <span class="hljs-title function_">r</span>(d, e, f, c, D, <span class="hljs-number">22</span>, a[<span class="hljs-number">15</span>]), c = <span class="hljs-title function_">k</span>(c, d, e, f, n, <span class="hljs-number">5</span>, a[<span class="hljs-number">16</span>]),<br>                f = <span class="hljs-title function_">k</span>(f, c, d, e, u, <span class="hljs-number">9</span>, a[<span class="hljs-number">17</span>]), e = <span class="hljs-title function_">k</span>(e, f, c, d, z, <span class="hljs-number">14</span>, a[<span class="hljs-number">18</span>]), d = <span class="hljs-title function_">k</span>(d, e, f, c, j, <span class="hljs-number">20</span>, a[<span class="hljs-number">19</span>]),<br>                c = <span class="hljs-title function_">k</span>(c, d, e, f, s, <span class="hljs-number">5</span>, a[<span class="hljs-number">20</span>]), f = <span class="hljs-title function_">k</span>(f, c, d, e, y, <span class="hljs-number">9</span>, a[<span class="hljs-number">21</span>]), e = <span class="hljs-title function_">k</span>(e, f, c, d, D, <span class="hljs-number">14</span>, a[<span class="hljs-number">22</span>]),<br>                d = <span class="hljs-title function_">k</span>(d, e, f, c, t, <span class="hljs-number">20</span>, a[<span class="hljs-number">23</span>]), c = <span class="hljs-title function_">k</span>(c, d, e, f, x, <span class="hljs-number">5</span>, a[<span class="hljs-number">24</span>]), f = <span class="hljs-title function_">k</span>(f, c, d, e, C, <span class="hljs-number">9</span>, a[<span class="hljs-number">25</span>]),<br>                e = <span class="hljs-title function_">k</span>(e, f, c, d, q, <span class="hljs-number">14</span>, a[<span class="hljs-number">26</span>]), d = <span class="hljs-title function_">k</span>(d, e, f, c, w, <span class="hljs-number">20</span>, a[<span class="hljs-number">27</span>]), c = <span class="hljs-title function_">k</span>(c, d, e, f, B, <span class="hljs-number">5</span>, a[<span class="hljs-number">28</span>]),<br>                f = <span class="hljs-title function_">k</span>(f, c,<br>                    d, e, l, <span class="hljs-number">9</span>, a[<span class="hljs-number">29</span>]), e = <span class="hljs-title function_">k</span>(e, f, c, d, v, <span class="hljs-number">14</span>, a[<span class="hljs-number">30</span>]), d = <span class="hljs-title function_">k</span>(d, e, f, c, A, <span class="hljs-number">20</span>, a[<span class="hljs-number">31</span>]),<br>                c = <span class="hljs-title function_">g</span>(c, d, e, f, s, <span class="hljs-number">4</span>, a[<span class="hljs-number">32</span>]), f = <span class="hljs-title function_">g</span>(f, c, d, e, w, <span class="hljs-number">11</span>, a[<span class="hljs-number">33</span>]), e = <span class="hljs-title function_">g</span>(e, f, c, d, z, <span class="hljs-number">16</span>, a[<span class="hljs-number">34</span>]),<br>                d = <span class="hljs-title function_">g</span>(d, e, f, c, C, <span class="hljs-number">23</span>, a[<span class="hljs-number">35</span>]), c = <span class="hljs-title function_">g</span>(c, d, e, f, n, <span class="hljs-number">4</span>, a[<span class="hljs-number">36</span>]), f = <span class="hljs-title function_">g</span>(f, c, d, e, t, <span class="hljs-number">11</span>, a[<span class="hljs-number">37</span>]),<br>                e = <span class="hljs-title function_">g</span>(e, f, c, d, v, <span class="hljs-number">16</span>, a[<span class="hljs-number">38</span>]), d = <span class="hljs-title function_">g</span>(d, e, f, c, y, <span class="hljs-number">23</span>, a[<span class="hljs-number">39</span>]), c = <span class="hljs-title function_">g</span>(c, d, e, f, B, <span class="hljs-number">4</span>, a[<span class="hljs-number">40</span>]),<br>                f = <span class="hljs-title function_">g</span>(f, c, d, e, j, <span class="hljs-number">11</span>, a[<span class="hljs-number">41</span>]), e = <span class="hljs-title function_">g</span>(e, f, c, d, q, <span class="hljs-number">16</span>, a[<span class="hljs-number">42</span>]), d = <span class="hljs-title function_">g</span>(d, e, f, c, u, <span class="hljs-number">23</span>, a[<span class="hljs-number">43</span>]),<br>                c = <span class="hljs-title function_">g</span>(c, d, e, f, x, <span class="hljs-number">4</span>, a[<span class="hljs-number">44</span>]), f = <span class="hljs-title function_">g</span>(f, c, d, e, A, <span class="hljs-number">11</span>, a[<span class="hljs-number">45</span>]), e = <span class="hljs-title function_">g</span>(e, f, c, d, D, <span class="hljs-number">16</span>, a[<span class="hljs-number">46</span>]),<br>                d = <span class="hljs-title function_">g</span>(d, e, f, c, l, <span class="hljs-number">23</span>, a[<span class="hljs-number">47</span>]), c = <span class="hljs-title function_">p</span>(c, d, e, f, j, <span class="hljs-number">6</span>, a[<span class="hljs-number">48</span>]), f = <span class="hljs-title function_">p</span>(f, c, d, e, v, <span class="hljs-number">10</span>, a[<span class="hljs-number">49</span>]),<br>                e = <span class="hljs-title function_">p</span>(e, f, c, d,<br>                    C, <span class="hljs-number">15</span>, a[<span class="hljs-number">50</span>]), d = <span class="hljs-title function_">p</span>(d, e, f, c, s, <span class="hljs-number">21</span>, a[<span class="hljs-number">51</span>]), c = <span class="hljs-title function_">p</span>(c, d, e, f, A, <span class="hljs-number">6</span>, a[<span class="hljs-number">52</span>]),<br>                f = <span class="hljs-title function_">p</span>(f, c, d, e, q, <span class="hljs-number">10</span>, a[<span class="hljs-number">53</span>]), e = <span class="hljs-title function_">p</span>(e, f, c, d, y, <span class="hljs-number">15</span>, a[<span class="hljs-number">54</span>]), d = <span class="hljs-title function_">p</span>(d, e, f, c, n, <span class="hljs-number">21</span>, a[<span class="hljs-number">55</span>]),<br>                c = <span class="hljs-title function_">p</span>(c, d, e, f, w, <span class="hljs-number">6</span>, a[<span class="hljs-number">56</span>]), f = <span class="hljs-title function_">p</span>(f, c, d, e, D, <span class="hljs-number">10</span>, a[<span class="hljs-number">57</span>]), e = <span class="hljs-title function_">p</span>(e, f, c, d, u, <span class="hljs-number">15</span>, a[<span class="hljs-number">58</span>]),<br>                d = <span class="hljs-title function_">p</span>(d, e, f, c, B, <span class="hljs-number">21</span>, a[<span class="hljs-number">59</span>]), c = <span class="hljs-title function_">p</span>(c, d, e, f, t, <span class="hljs-number">6</span>, a[<span class="hljs-number">60</span>]), f = <span class="hljs-title function_">p</span>(f, c, d, e, z, <span class="hljs-number">10</span>, a[<span class="hljs-number">61</span>]),<br>                e = <span class="hljs-title function_">p</span>(e, f, c, d, l, <span class="hljs-number">15</span>, a[<span class="hljs-number">62</span>]), d = <span class="hljs-title function_">p</span>(d, e, f, c, x, <span class="hljs-number">21</span>, a[<span class="hljs-number">63</span>]);<br>            b[<span class="hljs-number">0</span>] = b[<span class="hljs-number">0</span>] + c | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">1</span>] = b[<span class="hljs-number">1</span>] + d | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">2</span>] = b[<span class="hljs-number">2</span>] + e | <span class="hljs-number">0</span>;<br>            b[<span class="hljs-number">3</span>] = b[<span class="hljs-number">3</span>] + f | <span class="hljs-number">0</span><br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, g = a.<span class="hljs-property">words</span>, b = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, j = <span class="hljs-number">8</span> * a.<span class="hljs-property">sigBytes</span>;<br>            g[j &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - j % <span class="hljs-number">32</span>;<br>            <span class="hljs-keyword">var</span> k = q.<span class="hljs-title function_">floor</span>(b /<br>                <span class="hljs-number">4294967296</span>);<br>            g[(j + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">15</span>] = (k &lt;&lt; <span class="hljs-number">8</span> | k &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (k &lt;&lt; <span class="hljs-number">24</span> | k &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            g[(j + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">14</span>] = (b &lt;&lt; <span class="hljs-number">8</span> | b &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (b &lt;&lt; <span class="hljs-number">24</span> | b &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * (g.<span class="hljs-property">length</span> + <span class="hljs-number">1</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>;<br>            g = a.<span class="hljs-property">words</span>;<br>            <span class="hljs-keyword">for</span> (b = <span class="hljs-number">0</span>; <span class="hljs-number">4</span> &gt; b; b++) j = g[b], g[b] = (j &lt;&lt; <span class="hljs-number">8</span> | j &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (j &lt;&lt; <span class="hljs-number">24</span> | j &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            <span class="hljs-keyword">return</span> a<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = u.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            a.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> a<br>        &#125;<br>    &#125;);<br>    t.<span class="hljs-property">MD5</span> = u.<span class="hljs-title function_">_createHelper</span>(n);<br>    t.<span class="hljs-property">HmacMD5</span> = u.<span class="hljs-title function_">_createHmacHelper</span>(n)<br>&#125;)(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> q = <span class="hljs-title class_">CryptoJS</span>, r = q.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>;<br>    q.<span class="hljs-property">algo</span>.<span class="hljs-property">HMAC</span> = q.<span class="hljs-property">lib</span>.<span class="hljs-property">Base</span>.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">k, g</span>) &#123;<br>            k = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span> = <span class="hljs-keyword">new</span> k.<span class="hljs-property">init</span>;<br>            <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> g &amp;&amp; (g = r.<span class="hljs-title function_">parse</span>(g));<br>            <span class="hljs-keyword">var</span> p = k.<span class="hljs-property">blockSize</span>, q = <span class="hljs-number">4</span> * p;<br>            g.<span class="hljs-property">sigBytes</span> &gt; q &amp;&amp; (g = k.<span class="hljs-title function_">finalize</span>(g));<br>            g.<span class="hljs-title function_">clamp</span>();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> n = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_oKey</span> = g.<span class="hljs-title function_">clone</span>(), v = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iKey</span> = g.<span class="hljs-title function_">clone</span>(), u = n.<span class="hljs-property">words</span>, a = v.<span class="hljs-property">words</span>, s = <span class="hljs-number">0</span>; s &lt; p; s++) u[s] ^= <span class="hljs-number">1549556828</span>, a[s] ^= <span class="hljs-number">909522486</span>;<br>            n.<span class="hljs-property">sigBytes</span> = v.<span class="hljs-property">sigBytes</span> = q;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> k = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>;<br>            k.<span class="hljs-title function_">reset</span>();<br>            k.<span class="hljs-title function_">update</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_iKey</span>)<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">k</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>.<span class="hljs-title function_">update</span>(k);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">k</span>) &#123;<br>            <span class="hljs-keyword">var</span> g =<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hasher</span>;<br>            k = g.<span class="hljs-title function_">finalize</span>(k);<br>            g.<span class="hljs-title function_">reset</span>();<br>            <span class="hljs-keyword">return</span> g.<span class="hljs-title function_">finalize</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_oKey</span>.<span class="hljs-title function_">clone</span>().<span class="hljs-title function_">concat</span>(k))<br>        &#125;<br>    &#125;)<br>&#125;)();<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AES</title>
    <link href="/posts/6e9c5cdb/"/>
    <url>/posts/6e9c5cdb/</url>
    
    <content type="html"><![CDATA[<h3 id="AES加密源码"><a href="#AES加密源码" class="headerlink" title="AES加密源码"></a>AES加密源码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment">CryptoJS v3.1.2</span><br><span class="hljs-comment">code.google.com/p/crypto-js</span><br><span class="hljs-comment">(c) 2009-2013 by Jeff Mott. All rights reserved.</span><br><span class="hljs-comment">code.google.com/p/crypto-js/wiki/License</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-title class_">CryptoJS</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">u, p</span>) &#123;<br>    <span class="hljs-keyword">var</span> d = &#123;&#125;, l = d.<span class="hljs-property">lib</span> = &#123;&#125;, s = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        &#125;, t = l.<span class="hljs-property">Base</span> = &#123;<br>            <span class="hljs-attr">extend</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                s.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-keyword">new</span> s;<br>                a &amp;&amp; c.<span class="hljs-title function_">mixIn</span>(a);<br>                c.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;init&quot;</span>) || (c.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    c.<span class="hljs-property">$super</span>.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>)<br>                &#125;);<br>                c.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = c;<br>                c.<span class="hljs-property">$super</span> = <span class="hljs-variable language_">this</span>;<br>                <span class="hljs-keyword">return</span> c<br>            &#125;, <span class="hljs-attr">create</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">extend</span>();<br>                a.<span class="hljs-property">init</span>.<span class="hljs-title function_">apply</span>(a, <span class="hljs-variable language_">arguments</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            &#125;, <span class="hljs-attr">mixIn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c <span class="hljs-keyword">in</span> a) a.<span class="hljs-title function_">hasOwnProperty</span>(c) &amp;&amp; (<span class="hljs-variable language_">this</span>[c] = a[c]);<br>                a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>) &amp;&amp; (<span class="hljs-variable language_">this</span>.<span class="hljs-property">toString</span> = a.<span class="hljs-property">toString</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">extend</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;<br>        &#125;,<br>        r = l.<span class="hljs-property">WordArray</span> = t.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, c</span>) &#123;<br>                a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span> = a || [];<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> = c != p ? c : <span class="hljs-number">4</span> * a.<span class="hljs-property">length</span><br>            &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> (a || v).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>            &#125;, <span class="hljs-attr">concat</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, e = a.<span class="hljs-property">words</span>, j = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clamp</span>();<br>                <span class="hljs-keyword">if</span> (j % <span class="hljs-number">4</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> k = <span class="hljs-number">0</span>; k &lt; a; k++) c[j + k &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (e[k &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (k % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((j + k) % <span class="hljs-number">4</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-number">65535</span> &lt; e.<span class="hljs-property">length</span>) <span class="hljs-keyword">for</span> (k = <span class="hljs-number">0</span>; k &lt; a; k += <span class="hljs-number">4</span>) c[j + k &gt;&gt;&gt; <span class="hljs-number">2</span>] = e[k &gt;&gt;&gt; <span class="hljs-number">2</span>]; <span class="hljs-keyword">else</span> c.<span class="hljs-property">push</span>.<span class="hljs-title function_">apply</span>(c, e);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span> += a;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>            &#125;, <span class="hljs-attr">clamp</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>, c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">sigBytes</span>;<br>                a[c &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp;= <span class="hljs-number">4294967295</span> &lt;&lt;<br>                    <span class="hljs-number">32</span> - <span class="hljs-number">8</span> * (c % <span class="hljs-number">4</span>);<br>                a.<span class="hljs-property">length</span> = u.<span class="hljs-title function_">ceil</span>(c / <span class="hljs-number">4</span>)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = t.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">words</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">random</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = [], e = <span class="hljs-number">0</span>; e &lt; a; e += <span class="hljs-number">4</span>) c.<span class="hljs-title function_">push</span>(<span class="hljs-number">4294967296</span> * u.<span class="hljs-title function_">random</span>() | <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> r.<span class="hljs-title function_">init</span>(c, a)<br>            &#125;<br>        &#125;), w = d.<span class="hljs-property">enc</span> = &#123;&#125;, v = w.<span class="hljs-property">Hex</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = [], j = <span class="hljs-number">0</span>; j &lt; a; j++) &#123;<br>                    <span class="hljs-keyword">var</span> k = c[j &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>;<br>                    e.<span class="hljs-title function_">push</span>((k &gt;&gt;&gt; <span class="hljs-number">4</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>                    e.<span class="hljs-title function_">push</span>((k &amp; <span class="hljs-number">15</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>))<br>                &#125;<br>                <span class="hljs-keyword">return</span> e.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">length</span>, e = [], j = <span class="hljs-number">0</span>; j &lt; c; j += <span class="hljs-number">2</span>) e[j &gt;&gt;&gt; <span class="hljs-number">3</span>] |= <span class="hljs-built_in">parseInt</span>(a.<span class="hljs-title function_">substr</span>(j,<br>                    <span class="hljs-number">2</span>), <span class="hljs-number">16</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">4</span> * (j % <span class="hljs-number">8</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> r.<span class="hljs-title function_">init</span>(e, c / <span class="hljs-number">2</span>)<br>            &#125;<br>        &#125;, b = w.<span class="hljs-property">Latin1</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">words</span>;<br>                a = a.<span class="hljs-property">sigBytes</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = [], j = <span class="hljs-number">0</span>; j &lt; a; j++) e.<span class="hljs-title function_">push</span>(<span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(c[j &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>));<br>                <span class="hljs-keyword">return</span> e.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = a.<span class="hljs-property">length</span>, e = [], j = <span class="hljs-number">0</span>; j &lt; c; j++) e[j &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (a.<span class="hljs-title function_">charCodeAt</span>(j) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (j % <span class="hljs-number">4</span>);<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> r.<span class="hljs-title function_">init</span>(e, c)<br>            &#125;<br>        &#125;, x = w.<span class="hljs-property">Utf8</span> = &#123;<br>            <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">decodeURIComponent</span>(<span class="hljs-built_in">escape</span>(b.<span class="hljs-title function_">stringify</span>(a)))<br>                &#125; <span class="hljs-keyword">catch</span> (c) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Malformed UTF-8 data&quot;</span>);<br>                &#125;<br>            &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">return</span> b.<span class="hljs-title function_">parse</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(a)))<br>            &#125;<br>        &#125;,<br>        q = l.<span class="hljs-property">BufferedBlockAlgorithm</span> = t.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span> = <span class="hljs-keyword">new</span> r.<span class="hljs-property">init</span>;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> = <span class="hljs-number">0</span><br>            &#125;, <span class="hljs-attr">_append</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a &amp;&amp; (a = x.<span class="hljs-title function_">parse</span>(a));<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">concat</span>(a);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span> += a.<span class="hljs-property">sigBytes</span><br>            &#125;, <span class="hljs-attr">_process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>                <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, e = c.<span class="hljs-property">words</span>, j = c.<span class="hljs-property">sigBytes</span>, k = <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>, b = j / (<span class="hljs-number">4</span> * k),<br>                    b = a ? u.<span class="hljs-title function_">ceil</span>(b) : u.<span class="hljs-title function_">max</span>((b | <span class="hljs-number">0</span>) - <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span>, <span class="hljs-number">0</span>);<br>                a = b * k;<br>                j = u.<span class="hljs-title function_">min</span>(<span class="hljs-number">4</span> * a, j);<br>                <span class="hljs-keyword">if</span> (a) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> q = <span class="hljs-number">0</span>; q &lt; a; q += k) <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doProcessBlock</span>(e, q);<br>                    q = e.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, a);<br>                    c.<span class="hljs-property">sigBytes</span> -= j<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> r.<span class="hljs-title function_">init</span>(q, j)<br>            &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">var</span> a = t.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                a.<span class="hljs-property">_data</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>.<span class="hljs-title function_">clone</span>();<br>                <span class="hljs-keyword">return</span> a<br>            &#125;, <span class="hljs-attr">_minBufferSize</span>: <span class="hljs-number">0</span><br>        &#125;);<br>    l.<span class="hljs-property">Hasher</span> = q.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: t.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>        &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            q.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>        &#125;, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span><br>        &#125;, <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(a);<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">16</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, e</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> a.<span class="hljs-title function_">init</span>(e)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;, <span class="hljs-attr">_createHmacHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">b, e</span>) &#123;<br>                <span class="hljs-keyword">return</span> (<span class="hljs-keyword">new</span> n.<span class="hljs-property">HMAC</span>.<span class="hljs-title function_">init</span>(a,<br>                    e)).<span class="hljs-title function_">finalize</span>(b)<br>            &#125;<br>        &#125;<br>    &#125;);<br>    <span class="hljs-keyword">var</span> n = d.<span class="hljs-property">algo</span> = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> d<br>&#125;(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> u = <span class="hljs-title class_">CryptoJS</span>, p = u.<span class="hljs-property">lib</span>.<span class="hljs-property">WordArray</span>;<br>    u.<span class="hljs-property">enc</span>.<span class="hljs-property">Base64</span> = &#123;<br>        <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">d</span>) &#123;<br>            <span class="hljs-keyword">var</span> l = d.<span class="hljs-property">words</span>, p = d.<span class="hljs-property">sigBytes</span>, t = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_map</span>;<br>            d.<span class="hljs-title function_">clamp</span>();<br>            d = [];<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> r = <span class="hljs-number">0</span>; r &lt; p; r += <span class="hljs-number">3</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> w = (l[r &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (r % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">16</span> | (l[r + <span class="hljs-number">1</span> &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((r + <span class="hljs-number">1</span>) % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>) &lt;&lt; <span class="hljs-number">8</span> | l[r + <span class="hljs-number">2</span> &gt;&gt;&gt; <span class="hljs-number">2</span>] &gt;&gt;&gt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * ((r + <span class="hljs-number">2</span>) % <span class="hljs-number">4</span>) &amp; <span class="hljs-number">255</span>, v = <span class="hljs-number">0</span>; <span class="hljs-number">4</span> &gt; v &amp;&amp; r + <span class="hljs-number">0.75</span> * v &lt; p; v++) d.<span class="hljs-title function_">push</span>(t.<span class="hljs-title function_">charAt</span>(w &gt;&gt;&gt; <span class="hljs-number">6</span> * (<span class="hljs-number">3</span> - v) &amp; <span class="hljs-number">63</span>));<br>            <span class="hljs-keyword">if</span> (l = t.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">64</span>)) <span class="hljs-keyword">for</span> (; d.<span class="hljs-property">length</span> % <span class="hljs-number">4</span>;) d.<span class="hljs-title function_">push</span>(l);<br>            <span class="hljs-keyword">return</span> d.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>        &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">d</span>) &#123;<br>            <span class="hljs-keyword">var</span> l = d.<span class="hljs-property">length</span>, s = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_map</span>, t = s.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">64</span>);<br>            t &amp;&amp; (t = d.<span class="hljs-title function_">indexOf</span>(t), -<span class="hljs-number">1</span> != t &amp;&amp; (l = t));<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = [], r = <span class="hljs-number">0</span>, w = <span class="hljs-number">0</span>; w &lt;<br>            l; w++) <span class="hljs-keyword">if</span> (w % <span class="hljs-number">4</span>) &#123;<br>                <span class="hljs-keyword">var</span> v = s.<span class="hljs-title function_">indexOf</span>(d.<span class="hljs-title function_">charAt</span>(w - <span class="hljs-number">1</span>)) &lt;&lt; <span class="hljs-number">2</span> * (w % <span class="hljs-number">4</span>), b = s.<span class="hljs-title function_">indexOf</span>(d.<span class="hljs-title function_">charAt</span>(w)) &gt;&gt;&gt; <span class="hljs-number">6</span> - <span class="hljs-number">2</span> * (w % <span class="hljs-number">4</span>);<br>                t[r &gt;&gt;&gt; <span class="hljs-number">2</span>] |= (v | b) &lt;&lt; <span class="hljs-number">24</span> - <span class="hljs-number">8</span> * (r % <span class="hljs-number">4</span>);<br>                r++<br>            &#125;<br>            <span class="hljs-keyword">return</span> p.<span class="hljs-title function_">create</span>(t, r)<br>        &#125;, <span class="hljs-attr">_map</span>: <span class="hljs-string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span><br>    &#125;<br>&#125;)();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params">u</span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">p</span>(<span class="hljs-params">b, n, a, c, e, j, k</span>) &#123;<br>        b = b + (n &amp; a | ~n &amp; c) + e + k;<br>        <span class="hljs-keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + n<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">d</span>(<span class="hljs-params">b, n, a, c, e, j, k</span>) &#123;<br>        b = b + (n &amp; c | a &amp; ~c) + e + k;<br>        <span class="hljs-keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + n<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">l</span>(<span class="hljs-params">b, n, a, c, e, j, k</span>) &#123;<br>        b = b + (n ^ a ^ c) + e + k;<br>        <span class="hljs-keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + n<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">s</span>(<span class="hljs-params">b, n, a, c, e, j, k</span>) &#123;<br>        b = b + (a ^ (n | ~c)) + e + k;<br>        <span class="hljs-keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="hljs-number">32</span> - j) + n<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = <span class="hljs-title class_">CryptoJS</span>, r = t.<span class="hljs-property">lib</span>, w = r.<span class="hljs-property">WordArray</span>, v = r.<span class="hljs-property">Hasher</span>, r = t.<span class="hljs-property">algo</span>, b = [], x = <span class="hljs-number">0</span>; <span class="hljs-number">64</span> &gt; x; x++) b[x] = <span class="hljs-number">4294967296</span> * u.<span class="hljs-title function_">abs</span>(u.<span class="hljs-title function_">sin</span>(x + <span class="hljs-number">1</span>)) | <span class="hljs-number">0</span>;<br>    r = r.<span class="hljs-property">MD5</span> = v.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span> = <span class="hljs-keyword">new</span> w.<span class="hljs-title function_">init</span>([<span class="hljs-number">1732584193</span>, <span class="hljs-number">4023233417</span>, <span class="hljs-number">2562383102</span>, <span class="hljs-number">271733878</span>])<br>        &#125;,<br>        <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">q, n</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-number">0</span>; <span class="hljs-number">16</span> &gt; a; a++) &#123;<br>                <span class="hljs-keyword">var</span> c = n + a, e = q[c];<br>                q[c] = (e &lt;&lt; <span class="hljs-number">8</span> | e &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (e &lt;&lt; <span class="hljs-number">24</span> | e &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span><br>            &#125;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-property">words</span>, c = q[n + <span class="hljs-number">0</span>], e = q[n + <span class="hljs-number">1</span>], j = q[n + <span class="hljs-number">2</span>], k = q[n + <span class="hljs-number">3</span>], z = q[n + <span class="hljs-number">4</span>],<br>                r = q[n + <span class="hljs-number">5</span>], t = q[n + <span class="hljs-number">6</span>], w = q[n + <span class="hljs-number">7</span>], v = q[n + <span class="hljs-number">8</span>], A = q[n + <span class="hljs-number">9</span>], B = q[n + <span class="hljs-number">10</span>], C = q[n + <span class="hljs-number">11</span>],<br>                u = q[n + <span class="hljs-number">12</span>], D = q[n + <span class="hljs-number">13</span>], E = q[n + <span class="hljs-number">14</span>], x = q[n + <span class="hljs-number">15</span>], f = a[<span class="hljs-number">0</span>], m = a[<span class="hljs-number">1</span>], g = a[<span class="hljs-number">2</span>], h = a[<span class="hljs-number">3</span>],<br>                f = <span class="hljs-title function_">p</span>(f, m, g, h, c, <span class="hljs-number">7</span>, b[<span class="hljs-number">0</span>]), h = <span class="hljs-title function_">p</span>(h, f, m, g, e, <span class="hljs-number">12</span>, b[<span class="hljs-number">1</span>]), g = <span class="hljs-title function_">p</span>(g, h, f, m, j, <span class="hljs-number">17</span>, b[<span class="hljs-number">2</span>]),<br>                m = <span class="hljs-title function_">p</span>(m, g, h, f, k, <span class="hljs-number">22</span>, b[<span class="hljs-number">3</span>]), f = <span class="hljs-title function_">p</span>(f, m, g, h, z, <span class="hljs-number">7</span>, b[<span class="hljs-number">4</span>]), h = <span class="hljs-title function_">p</span>(h, f, m, g, r, <span class="hljs-number">12</span>, b[<span class="hljs-number">5</span>]),<br>                g = <span class="hljs-title function_">p</span>(g, h, f, m, t, <span class="hljs-number">17</span>, b[<span class="hljs-number">6</span>]), m = <span class="hljs-title function_">p</span>(m, g, h, f, w, <span class="hljs-number">22</span>, b[<span class="hljs-number">7</span>]),<br>                f = <span class="hljs-title function_">p</span>(f, m, g, h, v, <span class="hljs-number">7</span>, b[<span class="hljs-number">8</span>]), h = <span class="hljs-title function_">p</span>(h, f, m, g, A, <span class="hljs-number">12</span>, b[<span class="hljs-number">9</span>]), g = <span class="hljs-title function_">p</span>(g, h, f, m, B, <span class="hljs-number">17</span>, b[<span class="hljs-number">10</span>]),<br>                m = <span class="hljs-title function_">p</span>(m, g, h, f, C, <span class="hljs-number">22</span>, b[<span class="hljs-number">11</span>]), f = <span class="hljs-title function_">p</span>(f, m, g, h, u, <span class="hljs-number">7</span>, b[<span class="hljs-number">12</span>]), h = <span class="hljs-title function_">p</span>(h, f, m, g, D, <span class="hljs-number">12</span>, b[<span class="hljs-number">13</span>]),<br>                g = <span class="hljs-title function_">p</span>(g, h, f, m, E, <span class="hljs-number">17</span>, b[<span class="hljs-number">14</span>]), m = <span class="hljs-title function_">p</span>(m, g, h, f, x, <span class="hljs-number">22</span>, b[<span class="hljs-number">15</span>]), f = <span class="hljs-title function_">d</span>(f, m, g, h, e, <span class="hljs-number">5</span>, b[<span class="hljs-number">16</span>]),<br>                h = <span class="hljs-title function_">d</span>(h, f, m, g, t, <span class="hljs-number">9</span>, b[<span class="hljs-number">17</span>]), g = <span class="hljs-title function_">d</span>(g, h, f, m, C, <span class="hljs-number">14</span>, b[<span class="hljs-number">18</span>]), m = <span class="hljs-title function_">d</span>(m, g, h, f, c, <span class="hljs-number">20</span>, b[<span class="hljs-number">19</span>]),<br>                f = <span class="hljs-title function_">d</span>(f, m, g, h, r, <span class="hljs-number">5</span>, b[<span class="hljs-number">20</span>]), h = <span class="hljs-title function_">d</span>(h, f, m, g, B, <span class="hljs-number">9</span>, b[<span class="hljs-number">21</span>]), g = <span class="hljs-title function_">d</span>(g, h, f, m, x, <span class="hljs-number">14</span>, b[<span class="hljs-number">22</span>]),<br>                m = <span class="hljs-title function_">d</span>(m, g, h, f, z, <span class="hljs-number">20</span>, b[<span class="hljs-number">23</span>]), f = <span class="hljs-title function_">d</span>(f, m, g, h, A, <span class="hljs-number">5</span>, b[<span class="hljs-number">24</span>]), h = <span class="hljs-title function_">d</span>(h, f, m, g, E, <span class="hljs-number">9</span>, b[<span class="hljs-number">25</span>]),<br>                g = <span class="hljs-title function_">d</span>(g, h, f, m, k, <span class="hljs-number">14</span>, b[<span class="hljs-number">26</span>]), m = <span class="hljs-title function_">d</span>(m, g, h, f, v, <span class="hljs-number">20</span>, b[<span class="hljs-number">27</span>]), f = <span class="hljs-title function_">d</span>(f, m, g, h, D, <span class="hljs-number">5</span>, b[<span class="hljs-number">28</span>]),<br>                h = <span class="hljs-title function_">d</span>(h, f,<br>                    m, g, j, <span class="hljs-number">9</span>, b[<span class="hljs-number">29</span>]), g = <span class="hljs-title function_">d</span>(g, h, f, m, w, <span class="hljs-number">14</span>, b[<span class="hljs-number">30</span>]), m = <span class="hljs-title function_">d</span>(m, g, h, f, u, <span class="hljs-number">20</span>, b[<span class="hljs-number">31</span>]),<br>                f = <span class="hljs-title function_">l</span>(f, m, g, h, r, <span class="hljs-number">4</span>, b[<span class="hljs-number">32</span>]), h = <span class="hljs-title function_">l</span>(h, f, m, g, v, <span class="hljs-number">11</span>, b[<span class="hljs-number">33</span>]), g = <span class="hljs-title function_">l</span>(g, h, f, m, C, <span class="hljs-number">16</span>, b[<span class="hljs-number">34</span>]),<br>                m = <span class="hljs-title function_">l</span>(m, g, h, f, E, <span class="hljs-number">23</span>, b[<span class="hljs-number">35</span>]), f = <span class="hljs-title function_">l</span>(f, m, g, h, e, <span class="hljs-number">4</span>, b[<span class="hljs-number">36</span>]), h = <span class="hljs-title function_">l</span>(h, f, m, g, z, <span class="hljs-number">11</span>, b[<span class="hljs-number">37</span>]),<br>                g = <span class="hljs-title function_">l</span>(g, h, f, m, w, <span class="hljs-number">16</span>, b[<span class="hljs-number">38</span>]), m = <span class="hljs-title function_">l</span>(m, g, h, f, B, <span class="hljs-number">23</span>, b[<span class="hljs-number">39</span>]), f = <span class="hljs-title function_">l</span>(f, m, g, h, D, <span class="hljs-number">4</span>, b[<span class="hljs-number">40</span>]),<br>                h = <span class="hljs-title function_">l</span>(h, f, m, g, c, <span class="hljs-number">11</span>, b[<span class="hljs-number">41</span>]), g = <span class="hljs-title function_">l</span>(g, h, f, m, k, <span class="hljs-number">16</span>, b[<span class="hljs-number">42</span>]), m = <span class="hljs-title function_">l</span>(m, g, h, f, t, <span class="hljs-number">23</span>, b[<span class="hljs-number">43</span>]),<br>                f = <span class="hljs-title function_">l</span>(f, m, g, h, A, <span class="hljs-number">4</span>, b[<span class="hljs-number">44</span>]), h = <span class="hljs-title function_">l</span>(h, f, m, g, u, <span class="hljs-number">11</span>, b[<span class="hljs-number">45</span>]), g = <span class="hljs-title function_">l</span>(g, h, f, m, x, <span class="hljs-number">16</span>, b[<span class="hljs-number">46</span>]),<br>                m = <span class="hljs-title function_">l</span>(m, g, h, f, j, <span class="hljs-number">23</span>, b[<span class="hljs-number">47</span>]), f = <span class="hljs-title function_">s</span>(f, m, g, h, c, <span class="hljs-number">6</span>, b[<span class="hljs-number">48</span>]), h = <span class="hljs-title function_">s</span>(h, f, m, g, w, <span class="hljs-number">10</span>, b[<span class="hljs-number">49</span>]),<br>                g = <span class="hljs-title function_">s</span>(g, h, f, m,<br>                    E, <span class="hljs-number">15</span>, b[<span class="hljs-number">50</span>]), m = <span class="hljs-title function_">s</span>(m, g, h, f, r, <span class="hljs-number">21</span>, b[<span class="hljs-number">51</span>]), f = <span class="hljs-title function_">s</span>(f, m, g, h, u, <span class="hljs-number">6</span>, b[<span class="hljs-number">52</span>]),<br>                h = <span class="hljs-title function_">s</span>(h, f, m, g, k, <span class="hljs-number">10</span>, b[<span class="hljs-number">53</span>]), g = <span class="hljs-title function_">s</span>(g, h, f, m, B, <span class="hljs-number">15</span>, b[<span class="hljs-number">54</span>]), m = <span class="hljs-title function_">s</span>(m, g, h, f, e, <span class="hljs-number">21</span>, b[<span class="hljs-number">55</span>]),<br>                f = <span class="hljs-title function_">s</span>(f, m, g, h, v, <span class="hljs-number">6</span>, b[<span class="hljs-number">56</span>]), h = <span class="hljs-title function_">s</span>(h, f, m, g, x, <span class="hljs-number">10</span>, b[<span class="hljs-number">57</span>]), g = <span class="hljs-title function_">s</span>(g, h, f, m, t, <span class="hljs-number">15</span>, b[<span class="hljs-number">58</span>]),<br>                m = <span class="hljs-title function_">s</span>(m, g, h, f, D, <span class="hljs-number">21</span>, b[<span class="hljs-number">59</span>]), f = <span class="hljs-title function_">s</span>(f, m, g, h, z, <span class="hljs-number">6</span>, b[<span class="hljs-number">60</span>]), h = <span class="hljs-title function_">s</span>(h, f, m, g, C, <span class="hljs-number">10</span>, b[<span class="hljs-number">61</span>]),<br>                g = <span class="hljs-title function_">s</span>(g, h, f, m, j, <span class="hljs-number">15</span>, b[<span class="hljs-number">62</span>]), m = <span class="hljs-title function_">s</span>(m, g, h, f, A, <span class="hljs-number">21</span>, b[<span class="hljs-number">63</span>]);<br>            a[<span class="hljs-number">0</span>] = a[<span class="hljs-number">0</span>] + f | <span class="hljs-number">0</span>;<br>            a[<span class="hljs-number">1</span>] = a[<span class="hljs-number">1</span>] + m | <span class="hljs-number">0</span>;<br>            a[<span class="hljs-number">2</span>] = a[<span class="hljs-number">2</span>] + g | <span class="hljs-number">0</span>;<br>            a[<span class="hljs-number">3</span>] = a[<span class="hljs-number">3</span>] + h | <span class="hljs-number">0</span><br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, n = b.<span class="hljs-property">words</span>, a = <span class="hljs-number">8</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nDataBytes</span>, c = <span class="hljs-number">8</span> * b.<span class="hljs-property">sigBytes</span>;<br>            n[c &gt;&gt;&gt; <span class="hljs-number">5</span>] |= <span class="hljs-number">128</span> &lt;&lt; <span class="hljs-number">24</span> - c % <span class="hljs-number">32</span>;<br>            <span class="hljs-keyword">var</span> e = u.<span class="hljs-title function_">floor</span>(a /<br>                <span class="hljs-number">4294967296</span>);<br>            n[(c + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">15</span>] = (e &lt;&lt; <span class="hljs-number">8</span> | e &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (e &lt;&lt; <span class="hljs-number">24</span> | e &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            n[(c + <span class="hljs-number">64</span> &gt;&gt;&gt; <span class="hljs-number">9</span> &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">14</span>] = (a &lt;&lt; <span class="hljs-number">8</span> | a &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (a &lt;&lt; <span class="hljs-number">24</span> | a &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            b.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * (n.<span class="hljs-property">length</span> + <span class="hljs-number">1</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>();<br>            b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>;<br>            n = b.<span class="hljs-property">words</span>;<br>            <span class="hljs-keyword">for</span> (a = <span class="hljs-number">0</span>; <span class="hljs-number">4</span> &gt; a; a++) c = n[a], n[a] = (c &lt;&lt; <span class="hljs-number">8</span> | c &gt;&gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">16711935</span> | (c &lt;&lt; <span class="hljs-number">24</span> | c &gt;&gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">4278255360</span>;<br>            <span class="hljs-keyword">return</span> b<br>        &#125;, <span class="hljs-attr">clone</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> b = v.<span class="hljs-property">clone</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            b.<span class="hljs-property">_hash</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_hash</span>.<span class="hljs-title function_">clone</span>();<br>            <span class="hljs-keyword">return</span> b<br>        &#125;<br>    &#125;);<br>    t.<span class="hljs-property">MD5</span> = v.<span class="hljs-title function_">_createHelper</span>(r);<br>    t.<span class="hljs-property">HmacMD5</span> = v.<span class="hljs-title function_">_createHmacHelper</span>(r)<br>&#125;)(<span class="hljs-title class_">Math</span>);<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> u = <span class="hljs-title class_">CryptoJS</span>, p = u.<span class="hljs-property">lib</span>, d = p.<span class="hljs-property">Base</span>, l = p.<span class="hljs-property">WordArray</span>, p = u.<span class="hljs-property">algo</span>, s = p.<span class="hljs-property">EvpKDF</span> = d.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: d.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">keySize</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">hasher</span>: p.<span class="hljs-property">MD5</span>, <span class="hljs-attr">iterations</span>: <span class="hljs-number">1</span>&#125;), <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">d</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(d)<br>        &#125;, <span class="hljs-attr">compute</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">d, r</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> p = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>, s = p.<span class="hljs-property">hasher</span>.<span class="hljs-title function_">create</span>(), b = l.<span class="hljs-title function_">create</span>(), u = b.<span class="hljs-property">words</span>, q = p.<span class="hljs-property">keySize</span>, p = p.<span class="hljs-property">iterations</span>; u.<span class="hljs-property">length</span> &lt; q;) &#123;<br>                n &amp;&amp; s.<span class="hljs-title function_">update</span>(n);<br>                <span class="hljs-keyword">var</span> n = s.<span class="hljs-title function_">update</span>(d).<span class="hljs-title function_">finalize</span>(r);<br>                s.<span class="hljs-title function_">reset</span>();<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-number">1</span>; a &lt; p; a++) n = s.<span class="hljs-title function_">finalize</span>(n), s.<span class="hljs-title function_">reset</span>();<br>                b.<span class="hljs-title function_">concat</span>(n)<br>            &#125;<br>            b.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * q;<br>            <span class="hljs-keyword">return</span> b<br>        &#125;<br>    &#125;);<br>    u.<span class="hljs-property">EvpKDF</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">d, l, p</span>) &#123;<br>        <span class="hljs-keyword">return</span> s.<span class="hljs-title function_">create</span>(p).<span class="hljs-title function_">compute</span>(d,<br>            l)<br>    &#125;<br>&#125;)();<br><span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">lib</span>.<span class="hljs-property">Cipher</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">u</span>) &#123;<br>    <span class="hljs-keyword">var</span> p = <span class="hljs-title class_">CryptoJS</span>, d = p.<span class="hljs-property">lib</span>, l = d.<span class="hljs-property">Base</span>, s = d.<span class="hljs-property">WordArray</span>, t = d.<span class="hljs-property">BufferedBlockAlgorithm</span>, r = p.<span class="hljs-property">enc</span>.<span class="hljs-property">Base64</span>,<br>        w = p.<span class="hljs-property">algo</span>.<span class="hljs-property">EvpKDF</span>, v = d.<span class="hljs-property">Cipher</span> = t.<span class="hljs-title function_">extend</span>(&#123;<br>            <span class="hljs-attr">cfg</span>: l.<span class="hljs-title function_">extend</span>(), <span class="hljs-attr">createEncryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">create</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_ENC_XFORM_MODE</span>, e, a)<br>            &#125;, <span class="hljs-attr">createDecryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">create</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_DEC_XFORM_MODE</span>, e, a)<br>            &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a, b</span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(b);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_xformMode</span> = e;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">_key</span> = a;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">reset</span>()<br>            &#125;, <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                t.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doReset</span>()<br>            &#125;, <span class="hljs-attr">process</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(e);<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>()<br>            &#125;,<br>            <span class="hljs-attr">finalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>                e &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_append</span>(e);<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doFinalize</span>()<br>            &#125;, <span class="hljs-attr">keySize</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">ivSize</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">_ENC_XFORM_MODE</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">_DEC_XFORM_MODE</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">_createHelper</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>                <span class="hljs-keyword">return</span> &#123;<br>                    <span class="hljs-attr">encrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, k, d</span>) &#123;<br>                        <span class="hljs-keyword">return</span> (<span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> k ? c : a).<span class="hljs-title function_">encrypt</span>(e, b, k, d)<br>                    &#125;, <span class="hljs-attr">decrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, k, d</span>) &#123;<br>                        <span class="hljs-keyword">return</span> (<span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> k ? c : a).<span class="hljs-title function_">decrypt</span>(e, b, k, d)<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;);<br>    d.<span class="hljs-property">StreamCipher</span> = v.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>(!<span class="hljs-number">0</span>)<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">1</span><br>    &#125;);<br>    <span class="hljs-keyword">var</span> b = p.<span class="hljs-property">mode</span> = &#123;&#125;, x = <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a, b</span>) &#123;<br>        <span class="hljs-keyword">var</span> c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iv</span>;<br>        c ? <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iv</span> = u : c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_prevBlock</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> d = <span class="hljs-number">0</span>; d &lt; b; d++) e[a + d] ^=<br>            c[d]<br>    &#125;, q = (d.<span class="hljs-property">BlockCipherMode</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">createEncryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">Encryptor</span>.<span class="hljs-title function_">create</span>(e, a)<br>        &#125;, <span class="hljs-attr">createDecryptor</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">Decryptor</span>.<span class="hljs-title function_">create</span>(e, a)<br>        &#125;, <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_cipher</span> = e;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_iv</span> = a<br>        &#125;<br>    &#125;)).<span class="hljs-title function_">extend</span>();<br>    q.<span class="hljs-property">Encryptor</span> = q.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">processBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>            <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_cipher</span>, c = b.<span class="hljs-property">blockSize</span>;<br>            x.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, e, a, c);<br>            b.<span class="hljs-title function_">encryptBlock</span>(e, a);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_prevBlock</span> = e.<span class="hljs-title function_">slice</span>(a, a + c)<br>        &#125;<br>    &#125;);<br>    q.<span class="hljs-property">Decryptor</span> = q.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">processBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e, a</span>) &#123;<br>            <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_cipher</span>, c = b.<span class="hljs-property">blockSize</span>, d = e.<span class="hljs-title function_">slice</span>(a, a + c);<br>            b.<span class="hljs-title function_">decryptBlock</span>(e, a);<br>            x.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>,<br>                e, a, c);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_prevBlock</span> = d<br>        &#125;<br>    &#125;);<br>    b = b.<span class="hljs-property">CBC</span> = q;<br>    q = (p.<span class="hljs-property">pad</span> = &#123;&#125;).<span class="hljs-property">Pkcs7</span> = &#123;<br>        <span class="hljs-attr">pad</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> c = <span class="hljs-number">4</span> * b, c = c - a.<span class="hljs-property">sigBytes</span> % c, d = c &lt;&lt; <span class="hljs-number">24</span> | c &lt;&lt; <span class="hljs-number">16</span> | c &lt;&lt; <span class="hljs-number">8</span> | c, l = [], n = <span class="hljs-number">0</span>; n &lt; c; n += <span class="hljs-number">4</span>) l.<span class="hljs-title function_">push</span>(d);<br>            c = s.<span class="hljs-title function_">create</span>(l, c);<br>            a.<span class="hljs-title function_">concat</span>(c)<br>        &#125;, <span class="hljs-attr">unpad</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a.<span class="hljs-property">sigBytes</span> -= a.<span class="hljs-property">words</span>[a.<span class="hljs-property">sigBytes</span> - <span class="hljs-number">1</span> &gt;&gt;&gt; <span class="hljs-number">2</span>] &amp; <span class="hljs-number">255</span><br>        &#125;<br>    &#125;;<br>    d.<span class="hljs-property">BlockCipher</span> = v.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: v.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">mode</span>: b, <span class="hljs-attr">padding</span>: q&#125;), <span class="hljs-attr">reset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            v.<span class="hljs-property">reset</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>, b = a.<span class="hljs-property">iv</span>, a = a.<span class="hljs-property">mode</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">_xformMode</span> == <span class="hljs-variable language_">this</span>.<span class="hljs-property">_ENC_XFORM_MODE</span>) <span class="hljs-keyword">var</span> c = a.<span class="hljs-property">createEncryptor</span>; <span class="hljs-keyword">else</span> c = a.<span class="hljs-property">createDecryptor</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">_minBufferSize</span> = <span class="hljs-number">1</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_mode</span> = c.<span class="hljs-title function_">call</span>(a,<br>                <span class="hljs-variable language_">this</span>, b &amp;&amp; b.<span class="hljs-property">words</span>)<br>        &#125;, <span class="hljs-attr">_doProcessBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">_mode</span>.<span class="hljs-title function_">processBlock</span>(a, b)<br>        &#125;, <span class="hljs-attr">_doFinalize</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-property">padding</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">_xformMode</span> == <span class="hljs-variable language_">this</span>.<span class="hljs-property">_ENC_XFORM_MODE</span>) &#123;<br>                a.<span class="hljs-title function_">pad</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">_data</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">blockSize</span>);<br>                <span class="hljs-keyword">var</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>(!<span class="hljs-number">0</span>)<br>            &#125; <span class="hljs-keyword">else</span> b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_process</span>(!<span class="hljs-number">0</span>), a.<span class="hljs-title function_">unpad</span>(b);<br>            <span class="hljs-keyword">return</span> b<br>        &#125;, <span class="hljs-attr">blockSize</span>: <span class="hljs-number">4</span><br>    &#125;);<br>    <span class="hljs-keyword">var</span> n = d.<span class="hljs-property">CipherParams</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">init</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">mixIn</span>(a)<br>        &#125;, <span class="hljs-attr">toString</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">return</span> (a || <span class="hljs-variable language_">this</span>.<span class="hljs-property">formatter</span>).<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>)<br>        &#125;<br>    &#125;), b = (p.<span class="hljs-property">format</span> = &#123;&#125;).<span class="hljs-property">OpenSSL</span> = &#123;<br>        <span class="hljs-attr">stringify</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">ciphertext</span>;<br>            a = a.<span class="hljs-property">salt</span>;<br>            <span class="hljs-keyword">return</span> (a ? s.<span class="hljs-title function_">create</span>([<span class="hljs-number">1398893684</span>,<br>                <span class="hljs-number">1701076831</span>]).<span class="hljs-title function_">concat</span>(a).<span class="hljs-title function_">concat</span>(b) : b).<span class="hljs-title function_">toString</span>(r)<br>        &#125;, <span class="hljs-attr">parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a</span>) &#123;<br>            a = r.<span class="hljs-title function_">parse</span>(a);<br>            <span class="hljs-keyword">var</span> b = a.<span class="hljs-property">words</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-number">1398893684</span> == b[<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-number">1701076831</span> == b[<span class="hljs-number">1</span>]) &#123;<br>                <span class="hljs-keyword">var</span> c = s.<span class="hljs-title function_">create</span>(b.<span class="hljs-title function_">slice</span>(<span class="hljs-number">2</span>, <span class="hljs-number">4</span>));<br>                b.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>);<br>                a.<span class="hljs-property">sigBytes</span> -= <span class="hljs-number">16</span><br>            &#125;<br>            <span class="hljs-keyword">return</span> n.<span class="hljs-title function_">create</span>(&#123;<span class="hljs-attr">ciphertext</span>: a, <span class="hljs-attr">salt</span>: c&#125;)<br>        &#125;<br>    &#125;, a = d.<span class="hljs-property">SerializableCipher</span> = l.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: l.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">format</span>: b&#125;), <span class="hljs-attr">encrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, c, d</span>) &#123;<br>            d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(d);<br>            <span class="hljs-keyword">var</span> l = a.<span class="hljs-title function_">createEncryptor</span>(c, d);<br>            b = l.<span class="hljs-title function_">finalize</span>(b);<br>            l = l.<span class="hljs-property">cfg</span>;<br>            <span class="hljs-keyword">return</span> n.<span class="hljs-title function_">create</span>(&#123;<br>                <span class="hljs-attr">ciphertext</span>: b,<br>                <span class="hljs-attr">key</span>: c,<br>                <span class="hljs-attr">iv</span>: l.<span class="hljs-property">iv</span>,<br>                <span class="hljs-attr">algorithm</span>: a,<br>                <span class="hljs-attr">mode</span>: l.<span class="hljs-property">mode</span>,<br>                <span class="hljs-attr">padding</span>: l.<span class="hljs-property">padding</span>,<br>                <span class="hljs-attr">blockSize</span>: a.<span class="hljs-property">blockSize</span>,<br>                <span class="hljs-attr">formatter</span>: d.<span class="hljs-property">format</span><br>            &#125;)<br>        &#125;,<br>        <span class="hljs-attr">decrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, c, d</span>) &#123;<br>            d = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(d);<br>            b = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_parse</span>(b, d.<span class="hljs-property">format</span>);<br>            <span class="hljs-keyword">return</span> a.<span class="hljs-title function_">createDecryptor</span>(c, d).<span class="hljs-title function_">finalize</span>(b.<span class="hljs-property">ciphertext</span>)<br>        &#125;, <span class="hljs-attr">_parse</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;string&quot;</span> == <span class="hljs-keyword">typeof</span> a ? b.<span class="hljs-title function_">parse</span>(a, <span class="hljs-variable language_">this</span>) : a<br>        &#125;<br>    &#125;), p = (p.<span class="hljs-property">kdf</span> = &#123;&#125;).<span class="hljs-property">OpenSSL</span> = &#123;<br>        <span class="hljs-attr">execute</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, c, d</span>) &#123;<br>            d || (d = s.<span class="hljs-title function_">random</span>(<span class="hljs-number">8</span>));<br>            a = w.<span class="hljs-title function_">create</span>(&#123;<span class="hljs-attr">keySize</span>: b + c&#125;).<span class="hljs-title function_">compute</span>(a, d);<br>            c = s.<span class="hljs-title function_">create</span>(a.<span class="hljs-property">words</span>.<span class="hljs-title function_">slice</span>(b), <span class="hljs-number">4</span> * c);<br>            a.<span class="hljs-property">sigBytes</span> = <span class="hljs-number">4</span> * b;<br>            <span class="hljs-keyword">return</span> n.<span class="hljs-title function_">create</span>(&#123;<span class="hljs-attr">key</span>: a, <span class="hljs-attr">iv</span>: c, <span class="hljs-attr">salt</span>: d&#125;)<br>        &#125;<br>    &#125;, c = d.<span class="hljs-property">PasswordBasedCipher</span> = a.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">cfg</span>: a.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(&#123;<span class="hljs-attr">kdf</span>: p&#125;), <span class="hljs-attr">encrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, c, d, l</span>) &#123;<br>            l = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(l);<br>            d = l.<span class="hljs-property">kdf</span>.<span class="hljs-title function_">execute</span>(d,<br>                b.<span class="hljs-property">keySize</span>, b.<span class="hljs-property">ivSize</span>);<br>            l.<span class="hljs-property">iv</span> = d.<span class="hljs-property">iv</span>;<br>            b = a.<span class="hljs-property">encrypt</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, b, c, d.<span class="hljs-property">key</span>, l);<br>            b.<span class="hljs-title function_">mixIn</span>(d);<br>            <span class="hljs-keyword">return</span> b<br>        &#125;, <span class="hljs-attr">decrypt</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">b, c, d, l</span>) &#123;<br>            l = <span class="hljs-variable language_">this</span>.<span class="hljs-property">cfg</span>.<span class="hljs-title function_">extend</span>(l);<br>            c = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_parse</span>(c, l.<span class="hljs-property">format</span>);<br>            d = l.<span class="hljs-property">kdf</span>.<span class="hljs-title function_">execute</span>(d, b.<span class="hljs-property">keySize</span>, b.<span class="hljs-property">ivSize</span>, c.<span class="hljs-property">salt</span>);<br>            l.<span class="hljs-property">iv</span> = d.<span class="hljs-property">iv</span>;<br>            <span class="hljs-keyword">return</span> a.<span class="hljs-property">decrypt</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, b, c, d.<span class="hljs-property">key</span>, l)<br>        &#125;<br>    &#125;)<br>&#125;();<br>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> u = <span class="hljs-title class_">CryptoJS</span>, p = u.<span class="hljs-property">lib</span>.<span class="hljs-property">BlockCipher</span>, d = u.<span class="hljs-property">algo</span>, l = [], s = [], t = [], r = [], w = [], v = [], b = [], x = [], q = [], n = [], a = [], c = <span class="hljs-number">0</span>; <span class="hljs-number">256</span> &gt; c; c++) a[c] = <span class="hljs-number">128</span> &gt; c ? c &lt;&lt; <span class="hljs-number">1</span> : c &lt;&lt; <span class="hljs-number">1</span> ^ <span class="hljs-number">283</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = <span class="hljs-number">0</span>, j = <span class="hljs-number">0</span>, c = <span class="hljs-number">0</span>; <span class="hljs-number">256</span> &gt; c; c++) &#123;<br>        <span class="hljs-keyword">var</span> k = j ^ j &lt;&lt; <span class="hljs-number">1</span> ^ j &lt;&lt; <span class="hljs-number">2</span> ^ j &lt;&lt; <span class="hljs-number">3</span> ^ j &lt;&lt; <span class="hljs-number">4</span>, k = k &gt;&gt;&gt; <span class="hljs-number">8</span> ^ k &amp; <span class="hljs-number">255</span> ^ <span class="hljs-number">99</span>;<br>        l[e] = k;<br>        s[k] = e;<br>        <span class="hljs-keyword">var</span> z = a[e], F = a[z], G = a[F], y = <span class="hljs-number">257</span> * a[k] ^ <span class="hljs-number">16843008</span> * k;<br>        t[e] = y &lt;&lt; <span class="hljs-number">24</span> | y &gt;&gt;&gt; <span class="hljs-number">8</span>;<br>        r[e] = y &lt;&lt; <span class="hljs-number">16</span> | y &gt;&gt;&gt; <span class="hljs-number">16</span>;<br>        w[e] = y &lt;&lt; <span class="hljs-number">8</span> | y &gt;&gt;&gt; <span class="hljs-number">24</span>;<br>        v[e] = y;<br>        y = <span class="hljs-number">16843009</span> * G ^ <span class="hljs-number">65537</span> * F ^ <span class="hljs-number">257</span> * z ^ <span class="hljs-number">16843008</span> * e;<br>        b[k] = y &lt;&lt; <span class="hljs-number">24</span> | y &gt;&gt;&gt; <span class="hljs-number">8</span>;<br>        x[k] = y &lt;&lt; <span class="hljs-number">16</span> | y &gt;&gt;&gt; <span class="hljs-number">16</span>;<br>        q[k] = y &lt;&lt; <span class="hljs-number">8</span> | y &gt;&gt;&gt; <span class="hljs-number">24</span>;<br>        n[k] = y;<br>        e ? (e = z ^ a[a[a[G ^ z]]], j ^= a[a[j]]) : e = j = <span class="hljs-number">1</span><br>    &#125;<br>    <span class="hljs-keyword">var</span> H = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">8</span>,<br>        <span class="hljs-number">16</span>, <span class="hljs-number">32</span>, <span class="hljs-number">64</span>, <span class="hljs-number">128</span>, <span class="hljs-number">27</span>, <span class="hljs-number">54</span>], d = d.<span class="hljs-property">AES</span> = p.<span class="hljs-title function_">extend</span>(&#123;<br>        <span class="hljs-attr">_doReset</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_key</span>, c = a.<span class="hljs-property">words</span>, d = a.<span class="hljs-property">sigBytes</span> / <span class="hljs-number">4</span>, a = <span class="hljs-number">4</span> * ((<span class="hljs-variable language_">this</span>.<span class="hljs-property">_nRounds</span> = d + <span class="hljs-number">6</span>) + <span class="hljs-number">1</span>), e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_keySchedule</span> = [], j = <span class="hljs-number">0</span>; j &lt; a; j++) <span class="hljs-keyword">if</span> (j &lt; d) e[j] = c[j]; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">var</span> k = e[j - <span class="hljs-number">1</span>];<br>                j % d ? <span class="hljs-number">6</span> &lt; d &amp;&amp; <span class="hljs-number">4</span> == j % d &amp;&amp; (k = l[k &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | l[k &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | l[k &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | l[k &amp; <span class="hljs-number">255</span>]) : (k = k &lt;&lt; <span class="hljs-number">8</span> | k &gt;&gt;&gt; <span class="hljs-number">24</span>, k = l[k &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | l[k &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | l[k &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | l[k &amp; <span class="hljs-number">255</span>], k ^= H[j / d | <span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-number">24</span>);<br>                e[j] = e[j - d] ^ k<br>            &#125;<br>            c = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_invKeySchedule</span> = [];<br>            <span class="hljs-keyword">for</span> (d = <span class="hljs-number">0</span>; d &lt; a; d++) j = a - d, k = d % <span class="hljs-number">4</span> ? e[j] : e[j - <span class="hljs-number">4</span>], c[d] = <span class="hljs-number">4</span> &gt; d || <span class="hljs-number">4</span> &gt;= j ? k : b[l[k &gt;&gt;&gt; <span class="hljs-number">24</span>]] ^ x[l[k &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>]] ^ q[l[k &gt;&gt;&gt;<br>            <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>]] ^ n[l[k &amp; <span class="hljs-number">255</span>]]<br>        &#125;, <span class="hljs-attr">encryptBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doCryptBlock</span>(a, b, <span class="hljs-variable language_">this</span>.<span class="hljs-property">_keySchedule</span>, t, r, w, v, l)<br>        &#125;, <span class="hljs-attr">decryptBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, c</span>) &#123;<br>            <span class="hljs-keyword">var</span> d = a[c + <span class="hljs-number">1</span>];<br>            a[c + <span class="hljs-number">1</span>] = a[c + <span class="hljs-number">3</span>];<br>            a[c + <span class="hljs-number">3</span>] = d;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_doCryptBlock</span>(a, c, <span class="hljs-variable language_">this</span>.<span class="hljs-property">_invKeySchedule</span>, b, x, q, n, s);<br>            d = a[c + <span class="hljs-number">1</span>];<br>            a[c + <span class="hljs-number">1</span>] = a[c + <span class="hljs-number">3</span>];<br>            a[c + <span class="hljs-number">3</span>] = d<br>        &#125;, <span class="hljs-attr">_doCryptBlock</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b, c, d, e, j, l, f</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> m = <span class="hljs-variable language_">this</span>.<span class="hljs-property">_nRounds</span>, g = a[b] ^ c[<span class="hljs-number">0</span>], h = a[b + <span class="hljs-number">1</span>] ^ c[<span class="hljs-number">1</span>], k = a[b + <span class="hljs-number">2</span>] ^ c[<span class="hljs-number">2</span>], n = a[b + <span class="hljs-number">3</span>] ^ c[<span class="hljs-number">3</span>], p = <span class="hljs-number">4</span>, r = <span class="hljs-number">1</span>; r &lt; m; r++) <span class="hljs-keyword">var</span> q = d[g &gt;&gt;&gt; <span class="hljs-number">24</span>] ^ e[h &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] ^ j[k &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] ^ l[n &amp; <span class="hljs-number">255</span>] ^ c[p++], s = d[h &gt;&gt;&gt; <span class="hljs-number">24</span>] ^ e[k &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] ^ j[n &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] ^ l[g &amp; <span class="hljs-number">255</span>] ^ c[p++], t =<br>                d[k &gt;&gt;&gt; <span class="hljs-number">24</span>] ^ e[n &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] ^ j[g &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] ^ l[h &amp; <span class="hljs-number">255</span>] ^ c[p++], n = d[n &gt;&gt;&gt; <span class="hljs-number">24</span>] ^ e[g &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] ^ j[h &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] ^ l[k &amp; <span class="hljs-number">255</span>] ^ c[p++], g = q, h = s, k = t;<br>            q = (f[g &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | f[h &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | f[k &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | f[n &amp; <span class="hljs-number">255</span>]) ^ c[p++];<br>            s = (f[h &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | f[k &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | f[n &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | f[g &amp; <span class="hljs-number">255</span>]) ^ c[p++];<br>            t = (f[k &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | f[n &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | f[g &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | f[h &amp; <span class="hljs-number">255</span>]) ^ c[p++];<br>            n = (f[n &gt;&gt;&gt; <span class="hljs-number">24</span>] &lt;&lt; <span class="hljs-number">24</span> | f[g &gt;&gt;&gt; <span class="hljs-number">16</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">16</span> | f[h &gt;&gt;&gt; <span class="hljs-number">8</span> &amp; <span class="hljs-number">255</span>] &lt;&lt; <span class="hljs-number">8</span> | f[k &amp; <span class="hljs-number">255</span>]) ^ c[p++];<br>            a[b] = q;<br>            a[b + <span class="hljs-number">1</span>] = s;<br>            a[b + <span class="hljs-number">2</span>] = t;<br>            a[b + <span class="hljs-number">3</span>] = n<br>        &#125;, <span class="hljs-attr">keySize</span>: <span class="hljs-number">8</span><br>    &#125;);<br>    u.<span class="hljs-property">AES</span> = p.<span class="hljs-title function_">_createHelper</span>(d)<br>&#125;)();<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>加密源码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>fiddler导入系统证书根目录</title>
    <link href="/posts/8e1f71aa/"/>
    <url>/posts/8e1f71aa/</url>
    
    <content type="html"><![CDATA[<h2 id="fiddler导入系统证书到根目录"><a href="#fiddler导入系统证书到根目录" class="headerlink" title="fiddler导入系统证书到根目录"></a>fiddler导入系统证书到根目录</h2><h3 id="1-将证书导入本地"><a href="#1-将证书导入本地" class="headerlink" title="1. 将证书导入本地"></a>1. 将证书导入本地</h3><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl"><span class="hljs-function"><span class="hljs-title">fiddler</span> -&gt;</span> <span class="hljs-function"><span class="hljs-title">options</span> -&gt;</span> Export root certificate to desktop <br></code></pre></td></tr></table></figure><h3 id="2-openssl命令"><a href="#2-openssl命令" class="headerlink" title="2. openssl命令"></a>2. openssl命令</h3><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livescript">openssl x509 -subject_hash_old -<span class="hljs-keyword">in</span> .<span class="hljs-string">\FiddlerRoot.cer</span> -inform der<br></code></pre></td></tr></table></figure><h3 id="3-更改证书名称"><a href="#3-更改证书名称" class="headerlink" title="3. 更改证书名称"></a>3. 更改证书名称</h3><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">拿到hash值 269953<span class="hljs-built_in">fb</span>, 修改FiddlerRoot.cer 为269953<span class="hljs-built_in">fb</span><span class="hljs-number">.0</span><br></code></pre></td></tr></table></figure><h3 id="4-上传到sdcard"><a href="#4-上传到sdcard" class="headerlink" title="4. 上传到sdcard"></a>4. 上传到sdcard</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb push ./269953fb.0 /sdcard<br></code></pre></td></tr></table></figure><h3 id="5-开启导入根目录权限"><a href="#5-开启导入根目录权限" class="headerlink" title="5. 开启导入根目录权限"></a>5. 开启导入根目录权限</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell <br>su <br>mount -o rw,remount /<br></code></pre></td></tr></table></figure><h3 id="6-复制证书到系统证书"><a href="#6-复制证书到系统证书" class="headerlink" title="6. 复制证书到系统证书"></a>6. 复制证书到系统证书</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">cp /sdcard/269953fb.0 /system/etc/security/cacerts/269953fb.0<br></code></pre></td></tr></table></figure><h3 id="7-重启手机"><a href="#7-重启手机" class="headerlink" title="7. 重启手机"></a>7. 重启手机</h3><h3 id="8-查看证书"><a href="#8-查看证书" class="headerlink" title="8. 查看证书"></a>8. 查看证书</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean">设置-&gt;搜索 加密-&gt; 加密与凭据 -&gt; 信任的凭据 -&gt; 系统 DO_NOT_TRUST_FiddlerRoot<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Android</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>adb语法</title>
    <link href="/posts/b01a1416/"/>
    <url>/posts/b01a1416/</url>
    
    <content type="html"><![CDATA[<h2 id="adb常用命令"><a href="#adb常用命令" class="headerlink" title="adb常用命令"></a>adb常用命令</h2><h3 id="1-显示连接到计算机设备"><a href="#1-显示连接到计算机设备" class="headerlink" title="1. 显示连接到计算机设备"></a>1. 显示连接到计算机设备</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb devices<br></code></pre></td></tr></table></figure><h3 id="2-连接设备"><a href="#2-连接设备" class="headerlink" title="2. 连接设备"></a>2. 连接设备</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb connect 127.0.0.1:7555 //雷电模拟器端口<br></code></pre></td></tr></table></figure><h3 id="3-重启设备"><a href="#3-重启设备" class="headerlink" title="3. 重启设备"></a>3. 重启设备</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb reboot<br></code></pre></td></tr></table></figure><h3 id="4-查看手机安装app包名"><a href="#4-查看手机安装app包名" class="headerlink" title="4. 查看手机安装app包名"></a>4. 查看手机安装app包名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell pm list packages // 查看所有应用列表<br>adb shell pm list packages -s // 查看系统应用列表<br>adb shell pm list packages -3 // 查看第三方应用列表<br></code></pre></td></tr></table></figure><h3 id="5-安装apk"><a href="#5-安装apk" class="headerlink" title="5. 安装apk"></a>5. 安装apk</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb install &#x27;path&#x27;<br>adb -s &quot;ip_port&quot; install -r &quot;app_path&quot; // 安装指定ip<br></code></pre></td></tr></table></figure><h3 id="6-卸载apk"><a href="#6-卸载apk" class="headerlink" title="6. 卸载apk"></a>6. 卸载apk</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb uninstall &#x27;packagename&#x27;<br></code></pre></td></tr></table></figure><h3 id="7-启动app"><a href="#7-启动app" class="headerlink" title="7. 启动app"></a>7. 启动app</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell am start -n &quot;package_name&quot;/.&quot;activity_class_name&quot;<br></code></pre></td></tr></table></figure><h3 id="8-查看进程列表"><a href="#8-查看进程列表" class="headerlink" title="8. 查看进程列表"></a>8. 查看进程列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell ps<br>```   <br>### 9. 杀死进程<br>```commandline<br>adb shell kill pid<br></code></pre></td></tr></table></figure><h3 id="10-查看app版本号"><a href="#10-查看app版本号" class="headerlink" title="10. 查看app版本号"></a>10. 查看app版本号</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell pm dump com.ss.android.ugc.aweme | findstr &quot;version&quot;<br></code></pre></td></tr></table></figure><h3 id="11-查看手机cpu架构"><a href="#11-查看手机cpu架构" class="headerlink" title="11. 查看手机cpu架构"></a>11. 查看手机cpu架构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell getprop ro.product.cpu.abi<br></code></pre></td></tr></table></figure><hr><p><a href="https://blog.csdn.net/weixin_43927138/article/details/90477966">参考链接</a></p><hr>]]></content>
    
    
    <categories>
      
      <category>Android</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>FridaHook</title>
    <link href="/posts/a9c3d13e/"/>
    <url>/posts/a9c3d13e/</url>
    
    <content type="html"><![CDATA[<h1 id="FridaHook指令集"><a href="#FridaHook指令集" class="headerlink" title="FridaHook指令集"></a>FridaHook指令集</h1><h2 id="1-HookArt"><a href="#1-HookArt" class="headerlink" title="1. HookArt"></a>1. <a href="https://github.com/lasting-yang/frida_hook_libart">HookArt</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">frida -U --no-pause -f package_name -l hook_art.js -o out.log<br></code></pre></td></tr></table></figure><p>HookArtSourceCode:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">STD_STRING_SIZE</span> = <span class="hljs-number">3</span> * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">StdString</span> &#123;<br>    <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">handle</span> = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">alloc</span>(<span class="hljs-variable constant_">STD_STRING_SIZE</span>);<br>    &#125;<br><br>    <span class="hljs-title function_">dispose</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> [data, isTiny] = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_getData</span>();<br>        <span class="hljs-keyword">if</span> (!isTiny) &#123;<br>            <span class="hljs-title class_">Java</span>.<span class="hljs-property">api</span>.$delete(data);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-title function_">disposeToString</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> result = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">toString</span>();<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">dispose</span>();<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-title function_">toString</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> [data] = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_getData</span>();<br>        <span class="hljs-keyword">return</span> data.<span class="hljs-title function_">readUtf8String</span>();<br>    &#125;<br><br>    <span class="hljs-title function_">_getData</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> str = <span class="hljs-variable language_">this</span>.<span class="hljs-property">handle</span>;<br>        <span class="hljs-keyword">const</span> isTiny = (str.<span class="hljs-title function_">readU8</span>() &amp; <span class="hljs-number">1</span>) === <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">const</span> data = isTiny ? str.<span class="hljs-title function_">add</span>(<span class="hljs-number">1</span>) : str.<span class="hljs-title function_">add</span>(<span class="hljs-number">2</span> * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>).<span class="hljs-title function_">readPointer</span>();<br>        <span class="hljs-keyword">return</span> [data, isTiny];<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">prettyMethod</span>(<span class="hljs-params">method_id, withSignature</span>) &#123;<br>    <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">new</span> <span class="hljs-title class_">StdString</span>();<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-property">api</span>[<span class="hljs-string">&#x27;art::ArtMethod::PrettyMethod&#x27;</span>](result, method_id, withSignature ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">return</span> result.<span class="hljs-title function_">disposeToString</span>();<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">GetFieldID is at  0xe39b87c5 _ZN3art3JNI10GetFieldIDEP7_JNIEnvP7_jclassPKcS6_</span><br><span class="hljs-comment">GetMethodID is at  0xe39a1a19 _ZN3art3JNI11GetMethodIDEP7_JNIEnvP7_jclassPKcS6_</span><br><span class="hljs-comment">NewStringUTF is at  0xe39cff25 _ZN3art3JNI12NewStringUTFEP7_JNIEnvPKc</span><br><span class="hljs-comment">RegisterNatives is at  0xe39e08fd _ZN3art3JNI15RegisterNativesEP7_JNIEnvP7_jclassPK15JNINativeMethodi</span><br><span class="hljs-comment">GetStaticFieldID is at  0xe39c9635 _ZN3art3JNI16GetStaticFieldIDEP7_JNIEnvP7_jclassPKcS6_</span><br><span class="hljs-comment">GetStaticMethodID is at  0xe39be0ed _ZN3art3JNI17GetStaticMethodIDEP7_JNIEnvP7_jclassPKcS6_</span><br><span class="hljs-comment">GetStringUTFChars is at  0xe39d06e5 _ZN3art3JNI17GetStringUTFCharsEP7_JNIEnvP8_jstringPh</span><br><span class="hljs-comment">FindClass is at  0xe399ae5d _ZN3art3JNI9FindClassEP7_JNIEnvPKc</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook_libart</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> symbols = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">enumerateSymbolsSync</span>(<span class="hljs-string">&quot;libart.so&quot;</span>);<br>    <span class="hljs-keyword">var</span> addrGetStringUTFChars = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrNewStringUTF = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrFindClass = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrGetMethodID = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrGetStaticMethodID = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrGetFieldID = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrGetStaticFieldID = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> addrRegisterNatives = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">var</span> so_name = <span class="hljs-string">&quot;libsmsdk&quot;</span>;      <span class="hljs-comment">//TODO 这里写需要过滤的so</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;symbols length:&quot;</span>, symbols.<span class="hljs-property">length</span>)<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; symbols.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">var</span> symbol = symbols[i];<br>        <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;art&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp;<br>            symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;JNI&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp;<br>            symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;CheckJNI&quot;</span>) &lt; <span class="hljs-number">0</span> &amp;&amp;<br>            <span class="hljs-comment">// symbol.name.indexOf(&quot;_ZN3art3JNIILb0&quot;) &gt;= 0</span><br>            symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;_ZN3art3JNI&quot;</span>) &gt;= <span class="hljs-number">0</span><br>        ) &#123;<br>            <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;GetStringUTFChars&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrGetStringUTFChars = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;GetStringUTFChars is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;NewStringUTF&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrNewStringUTF = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;NewStringUTF is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;FindClass&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrFindClass = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;FindClass is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;GetMethodID&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrGetMethodID = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;GetMethodID is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;GetStaticMethodID&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrGetStaticMethodID = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;GetStaticMethodID is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;GetFieldID&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrGetFieldID = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;GetFieldID is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;GetStaticFieldID&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrGetStaticFieldID = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;GetStaticFieldID is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;RegisterNatives&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                addrRegisterNatives = symbol.<span class="hljs-property">address</span>;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;RegisterNatives is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;CallStatic&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;CallStatic is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>                <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(symbol.<span class="hljs-property">address</span>, &#123;<br>                    <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                        <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                            <span class="hljs-keyword">var</span> java_class = args[<span class="hljs-number">1</span>];<br>                            <span class="hljs-keyword">var</span> mid = args[<span class="hljs-number">2</span>];<br>                            <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(java_class);<br>                            <span class="hljs-keyword">if</span> (class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;java.&quot;</span>) == -<span class="hljs-number">1</span> &amp;&amp; class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;android.&quot;</span>) == -<span class="hljs-number">1</span>) &#123;<br>                                <span class="hljs-keyword">var</span> method_name = <span class="hljs-title function_">prettyMethod</span>(mid, <span class="hljs-number">1</span>);<br>                                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&lt;&gt;CallStatic:&quot;</span>, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>), class_name, method_name);<br>                            &#125;<br>                        &#125;<br>                    &#125;,<br>                    <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                    &#125;<br>                &#125;);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;CallNonvirtual&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;CallNonvirtual is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>                <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(symbol.<span class="hljs-property">address</span>, &#123;<br>                    <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                        <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                            <span class="hljs-keyword">var</span> jobject = args[<span class="hljs-number">1</span>];<br>                            <span class="hljs-keyword">var</span> jclass = args[<span class="hljs-number">2</span>];<br>                            <span class="hljs-keyword">var</span> jmethodID = args[<span class="hljs-number">3</span>];<br>                            <span class="hljs-keyword">var</span> obj_class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getObjectClassName</span>(jobject);<br>                            <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(jclass);<br>                            <span class="hljs-keyword">if</span> (class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;java.&quot;</span>) == -<span class="hljs-number">1</span> &amp;&amp; class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;android.&quot;</span>) == -<span class="hljs-number">1</span>) &#123;<br>                                <span class="hljs-keyword">var</span> method_name = <span class="hljs-title function_">prettyMethod</span>(jmethodID, <span class="hljs-number">1</span>);<br>                                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&lt;&gt;CallNonvirtual:&quot;</span>, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>), class_name, obj_class_name, method_name);<br>                            &#125;<br>                        &#125;<br>                    &#125;,<br>                    <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                    &#125;<br>                &#125;);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;Call&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp; symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;Method&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Call&lt;&gt;Method is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>                <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(symbol.<span class="hljs-property">address</span>, &#123;<br>                    <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                        <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                            <span class="hljs-keyword">var</span> java_class = args[<span class="hljs-number">1</span>];<br>                            <span class="hljs-keyword">var</span> mid = args[<span class="hljs-number">2</span>];<br>                            <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getObjectClassName</span>(java_class);<br>                            <span class="hljs-keyword">if</span> (class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;java.&quot;</span>) == -<span class="hljs-number">1</span> &amp;&amp; class_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;android.&quot;</span>) == -<span class="hljs-number">1</span>) &#123;<br>                                <span class="hljs-keyword">var</span> method_name = <span class="hljs-title function_">prettyMethod</span>(mid, <span class="hljs-number">1</span>);<br>                                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;&lt;&gt;Call&lt;&gt;Method:&quot;</span>, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>), class_name, method_name);<br>                            &#125;<br>                        &#125;<br>                    &#125;,<br>                    <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                    &#125;<br>                &#125;);<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (addrGetStringUTFChars != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrGetStringUTFChars, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                <span class="hljs-keyword">if</span> (retval != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> bytes = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(retval);<br>                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetStringUTFChars] result:&quot;</span> + bytes, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (addrNewStringUTF != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrNewStringUTF, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">1</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> string = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">1</span>]);<br>                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[NewStringUTF] bytes:&quot;</span> + string, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (addrFindClass != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrFindClass, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">1</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">1</span>]);<br>                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[FindClass] name:&quot;</span> + name, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (addrGetMethodID != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrGetMethodID, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">2</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> clazz = args[<span class="hljs-number">1</span>];<br>                    <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(clazz);<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">2</span>]);<br>                        <span class="hljs-keyword">if</span> (args[<span class="hljs-number">3</span>] != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">3</span>]);<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetMethodID] class_name:&quot;</span> + class_name + <span class="hljs-string">&quot; name:&quot;</span> + name + <span class="hljs-string">&quot;, sig:&quot;</span> + sig, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetMethodID] class_name:&quot;</span> + class_name + <span class="hljs-string">&quot; name:&quot;</span> + name, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (addrGetStaticMethodID != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrGetStaticMethodID, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">2</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> clazz = args[<span class="hljs-number">1</span>];<br>                    <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(clazz);<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">2</span>]);<br>                        <span class="hljs-keyword">if</span> (args[<span class="hljs-number">3</span>] != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">3</span>]);<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetStaticMethodID] class_name:&quot;</span> + class_name + <span class="hljs-string">&quot; name:&quot;</span> + name + <span class="hljs-string">&quot;, sig:&quot;</span> + sig, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetStaticMethodID] class_name:&quot;</span> + class_name + <span class="hljs-string">&quot; name:&quot;</span> + name, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (addrGetFieldID != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrGetFieldID, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">2</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">2</span>]);<br>                        <span class="hljs-keyword">if</span> (args[<span class="hljs-number">3</span>] != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">3</span>]);<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetFieldID] name:&quot;</span> + name + <span class="hljs-string">&quot;, sig:&quot;</span> + sig, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetFieldID] name:&quot;</span> + name, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (addrGetStaticFieldID != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrGetStaticFieldID, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">2</span>] != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">var</span> <span class="hljs-variable language_">module</span> = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>);<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">module</span> != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">module</span>.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(so_name) == <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">2</span>]);<br>                        <span class="hljs-keyword">if</span> (args[<span class="hljs-number">3</span>] != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(args[<span class="hljs-number">3</span>]);<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetStaticFieldID] name:&quot;</span> + name + <span class="hljs-string">&quot;, sig:&quot;</span> + sig, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[GetStaticFieldID] name:&quot;</span> + name, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (addrRegisterNatives != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrRegisterNatives, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[RegisterNatives] method_count:&quot;</span>, args[<span class="hljs-number">3</span>], <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br>                <span class="hljs-keyword">var</span> env = args[<span class="hljs-number">0</span>];<br>                <span class="hljs-keyword">var</span> java_class = args[<span class="hljs-number">1</span>];<br>                <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(java_class);<br>                <span class="hljs-keyword">var</span> methods_ptr = <span class="hljs-title function_">ptr</span>(args[<span class="hljs-number">2</span>]);<br>                <span class="hljs-keyword">var</span> method_count = <span class="hljs-built_in">parseInt</span>(args[<span class="hljs-number">3</span>]);<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; method_count; i++) &#123;<br>                    <span class="hljs-keyword">var</span> name_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span>));<br>                    <span class="hljs-keyword">var</span> sig_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span> + <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>));<br>                    <span class="hljs-keyword">var</span> fnPtr_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span> + <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">2</span>));<br><br>                    <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(name_ptr);<br>                    <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(sig_ptr);<br>                    <span class="hljs-keyword">var</span> find_module = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(fnPtr_ptr);<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[RegisterNatives] java_class:&quot;</span>, class_name, <span class="hljs-string">&quot;name:&quot;</span>, name, <span class="hljs-string">&quot;sig:&quot;</span>, sig, <span class="hljs-string">&quot;fnPtr:&quot;</span>, fnPtr_ptr, <span class="hljs-string">&quot;module_name:&quot;</span>, find_module.<span class="hljs-property">name</span>, <span class="hljs-string">&quot;module_base:&quot;</span>, find_module.<span class="hljs-property">base</span>, <span class="hljs-string">&quot;offset:&quot;</span>, <span class="hljs-title function_">ptr</span>(fnPtr_ptr).<span class="hljs-title function_">sub</span>(find_module.<span class="hljs-property">base</span>));<br><br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>            &#125;<br>        &#125;);<br>    &#125;<br>&#125;<br><br><span class="hljs-title function_">setImmediate</span>(hook_libart);<br></code></pre></td></tr></table></figure><h2 id="2-HookArtMethod"><a href="#2-HookArtMethod" class="headerlink" title="2. HookArtMethod"></a>2. <a href="https://github.com/lasting-yang/frida_hook_libart">HookArtMethod</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">frida -U --no-pause -f package_name -l hook_artmethod.js -o out.log<br></code></pre></td></tr></table></figure><p>HookArtMethodSourceCode:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">STD_STRING_SIZE</span> = <span class="hljs-number">3</span> * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">StdString</span> &#123;<br>    <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">handle</span> = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">alloc</span>(<span class="hljs-variable constant_">STD_STRING_SIZE</span>);<br>    &#125;<br><br>    <span class="hljs-title function_">dispose</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> [data, isTiny] = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_getData</span>();<br>        <span class="hljs-keyword">if</span> (!isTiny) &#123;<br>            <span class="hljs-title class_">Java</span>.<span class="hljs-property">api</span>.$delete(data);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-title function_">disposeToString</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> result = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">toString</span>();<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">dispose</span>();<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-title function_">toString</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> [data] = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_getData</span>();<br>        <span class="hljs-keyword">return</span> data.<span class="hljs-title function_">readUtf8String</span>();<br>    &#125;<br><br>    <span class="hljs-title function_">_getData</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> str = <span class="hljs-variable language_">this</span>.<span class="hljs-property">handle</span>;<br>        <span class="hljs-keyword">const</span> isTiny = (str.<span class="hljs-title function_">readU8</span>() &amp; <span class="hljs-number">1</span>) === <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">const</span> data = isTiny ? str.<span class="hljs-title function_">add</span>(<span class="hljs-number">1</span>) : str.<span class="hljs-title function_">add</span>(<span class="hljs-number">2</span> * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>).<span class="hljs-title function_">readPointer</span>();<br>        <span class="hljs-keyword">return</span> [data, isTiny];<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">prettyMethod</span>(<span class="hljs-params">method_id, withSignature</span>) &#123;<br>    <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">new</span> <span class="hljs-title class_">StdString</span>();<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-property">api</span>[<span class="hljs-string">&#x27;art::ArtMethod::PrettyMethod&#x27;</span>](result, method_id, withSignature ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">return</span> result.<span class="hljs-title function_">disposeToString</span>();<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook_dlopen</span>(<span class="hljs-params">module_name, fun</span>) &#123;<br>    <span class="hljs-keyword">var</span> android_dlopen_ext = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&quot;android_dlopen_ext&quot;</span>);<br><br>    <span class="hljs-keyword">if</span> (android_dlopen_ext) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(android_dlopen_ext, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">var</span> pathptr = args[<span class="hljs-number">0</span>];<br>                <span class="hljs-keyword">if</span> (pathptr) &#123;<br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span> = (pathptr).<span class="hljs-title function_">readCString</span>();<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span>.<span class="hljs-title function_">indexOf</span>(module_name) &gt;= <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-variable language_">this</span>.<span class="hljs-property">canhook</span> = <span class="hljs-literal">true</span>;<br>                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;android_dlopen_ext:&quot;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span>);<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">canhook</span>) &#123;<br>                    <span class="hljs-title function_">fun</span>();<br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">var</span> dlopen = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>, <span class="hljs-string">&quot;dlopen&quot;</span>);<br>    <span class="hljs-keyword">if</span> (dlopen) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(dlopen, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">var</span> pathptr = args[<span class="hljs-number">0</span>];<br>                <span class="hljs-keyword">if</span> (pathptr) &#123;<br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span> = (pathptr).<span class="hljs-title function_">readCString</span>();<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span>.<span class="hljs-title function_">indexOf</span>(module_name) &gt;= <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-variable language_">this</span>.<span class="hljs-property">canhook</span> = <span class="hljs-literal">true</span>;<br>                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;dlopen:&quot;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">path</span>);<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">canhook</span>) &#123;<br>                    <span class="hljs-title function_">fun</span>();<br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;android_dlopen_ext:&quot;</span>, android_dlopen_ext, <span class="hljs-string">&quot;dlopen:&quot;</span>, dlopen);<br>&#125;<br><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook_native</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> module_libart = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByName</span>(<span class="hljs-string">&quot;libart.so&quot;</span>);<br>    <span class="hljs-keyword">var</span> symbols = module_libart.<span class="hljs-title function_">enumerateSymbols</span>();<br>    <span class="hljs-keyword">var</span> <span class="hljs-title class_">ArtMethod</span>_Invoke = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; symbols.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">var</span> symbol = symbols[i];<br>        <span class="hljs-keyword">var</span> address = symbol.<span class="hljs-property">address</span>;<br>        <span class="hljs-keyword">var</span> name = symbol.<span class="hljs-property">name</span>;<br>        <span class="hljs-keyword">var</span> indexArtMethod = name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;ArtMethod&quot;</span>);<br>        <span class="hljs-keyword">var</span> indexInvoke = name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;Invoke&quot;</span>);<br>        <span class="hljs-keyword">var</span> indexThread = name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;Thread&quot;</span>);<br>        <span class="hljs-keyword">if</span> (indexArtMethod &gt;= <span class="hljs-number">0</span><br>            &amp;&amp; indexInvoke &gt;= <span class="hljs-number">0</span><br>            &amp;&amp; indexThread &gt;= <span class="hljs-number">0</span><br>            &amp;&amp; indexArtMethod &lt; indexInvoke<br>            &amp;&amp; indexInvoke &lt; indexThread) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(name);<br>            <span class="hljs-title class_">ArtMethod</span>_Invoke = address;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title class_">ArtMethod</span>_Invoke) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(<span class="hljs-title class_">ArtMethod</span>_Invoke, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-keyword">var</span> method_name = <span class="hljs-title function_">prettyMethod</span>(args[<span class="hljs-number">0</span>], <span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">if</span> (!(method_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;java.&quot;</span>) == <span class="hljs-number">0</span> || method_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;android.&quot;</span>) == <span class="hljs-number">0</span>)) &#123;<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;ArtMethod Invoke:&quot;</span> + method_name + <span class="hljs-string">&#x27;  called from:\n&#x27;</span> +<br>                        <span class="hljs-title class_">Thread</span>.<span class="hljs-title function_">backtrace</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">context</span>, <span class="hljs-title class_">Backtracer</span>.<span class="hljs-property">ACCURATE</span>)<br>                            .<span class="hljs-title function_">map</span>(<span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-property">fromAddress</span>).<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;\n&#x27;</span>) + <span class="hljs-string">&#x27;\n&#x27;</span>);<br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title function_">hook_dlopen</span>(<span class="hljs-string">&quot;libart.so&quot;</span>, hook_native);<br>    <span class="hljs-title function_">hook_native</span>();<br>&#125;<br><br><span class="hljs-title function_">setImmediate</span>(main);<br></code></pre></td></tr></table></figure><h2 id="3-HookRegisterNatives"><a href="#3-HookRegisterNatives" class="headerlink" title="3. HookRegisterNatives"></a>3. <a href="https://github.com/lasting-yang/frida_hook_libart">HookRegisterNatives</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">frida -U --no-pause -f package_name -l hook_RegisterNatives.js<br></code></pre></td></tr></table></figure><p>HookRegisterNativesSourceCode</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">find_RegisterNatives</span>(<span class="hljs-params">params</span>) &#123;<br>    <span class="hljs-keyword">var</span> symbols = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">enumerateSymbolsSync</span>(<span class="hljs-string">&quot;libart.so&quot;</span>);<br>    <span class="hljs-keyword">var</span> addrRegisterNatives = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; symbols.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">var</span> symbol = symbols[i];<br><br>        <span class="hljs-comment">//_ZN3art3JNI15RegisterNativesEP7_JNIEnvP7_jclassPK15JNINativeMethodi</span><br>        <span class="hljs-keyword">if</span> (symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;art&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp;<br>                symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;JNI&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp;<br>                symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;RegisterNatives&quot;</span>) &gt;= <span class="hljs-number">0</span> &amp;&amp;<br>                symbol.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;CheckJNI&quot;</span>) &lt; <span class="hljs-number">0</span>) &#123;<br>            addrRegisterNatives = symbol.<span class="hljs-property">address</span>;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;RegisterNatives is at &quot;</span>, symbol.<span class="hljs-property">address</span>, symbol.<span class="hljs-property">name</span>);<br>            <span class="hljs-title function_">hook_RegisterNatives</span>(addrRegisterNatives)<br>        &#125;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook_RegisterNatives</span>(<span class="hljs-params">addrRegisterNatives</span>) &#123;<br><br>    <span class="hljs-keyword">if</span> (addrRegisterNatives != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addrRegisterNatives, &#123;<br>            <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[RegisterNatives] method_count:&quot;</span>, args[<span class="hljs-number">3</span>]);<br>                <span class="hljs-keyword">var</span> env = args[<span class="hljs-number">0</span>];<br>                <span class="hljs-keyword">var</span> java_class = args[<span class="hljs-number">1</span>];<br>                <span class="hljs-keyword">var</span> class_name = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">tryGetEnv</span>().<span class="hljs-title function_">getClassName</span>(java_class);<br>                <span class="hljs-comment">//console.log(class_name);</span><br><br>                <span class="hljs-keyword">var</span> methods_ptr = <span class="hljs-title function_">ptr</span>(args[<span class="hljs-number">2</span>]);<br><br>                <span class="hljs-keyword">var</span> method_count = <span class="hljs-built_in">parseInt</span>(args[<span class="hljs-number">3</span>]);<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; method_count; i++) &#123;<br>                    <span class="hljs-keyword">var</span> name_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span>));<br>                    <span class="hljs-keyword">var</span> sig_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span> + <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span>));<br>                    <span class="hljs-keyword">var</span> fnPtr_ptr = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readPointer</span>(methods_ptr.<span class="hljs-title function_">add</span>(i * <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">3</span> + <span class="hljs-title class_">Process</span>.<span class="hljs-property">pointerSize</span> * <span class="hljs-number">2</span>));<br><br>                    <span class="hljs-keyword">var</span> name = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(name_ptr);<br>                    <span class="hljs-keyword">var</span> sig = <span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">readCString</span>(sig_ptr);<br>                    <span class="hljs-keyword">var</span> find_module = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByAddress</span>(fnPtr_ptr);<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[RegisterNatives] java_class:&quot;</span>, class_name, <span class="hljs-string">&quot;name:&quot;</span>, name, <span class="hljs-string">&quot;sig:&quot;</span>, sig, <span class="hljs-string">&quot;fnPtr:&quot;</span>, fnPtr_ptr,  <span class="hljs-string">&quot; fnOffset:&quot;</span>, <span class="hljs-title function_">ptr</span>(fnPtr_ptr).<span class="hljs-title function_">sub</span>(find_module.<span class="hljs-property">base</span>), <span class="hljs-string">&quot; callee:&quot;</span>, <span class="hljs-title class_">DebugSymbol</span>.<span class="hljs-title function_">fromAddress</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">returnAddress</span>));<br><br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br>&#125;<br><br><span class="hljs-title function_">setImmediate</span>(find_RegisterNatives);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Frida</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Frida基本命令</title>
    <link href="/posts/96901429/"/>
    <url>/posts/96901429/</url>
    
    <content type="html"><![CDATA[<h1 id="Frida基本命令"><a href="#Frida基本命令" class="headerlink" title="Frida基本命令"></a>Frida基本命令</h1><h2 id="1-本地安装"><a href="#1-本地安装" class="headerlink" title="1. 本地安装"></a>1. 本地安装</h2> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs commandline">pip install frida<br>pip install frida-tools<br>npm install frida<br></code></pre></td></tr></table></figure><p>   (注意，新版本的frida需要安装frida-tools)</p><h2 id="2-手机安装frida-安装版本和本地版本一致"><a href="#2-手机安装frida-安装版本和本地版本一致" class="headerlink" title="2. 手机安装frida(安装版本和本地版本一致)"></a>2. 手机安装frida(安装版本和本地版本一致)</h2><p>   下载对应版本<a href="https://github.com/frida/frida/releases">frida-server</a>, 类似<strong>frida-server-15.1.27-android-arm.xz</strong>, 注意手机CPU架构, 上传手机/data/local/tmp 目录, 启动服务<br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell getprop ro.product.cpu.abi // 查看手机CPU架构<br>adb push ./frida-server-15.1.27-android-arm /data/local/tmp // 上传frida-server<br></code></pre></td></tr></table></figure></p><h2 id="3-启动服务"><a href="#3-启动服务" class="headerlink" title="3. 启动服务"></a>3. 启动服务</h2> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb shell <br>su <br>cd /data/local/tmp<br>chmod 777 frida-server-15.1.27-android-arm<br>./frida-server-15.1.27-android-arm<br></code></pre></td></tr></table></figure><h2 id="4-端口转发"><a href="#4-端口转发" class="headerlink" title="4. 端口转发"></a>4. 端口转发</h2> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">adb forward tcp:27042 tcp:27042 // 默认端口<br></code></pre></td></tr></table></figure><h2 id="5-查看进程列表"><a href="#5-查看进程列表" class="headerlink" title="5. 查看进程列表"></a>5. 查看进程列表</h2> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">frida-ps -U<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Frida</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>创建虚拟环境pip无法升级</title>
    <link href="/posts/c6eca636/"/>
    <url>/posts/c6eca636/</url>
    
    <content type="html"><![CDATA[<h1 id="创建虚拟环境pip无法升级"><a href="#创建虚拟环境pip无法升级" class="headerlink" title="创建虚拟环境pip无法升级"></a>创建虚拟环境pip无法升级</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs commandline">python -m pip install -U --force-reinstall pip<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>虚拟环境</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>hexo操作</title>
    <link href="/posts/7ab4e26f/"/>
    <url>/posts/7ab4e26f/</url>
    
    <content type="html"><![CDATA[<h2 id="Hexo-命令"><a href="#Hexo-命令" class="headerlink" title="Hexo 命令"></a>Hexo 命令</h2><ol><li><p>基本命令</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ hexo clean <span class="hljs-regexp">//</span> 清除缓存<br>$ hexo g <span class="hljs-regexp">//</span> 生成静态文件<br>$ hexo s <span class="hljs-regexp">//</span> 启动服务<br>$ hexo d <span class="hljs-regexp">//</span> 部署<br></code></pre></td></tr></table></figure></li><li><p>创建文章</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss">$ hexo <span class="hljs-keyword">new</span> &lt;<span class="hljs-built_in">title</span>&gt;<br></code></pre></td></tr></table></figure></li><li><p>创建指定布局 layout</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xl">$ hexo new [layout] &lt;<span class="hljs-built_in">title</span>&gt;<br><span class="hljs-function"><span class="hljs-title">layout</span> -&gt;</span> post(文章), draft（草稿）、<span class="hljs-built_in">page</span>（页面）<br></code></pre></td></tr></table></figure></li><li><p>添加文章分类和标签</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs subunit">categories:<br>   1. 单分类<br>     - 个人博客（第一层级）<br>     - Hexo博客（第二层级）<br>   2.多分类: <br>     - [日常, 生活]<br>     - [日常, 随想]<br>     - [日记]<br><span class="hljs-keyword">tags:</span><br>  - Hexo<br>  - 博客<br></code></pre></td></tr></table></figure></li><li><p>多命令(win11 暂不支持)</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$ </span>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s<br><span class="hljs-variable">$ </span>hexo d<br></code></pre></td></tr></table></figure></li><li><p>文章加密</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">password</span>: &lt;<span class="hljs-keyword">password</span>&gt;<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
